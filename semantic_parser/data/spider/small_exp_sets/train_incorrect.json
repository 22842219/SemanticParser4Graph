[
    {
        "db_id": "assets_maintenance",
        "question": "List all every engineer's first name, last name, details and coresponding skill description.",
        "sql_query": "SELECT T1.first_name ,  T1.last_name ,  T1.other_details ,  T3.skill_description FROM Maintenance_Engineers AS T1 JOIN Engineer_Skills AS T2 ON T1.engineer_id  =  T2.engineer_id JOIN Skills AS T3 ON T2.skill_id  =  T3.skill_id",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.first_name"
                },
                {
                    "value": "T1.last_name"
                },
                {
                    "value": "T1.other_details"
                },
                {
                    "value": "T3.skill_description"
                }
            ],
            "from": [
                {
                    "value": "Maintenance_Engineers",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "Engineer_Skills",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.engineer_id",
                            "T2.engineer_id"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "Skills",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T2.skill_id",
                            "T3.skill_id"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "Naomi",
                "Price",
                null,
                "Mechanical"
            ],
            [
                "Naomi",
                "Price",
                null,
                "Electrical"
            ],
            [
                "Archibald",
                "Streich",
                null,
                "Electrical"
            ],
            [
                "Courtney",
                "Adams",
                null,
                "Electrical"
            ],
            [
                "Weston",
                "Hahn",
                null,
                "Electrical"
            ],
            [
                "Courtney",
                "Adams",
                null,
                "TV, Video"
            ],
            [
                "Weston",
                "Hahn",
                null,
                "Mechanical"
            ],
            [
                "Josie",
                "Harvey",
                "Skilled",
                "TV, Video"
            ],
            [
                "Manley",
                "Grady",
                null,
                "Mechanical"
            ],
            [
                "Nellie",
                "Hirthe",
                null,
                "TV, Video"
            ],
            [
                "Archibald",
                "Streich",
                null,
                "TV, Video"
            ],
            [
                "Manley",
                "Grady",
                null,
                "Electrical"
            ],
            [
                "Brian",
                "Stamm",
                null,
                "TV, Video"
            ],
            [
                "Samanta",
                "Hauck",
                null,
                "Electrical"
            ],
            [
                "Cullen",
                "Kunde",
                null,
                "Mechanical"
            ],
            [
                "Alexys",
                "Simonis",
                null,
                "Mechanical"
            ],
            [
                "Clemens",
                "Orn",
                null,
                "Mechanical"
            ],
            [
                "Nellie",
                "Hirthe",
                null,
                "Electrical"
            ],
            [
                "Lorine",
                "Morar",
                null,
                "Electrical"
            ]
        ],
        "cypher_query": "MATCH (T1:Maintenance_Engineers)-[T2:Engineer_Skills]-(T3:Skills)\nRETURN T1.first_name,T1.last_name,T1.other_details,T3.skill_description",
        "cypher_ans": [
            [
                "Nellie",
                "Hirthe",
                null,
                "Electrical"
            ],
            [
                "Manley",
                "Grady",
                null,
                "Electrical"
            ],
            [
                "Samanta",
                "Hauck",
                null,
                "Electrical"
            ],
            [
                "Weston",
                "Hahn",
                null,
                "Electrical"
            ],
            [
                "Courtney",
                "Adams",
                null,
                "Electrical"
            ],
            [
                "Naomi",
                "Price",
                null,
                "Electrical"
            ],
            [
                "Archibald",
                "Streich",
                null,
                "Electrical"
            ],
            [
                "Lorine",
                "Morar",
                null,
                "Electrical"
            ],
            [
                "Manley",
                "Grady",
                null,
                "Mechanical"
            ],
            [
                "Naomi",
                "Price",
                null,
                "Mechanical"
            ],
            [
                "Alexys",
                "Simonis",
                null,
                "Mechanical"
            ],
            [
                "Weston",
                "Hahn",
                null,
                "Mechanical"
            ],
            [
                "Clemens",
                "Orn",
                null,
                "Mechanical"
            ],
            [
                "Cullen",
                "Kunde",
                null,
                "Mechanical"
            ],
            [
                "Archibald",
                "Streich",
                null,
                "TV, Video"
            ],
            [
                "Brian",
                "Stamm",
                null,
                "TV, Video"
            ],
            [
                "Courtney",
                "Adams",
                null,
                "TV, Video"
            ],
            [
                "Nellie",
                "Hirthe",
                null,
                "TV, Video"
            ],
            [
                "Josie",
                "Harvey",
                "Skilled",
                "TV, Video"
            ]
        ]
    },
    {
        "db_id": "assets_maintenance",
        "question": "For all the faults of different parts, what are all the decriptions of the skills required to fix them? List the name of the faults and the skill description.",
        "sql_query": "SELECT T1.fault_short_name ,  T3.skill_description FROM Part_Faults AS T1 JOIN Skills_Required_To_Fix AS T2 ON T1.part_fault_id  =  T2.part_fault_id JOIN Skills AS T3 ON T2.skill_id  =  T3.skill_id",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.fault_short_name"
                },
                {
                    "value": "T3.skill_description"
                }
            ],
            "from": [
                {
                    "value": "Part_Faults",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "Skills_Required_To_Fix",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.part_fault_id",
                            "T2.part_fault_id"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "Skills",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T2.skill_id",
                            "T3.skill_id"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "TW",
                "Mechanical"
            ],
            [
                "MW",
                "TV, Video"
            ],
            [
                "PW",
                "Electrical"
            ],
            [
                "PW",
                "TV, Video"
            ],
            [
                "TW",
                "TV, Video"
            ],
            [
                "PW",
                "Mechanical"
            ],
            [
                "MW",
                "Mechanical"
            ]
        ],
        "cypher_query": "MATCH (T1:Part_Faults)-[T2:Skills_Required_To_Fix]-(T3:Skills)\nRETURN T1.fault_short_name,T3.skill_description",
        "cypher_ans": [
            [
                "PW",
                "Electrical"
            ],
            [
                "PW",
                "Mechanical"
            ],
            [
                "TW",
                "Mechanical"
            ],
            [
                "MW",
                "Mechanical"
            ],
            [
                "TW",
                "TV, Video"
            ],
            [
                "MW",
                "TV, Video"
            ],
            [
                "PW",
                "TV, Video"
            ]
        ]
    },
    {
        "db_id": "assets_maintenance",
        "question": "How many assets can each parts be used in? List the part name and the number.",
        "sql_query": "SELECT T1.part_name ,  count(*) FROM Parts AS T1 JOIN Asset_Parts AS T2 ON T1.part_id  =  T2.part_id GROUP BY T1.part_name",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.part_name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "Parts",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "Asset_Parts",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.part_id",
                            "T2.part_id"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.part_name"
            }
        },
        "sql_ans": [
            [
                "middle",
                5
            ],
            [
                "package",
                6
            ],
            [
                "top",
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Parts)-[T2:Asset_Parts]-()\nWITH count(T1.part_name) AS count, T1.part_name AS part_name\nRETURN part_name,count",
        "cypher_ans": [
            [
                "top",
                4
            ],
            [
                "middle",
                5
            ],
            [
                "package",
                5
            ]
        ]
    },
    {
        "db_id": "assets_maintenance",
        "question": "Among those engineers who have visited, which engineer makes the least number of visits? List the engineer id, first name and last name.",
        "sql_query": "SELECT T1.engineer_id ,  T1.first_name ,  T1.last_name FROM Maintenance_Engineers AS T1 JOIN Engineer_Visits AS T2 ON T1.engineer_id  =  T2.engineer_id GROUP BY T1.engineer_id ORDER BY count(*) ASC LIMIT 1",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.engineer_id"
                },
                {
                    "value": "T1.first_name"
                },
                {
                    "value": "T1.last_name"
                }
            ],
            "from": [
                {
                    "value": "Maintenance_Engineers",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "Engineer_Visits",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.engineer_id",
                            "T2.engineer_id"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.engineer_id"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "asc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                1,
                "Etha",
                "Reinger"
            ]
        ],
        "cypher_query": "MATCH (T1:Maintenance_Engineers)-[]-(T2:Engineer_Visits)\nWITH count(T1.engineer_id) AS count, T1.engineer_id AS engineer_id, T1.first_name AS first_name, T1.last_name AS last_name\nRETURN engineer_id,first_name,last_name\nORDER BY count ASC\nLIMIT 1",
        "cypher_ans": [
            [
                8,
                "Nellie",
                "Hirthe"
            ]
        ]
    },
    {
        "db_id": "assets_maintenance",
        "question": "Which staff have contacted which engineers? List the staff name and the engineer first name and last name.",
        "sql_query": "SELECT T1.staff_name ,  T3.first_name ,  T3.last_name FROM Staff AS T1 JOIN Engineer_Visits AS T2 ON T1.staff_id  =  T2.contact_staff_id JOIN Maintenance_Engineers AS T3 ON T2.engineer_id  =  T3.engineer_id",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.staff_name"
                },
                {
                    "value": "T3.first_name"
                },
                {
                    "value": "T3.last_name"
                }
            ],
            "from": [
                {
                    "value": "Staff",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "Engineer_Visits",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.staff_id",
                            "T2.contact_staff_id"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "Maintenance_Engineers",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T2.engineer_id",
                            "T3.engineer_id"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "Christophe",
                "Nellie",
                "Hirthe"
            ],
            [
                "Kadin",
                "Archibald",
                "Streich"
            ],
            [
                "Oren",
                "Alexys",
                "Simonis"
            ],
            [
                "Berneice",
                "Lorine",
                "Morar"
            ],
            [
                "Edmond",
                "Archibald",
                "Streich"
            ],
            [
                "Rodger",
                "Archibald",
                "Streich"
            ],
            [
                "Cyrus",
                "Naomi",
                "Price"
            ],
            [
                "Bernice",
                "Courtney",
                "Adams"
            ],
            [
                "Berneice",
                "Etha",
                "Reinger"
            ],
            [
                "Edmond",
                "Naomi",
                "Price"
            ],
            [
                "Bernice",
                "Lorine",
                "Morar"
            ],
            [
                "Edmond",
                "Cullen",
                "Kunde"
            ]
        ],
        "cypher_query": "MATCH (T1:Staff)-[]-(T3:Maintenance_Engineers)-[]-(T2:Engineer_Visits)\nRETURN T1.staff_name,T3.first_name,T3.last_name",
        "cypher_ans": []
    },
    {
        "db_id": "assets_maintenance",
        "question": "Which skill is used in fixing the most number of faults? List the skill id and description.",
        "sql_query": "SELECT T1.skill_id ,  T1.skill_description FROM Skills AS T1 JOIN Skills_Required_To_Fix AS T2 ON T1.skill_id  =  T2.skill_id GROUP BY T1.skill_id ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.skill_id"
                },
                {
                    "value": "T1.skill_description"
                }
            ],
            "from": [
                {
                    "value": "Skills",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "Skills_Required_To_Fix",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.skill_id",
                            "T2.skill_id"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.skill_id"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                3,
                "TV, Video"
            ]
        ],
        "cypher_query": "MATCH (T1:Skills)-[T2:Skills_Required_To_Fix]-()\nWITH count(T1.skill_id) AS count, T1.skill_id AS skill_id, T1.skill_description AS skill_description\nRETURN skill_id,skill_description\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": [
            [
                2,
                "Mechanical"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of medication used on the patient who stays in room 111?",
        "sql_query": "SELECT T4.name FROM stay AS T1 JOIN patient AS T2 ON T1.Patient  =  T2.SSN JOIN Prescribes AS T3 ON T3.Patient  =  T2.SSN JOIN Medication AS T4 ON T3.Medication  =  T4.Code WHERE room  =  111",
        "parsed_sql": {
            "select": {
                "value": "T4.name"
            },
            "from": [
                {
                    "value": "stay",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Patient",
                            "T2.SSN"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "Prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.Patient",
                            "T2.SSN"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T4",
                        "value": "Medication",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.Medication",
                            "T4.Code"
                        ]
                    }
                }
            ],
            "where": {
                "eq": [
                    "room",
                    111
                ]
            }
        },
        "sql_ans": [
            [
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Stay)-[]-(T4:Medication)-[]-(T3:Prescribes)-[]-(T2:Patient)-[]-(T3:Prescribes)\nWHERE T1.Room = 111\nRETURN T4.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the medication used for the patient staying in room 111?",
        "sql_query": "SELECT T4.name FROM stay AS T1 JOIN patient AS T2 ON T1.Patient  =  T2.SSN JOIN Prescribes AS T3 ON T3.Patient  =  T2.SSN JOIN Medication AS T4 ON T3.Medication  =  T4.Code WHERE room  =  111",
        "parsed_sql": {
            "select": {
                "value": "T4.name"
            },
            "from": [
                {
                    "value": "stay",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Patient",
                            "T2.SSN"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "Prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.Patient",
                            "T2.SSN"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T4",
                        "value": "Medication",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.Medication",
                            "T4.Code"
                        ]
                    }
                }
            ],
            "where": {
                "eq": [
                    "room",
                    111
                ]
            }
        },
        "sql_ans": [
            [
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Stay)-[]-(T4:Medication)-[]-(T3:Prescribes)-[]-(T2:Patient)-[]-(T3:Prescribes)\nWHERE T1.Room = 111\nRETURN T4.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the nurse has the most appointments?",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH count(T1.EmployeeID) AS count, T1.Name AS Name\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the nurse who has the largest number of appointments.",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH count(T1.EmployeeID) AS count, T1.Name AS Name\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of medications prescribed for each brand.",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH T1.Name AS Name, count(T1.Brand) AS count\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many medications are prescribed for each brand?",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH T1.Name AS Name, count(T1.Brand) AS count\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    }
]
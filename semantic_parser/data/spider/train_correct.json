version https://git-lfs.github.com/spec/v1
oid sha256:ac825c69a8bfd1c475f7173fc5cad583bc576f98d8cf7100023657d7033d0209
size 364612006
[
    {
        "db_id": "department_management",
        "question": "How many heads of the departments are older than 56 ?",
        "cypher_query": "MATCH (h:Head)\nWHERE h.age>56\nRETURN count(*)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "h",
                "age"
            ],
            "Token_Name_Label": "Head",
            "Token_Operator": [
                ".",
                ">",
                "*"
            ],
            "Token_Literal_Number_Integer": "56",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                5
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "List the name, born state and age of the heads of departments ordered by age.",
        "cypher_query": "MATCH (h:Head)\nRETURN h.name,h.born_state,h.age\nORDER BY h.age",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "h",
                "born_state",
                "age"
            ],
            "Token_Name_Label": "Head",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Billy Mayfair",
                "California",
                69.0
            ],
            [
                "Dudley Hart",
                "California",
                52.0
            ],
            [
                "Franklin Langham",
                "Connecticut",
                67.0
            ],
            [
                "Jeff Maggert",
                "Delaware",
                53.0
            ],
            [
                "K. J. Choi",
                "Alabama",
                69.0
            ],
            [
                "Nick Faldo",
                "California",
                56.0
            ],
            [
                "P\u00e1draig Harrington",
                "Connecticut",
                43.0
            ],
            [
                "Sergio Garc\u00eda",
                "California",
                68.0
            ],
            [
                "Stewart Cink",
                "Florida",
                50.0
            ],
            [
                "Tiger Woods",
                "Alabama",
                67.0
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "List the creation year, name and budget of each department.",
        "cypher_query": "MATCH (d:Department)\nRETURN d.Creation,d.Name,d.Budget_in_Billions",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "d",
                "Creation",
                "Budget_in_Billions"
            ],
            "Token_Name_Label": "Department",
            "Token_Operator": "."
        },
        "answers": [
            [
                1789,
                "State",
                9.96
            ],
            [
                1789,
                "Treasury",
                11.1
            ],
            [
                1849,
                "Interior",
                10.7
            ],
            [
                1870,
                "Justice",
                23.4
            ],
            [
                1889,
                "Agriculture",
                77.6
            ],
            [
                1903,
                "Commerce",
                6.2
            ],
            [
                1913,
                "Labor",
                59.7
            ],
            [
                1947,
                "Defense",
                439.3
            ],
            [
                1953,
                "Health and Human Services",
                543.2
            ],
            [
                1965,
                "Housing and Urban Development",
                46.2
            ],
            [
                1966,
                "Transportation",
                58.0
            ],
            [
                1977,
                "Energy",
                21.5
            ],
            [
                1979,
                "Education",
                62.8
            ],
            [
                1989,
                "Veterans Affairs",
                73.2
            ],
            [
                2002,
                "Homeland Security",
                44.6
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What are the maximum and minimum budget of the departments?",
        "cypher_query": "MATCH (d:Department)\nRETURN max(d.Budget_in_Billions),min(d.Budget_in_Billions)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "d",
                "Budget_in_Billions"
            ],
            "Token_Name_Label": "Department",
            "Token_Name_Function": [
                "max",
                "min"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                543.2,
                6.2
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What is the average number of employees of the departments whose rank is between 10 and 15?",
        "cypher_query": "MATCH (d:Department)\nWHERE 10<=d.Ranking<=15\nRETURN avg(d.Num_Employees)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "d",
                "Ranking",
                "Num_Employees"
            ],
            "Token_Name_Label": "Department",
            "Token_Literal_Number_Integer": [
                "10",
                "15"
            ],
            "Token_Operator": [
                "<=",
                "."
            ],
            "Token_Name_Function": "avg"
        },
        "answers": [
            [
                105468.16666666667
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What are the names of the heads who are born outside the California state?",
        "cypher_query": "MATCH (h:Head)\nWHERE h.born_state<>'California'\nRETURN h.name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN",
                "name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "h",
                "born_state"
            ],
            "Token_Name_Label": "Head",
            "Token_Operator": [
                ".",
                "<>"
            ],
            "Token_Literal_String": "'California'"
        },
        "answers": [
            [
                "Franklin Langham"
            ],
            [
                "Jeff Maggert"
            ],
            [
                "K. J. Choi"
            ],
            [
                "P\u00e1draig Harrington"
            ],
            [
                "Stewart Cink"
            ],
            [
                "Tiger Woods"
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What are the distinct creation years of the departments managed by a secretary born in state 'Alabama'?",
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Management)-[]-(T3:Head)\nWHERE T3.born_state='Alabama'\nRETURN DISTINCT T1.Creation",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN DISTINCT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3",
                "born_state",
                "Creation"
            ],
            "Token_Name_Label": [
                "Department",
                "Management",
                "Head"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "'Alabama'"
        },
        "answers": []
    },
    {
        "db_id": "department_management",
        "question": "What are the names of the states where at least 3 heads were born?",
        "cypher_query": "MATCH (h:Head)\nWITH h.born_state AS born_state, count(*) AS count\nWHERE count >=3\nRETURN born_state",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "AS",
                "WHERE",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "h",
                "born_state",
                "count"
            ],
            "Token_Name_Label": "Head",
            "Token_Operator": [
                ".",
                "*",
                ">="
            ],
            "Token_Name_Function": "count",
            "Token_Literal_Number_Integer": "3"
        },
        "answers": [
            [
                "California"
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "In which year were most departments established?",
        "cypher_query": "MATCH (d:Department)\nWITH count(d.Creation) AS count, d.Creation AS Creation\nRETURN Creation\nORDER BY count DESC\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "AS",
                "RETURN",
                "ORDER BY",
                "DESC",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "d",
                "Creation",
                "count"
            ],
            "Token_Name_Label": "Department",
            "Token_Name_Function": "count",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                1789
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "Show the name and number of employees for the departments managed by heads whose temporary acting value is 'Yes'?",
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Management)\nWHERE T2.temporary_acting='Yes'\nRETURN T1.Name,T1.Num_Employees",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "temporary_acting",
                "Num_Employees"
            ],
            "Token_Name_Label": [
                "Department",
                "Management"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "'Yes'"
        },
        "answers": []
    },
    {
        "db_id": "department_management",
        "question": "How many acting statuses are there?",
        "cypher_query": "MATCH (m:Management)\nWITH DISTINCT m.temporary_acting AS temporary_acting\nRETURN count(temporary_acting)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH DISTINCT",
                "AS",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "m",
                "temporary_acting"
            ],
            "Token_Name_Label": "Management",
            "Token_Operator": ".",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                0
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What are the distinct ages of the heads who are acting?",
        "cypher_query": "MATCH (T2:Management)-[]-(T1:Head)\nWHERE T2.temporary_acting='Yes'\nRETURN DISTINCT T1.age",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN DISTINCT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T2",
                "T1",
                "temporary_acting",
                "age"
            ],
            "Token_Name_Label": [
                "Management",
                "Head"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "'Yes'"
        },
        "answers": []
    },
    {
        "db_id": "department_management",
        "question": "Which department has more than 1 head at a time? List the id, name and the number of heads.",
        "cypher_query": "MATCH (T2:Management)-[]-(T1:Department)\nWITH T1.Name AS Name, T1.Department_ID AS Department_ID, count(*) AS count\nWHERE count >1\nRETURN Department_ID,Name,count",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "Name",
                "AS",
                "WHERE",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "T2",
                "T1",
                "Department_ID",
                "count"
            ],
            "Token_Name_Label": [
                "Management",
                "Department"
            ],
            "Token_Operator": [
                ".",
                "*",
                ">"
            ],
            "Token_Name_Function": "count",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": []
    },
    {
        "db_id": "department_management",
        "question": "Which head's name has the substring 'Ha'? List the id and name.",
        "cypher_query": "MATCH (h:Head)\nWHERE h.name =~'.*Ha.*'\nRETURN h.head_ID,h.name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "h",
                "head_ID"
            ],
            "Token_Name_Label": "Head",
            "Token_Operator": [
                ".",
                "=~"
            ],
            "Token_Literal_String": "'.*Ha.*'"
        },
        "answers": [
            [
                4,
                "Dudley Hart"
            ],
            [
                9,
                "P\u00e1draig Harrington"
            ]
        ]
    }
][
    {
        "db_id": "browser_web",
        "question": "How many main stream browsers whose market share is at least 5 exist?",
        "cypher_query": "MATCH (b:Browser)\nWHERE b.market_share>=5\nRETURN count(*)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "b",
                "market_share"
            ],
            "Token_Name_Label": "Browser",
            "Token_Operator": [
                ".",
                ">=",
                "*"
            ],
            "Token_Literal_Number_Integer": "5",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                3
            ]
        ]
    },
    {
        "db_id": "browser_web",
        "question": "List the name of browsers in descending order by market share.",
        "cypher_query": "MATCH (b:Browser)\nRETURN b.name\nORDER BY b.market_share DESC",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "name",
                "ORDER BY",
                "DESC"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "b",
                "market_share"
            ],
            "Token_Name_Label": "Browser",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Firefox"
            ],
            [
                "Internet Explorer"
            ],
            [
                "Opera"
            ],
            [
                "Safari"
            ]
        ]
    },
    {
        "db_id": "browser_web",
        "question": "List the ids, names and market shares of all browsers.",
        "cypher_query": "MATCH (b:Browser)\nRETURN b.id,b.name,b.market_share",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "b",
                "id",
                "market_share"
            ],
            "Token_Name_Label": "Browser",
            "Token_Operator": "."
        },
        "answers": [
            [
                1,
                "Internet Explorer",
                28.96
            ],
            [
                2,
                "Firefox",
                18.11
            ],
            [
                3,
                "Safari",
                8.54
            ],
            [
                4,
                "Opera",
                1.2
            ]
        ]
    },
    {
        "db_id": "browser_web",
        "question": "What is the maximum, minimum and average market share of the listed browsers?",
        "cypher_query": "MATCH (b:Browser)\nRETURN max(b.market_share),min(b.market_share),avg(b.market_share)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "b",
                "market_share"
            ],
            "Token_Name_Label": "Browser",
            "Token_Name_Function": [
                "max",
                "min",
                "avg"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                28.96,
                1.2,
                14.202499999999999
            ]
        ]
    }
][
    {
        "db_id": "browser_web",
        "question": "How many main stream browsers whose market share is at least 5 exist?",
        "cypher_query": "MATCH (b:Browser)\nWHERE b.market_share>=5\nRETURN count(*)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "b",
                "market_share"
            ],
            "Token_Name_Label": "Browser",
            "Token_Operator": [
                ".",
                ">=",
                "*"
            ],
            "Token_Literal_Number_Integer": "5",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                3
            ]
        ]
    },
    {
        "db_id": "browser_web",
        "question": "List the name of browsers in descending order by market share.",
        "cypher_query": "MATCH (b:Browser)\nRETURN b.name\nORDER BY b.market_share DESC",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "name",
                "ORDER BY",
                "DESC"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "b",
                "market_share"
            ],
            "Token_Name_Label": "Browser",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Firefox"
            ],
            [
                "Internet Explorer"
            ],
            [
                "Opera"
            ],
            [
                "Safari"
            ]
        ]
    },
    {
        "db_id": "browser_web",
        "question": "List the ids, names and market shares of all browsers.",
        "cypher_query": "MATCH (b:Browser)\nRETURN b.id,b.name,b.market_share",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "b",
                "id",
                "market_share"
            ],
            "Token_Name_Label": "Browser",
            "Token_Operator": "."
        },
        "answers": [
            [
                1,
                "Internet Explorer",
                28.96
            ],
            [
                2,
                "Firefox",
                18.11
            ],
            [
                3,
                "Safari",
                8.54
            ],
            [
                4,
                "Opera",
                1.2
            ]
        ]
    },
    {
        "db_id": "browser_web",
        "question": "What is the maximum, minimum and average market share of the listed browsers?",
        "cypher_query": "MATCH (b:Browser)\nRETURN max(b.market_share),min(b.market_share),avg(b.market_share)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "b",
                "market_share"
            ],
            "Token_Name_Label": "Browser",
            "Token_Name_Function": [
                "max",
                "min",
                "avg"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                28.96,
                1.2,
                14.202499999999999
            ]
        ]
    }
][
    {
        "db_id": "browser_web",
        "question": "How many main stream browsers whose market share is at least 5 exist?",
        "cypher_query": "MATCH (b:Browser)\nWHERE b.market_share>=5\nRETURN count(*)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "b",
                "market_share"
            ],
            "Token_Name_Label": "Browser",
            "Token_Operator": [
                ".",
                ">=",
                "*"
            ],
            "Token_Literal_Number_Integer": "5",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                3
            ]
        ]
    },
    {
        "db_id": "browser_web",
        "question": "List the name of browsers in descending order by market share.",
        "cypher_query": "MATCH (b:Browser)\nRETURN b.name\nORDER BY b.market_share DESC",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "name",
                "ORDER BY",
                "DESC"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "b",
                "market_share"
            ],
            "Token_Name_Label": "Browser",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Firefox"
            ],
            [
                "Internet Explorer"
            ],
            [
                "Opera"
            ],
            [
                "Safari"
            ]
        ]
    },
    {
        "db_id": "browser_web",
        "question": "List the ids, names and market shares of all browsers.",
        "cypher_query": "MATCH (b:Browser)\nRETURN b.id,b.name,b.market_share",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "b",
                "id",
                "market_share"
            ],
            "Token_Name_Label": "Browser",
            "Token_Operator": "."
        },
        "answers": [
            [
                1,
                "Internet Explorer",
                28.96
            ],
            [
                2,
                "Firefox",
                18.11
            ],
            [
                3,
                "Safari",
                8.54
            ],
            [
                4,
                "Opera",
                1.2
            ]
        ]
    },
    {
        "db_id": "browser_web",
        "question": "What is the maximum, minimum and average market share of the listed browsers?",
        "cypher_query": "MATCH (b:Browser)\nRETURN max(b.market_share),min(b.market_share),avg(b.market_share)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "b",
                "market_share"
            ],
            "Token_Name_Label": "Browser",
            "Token_Name_Function": [
                "max",
                "min",
                "avg"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                28.96,
                1.2,
                14.202499999999999
            ]
        ]
    }
][
    {
        "db_id": "department_management",
        "question": "How many heads of the departments are older than 56 ?",
        "cypher_query": "MATCH (h:Head)\nWHERE h.age>56\nRETURN count(*)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "h",
                "age"
            ],
            "Token_Name_Label": "Head",
            "Token_Operator": [
                ".",
                ">",
                "*"
            ],
            "Token_Literal_Number_Integer": "56",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                5
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "List the name, born state and age of the heads of departments ordered by age.",
        "cypher_query": "MATCH (h:Head)\nRETURN h.name,h.born_state,h.age\nORDER BY h.age",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "h",
                "born_state",
                "age"
            ],
            "Token_Name_Label": "Head",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Billy Mayfair",
                "California",
                69.0
            ],
            [
                "Dudley Hart",
                "California",
                52.0
            ],
            [
                "Franklin Langham",
                "Connecticut",
                67.0
            ],
            [
                "Jeff Maggert",
                "Delaware",
                53.0
            ],
            [
                "K. J. Choi",
                "Alabama",
                69.0
            ],
            [
                "Nick Faldo",
                "California",
                56.0
            ],
            [
                "P\u00e1draig Harrington",
                "Connecticut",
                43.0
            ],
            [
                "Sergio Garc\u00eda",
                "California",
                68.0
            ],
            [
                "Stewart Cink",
                "Florida",
                50.0
            ],
            [
                "Tiger Woods",
                "Alabama",
                67.0
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "List the creation year, name and budget of each department.",
        "cypher_query": "MATCH (d:Department)\nRETURN d.Creation,d.Name,d.Budget_in_Billions",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "d",
                "Creation",
                "Budget_in_Billions"
            ],
            "Token_Name_Label": "Department",
            "Token_Operator": "."
        },
        "answers": [
            [
                1789,
                "State",
                9.96
            ],
            [
                1789,
                "Treasury",
                11.1
            ],
            [
                1849,
                "Interior",
                10.7
            ],
            [
                1870,
                "Justice",
                23.4
            ],
            [
                1889,
                "Agriculture",
                77.6
            ],
            [
                1903,
                "Commerce",
                6.2
            ],
            [
                1913,
                "Labor",
                59.7
            ],
            [
                1947,
                "Defense",
                439.3
            ],
            [
                1953,
                "Health and Human Services",
                543.2
            ],
            [
                1965,
                "Housing and Urban Development",
                46.2
            ],
            [
                1966,
                "Transportation",
                58.0
            ],
            [
                1977,
                "Energy",
                21.5
            ],
            [
                1979,
                "Education",
                62.8
            ],
            [
                1989,
                "Veterans Affairs",
                73.2
            ],
            [
                2002,
                "Homeland Security",
                44.6
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What are the maximum and minimum budget of the departments?",
        "cypher_query": "MATCH (d:Department)\nRETURN max(d.Budget_in_Billions),min(d.Budget_in_Billions)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "d",
                "Budget_in_Billions"
            ],
            "Token_Name_Label": "Department",
            "Token_Name_Function": [
                "max",
                "min"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                543.2,
                6.2
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What is the average number of employees of the departments whose rank is between 10 and 15?",
        "cypher_query": "MATCH (d:Department)\nWHERE 10<=d.Ranking<=15\nRETURN avg(d.Num_Employees)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "d",
                "Ranking",
                "Num_Employees"
            ],
            "Token_Name_Label": "Department",
            "Token_Literal_Number_Integer": [
                "10",
                "15"
            ],
            "Token_Operator": [
                "<=",
                "."
            ],
            "Token_Name_Function": "avg"
        },
        "answers": [
            [
                105468.16666666667
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What are the names of the heads who are born outside the California state?",
        "cypher_query": "MATCH (h:Head)\nWHERE h.born_state<>'California'\nRETURN h.name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN",
                "name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "h",
                "born_state"
            ],
            "Token_Name_Label": "Head",
            "Token_Operator": [
                ".",
                "<>"
            ],
            "Token_Literal_String": "'California'"
        },
        "answers": [
            [
                "Franklin Langham"
            ],
            [
                "Jeff Maggert"
            ],
            [
                "K. J. Choi"
            ],
            [
                "P\u00e1draig Harrington"
            ],
            [
                "Stewart Cink"
            ],
            [
                "Tiger Woods"
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What are the distinct creation years of the departments managed by a secretary born in state 'Alabama'?",
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Management)-[]-(T3:Head)\nWHERE T3.born_state='Alabama'\nRETURN DISTINCT T1.Creation",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN DISTINCT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3",
                "born_state",
                "Creation"
            ],
            "Token_Name_Label": [
                "Department",
                "Management",
                "Head"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "'Alabama'"
        },
        "answers": []
    },
    {
        "db_id": "department_management",
        "question": "What are the names of the states where at least 3 heads were born?",
        "cypher_query": "MATCH (h:Head)\nWITH h.born_state AS born_state, count(*) AS count\nWHERE count >=3\nRETURN born_state",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "AS",
                "WHERE",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "h",
                "born_state",
                "count"
            ],
            "Token_Name_Label": "Head",
            "Token_Operator": [
                ".",
                "*",
                ">="
            ],
            "Token_Name_Function": "count",
            "Token_Literal_Number_Integer": "3"
        },
        "answers": [
            [
                "California"
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "In which year were most departments established?",
        "cypher_query": "MATCH (d:Department)\nWITH d.Creation AS Creation, count(d.Creation) AS count\nRETURN Creation\nORDER BY count DESC\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "AS",
                "RETURN",
                "ORDER BY",
                "DESC",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "d",
                "Creation",
                "count"
            ],
            "Token_Name_Label": "Department",
            "Token_Operator": ".",
            "Token_Name_Function": "count",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                1789
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "Show the name and number of employees for the departments managed by heads whose temporary acting value is 'Yes'?",
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Management)\nWHERE T2.temporary_acting='Yes'\nRETURN T1.Name,T1.Num_Employees",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "temporary_acting",
                "Num_Employees"
            ],
            "Token_Name_Label": [
                "Department",
                "Management"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "'Yes'"
        },
        "answers": []
    },
    {
        "db_id": "department_management",
        "question": "How many acting statuses are there?",
        "cypher_query": "MATCH (m:Management)\nWITH DISTINCT m.temporary_acting AS temporary_acting\nRETURN count(temporary_acting)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH DISTINCT",
                "AS",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "m",
                "temporary_acting"
            ],
            "Token_Name_Label": "Management",
            "Token_Operator": ".",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                0
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What are the distinct ages of the heads who are acting?",
        "cypher_query": "MATCH (T2:Management)-[]-(T1:Head)\nWHERE T2.temporary_acting='Yes'\nRETURN DISTINCT T1.age",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN DISTINCT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T2",
                "T1",
                "temporary_acting",
                "age"
            ],
            "Token_Name_Label": [
                "Management",
                "Head"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "'Yes'"
        },
        "answers": []
    },
    {
        "db_id": "department_management",
        "question": "Which department has more than 1 head at a time? List the id, name and the number of heads.",
        "cypher_query": "MATCH (T2:Management)-[]-(T1:Department)\nWITH count(*) AS count, T1.Name AS Name, T1.Department_ID AS Department_ID\nWHERE count >1\nRETURN Department_ID,Name,count",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "AS",
                "Name",
                "WHERE",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "T2",
                "T1",
                "count",
                "Department_ID"
            ],
            "Token_Name_Label": [
                "Management",
                "Department"
            ],
            "Token_Name_Function": "count",
            "Token_Operator": [
                "*",
                ".",
                ">"
            ],
            "Token_Literal_Number_Integer": "1"
        },
        "answers": []
    },
    {
        "db_id": "department_management",
        "question": "Which head's name has the substring 'Ha'? List the id and name.",
        "cypher_query": "MATCH (h:Head)\nWHERE h.name =~'.*Ha.*'\nRETURN h.head_ID,h.name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "h",
                "head_ID"
            ],
            "Token_Name_Label": "Head",
            "Token_Operator": [
                ".",
                "=~"
            ],
            "Token_Literal_String": "'.*Ha.*'"
        },
        "answers": [
            [
                4,
                "Dudley Hart"
            ],
            [
                9,
                "P\u00e1draig Harrington"
            ]
        ]
    }
][
    {
        "db_id": "department_management",
        "question": "How many heads of the departments are older than 56 ?",
        "cypher_query": "MATCH (h:Head)\nWHERE h.age>56\nRETURN count(*)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "h",
                "age"
            ],
            "Token_Name_Label": "Head",
            "Token_Operator": [
                ".",
                ">",
                "*"
            ],
            "Token_Literal_Number_Integer": "56",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                5
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "List the name, born state and age of the heads of departments ordered by age.",
        "cypher_query": "MATCH (h:Head)\nRETURN h.name,h.born_state,h.age\nORDER BY h.age",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "h",
                "born_state",
                "age"
            ],
            "Token_Name_Label": "Head",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Billy Mayfair",
                "California",
                69.0
            ],
            [
                "Dudley Hart",
                "California",
                52.0
            ],
            [
                "Franklin Langham",
                "Connecticut",
                67.0
            ],
            [
                "Jeff Maggert",
                "Delaware",
                53.0
            ],
            [
                "K. J. Choi",
                "Alabama",
                69.0
            ],
            [
                "Nick Faldo",
                "California",
                56.0
            ],
            [
                "P\u00e1draig Harrington",
                "Connecticut",
                43.0
            ],
            [
                "Sergio Garc\u00eda",
                "California",
                68.0
            ],
            [
                "Stewart Cink",
                "Florida",
                50.0
            ],
            [
                "Tiger Woods",
                "Alabama",
                67.0
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "List the creation year, name and budget of each department.",
        "cypher_query": "MATCH (d:Department)\nRETURN d.Creation,d.Name,d.Budget_in_Billions",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "d",
                "Creation",
                "Budget_in_Billions"
            ],
            "Token_Name_Label": "Department",
            "Token_Operator": "."
        },
        "answers": [
            [
                1789,
                "State",
                9.96
            ],
            [
                1789,
                "Treasury",
                11.1
            ],
            [
                1849,
                "Interior",
                10.7
            ],
            [
                1870,
                "Justice",
                23.4
            ],
            [
                1889,
                "Agriculture",
                77.6
            ],
            [
                1903,
                "Commerce",
                6.2
            ],
            [
                1913,
                "Labor",
                59.7
            ],
            [
                1947,
                "Defense",
                439.3
            ],
            [
                1953,
                "Health and Human Services",
                543.2
            ],
            [
                1965,
                "Housing and Urban Development",
                46.2
            ],
            [
                1966,
                "Transportation",
                58.0
            ],
            [
                1977,
                "Energy",
                21.5
            ],
            [
                1979,
                "Education",
                62.8
            ],
            [
                1989,
                "Veterans Affairs",
                73.2
            ],
            [
                2002,
                "Homeland Security",
                44.6
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What are the maximum and minimum budget of the departments?",
        "cypher_query": "MATCH (d:Department)\nRETURN max(d.Budget_in_Billions),min(d.Budget_in_Billions)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "d",
                "Budget_in_Billions"
            ],
            "Token_Name_Label": "Department",
            "Token_Name_Function": [
                "max",
                "min"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                543.2,
                6.2
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What is the average number of employees of the departments whose rank is between 10 and 15?",
        "cypher_query": "MATCH (d:Department)\nWHERE 10<=d.Ranking<=15\nRETURN avg(d.Num_Employees)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "d",
                "Ranking",
                "Num_Employees"
            ],
            "Token_Name_Label": "Department",
            "Token_Literal_Number_Integer": [
                "10",
                "15"
            ],
            "Token_Operator": [
                "<=",
                "."
            ],
            "Token_Name_Function": "avg"
        },
        "answers": [
            [
                105468.16666666667
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What are the names of the heads who are born outside the California state?",
        "cypher_query": "MATCH (h:Head)\nWHERE h.born_state<>'California'\nRETURN h.name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN",
                "name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "h",
                "born_state"
            ],
            "Token_Name_Label": "Head",
            "Token_Operator": [
                ".",
                "<>"
            ],
            "Token_Literal_String": "'California'"
        },
        "answers": [
            [
                "Franklin Langham"
            ],
            [
                "Jeff Maggert"
            ],
            [
                "K. J. Choi"
            ],
            [
                "P\u00e1draig Harrington"
            ],
            [
                "Stewart Cink"
            ],
            [
                "Tiger Woods"
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What are the distinct creation years of the departments managed by a secretary born in state 'Alabama'?",
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Management)-[]-(T3:Head)\nWHERE T3.born_state='Alabama'\nRETURN DISTINCT T1.Creation",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN DISTINCT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3",
                "born_state",
                "Creation"
            ],
            "Token_Name_Label": [
                "Department",
                "Management",
                "Head"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "'Alabama'"
        },
        "answers": []
    },
    {
        "db_id": "department_management",
        "question": "What are the names of the states where at least 3 heads were born?",
        "cypher_query": "MATCH (h:Head)\nWITH count(*) AS count, h.born_state AS born_state\nWHERE count >=3\nRETURN born_state",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "AS",
                "WHERE",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "h",
                "count",
                "born_state"
            ],
            "Token_Name_Label": "Head",
            "Token_Name_Function": "count",
            "Token_Operator": [
                "*",
                ".",
                ">="
            ],
            "Token_Literal_Number_Integer": "3"
        },
        "answers": [
            [
                "California"
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "In which year were most departments established?",
        "cypher_query": "MATCH (d:Department)\nWITH count(d.Creation) AS count, d.Creation AS Creation\nRETURN Creation\nORDER BY count DESC\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "AS",
                "RETURN",
                "ORDER BY",
                "DESC",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "d",
                "Creation",
                "count"
            ],
            "Token_Name_Label": "Department",
            "Token_Name_Function": "count",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                1789
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "Show the name and number of employees for the departments managed by heads whose temporary acting value is 'Yes'?",
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Management)\nWHERE T2.temporary_acting='Yes'\nRETURN T1.Name,T1.Num_Employees",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "temporary_acting",
                "Num_Employees"
            ],
            "Token_Name_Label": [
                "Department",
                "Management"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "'Yes'"
        },
        "answers": []
    },
    {
        "db_id": "department_management",
        "question": "How many acting statuses are there?",
        "cypher_query": "MATCH (m:Management)\nWITH DISTINCT m.temporary_acting AS temporary_acting\nRETURN count(temporary_acting)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH DISTINCT",
                "AS",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "m",
                "temporary_acting"
            ],
            "Token_Name_Label": "Management",
            "Token_Operator": ".",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                0
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What are the distinct ages of the heads who are acting?",
        "cypher_query": "MATCH (T2:Management)-[]-(T1:Head)\nWHERE T2.temporary_acting='Yes'\nRETURN DISTINCT T1.age",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN DISTINCT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T2",
                "T1",
                "temporary_acting",
                "age"
            ],
            "Token_Name_Label": [
                "Management",
                "Head"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "'Yes'"
        },
        "answers": []
    },
    {
        "db_id": "department_management",
        "question": "Which department has more than 1 head at a time? List the id, name and the number of heads.",
        "cypher_query": "MATCH (T2:Management)-[]-(T1:Department)\nWITH count(*) AS count, T1.Department_ID AS Department_ID, T1.Name AS Name\nWHERE count >1\nRETURN Department_ID,Name,count",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "AS",
                "Name",
                "WHERE",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "T2",
                "T1",
                "count",
                "Department_ID"
            ],
            "Token_Name_Label": [
                "Management",
                "Department"
            ],
            "Token_Name_Function": "count",
            "Token_Operator": [
                "*",
                ".",
                ">"
            ],
            "Token_Literal_Number_Integer": "1"
        },
        "answers": []
    },
    {
        "db_id": "department_management",
        "question": "Which head's name has the substring 'Ha'? List the id and name.",
        "cypher_query": "MATCH (h:Head)\nWHERE h.name =~'.*Ha.*'\nRETURN h.head_ID,h.name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "h",
                "head_ID"
            ],
            "Token_Name_Label": "Head",
            "Token_Operator": [
                ".",
                "=~"
            ],
            "Token_Literal_String": "'.*Ha.*'"
        },
        "answers": [
            [
                4,
                "Dudley Hart"
            ],
            [
                9,
                "P\u00e1draig Harrington"
            ]
        ]
    }
][
    {
        "db_id": "department_management",
        "question": "How many heads of the departments are older than 56 ?",
        "cypher_query": "MATCH (h:Head)\nWHERE h.age>56\nRETURN count(*)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "h",
                "age"
            ],
            "Token_Name_Label": "Head",
            "Token_Operator": [
                ".",
                ">",
                "*"
            ],
            "Token_Literal_Number_Integer": "56",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                5
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "List the name, born state and age of the heads of departments ordered by age.",
        "cypher_query": "MATCH (h:Head)\nRETURN h.name,h.born_state,h.age\nORDER BY h.age",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "h",
                "born_state",
                "age"
            ],
            "Token_Name_Label": "Head",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Billy Mayfair",
                "California",
                69.0
            ],
            [
                "Dudley Hart",
                "California",
                52.0
            ],
            [
                "Franklin Langham",
                "Connecticut",
                67.0
            ],
            [
                "Jeff Maggert",
                "Delaware",
                53.0
            ],
            [
                "K. J. Choi",
                "Alabama",
                69.0
            ],
            [
                "Nick Faldo",
                "California",
                56.0
            ],
            [
                "P\u00e1draig Harrington",
                "Connecticut",
                43.0
            ],
            [
                "Sergio Garc\u00eda",
                "California",
                68.0
            ],
            [
                "Stewart Cink",
                "Florida",
                50.0
            ],
            [
                "Tiger Woods",
                "Alabama",
                67.0
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "List the creation year, name and budget of each department.",
        "cypher_query": "MATCH (d:Department)\nRETURN d.Creation,d.Name,d.Budget_in_Billions",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "d",
                "Creation",
                "Budget_in_Billions"
            ],
            "Token_Name_Label": "Department",
            "Token_Operator": "."
        },
        "answers": [
            [
                1789,
                "State",
                9.96
            ],
            [
                1789,
                "Treasury",
                11.1
            ],
            [
                1849,
                "Interior",
                10.7
            ],
            [
                1870,
                "Justice",
                23.4
            ],
            [
                1889,
                "Agriculture",
                77.6
            ],
            [
                1903,
                "Commerce",
                6.2
            ],
            [
                1913,
                "Labor",
                59.7
            ],
            [
                1947,
                "Defense",
                439.3
            ],
            [
                1953,
                "Health and Human Services",
                543.2
            ],
            [
                1965,
                "Housing and Urban Development",
                46.2
            ],
            [
                1966,
                "Transportation",
                58.0
            ],
            [
                1977,
                "Energy",
                21.5
            ],
            [
                1979,
                "Education",
                62.8
            ],
            [
                1989,
                "Veterans Affairs",
                73.2
            ],
            [
                2002,
                "Homeland Security",
                44.6
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What are the maximum and minimum budget of the departments?",
        "cypher_query": "MATCH (d:Department)\nRETURN max(d.Budget_in_Billions),min(d.Budget_in_Billions)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "d",
                "Budget_in_Billions"
            ],
            "Token_Name_Label": "Department",
            "Token_Name_Function": [
                "max",
                "min"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                543.2,
                6.2
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What is the average number of employees of the departments whose rank is between 10 and 15?",
        "cypher_query": "MATCH (d:Department)\nWHERE 10<=d.Ranking<=15\nRETURN avg(d.Num_Employees)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "d",
                "Ranking",
                "Num_Employees"
            ],
            "Token_Name_Label": "Department",
            "Token_Literal_Number_Integer": [
                "10",
                "15"
            ],
            "Token_Operator": [
                "<=",
                "."
            ],
            "Token_Name_Function": "avg"
        },
        "answers": [
            [
                105468.16666666667
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What are the names of the heads who are born outside the California state?",
        "cypher_query": "MATCH (h:Head)\nWHERE h.born_state<>'California'\nRETURN h.name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN",
                "name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "h",
                "born_state"
            ],
            "Token_Name_Label": "Head",
            "Token_Operator": [
                ".",
                "<>"
            ],
            "Token_Literal_String": "'California'"
        },
        "answers": [
            [
                "Franklin Langham"
            ],
            [
                "Jeff Maggert"
            ],
            [
                "K. J. Choi"
            ],
            [
                "P\u00e1draig Harrington"
            ],
            [
                "Stewart Cink"
            ],
            [
                "Tiger Woods"
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What are the distinct creation years of the departments managed by a secretary born in state 'Alabama'?",
        "cypher_query": "MATCH (T1:Department)-[T2:Management]-(T3:Head)\nWHERE T3.born_state='Alabama'\nRETURN DISTINCT T1.Creation",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN DISTINCT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3",
                "born_state",
                "Creation"
            ],
            "Token_Name_Label": [
                "Department",
                "Management",
                "Head"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "'Alabama'"
        },
        "answers": [
            [
                1903
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What are the names of the states where at least 3 heads were born?",
        "cypher_query": "MATCH (h:Head)\nWITH h.born_state AS born_state, count(*) AS count\nWHERE count >=3\nRETURN born_state",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "AS",
                "WHERE",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "h",
                "born_state",
                "count"
            ],
            "Token_Name_Label": "Head",
            "Token_Operator": [
                ".",
                "*",
                ">="
            ],
            "Token_Name_Function": "count",
            "Token_Literal_Number_Integer": "3"
        },
        "answers": [
            [
                "California"
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "In which year were most departments established?",
        "cypher_query": "MATCH (d:Department)\nWITH d.Creation AS Creation, count(d.Creation) AS count\nRETURN Creation\nORDER BY count DESC\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "AS",
                "RETURN",
                "ORDER BY",
                "DESC",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "d",
                "Creation",
                "count"
            ],
            "Token_Name_Label": "Department",
            "Token_Operator": ".",
            "Token_Name_Function": "count",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                1789
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "Show the name and number of employees for the departments managed by heads whose temporary acting value is 'Yes'?",
        "cypher_query": "MATCH (T1:Department)-[T2:Management]-()\nWHERE T2.temporary_acting='Yes'\nRETURN T1.Name,T1.Num_Employees",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "temporary_acting",
                "Num_Employees"
            ],
            "Token_Name_Label": [
                "Department",
                "Management"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "'Yes'"
        },
        "answers": [
            [
                "Homeland Security",
                208000.0
            ],
            [
                "Treasury",
                115897.0
            ],
            [
                "Treasury",
                115897.0
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "How many acting statuses are there?",
        "cypher_query": "MATCH ()-[m:Management]-()\nWITH DISTINCT m.temporary_acting AS temporary_acting\nRETURN count(temporary_acting)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH DISTINCT",
                "AS",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ")-[",
                ":",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "m",
                "temporary_acting"
            ],
            "Token_Name_Label": "Management",
            "Token_Operator": ".",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                2
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "How many departments are led by heads who are not mentioned?",
        "cypher_query": "MATCH (d:Department)\nWHERE NOT (d:Department)-[:Management]-()\nRETURN count(*)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ")-[",
                "]-("
            ],
            "Token_Name_Variable": "d",
            "Token_Name_Label": [
                "Department",
                "Management"
            ],
            "Token_Operator": [
                "NOT",
                "*"
            ],
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                11
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What are the distinct ages of the heads who are acting?",
        "cypher_query": "MATCH ()-[T2:Management]-(T1:Head)\nWHERE T2.temporary_acting='Yes'\nRETURN DISTINCT T1.age",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN DISTINCT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ")-[",
                ":",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T2",
                "T1",
                "temporary_acting",
                "age"
            ],
            "Token_Name_Label": [
                "Management",
                "Head"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "'Yes'"
        },
        "answers": [
            [
                52.0
            ],
            [
                53.0
            ],
            [
                69.0
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "Which department has more than 1 head at a time? List the id, name and the number of heads.",
        "cypher_query": "MATCH ()-[T2:Management]-(T1:Department)\nWITH T1.Department_ID AS Department_ID, T1.Name AS Name, count(*) AS count\nWHERE count >1\nRETURN Department_ID,Name,count",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "AS",
                "Name",
                "WHERE",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ")-[",
                ":",
                "]-(",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "T2",
                "T1",
                "Department_ID",
                "count"
            ],
            "Token_Name_Label": [
                "Management",
                "Department"
            ],
            "Token_Operator": [
                ".",
                "*",
                ">"
            ],
            "Token_Name_Function": "count",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                2,
                "Treasury",
                2
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "Which head's name has the substring 'Ha'? List the id and name.",
        "cypher_query": "MATCH (h:Head)\nWHERE h.name =~'.*Ha.*'\nRETURN h.head_ID,h.name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "h",
                "head_ID"
            ],
            "Token_Name_Label": "Head",
            "Token_Operator": [
                ".",
                "=~"
            ],
            "Token_Literal_String": "'.*Ha.*'"
        },
        "answers": [
            [
                4,
                "Dudley Hart"
            ],
            [
                9,
                "P\u00e1draig Harrington"
            ]
        ]
    }
][
    {
        "db_id": "department_management",
        "question": "How many heads of the departments are older than 56 ?",
        "cypher_query": "MATCH (h:Head)\nWHERE h.age>56\nRETURN count(*)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "h",
                "age"
            ],
            "Token_Name_Label": "Head",
            "Token_Operator": [
                ".",
                ">",
                "*"
            ],
            "Token_Literal_Number_Integer": "56",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                5
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "List the name, born state and age of the heads of departments ordered by age.",
        "cypher_query": "MATCH (h:Head)\nRETURN h.name,h.born_state,h.age\nORDER BY h.age",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "h",
                "born_state",
                "age"
            ],
            "Token_Name_Label": "Head",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Billy Mayfair",
                "California",
                69.0
            ],
            [
                "Dudley Hart",
                "California",
                52.0
            ],
            [
                "Franklin Langham",
                "Connecticut",
                67.0
            ],
            [
                "Jeff Maggert",
                "Delaware",
                53.0
            ],
            [
                "K. J. Choi",
                "Alabama",
                69.0
            ],
            [
                "Nick Faldo",
                "California",
                56.0
            ],
            [
                "P\u00e1draig Harrington",
                "Connecticut",
                43.0
            ],
            [
                "Sergio Garc\u00eda",
                "California",
                68.0
            ],
            [
                "Stewart Cink",
                "Florida",
                50.0
            ],
            [
                "Tiger Woods",
                "Alabama",
                67.0
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "List the creation year, name and budget of each department.",
        "cypher_query": "MATCH (d:Department)\nRETURN d.Creation,d.Name,d.Budget_in_Billions",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "d",
                "Creation",
                "Budget_in_Billions"
            ],
            "Token_Name_Label": "Department",
            "Token_Operator": "."
        },
        "answers": [
            [
                1789,
                "State",
                9.96
            ],
            [
                1789,
                "Treasury",
                11.1
            ],
            [
                1849,
                "Interior",
                10.7
            ],
            [
                1870,
                "Justice",
                23.4
            ],
            [
                1889,
                "Agriculture",
                77.6
            ],
            [
                1903,
                "Commerce",
                6.2
            ],
            [
                1913,
                "Labor",
                59.7
            ],
            [
                1947,
                "Defense",
                439.3
            ],
            [
                1953,
                "Health and Human Services",
                543.2
            ],
            [
                1965,
                "Housing and Urban Development",
                46.2
            ],
            [
                1966,
                "Transportation",
                58.0
            ],
            [
                1977,
                "Energy",
                21.5
            ],
            [
                1979,
                "Education",
                62.8
            ],
            [
                1989,
                "Veterans Affairs",
                73.2
            ],
            [
                2002,
                "Homeland Security",
                44.6
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What are the maximum and minimum budget of the departments?",
        "cypher_query": "MATCH (d:Department)\nRETURN max(d.Budget_in_Billions),min(d.Budget_in_Billions)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "d",
                "Budget_in_Billions"
            ],
            "Token_Name_Label": "Department",
            "Token_Name_Function": [
                "max",
                "min"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                543.2,
                6.2
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What is the average number of employees of the departments whose rank is between 10 and 15?",
        "cypher_query": "MATCH (d:Department)\nWHERE 10<=d.Ranking<=15\nRETURN avg(d.Num_Employees)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "d",
                "Ranking",
                "Num_Employees"
            ],
            "Token_Name_Label": "Department",
            "Token_Literal_Number_Integer": [
                "10",
                "15"
            ],
            "Token_Operator": [
                "<=",
                "."
            ],
            "Token_Name_Function": "avg"
        },
        "answers": [
            [
                105468.16666666667
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What are the names of the heads who are born outside the California state?",
        "cypher_query": "MATCH (h:Head)\nWHERE h.born_state<>'California'\nRETURN h.name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN",
                "name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "h",
                "born_state"
            ],
            "Token_Name_Label": "Head",
            "Token_Operator": [
                ".",
                "<>"
            ],
            "Token_Literal_String": "'California'"
        },
        "answers": [
            [
                "Franklin Langham"
            ],
            [
                "Jeff Maggert"
            ],
            [
                "K. J. Choi"
            ],
            [
                "P\u00e1draig Harrington"
            ],
            [
                "Stewart Cink"
            ],
            [
                "Tiger Woods"
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What are the distinct creation years of the departments managed by a secretary born in state 'Alabama'?",
        "cypher_query": "MATCH (T1:Department)-[T2:Management]-(T3:Head)\nWHERE T3.born_state='Alabama'\nRETURN DISTINCT T1.Creation",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN DISTINCT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3",
                "born_state",
                "Creation"
            ],
            "Token_Name_Label": [
                "Department",
                "Management",
                "Head"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "'Alabama'"
        },
        "answers": [
            [
                1903
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What are the names of the states where at least 3 heads were born?",
        "cypher_query": "MATCH (h:Head)\nWITH count(*) AS count, h.born_state AS born_state\nWHERE count >=3\nRETURN born_state",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "AS",
                "WHERE",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "h",
                "count",
                "born_state"
            ],
            "Token_Name_Label": "Head",
            "Token_Name_Function": "count",
            "Token_Operator": [
                "*",
                ".",
                ">="
            ],
            "Token_Literal_Number_Integer": "3"
        },
        "answers": [
            [
                "California"
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "In which year were most departments established?",
        "cypher_query": "MATCH (d:Department)\nWITH count(d.Creation) AS count, d.Creation AS Creation\nRETURN Creation\nORDER BY count DESC\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "AS",
                "RETURN",
                "ORDER BY",
                "DESC",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "d",
                "Creation",
                "count"
            ],
            "Token_Name_Label": "Department",
            "Token_Name_Function": "count",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                1789
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "Show the name and number of employees for the departments managed by heads whose temporary acting value is 'Yes'?",
        "cypher_query": "MATCH (T1:Department)-[T2:Management]-()\nWHERE T2.temporary_acting='Yes'\nRETURN T1.Name,T1.Num_Employees",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "temporary_acting",
                "Num_Employees"
            ],
            "Token_Name_Label": [
                "Department",
                "Management"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "'Yes'"
        },
        "answers": [
            [
                "Homeland Security",
                208000.0
            ],
            [
                "Treasury",
                115897.0
            ],
            [
                "Treasury",
                115897.0
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "How many acting statuses are there?",
        "cypher_query": "MATCH ()-[m:Management]-()\nWITH DISTINCT m.temporary_acting AS temporary_acting\nRETURN count(temporary_acting)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH DISTINCT",
                "AS",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ")-[",
                ":",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "m",
                "temporary_acting"
            ],
            "Token_Name_Label": "Management",
            "Token_Operator": ".",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                2
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "How many departments are led by heads who are not mentioned?",
        "cypher_query": "MATCH (d:Department)\nWHERE NOT (d:Department)-[:Management]-()\nRETURN count(*)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ")-[",
                "]-("
            ],
            "Token_Name_Variable": "d",
            "Token_Name_Label": [
                "Department",
                "Management"
            ],
            "Token_Operator": [
                "NOT",
                "*"
            ],
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                11
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What are the distinct ages of the heads who are acting?",
        "cypher_query": "MATCH ()-[T2:Management]-(T1:Head)\nWHERE T2.temporary_acting='Yes'\nRETURN DISTINCT T1.age",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN DISTINCT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ")-[",
                ":",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T2",
                "T1",
                "temporary_acting",
                "age"
            ],
            "Token_Name_Label": [
                "Management",
                "Head"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "'Yes'"
        },
        "answers": [
            [
                52.0
            ],
            [
                53.0
            ],
            [
                69.0
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "Which department has more than 1 head at a time? List the id, name and the number of heads.",
        "cypher_query": "MATCH ()-[T2:Management]-(T1:Department)\nWITH T1.Name AS Name, count(*) AS count, T1.Department_ID AS Department_ID\nWHERE count >1\nRETURN Department_ID,Name,count",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "Name",
                "AS",
                "WHERE",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ")-[",
                ":",
                "]-(",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "T2",
                "T1",
                "count",
                "Department_ID"
            ],
            "Token_Name_Label": [
                "Management",
                "Department"
            ],
            "Token_Operator": [
                ".",
                "*",
                ">"
            ],
            "Token_Name_Function": "count",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                2,
                "Treasury",
                2
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "Which head's name has the substring 'Ha'? List the id and name.",
        "cypher_query": "MATCH (h:Head)\nWHERE h.name =~'.*Ha.*'\nRETURN h.head_ID,h.name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "h",
                "head_ID"
            ],
            "Token_Name_Label": "Head",
            "Token_Operator": [
                ".",
                "=~"
            ],
            "Token_Literal_String": "'.*Ha.*'"
        },
        "answers": [
            [
                4,
                "Dudley Hart"
            ],
            [
                9,
                "P\u00e1draig Harrington"
            ]
        ]
    }
][
    {
        "db_id": "department_management",
        "question": "How many heads of the departments are older than 56 ?",
        "cypher_query": "MATCH (h:Head)\nWHERE h.age>56\nRETURN count(*)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "h",
                "age"
            ],
            "Token_Name_Label": "Head",
            "Token_Operator": [
                ".",
                ">",
                "*"
            ],
            "Token_Literal_Number_Integer": "56",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                0
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "List the name, born state and age of the heads of departments ordered by age.",
        "cypher_query": "MATCH (h:Head)\nRETURN h.name,h.born_state,h.age\nORDER BY h.age",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "h",
                "born_state",
                "age"
            ],
            "Token_Name_Label": "Head",
            "Token_Operator": "."
        },
        "answers": []
    },
    {
        "db_id": "department_management",
        "question": "List the creation year, name and budget of each department.",
        "cypher_query": "MATCH (d:Department)\nRETURN d.Creation,d.Name,d.Budget_in_Billions",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "d",
                "Creation",
                "Budget_in_Billions"
            ],
            "Token_Name_Label": "Department",
            "Token_Operator": "."
        },
        "answers": []
    },
    {
        "db_id": "department_management",
        "question": "What are the maximum and minimum budget of the departments?",
        "cypher_query": "MATCH (d:Department)\nRETURN max(d.Budget_in_Billions),min(d.Budget_in_Billions)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "d",
                "Budget_in_Billions"
            ],
            "Token_Name_Label": "Department",
            "Token_Name_Function": [
                "max",
                "min"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                null,
                null
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What is the average number of employees of the departments whose rank is between 10 and 15?",
        "cypher_query": "MATCH (d:Department)\nWHERE 10<=d.Ranking<=15\nRETURN avg(d.Num_Employees)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "d",
                "Ranking",
                "Num_Employees"
            ],
            "Token_Name_Label": "Department",
            "Token_Literal_Number_Integer": [
                "10",
                "15"
            ],
            "Token_Operator": [
                "<=",
                "."
            ],
            "Token_Name_Function": "avg"
        },
        "answers": [
            [
                null
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What are the names of the heads who are born outside the California state?",
        "cypher_query": "MATCH (h:Head)\nWHERE h.born_state<>'California'\nRETURN h.name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN",
                "name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "h",
                "born_state"
            ],
            "Token_Name_Label": "Head",
            "Token_Operator": [
                ".",
                "<>"
            ],
            "Token_Literal_String": "'California'"
        },
        "answers": []
    },
    {
        "db_id": "department_management",
        "question": "What are the distinct creation years of the departments managed by a secretary born in state 'Alabama'?",
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Management)-[]-(T3:Head)\nWHERE T3.born_state='Alabama'\nRETURN DISTINCT T1.Creation",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN DISTINCT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3",
                "born_state",
                "Creation"
            ],
            "Token_Name_Label": [
                "Department",
                "Management",
                "Head"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "'Alabama'"
        },
        "answers": []
    },
    {
        "db_id": "department_management",
        "question": "What are the names of the states where at least 3 heads were born?",
        "cypher_query": "MATCH (h:Head)\nWITH count(*) AS count, h.born_state AS born_state\nWHERE count >=3\nRETURN born_state",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "AS",
                "WHERE",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "h",
                "count",
                "born_state"
            ],
            "Token_Name_Label": "Head",
            "Token_Name_Function": "count",
            "Token_Operator": [
                "*",
                ".",
                ">="
            ],
            "Token_Literal_Number_Integer": "3"
        },
        "answers": []
    },
    {
        "db_id": "department_management",
        "question": "In which year were most departments established?",
        "cypher_query": "MATCH (d:Department)\nWITH d.Creation AS Creation, count(d.Creation) AS count\nRETURN Creation\nORDER BY count DESC\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "AS",
                "RETURN",
                "ORDER BY",
                "DESC",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "d",
                "Creation",
                "count"
            ],
            "Token_Name_Label": "Department",
            "Token_Operator": ".",
            "Token_Name_Function": "count",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": []
    },
    {
        "db_id": "department_management",
        "question": "Show the name and number of employees for the departments managed by heads whose temporary acting value is 'Yes'?",
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Management)\nWHERE T2.temporary_acting='Yes'\nRETURN T1.Name,T1.Num_Employees",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "temporary_acting",
                "Num_Employees"
            ],
            "Token_Name_Label": [
                "Department",
                "Management"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "'Yes'"
        },
        "answers": []
    },
    {
        "db_id": "department_management",
        "question": "How many acting statuses are there?",
        "cypher_query": "MATCH (m:Management)\nWITH DISTINCT m.temporary_acting AS temporary_acting\nRETURN count(temporary_acting)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH DISTINCT",
                "AS",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "m",
                "temporary_acting"
            ],
            "Token_Name_Label": "Management",
            "Token_Operator": ".",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                0
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What are the distinct ages of the heads who are acting?",
        "cypher_query": "MATCH (T2:Management)-[]-(T1:Head)\nWHERE T2.temporary_acting='Yes'\nRETURN DISTINCT T1.age",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN DISTINCT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T2",
                "T1",
                "temporary_acting",
                "age"
            ],
            "Token_Name_Label": [
                "Management",
                "Head"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "'Yes'"
        },
        "answers": []
    },
    {
        "db_id": "department_management",
        "question": "Which department has more than 1 head at a time? List the id, name and the number of heads.",
        "cypher_query": "MATCH (T2:Management)-[]-(T1:Department)\nWITH T1.Department_ID AS Department_ID, count(*) AS count, T1.Name AS Name\nWHERE count >1\nRETURN Department_ID,Name,count",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "AS",
                "Name",
                "WHERE",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "T2",
                "T1",
                "Department_ID",
                "count"
            ],
            "Token_Name_Label": [
                "Management",
                "Department"
            ],
            "Token_Operator": [
                ".",
                "*",
                ">"
            ],
            "Token_Name_Function": "count",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": []
    },
    {
        "db_id": "department_management",
        "question": "Which head's name has the substring 'Ha'? List the id and name.",
        "cypher_query": "MATCH (h:Head)\nWHERE h.name =~'.*Ha.*'\nRETURN h.head_ID,h.name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "h",
                "head_ID"
            ],
            "Token_Name_Label": "Head",
            "Token_Operator": [
                ".",
                "=~"
            ],
            "Token_Literal_String": "'.*Ha.*'"
        },
        "answers": []
    }
][
    {
        "db_id": "department_management",
        "question": "How many heads of the departments are older than 56 ?",
        "cypher_query": "MATCH (h:head)\nWHERE h.age>56\nRETURN count(*)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "h",
                "age"
            ],
            "Token_Name_Label": "head",
            "Token_Operator": [
                ".",
                ">",
                "*"
            ],
            "Token_Literal_Number_Integer": "56",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                5
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "List the name, born state and age of the heads of departments ordered by age.",
        "cypher_query": "MATCH (h:head)\nRETURN h.name,h.born_state,h.age\nORDER BY h.age",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "h",
                "born_state",
                "age"
            ],
            "Token_Name_Label": "head",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Billy Mayfair",
                "California",
                69.0
            ],
            [
                "Dudley Hart",
                "California",
                52.0
            ],
            [
                "Franklin Langham",
                "Connecticut",
                67.0
            ],
            [
                "Jeff Maggert",
                "Delaware",
                53.0
            ],
            [
                "K. J. Choi",
                "Alabama",
                69.0
            ],
            [
                "Nick Faldo",
                "California",
                56.0
            ],
            [
                "P\u00e1draig Harrington",
                "Connecticut",
                43.0
            ],
            [
                "Sergio Garc\u00eda",
                "California",
                68.0
            ],
            [
                "Stewart Cink",
                "Florida",
                50.0
            ],
            [
                "Tiger Woods",
                "Alabama",
                67.0
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "List the creation year, name and budget of each department.",
        "cypher_query": "MATCH (d:department)\nRETURN d.Creation,d.Name,d.Budget_in_Billions",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "d",
                "Creation",
                "Budget_in_Billions"
            ],
            "Token_Name_Label": "department",
            "Token_Operator": "."
        },
        "answers": [
            [
                "1789",
                "State",
                9.96
            ],
            [
                "1789",
                "Treasury",
                11.1
            ],
            [
                "1849",
                "Interior",
                10.7
            ],
            [
                "1870",
                "Justice",
                23.4
            ],
            [
                "1889",
                "Agriculture",
                77.6
            ],
            [
                "1903",
                "Commerce",
                6.2
            ],
            [
                "1913",
                "Labor",
                59.7
            ],
            [
                "1947",
                "Defense",
                439.3
            ],
            [
                "1953",
                "Health and Human Services",
                543.2
            ],
            [
                "1965",
                "Housing and Urban Development",
                46.2
            ],
            [
                "1966",
                "Transportation",
                58.0
            ],
            [
                "1977",
                "Energy",
                21.5
            ],
            [
                "1979",
                "Education",
                62.8
            ],
            [
                "1989",
                "Veterans Affairs",
                73.2
            ],
            [
                "2002",
                "Homeland Security",
                44.6
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What are the maximum and minimum budget of the departments?",
        "cypher_query": "MATCH (d:department)\nRETURN max(d.Budget_in_Billions),min(d.Budget_in_Billions)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "d",
                "Budget_in_Billions"
            ],
            "Token_Name_Label": "department",
            "Token_Name_Function": [
                "max",
                "min"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                543.2,
                6.2
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What is the average number of employees of the departments whose rank is between 10 and 15?",
        "cypher_query": "MATCH (d:department)\nWHERE 10<=d.Ranking<=15\nRETURN avg(d.Num_Employees)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "d",
                "Ranking",
                "Num_Employees"
            ],
            "Token_Name_Label": "department",
            "Token_Literal_Number_Integer": [
                "10",
                "15"
            ],
            "Token_Operator": [
                "<=",
                "."
            ],
            "Token_Name_Function": "avg"
        },
        "answers": [
            [
                105468.16666666667
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What are the names of the heads who are born outside the California state?",
        "cypher_query": "MATCH (h:head)\nWHERE h.born_state<>'California'\nRETURN h.name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN",
                "name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "h",
                "born_state"
            ],
            "Token_Name_Label": "head",
            "Token_Operator": [
                ".",
                "<>"
            ],
            "Token_Literal_String": "'California'"
        },
        "answers": [
            [
                "Franklin Langham"
            ],
            [
                "Jeff Maggert"
            ],
            [
                "K. J. Choi"
            ],
            [
                "P\u00e1draig Harrington"
            ],
            [
                "Stewart Cink"
            ],
            [
                "Tiger Woods"
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What are the names of the states where at least 3 heads were born?",
        "cypher_query": "MATCH (h:head)\nWITH h.born_state AS born_state, count(*) AS count\nWHERE count >=3\nRETURN born_state",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "AS",
                "WHERE",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "h",
                "born_state",
                "count"
            ],
            "Token_Name_Label": "head",
            "Token_Operator": [
                ".",
                "*",
                ">="
            ],
            "Token_Name_Function": "count",
            "Token_Literal_Number_Integer": "3"
        },
        "answers": [
            [
                "California"
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "In which year were most departments established?",
        "cypher_query": "MATCH (d:department)\nWITH count(d.Creation) AS count, d.Creation AS Creation\nRETURN Creation\nORDER BY count DESC\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "AS",
                "RETURN",
                "ORDER BY",
                "DESC",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "d",
                "Creation",
                "count"
            ],
            "Token_Name_Label": "department",
            "Token_Name_Function": "count",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                "1789"
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "How many acting statuses are there?",
        "cypher_query": "MATCH (m:management)\nWITH DISTINCT m.temporary_acting AS temporary_acting\nRETURN count(temporary_acting)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH DISTINCT",
                "AS",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "m",
                "temporary_acting"
            ],
            "Token_Name_Label": "management",
            "Token_Operator": ".",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                0
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "Which head's name has the substring 'Ha'? List the id and name.",
        "cypher_query": "MATCH (h:head)\nWHERE h.name =~'.*Ha.*'\nRETURN h.head_ID,h.name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "h",
                "head_ID"
            ],
            "Token_Name_Label": "head",
            "Token_Operator": [
                ".",
                "=~"
            ],
            "Token_Literal_String": "'.*Ha.*'"
        },
        "answers": [
            [
                4,
                "Dudley Hart"
            ],
            [
                9,
                "P\u00e1draig Harrington"
            ]
        ]
    }
][
    {
        "db_id": "department_management",
        "question": "How many heads of the departments are older than 56 ?",
        "cypher_query": "MATCH (h:head)\nWHERE h.age>56\nRETURN count(*)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "h",
                "age"
            ],
            "Token_Name_Label": "head",
            "Token_Operator": [
                ".",
                ">",
                "*"
            ],
            "Token_Literal_Number_Integer": "56",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                5
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "List the name, born state and age of the heads of departments ordered by age.",
        "cypher_query": "MATCH (h:head)\nRETURN h.name,h.born_state,h.age\nORDER BY h.age",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "h",
                "born_state",
                "age"
            ],
            "Token_Name_Label": "head",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Billy Mayfair",
                "California",
                69.0
            ],
            [
                "Dudley Hart",
                "California",
                52.0
            ],
            [
                "Franklin Langham",
                "Connecticut",
                67.0
            ],
            [
                "Jeff Maggert",
                "Delaware",
                53.0
            ],
            [
                "K. J. Choi",
                "Alabama",
                69.0
            ],
            [
                "Nick Faldo",
                "California",
                56.0
            ],
            [
                "P\u00e1draig Harrington",
                "Connecticut",
                43.0
            ],
            [
                "Sergio Garc\u00eda",
                "California",
                68.0
            ],
            [
                "Stewart Cink",
                "Florida",
                50.0
            ],
            [
                "Tiger Woods",
                "Alabama",
                67.0
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "List the creation year, name and budget of each department.",
        "cypher_query": "MATCH (d:department)\nRETURN d.Creation,d.Name,d.Budget_in_Billions",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "d",
                "Creation",
                "Budget_in_Billions"
            ],
            "Token_Name_Label": "department",
            "Token_Operator": "."
        },
        "answers": [
            [
                "1789",
                "State",
                9.96
            ],
            [
                "1789",
                "Treasury",
                11.1
            ],
            [
                "1849",
                "Interior",
                10.7
            ],
            [
                "1870",
                "Justice",
                23.4
            ],
            [
                "1889",
                "Agriculture",
                77.6
            ],
            [
                "1903",
                "Commerce",
                6.2
            ],
            [
                "1913",
                "Labor",
                59.7
            ],
            [
                "1947",
                "Defense",
                439.3
            ],
            [
                "1953",
                "Health and Human Services",
                543.2
            ],
            [
                "1965",
                "Housing and Urban Development",
                46.2
            ],
            [
                "1966",
                "Transportation",
                58.0
            ],
            [
                "1977",
                "Energy",
                21.5
            ],
            [
                "1979",
                "Education",
                62.8
            ],
            [
                "1989",
                "Veterans Affairs",
                73.2
            ],
            [
                "2002",
                "Homeland Security",
                44.6
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What are the maximum and minimum budget of the departments?",
        "cypher_query": "MATCH (d:department)\nRETURN max(d.Budget_in_Billions),min(d.Budget_in_Billions)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "d",
                "Budget_in_Billions"
            ],
            "Token_Name_Label": "department",
            "Token_Name_Function": [
                "max",
                "min"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                543.2,
                6.2
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What is the average number of employees of the departments whose rank is between 10 and 15?",
        "cypher_query": "MATCH (d:department)\nWHERE 10<=d.Ranking<=15\nRETURN avg(d.Num_Employees)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "d",
                "Ranking",
                "Num_Employees"
            ],
            "Token_Name_Label": "department",
            "Token_Literal_Number_Integer": [
                "10",
                "15"
            ],
            "Token_Operator": [
                "<=",
                "."
            ],
            "Token_Name_Function": "avg"
        },
        "answers": [
            [
                105468.16666666667
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What are the names of the heads who are born outside the California state?",
        "cypher_query": "MATCH (h:head)\nWHERE h.born_state<>'California'\nRETURN h.name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN",
                "name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "h",
                "born_state"
            ],
            "Token_Name_Label": "head",
            "Token_Operator": [
                ".",
                "<>"
            ],
            "Token_Literal_String": "'California'"
        },
        "answers": [
            [
                "Franklin Langham"
            ],
            [
                "Jeff Maggert"
            ],
            [
                "K. J. Choi"
            ],
            [
                "P\u00e1draig Harrington"
            ],
            [
                "Stewart Cink"
            ],
            [
                "Tiger Woods"
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What are the names of the states where at least 3 heads were born?",
        "cypher_query": "MATCH (h:head)\nWITH count(*) AS count, h.born_state AS born_state\nWHERE count >=3\nRETURN born_state",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "AS",
                "WHERE",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "h",
                "count",
                "born_state"
            ],
            "Token_Name_Label": "head",
            "Token_Name_Function": "count",
            "Token_Operator": [
                "*",
                ".",
                ">="
            ],
            "Token_Literal_Number_Integer": "3"
        },
        "answers": [
            [
                "California"
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "In which year were most departments established?",
        "cypher_query": "MATCH (d:department)\nWITH count(d.Creation) AS count, d.Creation AS Creation\nRETURN Creation\nORDER BY count DESC\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "AS",
                "RETURN",
                "ORDER BY",
                "DESC",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "d",
                "Creation",
                "count"
            ],
            "Token_Name_Label": "department",
            "Token_Name_Function": "count",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                "1789"
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "How many acting statuses are there?",
        "cypher_query": "MATCH (m:management)\nWITH DISTINCT m.temporary_acting AS temporary_acting\nRETURN count(temporary_acting)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH DISTINCT",
                "AS",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "m",
                "temporary_acting"
            ],
            "Token_Name_Label": "management",
            "Token_Operator": ".",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                0
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "Which head's name has the substring 'Ha'? List the id and name.",
        "cypher_query": "MATCH (h:head)\nWHERE h.name =~'.*Ha.*'\nRETURN h.head_ID,h.name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "h",
                "head_ID"
            ],
            "Token_Name_Label": "head",
            "Token_Operator": [
                ".",
                "=~"
            ],
            "Token_Literal_String": "'.*Ha.*'"
        },
        "answers": [
            [
                4,
                "Dudley Hart"
            ],
            [
                9,
                "P\u00e1draig Harrington"
            ]
        ]
    }
][
    {
        "db_id": "department_management",
        "question": "How many heads of the departments are older than 56 ?",
        "cypher_query": "MATCH (h:head)\nWHERE h.age>56\nRETURN count(*)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "h",
                "age"
            ],
            "Token_Name_Label": "head",
            "Token_Operator": [
                ".",
                ">",
                "*"
            ],
            "Token_Literal_Number_Integer": "56",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                5
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "List the name, born state and age of the heads of departments ordered by age.",
        "cypher_query": "MATCH (h:head)\nRETURN h.name,h.born_state,h.age\nORDER BY h.age",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "h",
                "born_state",
                "age"
            ],
            "Token_Name_Label": "head",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Billy Mayfair",
                "California",
                69.0
            ],
            [
                "Dudley Hart",
                "California",
                52.0
            ],
            [
                "Franklin Langham",
                "Connecticut",
                67.0
            ],
            [
                "Jeff Maggert",
                "Delaware",
                53.0
            ],
            [
                "K. J. Choi",
                "Alabama",
                69.0
            ],
            [
                "Nick Faldo",
                "California",
                56.0
            ],
            [
                "P\u00e1draig Harrington",
                "Connecticut",
                43.0
            ],
            [
                "Sergio Garc\u00eda",
                "California",
                68.0
            ],
            [
                "Stewart Cink",
                "Florida",
                50.0
            ],
            [
                "Tiger Woods",
                "Alabama",
                67.0
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "List the creation year, name and budget of each department.",
        "cypher_query": "MATCH (d:department)\nRETURN d.Creation,d.Name,d.Budget_in_Billions",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "d",
                "Creation",
                "Budget_in_Billions"
            ],
            "Token_Name_Label": "department",
            "Token_Operator": "."
        },
        "answers": [
            [
                "1789",
                "State",
                9.96
            ],
            [
                "1789",
                "Treasury",
                11.1
            ],
            [
                "1849",
                "Interior",
                10.7
            ],
            [
                "1870",
                "Justice",
                23.4
            ],
            [
                "1889",
                "Agriculture",
                77.6
            ],
            [
                "1903",
                "Commerce",
                6.2
            ],
            [
                "1913",
                "Labor",
                59.7
            ],
            [
                "1947",
                "Defense",
                439.3
            ],
            [
                "1953",
                "Health and Human Services",
                543.2
            ],
            [
                "1965",
                "Housing and Urban Development",
                46.2
            ],
            [
                "1966",
                "Transportation",
                58.0
            ],
            [
                "1977",
                "Energy",
                21.5
            ],
            [
                "1979",
                "Education",
                62.8
            ],
            [
                "1989",
                "Veterans Affairs",
                73.2
            ],
            [
                "2002",
                "Homeland Security",
                44.6
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What are the maximum and minimum budget of the departments?",
        "cypher_query": "MATCH (d:department)\nRETURN max(d.Budget_in_Billions),min(d.Budget_in_Billions)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "d",
                "Budget_in_Billions"
            ],
            "Token_Name_Label": "department",
            "Token_Name_Function": [
                "max",
                "min"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                543.2,
                6.2
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What is the average number of employees of the departments whose rank is between 10 and 15?",
        "cypher_query": "MATCH (d:department)\nWHERE 10<=d.Ranking<=15\nRETURN avg(d.Num_Employees)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "d",
                "Ranking",
                "Num_Employees"
            ],
            "Token_Name_Label": "department",
            "Token_Literal_Number_Integer": [
                "10",
                "15"
            ],
            "Token_Operator": [
                "<=",
                "."
            ],
            "Token_Name_Function": "avg"
        },
        "answers": [
            [
                105468.16666666667
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What are the names of the heads who are born outside the California state?",
        "cypher_query": "MATCH (h:head)\nWHERE h.born_state<>'California'\nRETURN h.name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN",
                "name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "h",
                "born_state"
            ],
            "Token_Name_Label": "head",
            "Token_Operator": [
                ".",
                "<>"
            ],
            "Token_Literal_String": "'California'"
        },
        "answers": [
            [
                "Franklin Langham"
            ],
            [
                "Jeff Maggert"
            ],
            [
                "K. J. Choi"
            ],
            [
                "P\u00e1draig Harrington"
            ],
            [
                "Stewart Cink"
            ],
            [
                "Tiger Woods"
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What are the names of the states where at least 3 heads were born?",
        "cypher_query": "MATCH (h:head)\nWITH h.born_state AS born_state, count(*) AS count\nWHERE count >=3\nRETURN born_state",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "AS",
                "WHERE",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "h",
                "born_state",
                "count"
            ],
            "Token_Name_Label": "head",
            "Token_Operator": [
                ".",
                "*",
                ">="
            ],
            "Token_Name_Function": "count",
            "Token_Literal_Number_Integer": "3"
        },
        "answers": [
            [
                "California"
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "In which year were most departments established?",
        "cypher_query": "MATCH (d:department)\nWITH count(d.Creation) AS count, d.Creation AS Creation\nRETURN Creation\nORDER BY count DESC\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "AS",
                "RETURN",
                "ORDER BY",
                "DESC",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "d",
                "Creation",
                "count"
            ],
            "Token_Name_Label": "department",
            "Token_Name_Function": "count",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                "1789"
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "How many acting statuses are there?",
        "cypher_query": "MATCH (m:management)\nWITH DISTINCT m.temporary_acting AS temporary_acting\nRETURN count(temporary_acting)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH DISTINCT",
                "AS",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "m",
                "temporary_acting"
            ],
            "Token_Name_Label": "management",
            "Token_Operator": ".",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                0
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "Which head's name has the substring 'Ha'? List the id and name.",
        "cypher_query": "MATCH (h:head)\nWHERE h.name =~'.*Ha.*'\nRETURN h.head_ID,h.name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "h",
                "head_ID"
            ],
            "Token_Name_Label": "head",
            "Token_Operator": [
                ".",
                "=~"
            ],
            "Token_Literal_String": "'.*Ha.*'"
        },
        "answers": [
            [
                4,
                "Dudley Hart"
            ],
            [
                9,
                "P\u00e1draig Harrington"
            ]
        ]
    }
][
    {
        "db_id": "department_management",
        "question": "How many heads of the departments are older than 56 ?",
        "cypher_query": "MATCH (h:head)\nWHERE h.age>56\nRETURN count(*)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "h",
                "age"
            ],
            "Token_Name_Label": "head",
            "Token_Operator": [
                ".",
                ">",
                "*"
            ],
            "Token_Literal_Number_Integer": "56",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                5
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "List the name, born state and age of the heads of departments ordered by age.",
        "cypher_query": "MATCH (h:head)\nRETURN h.name,h.born_state,h.age\nORDER BY h.age",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "h",
                "born_state",
                "age"
            ],
            "Token_Name_Label": "head",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Billy Mayfair",
                "California",
                69.0
            ],
            [
                "Dudley Hart",
                "California",
                52.0
            ],
            [
                "Franklin Langham",
                "Connecticut",
                67.0
            ],
            [
                "Jeff Maggert",
                "Delaware",
                53.0
            ],
            [
                "K. J. Choi",
                "Alabama",
                69.0
            ],
            [
                "Nick Faldo",
                "California",
                56.0
            ],
            [
                "P\u00e1draig Harrington",
                "Connecticut",
                43.0
            ],
            [
                "Sergio Garc\u00eda",
                "California",
                68.0
            ],
            [
                "Stewart Cink",
                "Florida",
                50.0
            ],
            [
                "Tiger Woods",
                "Alabama",
                67.0
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "List the creation year, name and budget of each department.",
        "cypher_query": "MATCH (d:department)\nRETURN d.Creation,d.Name,d.Budget_in_Billions",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "d",
                "Creation",
                "Budget_in_Billions"
            ],
            "Token_Name_Label": "department",
            "Token_Operator": "."
        },
        "answers": [
            [
                "1789",
                "State",
                9.96
            ],
            [
                "1789",
                "Treasury",
                11.1
            ],
            [
                "1849",
                "Interior",
                10.7
            ],
            [
                "1870",
                "Justice",
                23.4
            ],
            [
                "1889",
                "Agriculture",
                77.6
            ],
            [
                "1903",
                "Commerce",
                6.2
            ],
            [
                "1913",
                "Labor",
                59.7
            ],
            [
                "1947",
                "Defense",
                439.3
            ],
            [
                "1953",
                "Health and Human Services",
                543.2
            ],
            [
                "1965",
                "Housing and Urban Development",
                46.2
            ],
            [
                "1966",
                "Transportation",
                58.0
            ],
            [
                "1977",
                "Energy",
                21.5
            ],
            [
                "1979",
                "Education",
                62.8
            ],
            [
                "1989",
                "Veterans Affairs",
                73.2
            ],
            [
                "2002",
                "Homeland Security",
                44.6
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What are the maximum and minimum budget of the departments?",
        "cypher_query": "MATCH (d:department)\nRETURN max(d.Budget_in_Billions),min(d.Budget_in_Billions)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "d",
                "Budget_in_Billions"
            ],
            "Token_Name_Label": "department",
            "Token_Name_Function": [
                "max",
                "min"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                543.2,
                6.2
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What is the average number of employees of the departments whose rank is between 10 and 15?",
        "cypher_query": "MATCH (d:department)\nWHERE 10<=d.Ranking<=15\nRETURN avg(d.Num_Employees)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "d",
                "Ranking",
                "Num_Employees"
            ],
            "Token_Name_Label": "department",
            "Token_Literal_Number_Integer": [
                "10",
                "15"
            ],
            "Token_Operator": [
                "<=",
                "."
            ],
            "Token_Name_Function": "avg"
        },
        "answers": [
            [
                105468.16666666667
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What are the names of the heads who are born outside the California state?",
        "cypher_query": "MATCH (h:head)\nWHERE h.born_state<>'California'\nRETURN h.name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN",
                "name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "h",
                "born_state"
            ],
            "Token_Name_Label": "head",
            "Token_Operator": [
                ".",
                "<>"
            ],
            "Token_Literal_String": "'California'"
        },
        "answers": [
            [
                "Franklin Langham"
            ],
            [
                "Jeff Maggert"
            ],
            [
                "K. J. Choi"
            ],
            [
                "P\u00e1draig Harrington"
            ],
            [
                "Stewart Cink"
            ],
            [
                "Tiger Woods"
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What are the names of the states where at least 3 heads were born?",
        "cypher_query": "MATCH (h:head)\nWITH count(*) AS count, h.born_state AS born_state\nWHERE count >=3\nRETURN born_state",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "AS",
                "WHERE",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "h",
                "count",
                "born_state"
            ],
            "Token_Name_Label": "head",
            "Token_Name_Function": "count",
            "Token_Operator": [
                "*",
                ".",
                ">="
            ],
            "Token_Literal_Number_Integer": "3"
        },
        "answers": [
            [
                "California"
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "In which year were most departments established?",
        "cypher_query": "MATCH (d:department)\nWITH count(d.Creation) AS count, d.Creation AS Creation\nRETURN Creation\nORDER BY count DESC\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "AS",
                "RETURN",
                "ORDER BY",
                "DESC",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "d",
                "Creation",
                "count"
            ],
            "Token_Name_Label": "department",
            "Token_Name_Function": "count",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                "1789"
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "How many acting statuses are there?",
        "cypher_query": "MATCH (m:management)\nWITH DISTINCT m.temporary_acting AS temporary_acting\nRETURN count(temporary_acting)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH DISTINCT",
                "AS",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "m",
                "temporary_acting"
            ],
            "Token_Name_Label": "management",
            "Token_Operator": ".",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                0
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "Which head's name has the substring 'Ha'? List the id and name.",
        "cypher_query": "MATCH (h:head)\nWHERE h.name =~'.*Ha.*'\nRETURN h.head_ID,h.name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "h",
                "head_ID"
            ],
            "Token_Name_Label": "head",
            "Token_Operator": [
                ".",
                "=~"
            ],
            "Token_Literal_String": "'.*Ha.*'"
        },
        "answers": [
            [
                4,
                "Dudley Hart"
            ],
            [
                9,
                "P\u00e1draig Harrington"
            ]
        ]
    }
][
    {
        "db_id": "department_management",
        "question": "How many heads of the departments are older than 56 ?",
        "cypher_query": "MATCH (h:head)\nWHERE h.age>56\nRETURN count(*)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "h",
                "age"
            ],
            "Token_Name_Label": "head",
            "Token_Operator": [
                ".",
                ">",
                "*"
            ],
            "Token_Literal_Number_Integer": "56",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                5
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "List the name, born state and age of the heads of departments ordered by age.",
        "cypher_query": "MATCH (h:head)\nRETURN h.name,h.born_state,h.age\nORDER BY h.age",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "h",
                "born_state",
                "age"
            ],
            "Token_Name_Label": "head",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Billy Mayfair",
                "California",
                69.0
            ],
            [
                "Dudley Hart",
                "California",
                52.0
            ],
            [
                "Franklin Langham",
                "Connecticut",
                67.0
            ],
            [
                "Jeff Maggert",
                "Delaware",
                53.0
            ],
            [
                "K. J. Choi",
                "Alabama",
                69.0
            ],
            [
                "Nick Faldo",
                "California",
                56.0
            ],
            [
                "P\u00e1draig Harrington",
                "Connecticut",
                43.0
            ],
            [
                "Sergio Garc\u00eda",
                "California",
                68.0
            ],
            [
                "Stewart Cink",
                "Florida",
                50.0
            ],
            [
                "Tiger Woods",
                "Alabama",
                67.0
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "List the creation year, name and budget of each department.",
        "cypher_query": "MATCH (d:department)\nRETURN d.Creation,d.Name,d.Budget_in_Billions",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "d",
                "Creation",
                "Budget_in_Billions"
            ],
            "Token_Name_Label": "department",
            "Token_Operator": "."
        },
        "answers": [
            [
                "1789",
                "State",
                9.96
            ],
            [
                "1789",
                "Treasury",
                11.1
            ],
            [
                "1849",
                "Interior",
                10.7
            ],
            [
                "1870",
                "Justice",
                23.4
            ],
            [
                "1889",
                "Agriculture",
                77.6
            ],
            [
                "1903",
                "Commerce",
                6.2
            ],
            [
                "1913",
                "Labor",
                59.7
            ],
            [
                "1947",
                "Defense",
                439.3
            ],
            [
                "1953",
                "Health and Human Services",
                543.2
            ],
            [
                "1965",
                "Housing and Urban Development",
                46.2
            ],
            [
                "1966",
                "Transportation",
                58.0
            ],
            [
                "1977",
                "Energy",
                21.5
            ],
            [
                "1979",
                "Education",
                62.8
            ],
            [
                "1989",
                "Veterans Affairs",
                73.2
            ],
            [
                "2002",
                "Homeland Security",
                44.6
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What are the maximum and minimum budget of the departments?",
        "cypher_query": "MATCH (d:department)\nRETURN max(d.Budget_in_Billions),min(d.Budget_in_Billions)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "d",
                "Budget_in_Billions"
            ],
            "Token_Name_Label": "department",
            "Token_Name_Function": [
                "max",
                "min"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                543.2,
                6.2
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What is the average number of employees of the departments whose rank is between 10 and 15?",
        "cypher_query": "MATCH (d:department)\nWHERE 10<=d.Ranking<=15\nRETURN avg(d.Num_Employees)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "d",
                "Ranking",
                "Num_Employees"
            ],
            "Token_Name_Label": "department",
            "Token_Literal_Number_Integer": [
                "10",
                "15"
            ],
            "Token_Operator": [
                "<=",
                "."
            ],
            "Token_Name_Function": "avg"
        },
        "answers": [
            [
                105468.16666666667
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What are the names of the heads who are born outside the California state?",
        "cypher_query": "MATCH (h:head)\nWHERE h.born_state<>'California'\nRETURN h.name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN",
                "name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "h",
                "born_state"
            ],
            "Token_Name_Label": "head",
            "Token_Operator": [
                ".",
                "<>"
            ],
            "Token_Literal_String": "'California'"
        },
        "answers": [
            [
                "Franklin Langham"
            ],
            [
                "Jeff Maggert"
            ],
            [
                "K. J. Choi"
            ],
            [
                "P\u00e1draig Harrington"
            ],
            [
                "Stewart Cink"
            ],
            [
                "Tiger Woods"
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What are the names of the states where at least 3 heads were born?",
        "cypher_query": "MATCH (h:head)\nWITH h.born_state AS born_state, count(*) AS count\nWHERE count >=3\nRETURN born_state",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "AS",
                "WHERE",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "h",
                "born_state",
                "count"
            ],
            "Token_Name_Label": "head",
            "Token_Operator": [
                ".",
                "*",
                ">="
            ],
            "Token_Name_Function": "count",
            "Token_Literal_Number_Integer": "3"
        },
        "answers": [
            [
                "California"
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "In which year were most departments established?",
        "cypher_query": "MATCH (d:department)\nWITH d.Creation AS Creation, count(d.Creation) AS count\nRETURN Creation\nORDER BY count DESC\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "AS",
                "RETURN",
                "ORDER BY",
                "DESC",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "d",
                "Creation",
                "count"
            ],
            "Token_Name_Label": "department",
            "Token_Operator": ".",
            "Token_Name_Function": "count",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                "1789"
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "How many acting statuses are there?",
        "cypher_query": "MATCH (m:management)\nWITH DISTINCT m.temporary_acting AS temporary_acting\nRETURN count(temporary_acting)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH DISTINCT",
                "AS",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "m",
                "temporary_acting"
            ],
            "Token_Name_Label": "management",
            "Token_Operator": ".",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                0
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "Which head's name has the substring 'Ha'? List the id and name.",
        "cypher_query": "MATCH (h:head)\nWHERE h.name =~'.*Ha.*'\nRETURN h.head_ID,h.name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "h",
                "head_ID"
            ],
            "Token_Name_Label": "head",
            "Token_Operator": [
                ".",
                "=~"
            ],
            "Token_Literal_String": "'.*Ha.*'"
        },
        "answers": [
            [
                4,
                "Dudley Hart"
            ],
            [
                9,
                "P\u00e1draig Harrington"
            ]
        ]
    }
][
    {
        "db_id": "department_management",
        "question": "How many heads of the departments are older than 56 ?",
        "cypher_query": "MATCH (h:head)\nWHERE h.age>56\nRETURN count(*)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "h",
                "age"
            ],
            "Token_Name_Label": "head",
            "Token_Operator": [
                ".",
                ">",
                "*"
            ],
            "Token_Literal_Number_Integer": "56",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                5
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "List the name, born state and age of the heads of departments ordered by age.",
        "cypher_query": "MATCH (h:head)\nRETURN h.name,h.born_state,h.age\nORDER BY h.age",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "h",
                "born_state",
                "age"
            ],
            "Token_Name_Label": "head",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Billy Mayfair",
                "California",
                69.0
            ],
            [
                "Dudley Hart",
                "California",
                52.0
            ],
            [
                "Franklin Langham",
                "Connecticut",
                67.0
            ],
            [
                "Jeff Maggert",
                "Delaware",
                53.0
            ],
            [
                "K. J. Choi",
                "Alabama",
                69.0
            ],
            [
                "Nick Faldo",
                "California",
                56.0
            ],
            [
                "P\u00e1draig Harrington",
                "Connecticut",
                43.0
            ],
            [
                "Sergio Garc\u00eda",
                "California",
                68.0
            ],
            [
                "Stewart Cink",
                "Florida",
                50.0
            ],
            [
                "Tiger Woods",
                "Alabama",
                67.0
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "List the creation year, name and budget of each department.",
        "cypher_query": "MATCH (d:department)\nRETURN d.Creation,d.Name,d.Budget_in_Billions",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "d",
                "Creation",
                "Budget_in_Billions"
            ],
            "Token_Name_Label": "department",
            "Token_Operator": "."
        },
        "answers": [
            [
                "1789",
                "State",
                9.96
            ],
            [
                "1789",
                "Treasury",
                11.1
            ],
            [
                "1849",
                "Interior",
                10.7
            ],
            [
                "1870",
                "Justice",
                23.4
            ],
            [
                "1889",
                "Agriculture",
                77.6
            ],
            [
                "1903",
                "Commerce",
                6.2
            ],
            [
                "1913",
                "Labor",
                59.7
            ],
            [
                "1947",
                "Defense",
                439.3
            ],
            [
                "1953",
                "Health and Human Services",
                543.2
            ],
            [
                "1965",
                "Housing and Urban Development",
                46.2
            ],
            [
                "1966",
                "Transportation",
                58.0
            ],
            [
                "1977",
                "Energy",
                21.5
            ],
            [
                "1979",
                "Education",
                62.8
            ],
            [
                "1989",
                "Veterans Affairs",
                73.2
            ],
            [
                "2002",
                "Homeland Security",
                44.6
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What are the maximum and minimum budget of the departments?",
        "cypher_query": "MATCH (d:department)\nRETURN max(d.Budget_in_Billions),min(d.Budget_in_Billions)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "d",
                "Budget_in_Billions"
            ],
            "Token_Name_Label": "department",
            "Token_Name_Function": [
                "max",
                "min"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                543.2,
                6.2
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What is the average number of employees of the departments whose rank is between 10 and 15?",
        "cypher_query": "MATCH (d:department)\nWHERE 10<=d.Ranking<=15\nRETURN avg(d.Num_Employees)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "d",
                "Ranking",
                "Num_Employees"
            ],
            "Token_Name_Label": "department",
            "Token_Literal_Number_Integer": [
                "10",
                "15"
            ],
            "Token_Operator": [
                "<=",
                "."
            ],
            "Token_Name_Function": "avg"
        },
        "answers": [
            [
                105468.16666666667
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What are the names of the heads who are born outside the California state?",
        "cypher_query": "MATCH (h:head)\nWHERE h.born_state<>'California'\nRETURN h.name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN",
                "name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "h",
                "born_state"
            ],
            "Token_Name_Label": "head",
            "Token_Operator": [
                ".",
                "<>"
            ],
            "Token_Literal_String": "'California'"
        },
        "answers": [
            [
                "Franklin Langham"
            ],
            [
                "Jeff Maggert"
            ],
            [
                "K. J. Choi"
            ],
            [
                "P\u00e1draig Harrington"
            ],
            [
                "Stewart Cink"
            ],
            [
                "Tiger Woods"
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What are the names of the states where at least 3 heads were born?",
        "cypher_query": "MATCH (h:head)\nWITH h.born_state AS born_state, count(*) AS count\nWHERE count >=3\nRETURN born_state",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "AS",
                "WHERE",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "h",
                "born_state",
                "count"
            ],
            "Token_Name_Label": "head",
            "Token_Operator": [
                ".",
                "*",
                ">="
            ],
            "Token_Name_Function": "count",
            "Token_Literal_Number_Integer": "3"
        },
        "answers": [
            [
                "California"
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "In which year were most departments established?",
        "cypher_query": "MATCH (d:department)\nWITH count(d.Creation) AS count, d.Creation AS Creation\nRETURN Creation\nORDER BY count DESC\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "AS",
                "RETURN",
                "ORDER BY",
                "DESC",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "d",
                "Creation",
                "count"
            ],
            "Token_Name_Label": "department",
            "Token_Name_Function": "count",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                "1789"
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "How many acting statuses are there?",
        "cypher_query": "MATCH (m:management)\nWITH DISTINCT m.temporary_acting AS temporary_acting\nRETURN count(temporary_acting)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH DISTINCT",
                "AS",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "m",
                "temporary_acting"
            ],
            "Token_Name_Label": "management",
            "Token_Operator": ".",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                0
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "Which head's name has the substring 'Ha'? List the id and name.",
        "cypher_query": "MATCH (h:head)\nWHERE h.name =~'.*Ha.*'\nRETURN h.head_ID,h.name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "h",
                "head_ID"
            ],
            "Token_Name_Label": "head",
            "Token_Operator": [
                ".",
                "=~"
            ],
            "Token_Literal_String": "'.*Ha.*'"
        },
        "answers": [
            [
                4,
                "Dudley Hart"
            ],
            [
                9,
                "P\u00e1draig Harrington"
            ]
        ]
    }
][
    {
        "db_id": "department_management",
        "question": "How many heads of the departments are older than 56 ?",
        "cypher_query": "MATCH (h:head)\nWHERE h.age>56\nRETURN count(*)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "h",
                "age"
            ],
            "Token_Name_Label": "head",
            "Token_Operator": [
                ".",
                ">",
                "*"
            ],
            "Token_Literal_Number_Integer": "56",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                5
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "List the name, born state and age of the heads of departments ordered by age.",
        "cypher_query": "MATCH (h:head)\nRETURN h.name,h.born_state,h.age\nORDER BY h.age",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "h",
                "born_state",
                "age"
            ],
            "Token_Name_Label": "head",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Billy Mayfair",
                "California",
                69.0
            ],
            [
                "Dudley Hart",
                "California",
                52.0
            ],
            [
                "Franklin Langham",
                "Connecticut",
                67.0
            ],
            [
                "Jeff Maggert",
                "Delaware",
                53.0
            ],
            [
                "K. J. Choi",
                "Alabama",
                69.0
            ],
            [
                "Nick Faldo",
                "California",
                56.0
            ],
            [
                "P\u00e1draig Harrington",
                "Connecticut",
                43.0
            ],
            [
                "Sergio Garc\u00eda",
                "California",
                68.0
            ],
            [
                "Stewart Cink",
                "Florida",
                50.0
            ],
            [
                "Tiger Woods",
                "Alabama",
                67.0
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "List the creation year, name and budget of each department.",
        "cypher_query": "MATCH (d:department)\nRETURN d.Creation,d.Name,d.Budget_in_Billions",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "d",
                "Creation",
                "Budget_in_Billions"
            ],
            "Token_Name_Label": "department",
            "Token_Operator": "."
        },
        "answers": [
            [
                "1789",
                "State",
                9.96
            ],
            [
                "1789",
                "Treasury",
                11.1
            ],
            [
                "1849",
                "Interior",
                10.7
            ],
            [
                "1870",
                "Justice",
                23.4
            ],
            [
                "1889",
                "Agriculture",
                77.6
            ],
            [
                "1903",
                "Commerce",
                6.2
            ],
            [
                "1913",
                "Labor",
                59.7
            ],
            [
                "1947",
                "Defense",
                439.3
            ],
            [
                "1953",
                "Health and Human Services",
                543.2
            ],
            [
                "1965",
                "Housing and Urban Development",
                46.2
            ],
            [
                "1966",
                "Transportation",
                58.0
            ],
            [
                "1977",
                "Energy",
                21.5
            ],
            [
                "1979",
                "Education",
                62.8
            ],
            [
                "1989",
                "Veterans Affairs",
                73.2
            ],
            [
                "2002",
                "Homeland Security",
                44.6
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What are the maximum and minimum budget of the departments?",
        "cypher_query": "MATCH (d:department)\nRETURN max(d.Budget_in_Billions),min(d.Budget_in_Billions)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "d",
                "Budget_in_Billions"
            ],
            "Token_Name_Label": "department",
            "Token_Name_Function": [
                "max",
                "min"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                543.2,
                6.2
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What is the average number of employees of the departments whose rank is between 10 and 15?",
        "cypher_query": "MATCH (d:department)\nWHERE 10<=d.Ranking<=15\nRETURN avg(d.Num_Employees)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "d",
                "Ranking",
                "Num_Employees"
            ],
            "Token_Name_Label": "department",
            "Token_Literal_Number_Integer": [
                "10",
                "15"
            ],
            "Token_Operator": [
                "<=",
                "."
            ],
            "Token_Name_Function": "avg"
        },
        "answers": [
            [
                105468.16666666667
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What are the names of the heads who are born outside the California state?",
        "cypher_query": "MATCH (h:head)\nWHERE h.born_state<>'California'\nRETURN h.name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN",
                "name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "h",
                "born_state"
            ],
            "Token_Name_Label": "head",
            "Token_Operator": [
                ".",
                "<>"
            ],
            "Token_Literal_String": "'California'"
        },
        "answers": [
            [
                "Franklin Langham"
            ],
            [
                "Jeff Maggert"
            ],
            [
                "K. J. Choi"
            ],
            [
                "P\u00e1draig Harrington"
            ],
            [
                "Stewart Cink"
            ],
            [
                "Tiger Woods"
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What are the names of the states where at least 3 heads were born?",
        "cypher_query": "MATCH (h:head)\nWITH count(*) AS count, h.born_state AS born_state\nWHERE count >=3\nRETURN born_state",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "AS",
                "WHERE",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "h",
                "count",
                "born_state"
            ],
            "Token_Name_Label": "head",
            "Token_Name_Function": "count",
            "Token_Operator": [
                "*",
                ".",
                ">="
            ],
            "Token_Literal_Number_Integer": "3"
        },
        "answers": [
            [
                "California"
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "In which year were most departments established?",
        "cypher_query": "MATCH (d:department)\nWITH count(d.Creation) AS count, d.Creation AS Creation\nRETURN Creation\nORDER BY count DESC\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "AS",
                "RETURN",
                "ORDER BY",
                "DESC",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "d",
                "Creation",
                "count"
            ],
            "Token_Name_Label": "department",
            "Token_Name_Function": "count",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                "1789"
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "How many acting statuses are there?",
        "cypher_query": "MATCH (m:management)\nWITH DISTINCT m.temporary_acting AS temporary_acting\nRETURN count(temporary_acting)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH DISTINCT",
                "AS",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "m",
                "temporary_acting"
            ],
            "Token_Name_Label": "management",
            "Token_Operator": ".",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                0
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "Which head's name has the substring 'Ha'? List the id and name.",
        "cypher_query": "MATCH (h:head)\nWHERE h.name =~'.*Ha.*'\nRETURN h.head_ID,h.name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "h",
                "head_ID"
            ],
            "Token_Name_Label": "head",
            "Token_Operator": [
                ".",
                "=~"
            ],
            "Token_Literal_String": "'.*Ha.*'"
        },
        "answers": [
            [
                4,
                "Dudley Hart"
            ],
            [
                9,
                "P\u00e1draig Harrington"
            ]
        ]
    }
][
    {
        "db_id": "department_management",
        "question": "How many heads of the departments are older than 56 ?",
        "cypher_query": "MATCH (h:head)\nWHERE h.age>56\nRETURN count(*)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "h",
                "age"
            ],
            "Token_Name_Label": "head",
            "Token_Operator": [
                ".",
                ">",
                "*"
            ],
            "Token_Literal_Number_Integer": "56",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                5
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "List the name, born state and age of the heads of departments ordered by age.",
        "cypher_query": "MATCH (h:head)\nRETURN h.name,h.born_state,h.age\nORDER BY h.age",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "h",
                "born_state",
                "age"
            ],
            "Token_Name_Label": "head",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Billy Mayfair",
                "California",
                69.0
            ],
            [
                "Dudley Hart",
                "California",
                52.0
            ],
            [
                "Franklin Langham",
                "Connecticut",
                67.0
            ],
            [
                "Jeff Maggert",
                "Delaware",
                53.0
            ],
            [
                "K. J. Choi",
                "Alabama",
                69.0
            ],
            [
                "Nick Faldo",
                "California",
                56.0
            ],
            [
                "P\u00e1draig Harrington",
                "Connecticut",
                43.0
            ],
            [
                "Sergio Garc\u00eda",
                "California",
                68.0
            ],
            [
                "Stewart Cink",
                "Florida",
                50.0
            ],
            [
                "Tiger Woods",
                "Alabama",
                67.0
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "List the creation year, name and budget of each department.",
        "cypher_query": "MATCH (d:department)\nRETURN d.Creation,d.Name,d.Budget_in_Billions",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "d",
                "Creation",
                "Budget_in_Billions"
            ],
            "Token_Name_Label": "department",
            "Token_Operator": "."
        },
        "answers": [
            [
                "1789",
                "State",
                9.96
            ],
            [
                "1789",
                "Treasury",
                11.1
            ],
            [
                "1849",
                "Interior",
                10.7
            ],
            [
                "1870",
                "Justice",
                23.4
            ],
            [
                "1889",
                "Agriculture",
                77.6
            ],
            [
                "1903",
                "Commerce",
                6.2
            ],
            [
                "1913",
                "Labor",
                59.7
            ],
            [
                "1947",
                "Defense",
                439.3
            ],
            [
                "1953",
                "Health and Human Services",
                543.2
            ],
            [
                "1965",
                "Housing and Urban Development",
                46.2
            ],
            [
                "1966",
                "Transportation",
                58.0
            ],
            [
                "1977",
                "Energy",
                21.5
            ],
            [
                "1979",
                "Education",
                62.8
            ],
            [
                "1989",
                "Veterans Affairs",
                73.2
            ],
            [
                "2002",
                "Homeland Security",
                44.6
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What are the maximum and minimum budget of the departments?",
        "cypher_query": "MATCH (d:department)\nRETURN max(d.Budget_in_Billions),min(d.Budget_in_Billions)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "d",
                "Budget_in_Billions"
            ],
            "Token_Name_Label": "department",
            "Token_Name_Function": [
                "max",
                "min"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                543.2,
                6.2
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What is the average number of employees of the departments whose rank is between 10 and 15?",
        "cypher_query": "MATCH (d:department)\nWHERE 10<=d.Ranking<=15\nRETURN avg(d.Num_Employees)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "d",
                "Ranking",
                "Num_Employees"
            ],
            "Token_Name_Label": "department",
            "Token_Literal_Number_Integer": [
                "10",
                "15"
            ],
            "Token_Operator": [
                "<=",
                "."
            ],
            "Token_Name_Function": "avg"
        },
        "answers": [
            [
                105468.16666666667
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What are the names of the heads who are born outside the California state?",
        "cypher_query": "MATCH (h:head)\nWHERE h.born_state<>'California'\nRETURN h.name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN",
                "name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "h",
                "born_state"
            ],
            "Token_Name_Label": "head",
            "Token_Operator": [
                ".",
                "<>"
            ],
            "Token_Literal_String": "'California'"
        },
        "answers": [
            [
                "Franklin Langham"
            ],
            [
                "Jeff Maggert"
            ],
            [
                "K. J. Choi"
            ],
            [
                "P\u00e1draig Harrington"
            ],
            [
                "Stewart Cink"
            ],
            [
                "Tiger Woods"
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What are the names of the states where at least 3 heads were born?",
        "cypher_query": "MATCH (h:head)\nWITH h.born_state AS born_state, count(*) AS count\nWHERE count >=3\nRETURN born_state",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "AS",
                "WHERE",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "h",
                "born_state",
                "count"
            ],
            "Token_Name_Label": "head",
            "Token_Operator": [
                ".",
                "*",
                ">="
            ],
            "Token_Name_Function": "count",
            "Token_Literal_Number_Integer": "3"
        },
        "answers": [
            [
                "California"
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "In which year were most departments established?",
        "cypher_query": "MATCH (d:department)\nWITH count(d.Creation) AS count, d.Creation AS Creation\nRETURN Creation\nORDER BY count DESC\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "AS",
                "RETURN",
                "ORDER BY",
                "DESC",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "d",
                "Creation",
                "count"
            ],
            "Token_Name_Label": "department",
            "Token_Name_Function": "count",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                "1789"
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "How many acting statuses are there?",
        "cypher_query": "MATCH (m:management)\nWITH DISTINCT m.temporary_acting AS temporary_acting\nRETURN count(temporary_acting)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH DISTINCT",
                "AS",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "m",
                "temporary_acting"
            ],
            "Token_Name_Label": "management",
            "Token_Operator": ".",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                0
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "Which head's name has the substring 'Ha'? List the id and name.",
        "cypher_query": "MATCH (h:head)\nWHERE h.name =~'.*Ha.*'\nRETURN h.head_ID,h.name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "h",
                "head_ID"
            ],
            "Token_Name_Label": "head",
            "Token_Operator": [
                ".",
                "=~"
            ],
            "Token_Literal_String": "'.*Ha.*'"
        },
        "answers": [
            [
                4,
                "Dudley Hart"
            ],
            [
                9,
                "P\u00e1draig Harrington"
            ]
        ]
    }
][
    {
        "db_id": "department_management",
        "question": "How many heads of the departments are older than 56 ?",
        "cypher_query": "MATCH (h:head)\nWHERE h.age>56\nRETURN count(*)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "h",
                "age"
            ],
            "Token_Name_Label": "head",
            "Token_Operator": [
                ".",
                ">",
                "*"
            ],
            "Token_Literal_Number_Integer": "56",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                5
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "List the name, born state and age of the heads of departments ordered by age.",
        "cypher_query": "MATCH (h:head)\nRETURN h.name,h.born_state,h.age\nORDER BY h.age",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "h",
                "born_state",
                "age"
            ],
            "Token_Name_Label": "head",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Billy Mayfair",
                "California",
                69.0
            ],
            [
                "Dudley Hart",
                "California",
                52.0
            ],
            [
                "Franklin Langham",
                "Connecticut",
                67.0
            ],
            [
                "Jeff Maggert",
                "Delaware",
                53.0
            ],
            [
                "K. J. Choi",
                "Alabama",
                69.0
            ],
            [
                "Nick Faldo",
                "California",
                56.0
            ],
            [
                "P\u00e1draig Harrington",
                "Connecticut",
                43.0
            ],
            [
                "Sergio Garc\u00eda",
                "California",
                68.0
            ],
            [
                "Stewart Cink",
                "Florida",
                50.0
            ],
            [
                "Tiger Woods",
                "Alabama",
                67.0
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "List the creation year, name and budget of each department.",
        "cypher_query": "MATCH (d:department)\nRETURN d.Creation,d.Name,d.Budget_in_Billions",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "d",
                "Creation",
                "Budget_in_Billions"
            ],
            "Token_Name_Label": "department",
            "Token_Operator": "."
        },
        "answers": [
            [
                "1789",
                "State",
                9.96
            ],
            [
                "1789",
                "Treasury",
                11.1
            ],
            [
                "1849",
                "Interior",
                10.7
            ],
            [
                "1870",
                "Justice",
                23.4
            ],
            [
                "1889",
                "Agriculture",
                77.6
            ],
            [
                "1903",
                "Commerce",
                6.2
            ],
            [
                "1913",
                "Labor",
                59.7
            ],
            [
                "1947",
                "Defense",
                439.3
            ],
            [
                "1953",
                "Health and Human Services",
                543.2
            ],
            [
                "1965",
                "Housing and Urban Development",
                46.2
            ],
            [
                "1966",
                "Transportation",
                58.0
            ],
            [
                "1977",
                "Energy",
                21.5
            ],
            [
                "1979",
                "Education",
                62.8
            ],
            [
                "1989",
                "Veterans Affairs",
                73.2
            ],
            [
                "2002",
                "Homeland Security",
                44.6
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What are the maximum and minimum budget of the departments?",
        "cypher_query": "MATCH (d:department)\nRETURN max(d.Budget_in_Billions),min(d.Budget_in_Billions)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "d",
                "Budget_in_Billions"
            ],
            "Token_Name_Label": "department",
            "Token_Name_Function": [
                "max",
                "min"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                543.2,
                6.2
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What is the average number of employees of the departments whose rank is between 10 and 15?",
        "cypher_query": "MATCH (d:department)\nWHERE 10<=d.Ranking<=15\nRETURN avg(d.Num_Employees)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "d",
                "Ranking",
                "Num_Employees"
            ],
            "Token_Name_Label": "department",
            "Token_Literal_Number_Integer": [
                "10",
                "15"
            ],
            "Token_Operator": [
                "<=",
                "."
            ],
            "Token_Name_Function": "avg"
        },
        "answers": [
            [
                105468.16666666667
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What are the names of the heads who are born outside the California state?",
        "cypher_query": "MATCH (h:head)\nWHERE h.born_state<>'California'\nRETURN h.name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN",
                "name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "h",
                "born_state"
            ],
            "Token_Name_Label": "head",
            "Token_Operator": [
                ".",
                "<>"
            ],
            "Token_Literal_String": "'California'"
        },
        "answers": [
            [
                "Franklin Langham"
            ],
            [
                "Jeff Maggert"
            ],
            [
                "K. J. Choi"
            ],
            [
                "P\u00e1draig Harrington"
            ],
            [
                "Stewart Cink"
            ],
            [
                "Tiger Woods"
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What are the names of the states where at least 3 heads were born?",
        "cypher_query": "MATCH (h:head)\nWITH count(*) AS count, h.born_state AS born_state\nWHERE count >=3\nRETURN born_state",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "AS",
                "WHERE",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "h",
                "count",
                "born_state"
            ],
            "Token_Name_Label": "head",
            "Token_Name_Function": "count",
            "Token_Operator": [
                "*",
                ".",
                ">="
            ],
            "Token_Literal_Number_Integer": "3"
        },
        "answers": [
            [
                "California"
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "In which year were most departments established?",
        "cypher_query": "MATCH (d:department)\nWITH count(d.Creation) AS count, d.Creation AS Creation\nRETURN Creation\nORDER BY count DESC\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "AS",
                "RETURN",
                "ORDER BY",
                "DESC",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "d",
                "Creation",
                "count"
            ],
            "Token_Name_Label": "department",
            "Token_Name_Function": "count",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                "1789"
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "How many acting statuses are there?",
        "cypher_query": "MATCH (m:management)\nWITH DISTINCT m.temporary_acting AS temporary_acting\nRETURN count(temporary_acting)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH DISTINCT",
                "AS",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "m",
                "temporary_acting"
            ],
            "Token_Name_Label": "management",
            "Token_Operator": ".",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                0
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "Which head's name has the substring 'Ha'? List the id and name.",
        "cypher_query": "MATCH (h:head)\nWHERE h.name =~'.*Ha.*'\nRETURN h.head_ID,h.name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "h",
                "head_ID"
            ],
            "Token_Name_Label": "head",
            "Token_Operator": [
                ".",
                "=~"
            ],
            "Token_Literal_String": "'.*Ha.*'"
        },
        "answers": [
            [
                4,
                "Dudley Hart"
            ],
            [
                9,
                "P\u00e1draig Harrington"
            ]
        ]
    }
][
    {
        "db_id": "department_management",
        "question": "How many heads of the departments are older than 56 ?",
        "cypher_query": "MATCH (h:head)\nWHERE h.age>56\nRETURN count(*)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "h",
                "age"
            ],
            "Token_Name_Label": "head",
            "Token_Operator": [
                ".",
                ">",
                "*"
            ],
            "Token_Literal_Number_Integer": "56",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                5
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "List the name, born state and age of the heads of departments ordered by age.",
        "cypher_query": "MATCH (h:head)\nRETURN h.name,h.born_state,h.age\nORDER BY h.age",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "h",
                "born_state",
                "age"
            ],
            "Token_Name_Label": "head",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Billy Mayfair",
                "California",
                69.0
            ],
            [
                "Dudley Hart",
                "California",
                52.0
            ],
            [
                "Franklin Langham",
                "Connecticut",
                67.0
            ],
            [
                "Jeff Maggert",
                "Delaware",
                53.0
            ],
            [
                "K. J. Choi",
                "Alabama",
                69.0
            ],
            [
                "Nick Faldo",
                "California",
                56.0
            ],
            [
                "P\u00e1draig Harrington",
                "Connecticut",
                43.0
            ],
            [
                "Sergio Garc\u00eda",
                "California",
                68.0
            ],
            [
                "Stewart Cink",
                "Florida",
                50.0
            ],
            [
                "Tiger Woods",
                "Alabama",
                67.0
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "List the creation year, name and budget of each department.",
        "cypher_query": "MATCH (d:department)\nRETURN d.Creation,d.Name,d.Budget_in_Billions",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "d",
                "Creation",
                "Budget_in_Billions"
            ],
            "Token_Name_Label": "department",
            "Token_Operator": "."
        },
        "answers": [
            [
                "1789",
                "State",
                9.96
            ],
            [
                "1789",
                "Treasury",
                11.1
            ],
            [
                "1849",
                "Interior",
                10.7
            ],
            [
                "1870",
                "Justice",
                23.4
            ],
            [
                "1889",
                "Agriculture",
                77.6
            ],
            [
                "1903",
                "Commerce",
                6.2
            ],
            [
                "1913",
                "Labor",
                59.7
            ],
            [
                "1947",
                "Defense",
                439.3
            ],
            [
                "1953",
                "Health and Human Services",
                543.2
            ],
            [
                "1965",
                "Housing and Urban Development",
                46.2
            ],
            [
                "1966",
                "Transportation",
                58.0
            ],
            [
                "1977",
                "Energy",
                21.5
            ],
            [
                "1979",
                "Education",
                62.8
            ],
            [
                "1989",
                "Veterans Affairs",
                73.2
            ],
            [
                "2002",
                "Homeland Security",
                44.6
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What are the maximum and minimum budget of the departments?",
        "cypher_query": "MATCH (d:department)\nRETURN max(d.Budget_in_Billions),min(d.Budget_in_Billions)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "d",
                "Budget_in_Billions"
            ],
            "Token_Name_Label": "department",
            "Token_Name_Function": [
                "max",
                "min"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                543.2,
                6.2
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What is the average number of employees of the departments whose rank is between 10 and 15?",
        "cypher_query": "MATCH (d:department)\nWHERE 10<=d.Ranking<=15\nRETURN avg(d.Num_Employees)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "d",
                "Ranking",
                "Num_Employees"
            ],
            "Token_Name_Label": "department",
            "Token_Literal_Number_Integer": [
                "10",
                "15"
            ],
            "Token_Operator": [
                "<=",
                "."
            ],
            "Token_Name_Function": "avg"
        },
        "answers": [
            [
                105468.16666666667
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What are the names of the heads who are born outside the California state?",
        "cypher_query": "MATCH (h:head)\nWHERE h.born_state<>'California'\nRETURN h.name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN",
                "name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "h",
                "born_state"
            ],
            "Token_Name_Label": "head",
            "Token_Operator": [
                ".",
                "<>"
            ],
            "Token_Literal_String": "'California'"
        },
        "answers": [
            [
                "Franklin Langham"
            ],
            [
                "Jeff Maggert"
            ],
            [
                "K. J. Choi"
            ],
            [
                "P\u00e1draig Harrington"
            ],
            [
                "Stewart Cink"
            ],
            [
                "Tiger Woods"
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What are the names of the states where at least 3 heads were born?",
        "cypher_query": "MATCH (h:head)\nWITH h.born_state AS born_state, count(*) AS count\nWHERE count >=3\nRETURN born_state",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "AS",
                "WHERE",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "h",
                "born_state",
                "count"
            ],
            "Token_Name_Label": "head",
            "Token_Operator": [
                ".",
                "*",
                ">="
            ],
            "Token_Name_Function": "count",
            "Token_Literal_Number_Integer": "3"
        },
        "answers": [
            [
                "California"
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "In which year were most departments established?",
        "cypher_query": "MATCH (d:department)\nWITH d.Creation AS Creation, count(d.Creation) AS count\nRETURN Creation\nORDER BY count DESC\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "AS",
                "RETURN",
                "ORDER BY",
                "DESC",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "d",
                "Creation",
                "count"
            ],
            "Token_Name_Label": "department",
            "Token_Operator": ".",
            "Token_Name_Function": "count",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                "1789"
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "How many acting statuses are there?",
        "cypher_query": "MATCH (m:management)\nWITH DISTINCT m.temporary_acting AS temporary_acting\nRETURN count(temporary_acting)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH DISTINCT",
                "AS",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "m",
                "temporary_acting"
            ],
            "Token_Name_Label": "management",
            "Token_Operator": ".",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                0
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "Which head's name has the substring 'Ha'? List the id and name.",
        "cypher_query": "MATCH (h:head)\nWHERE h.name =~'.*Ha.*'\nRETURN h.head_ID,h.name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "h",
                "head_ID"
            ],
            "Token_Name_Label": "head",
            "Token_Operator": [
                ".",
                "=~"
            ],
            "Token_Literal_String": "'.*Ha.*'"
        },
        "answers": [
            [
                4,
                "Dudley Hart"
            ],
            [
                9,
                "P\u00e1draig Harrington"
            ]
        ]
    }
][
    {
        "db_id": "department_management",
        "question": "How many heads of the departments are older than 56 ?",
        "cypher_query": "MATCH (h:head)\nWHERE h.age>56\nRETURN count(*)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "h",
                "age"
            ],
            "Token_Name_Label": "head",
            "Token_Operator": [
                ".",
                ">",
                "*"
            ],
            "Token_Literal_Number_Integer": "56",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                5
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "List the name, born state and age of the heads of departments ordered by age.",
        "cypher_query": "MATCH (h:head)\nRETURN h.name,h.born_state,h.age\nORDER BY h.age",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "h",
                "born_state",
                "age"
            ],
            "Token_Name_Label": "head",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Billy Mayfair",
                "California",
                69.0
            ],
            [
                "Dudley Hart",
                "California",
                52.0
            ],
            [
                "Franklin Langham",
                "Connecticut",
                67.0
            ],
            [
                "Jeff Maggert",
                "Delaware",
                53.0
            ],
            [
                "K. J. Choi",
                "Alabama",
                69.0
            ],
            [
                "Nick Faldo",
                "California",
                56.0
            ],
            [
                "P\u00e1draig Harrington",
                "Connecticut",
                43.0
            ],
            [
                "Sergio Garc\u00eda",
                "California",
                68.0
            ],
            [
                "Stewart Cink",
                "Florida",
                50.0
            ],
            [
                "Tiger Woods",
                "Alabama",
                67.0
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "List the creation year, name and budget of each department.",
        "cypher_query": "MATCH (d:department)\nRETURN d.Creation,d.Name,d.Budget_in_Billions",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "d",
                "Creation",
                "Budget_in_Billions"
            ],
            "Token_Name_Label": "department",
            "Token_Operator": "."
        },
        "answers": [
            [
                "1789",
                "State",
                9.96
            ],
            [
                "1789",
                "Treasury",
                11.1
            ],
            [
                "1849",
                "Interior",
                10.7
            ],
            [
                "1870",
                "Justice",
                23.4
            ],
            [
                "1889",
                "Agriculture",
                77.6
            ],
            [
                "1903",
                "Commerce",
                6.2
            ],
            [
                "1913",
                "Labor",
                59.7
            ],
            [
                "1947",
                "Defense",
                439.3
            ],
            [
                "1953",
                "Health and Human Services",
                543.2
            ],
            [
                "1965",
                "Housing and Urban Development",
                46.2
            ],
            [
                "1966",
                "Transportation",
                58.0
            ],
            [
                "1977",
                "Energy",
                21.5
            ],
            [
                "1979",
                "Education",
                62.8
            ],
            [
                "1989",
                "Veterans Affairs",
                73.2
            ],
            [
                "2002",
                "Homeland Security",
                44.6
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What are the maximum and minimum budget of the departments?",
        "cypher_query": "MATCH (d:department)\nRETURN max(d.Budget_in_Billions),min(d.Budget_in_Billions)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "d",
                "Budget_in_Billions"
            ],
            "Token_Name_Label": "department",
            "Token_Name_Function": [
                "max",
                "min"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                543.2,
                6.2
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What is the average number of employees of the departments whose rank is between 10 and 15?",
        "cypher_query": "MATCH (d:department)\nWHERE 10<=d.Ranking<=15\nRETURN avg(d.Num_Employees)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "d",
                "Ranking",
                "Num_Employees"
            ],
            "Token_Name_Label": "department",
            "Token_Literal_Number_Integer": [
                "10",
                "15"
            ],
            "Token_Operator": [
                "<=",
                "."
            ],
            "Token_Name_Function": "avg"
        },
        "answers": [
            [
                105468.16666666667
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What are the names of the heads who are born outside the California state?",
        "cypher_query": "MATCH (h:head)\nWHERE h.born_state<>'California'\nRETURN h.name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN",
                "name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "h",
                "born_state"
            ],
            "Token_Name_Label": "head",
            "Token_Operator": [
                ".",
                "<>"
            ],
            "Token_Literal_String": "'California'"
        },
        "answers": [
            [
                "Franklin Langham"
            ],
            [
                "Jeff Maggert"
            ],
            [
                "K. J. Choi"
            ],
            [
                "P\u00e1draig Harrington"
            ],
            [
                "Stewart Cink"
            ],
            [
                "Tiger Woods"
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What are the names of the states where at least 3 heads were born?",
        "cypher_query": "MATCH (h:head)\nWITH h.born_state AS born_state, count(*) AS count\nWHERE count >=3\nRETURN born_state",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "AS",
                "WHERE",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "h",
                "born_state",
                "count"
            ],
            "Token_Name_Label": "head",
            "Token_Operator": [
                ".",
                "*",
                ">="
            ],
            "Token_Name_Function": "count",
            "Token_Literal_Number_Integer": "3"
        },
        "answers": [
            [
                "California"
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "In which year were most departments established?",
        "cypher_query": "MATCH (d:department)\nWITH d.Creation AS Creation, count(d.Creation) AS count\nRETURN Creation\nORDER BY count DESC\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "AS",
                "RETURN",
                "ORDER BY",
                "DESC",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "d",
                "Creation",
                "count"
            ],
            "Token_Name_Label": "department",
            "Token_Operator": ".",
            "Token_Name_Function": "count",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                "1789"
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "How many acting statuses are there?",
        "cypher_query": "MATCH (m:management)\nWITH DISTINCT m.temporary_acting AS temporary_acting\nRETURN count(temporary_acting)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH DISTINCT",
                "AS",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "m",
                "temporary_acting"
            ],
            "Token_Name_Label": "management",
            "Token_Operator": ".",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                0
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "Which head's name has the substring 'Ha'? List the id and name.",
        "cypher_query": "MATCH (h:head)\nWHERE h.name =~'.*Ha.*'\nRETURN h.head_ID,h.name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "h",
                "head_ID"
            ],
            "Token_Name_Label": "head",
            "Token_Operator": [
                ".",
                "=~"
            ],
            "Token_Literal_String": "'.*Ha.*'"
        },
        "answers": [
            [
                4,
                "Dudley Hart"
            ],
            [
                9,
                "P\u00e1draig Harrington"
            ]
        ]
    }
][
    {
        "db_id": "department_management",
        "question": "How many heads of the departments are older than 56 ?",
        "cypher_query": "MATCH (h:head)\nWHERE h.age>56\nRETURN count(*)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "h",
                "age"
            ],
            "Token_Name_Label": "head",
            "Token_Operator": [
                ".",
                ">",
                "*"
            ],
            "Token_Literal_Number_Integer": "56",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                5
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "List the name, born state and age of the heads of departments ordered by age.",
        "cypher_query": "MATCH (h:head)\nRETURN h.name,h.born_state,h.age\nORDER BY h.age",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "h",
                "born_state",
                "age"
            ],
            "Token_Name_Label": "head",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Billy Mayfair",
                "California",
                69.0
            ],
            [
                "Dudley Hart",
                "California",
                52.0
            ],
            [
                "Franklin Langham",
                "Connecticut",
                67.0
            ],
            [
                "Jeff Maggert",
                "Delaware",
                53.0
            ],
            [
                "K. J. Choi",
                "Alabama",
                69.0
            ],
            [
                "Nick Faldo",
                "California",
                56.0
            ],
            [
                "P\u00e1draig Harrington",
                "Connecticut",
                43.0
            ],
            [
                "Sergio Garc\u00eda",
                "California",
                68.0
            ],
            [
                "Stewart Cink",
                "Florida",
                50.0
            ],
            [
                "Tiger Woods",
                "Alabama",
                67.0
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "List the creation year, name and budget of each department.",
        "cypher_query": "MATCH (d:department)\nRETURN d.Creation,d.Name,d.Budget_in_Billions",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "d",
                "Creation",
                "Budget_in_Billions"
            ],
            "Token_Name_Label": "department",
            "Token_Operator": "."
        },
        "answers": [
            [
                "1789",
                "State",
                9.96
            ],
            [
                "1789",
                "Treasury",
                11.1
            ],
            [
                "1849",
                "Interior",
                10.7
            ],
            [
                "1870",
                "Justice",
                23.4
            ],
            [
                "1889",
                "Agriculture",
                77.6
            ],
            [
                "1903",
                "Commerce",
                6.2
            ],
            [
                "1913",
                "Labor",
                59.7
            ],
            [
                "1947",
                "Defense",
                439.3
            ],
            [
                "1953",
                "Health and Human Services",
                543.2
            ],
            [
                "1965",
                "Housing and Urban Development",
                46.2
            ],
            [
                "1966",
                "Transportation",
                58.0
            ],
            [
                "1977",
                "Energy",
                21.5
            ],
            [
                "1979",
                "Education",
                62.8
            ],
            [
                "1989",
                "Veterans Affairs",
                73.2
            ],
            [
                "2002",
                "Homeland Security",
                44.6
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What are the maximum and minimum budget of the departments?",
        "cypher_query": "MATCH (d:department)\nRETURN max(d.Budget_in_Billions),min(d.Budget_in_Billions)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "d",
                "Budget_in_Billions"
            ],
            "Token_Name_Label": "department",
            "Token_Name_Function": [
                "max",
                "min"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                543.2,
                6.2
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What is the average number of employees of the departments whose rank is between 10 and 15?",
        "cypher_query": "MATCH (d:department)\nWHERE 10<=d.Ranking<=15\nRETURN avg(d.Num_Employees)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "d",
                "Ranking",
                "Num_Employees"
            ],
            "Token_Name_Label": "department",
            "Token_Literal_Number_Integer": [
                "10",
                "15"
            ],
            "Token_Operator": [
                "<=",
                "."
            ],
            "Token_Name_Function": "avg"
        },
        "answers": [
            [
                105468.16666666667
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What are the names of the heads who are born outside the California state?",
        "cypher_query": "MATCH (h:head)\nWHERE h.born_state<>'California'\nRETURN h.name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN",
                "name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "h",
                "born_state"
            ],
            "Token_Name_Label": "head",
            "Token_Operator": [
                ".",
                "<>"
            ],
            "Token_Literal_String": "'California'"
        },
        "answers": [
            [
                "Franklin Langham"
            ],
            [
                "Jeff Maggert"
            ],
            [
                "K. J. Choi"
            ],
            [
                "P\u00e1draig Harrington"
            ],
            [
                "Stewart Cink"
            ],
            [
                "Tiger Woods"
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What are the names of the states where at least 3 heads were born?",
        "cypher_query": "MATCH (h:head)\nWITH h.born_state AS born_state, count(*) AS count\nWHERE count >=3\nRETURN born_state",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "AS",
                "WHERE",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "h",
                "born_state",
                "count"
            ],
            "Token_Name_Label": "head",
            "Token_Operator": [
                ".",
                "*",
                ">="
            ],
            "Token_Name_Function": "count",
            "Token_Literal_Number_Integer": "3"
        },
        "answers": [
            [
                "California"
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "In which year were most departments established?",
        "cypher_query": "MATCH (d:department)\nWITH d.Creation AS Creation, count(d.Creation) AS count\nRETURN Creation\nORDER BY count DESC\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "AS",
                "RETURN",
                "ORDER BY",
                "DESC",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "d",
                "Creation",
                "count"
            ],
            "Token_Name_Label": "department",
            "Token_Operator": ".",
            "Token_Name_Function": "count",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                "1789"
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "How many acting statuses are there?",
        "cypher_query": "MATCH (m:management)\nWITH DISTINCT m.temporary_acting AS temporary_acting\nRETURN count(temporary_acting)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH DISTINCT",
                "AS",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "m",
                "temporary_acting"
            ],
            "Token_Name_Label": "management",
            "Token_Operator": ".",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                0
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "Which head's name has the substring 'Ha'? List the id and name.",
        "cypher_query": "MATCH (h:head)\nWHERE h.name =~'.*Ha.*'\nRETURN h.head_ID,h.name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "h",
                "head_ID"
            ],
            "Token_Name_Label": "head",
            "Token_Operator": [
                ".",
                "=~"
            ],
            "Token_Literal_String": "'.*Ha.*'"
        },
        "answers": [
            [
                4,
                "Dudley Hart"
            ],
            [
                9,
                "P\u00e1draig Harrington"
            ]
        ]
    }
][
    {
        "db_id": "department_management",
        "question": "How many heads of the departments are older than 56 ?",
        "cypher_query": "MATCH (h:head)\nWHERE h.age>56\nRETURN count(*)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "h",
                "age"
            ],
            "Token_Name_Label": "head",
            "Token_Operator": [
                ".",
                ">",
                "*"
            ],
            "Token_Literal_Number_Integer": "56",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                5
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "List the name, born state and age of the heads of departments ordered by age.",
        "cypher_query": "MATCH (h:head)\nRETURN h.name,h.born_state,h.age\nORDER BY h.age",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "h",
                "born_state",
                "age"
            ],
            "Token_Name_Label": "head",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Billy Mayfair",
                "California",
                69.0
            ],
            [
                "Dudley Hart",
                "California",
                52.0
            ],
            [
                "Franklin Langham",
                "Connecticut",
                67.0
            ],
            [
                "Jeff Maggert",
                "Delaware",
                53.0
            ],
            [
                "K. J. Choi",
                "Alabama",
                69.0
            ],
            [
                "Nick Faldo",
                "California",
                56.0
            ],
            [
                "P\u00e1draig Harrington",
                "Connecticut",
                43.0
            ],
            [
                "Sergio Garc\u00eda",
                "California",
                68.0
            ],
            [
                "Stewart Cink",
                "Florida",
                50.0
            ],
            [
                "Tiger Woods",
                "Alabama",
                67.0
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "List the creation year, name and budget of each department.",
        "cypher_query": "MATCH (d:department)\nRETURN d.Creation,d.Name,d.Budget_in_Billions",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "d",
                "Creation",
                "Budget_in_Billions"
            ],
            "Token_Name_Label": "department",
            "Token_Operator": "."
        },
        "answers": [
            [
                "1789",
                "State",
                9.96
            ],
            [
                "1789",
                "Treasury",
                11.1
            ],
            [
                "1849",
                "Interior",
                10.7
            ],
            [
                "1870",
                "Justice",
                23.4
            ],
            [
                "1889",
                "Agriculture",
                77.6
            ],
            [
                "1903",
                "Commerce",
                6.2
            ],
            [
                "1913",
                "Labor",
                59.7
            ],
            [
                "1947",
                "Defense",
                439.3
            ],
            [
                "1953",
                "Health and Human Services",
                543.2
            ],
            [
                "1965",
                "Housing and Urban Development",
                46.2
            ],
            [
                "1966",
                "Transportation",
                58.0
            ],
            [
                "1977",
                "Energy",
                21.5
            ],
            [
                "1979",
                "Education",
                62.8
            ],
            [
                "1989",
                "Veterans Affairs",
                73.2
            ],
            [
                "2002",
                "Homeland Security",
                44.6
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What are the maximum and minimum budget of the departments?",
        "cypher_query": "MATCH (d:department)\nRETURN max(d.Budget_in_Billions),min(d.Budget_in_Billions)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "d",
                "Budget_in_Billions"
            ],
            "Token_Name_Label": "department",
            "Token_Name_Function": [
                "max",
                "min"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                543.2,
                6.2
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What is the average number of employees of the departments whose rank is between 10 and 15?",
        "cypher_query": "MATCH (d:department)\nWHERE 10<=d.Ranking<=15\nRETURN avg(d.Num_Employees)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "d",
                "Ranking",
                "Num_Employees"
            ],
            "Token_Name_Label": "department",
            "Token_Literal_Number_Integer": [
                "10",
                "15"
            ],
            "Token_Operator": [
                "<=",
                "."
            ],
            "Token_Name_Function": "avg"
        },
        "answers": [
            [
                105468.16666666667
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What are the names of the heads who are born outside the California state?",
        "cypher_query": "MATCH (h:head)\nWHERE h.born_state<>'California'\nRETURN h.name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN",
                "name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "h",
                "born_state"
            ],
            "Token_Name_Label": "head",
            "Token_Operator": [
                ".",
                "<>"
            ],
            "Token_Literal_String": "'California'"
        },
        "answers": [
            [
                "Franklin Langham"
            ],
            [
                "Jeff Maggert"
            ],
            [
                "K. J. Choi"
            ],
            [
                "P\u00e1draig Harrington"
            ],
            [
                "Stewart Cink"
            ],
            [
                "Tiger Woods"
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What are the names of the states where at least 3 heads were born?",
        "cypher_query": "MATCH (h:head)\nWITH h.born_state AS born_state, count(*) AS count\nWHERE count >=3\nRETURN born_state",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "AS",
                "WHERE",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "h",
                "born_state",
                "count"
            ],
            "Token_Name_Label": "head",
            "Token_Operator": [
                ".",
                "*",
                ">="
            ],
            "Token_Name_Function": "count",
            "Token_Literal_Number_Integer": "3"
        },
        "answers": [
            [
                "California"
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "In which year were most departments established?",
        "cypher_query": "MATCH (d:department)\nWITH d.Creation AS Creation, count(d.Creation) AS count\nRETURN Creation\nORDER BY count DESC\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "AS",
                "RETURN",
                "ORDER BY",
                "DESC",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "d",
                "Creation",
                "count"
            ],
            "Token_Name_Label": "department",
            "Token_Operator": ".",
            "Token_Name_Function": "count",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                "1789"
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "How many acting statuses are there?",
        "cypher_query": "MATCH (m:management)\nWITH DISTINCT m.temporary_acting AS temporary_acting\nRETURN count(temporary_acting)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH DISTINCT",
                "AS",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "m",
                "temporary_acting"
            ],
            "Token_Name_Label": "management",
            "Token_Operator": ".",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                0
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "Which head's name has the substring 'Ha'? List the id and name.",
        "cypher_query": "MATCH (h:head)\nWHERE h.name =~'.*Ha.*'\nRETURN h.head_ID,h.name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "h",
                "head_ID"
            ],
            "Token_Name_Label": "head",
            "Token_Operator": [
                ".",
                "=~"
            ],
            "Token_Literal_String": "'.*Ha.*'"
        },
        "answers": [
            [
                4,
                "Dudley Hart"
            ],
            [
                9,
                "P\u00e1draig Harrington"
            ]
        ]
    }
][
    {
        "db_id": "department_management",
        "question": "How many heads of the departments are older than 56 ?",
        "cypher_query": "MATCH (h:head)\nWHERE h.age>56\nRETURN count(*)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "h",
                "age"
            ],
            "Token_Name_Label": "head",
            "Token_Operator": [
                ".",
                ">",
                "*"
            ],
            "Token_Literal_Number_Integer": "56",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                5
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "List the name, born state and age of the heads of departments ordered by age.",
        "cypher_query": "MATCH (h:head)\nRETURN h.name,h.born_state,h.age\nORDER BY h.age",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "h",
                "born_state",
                "age"
            ],
            "Token_Name_Label": "head",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Billy Mayfair",
                "California",
                69.0
            ],
            [
                "Dudley Hart",
                "California",
                52.0
            ],
            [
                "Franklin Langham",
                "Connecticut",
                67.0
            ],
            [
                "Jeff Maggert",
                "Delaware",
                53.0
            ],
            [
                "K. J. Choi",
                "Alabama",
                69.0
            ],
            [
                "Nick Faldo",
                "California",
                56.0
            ],
            [
                "P\u00e1draig Harrington",
                "Connecticut",
                43.0
            ],
            [
                "Sergio Garc\u00eda",
                "California",
                68.0
            ],
            [
                "Stewart Cink",
                "Florida",
                50.0
            ],
            [
                "Tiger Woods",
                "Alabama",
                67.0
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "List the creation year, name and budget of each department.",
        "cypher_query": "MATCH (d:department)\nRETURN d.Creation,d.Name,d.Budget_in_Billions",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "d",
                "Creation",
                "Budget_in_Billions"
            ],
            "Token_Name_Label": "department",
            "Token_Operator": "."
        },
        "answers": [
            [
                "1789",
                "State",
                9.96
            ],
            [
                "1789",
                "Treasury",
                11.1
            ],
            [
                "1849",
                "Interior",
                10.7
            ],
            [
                "1870",
                "Justice",
                23.4
            ],
            [
                "1889",
                "Agriculture",
                77.6
            ],
            [
                "1903",
                "Commerce",
                6.2
            ],
            [
                "1913",
                "Labor",
                59.7
            ],
            [
                "1947",
                "Defense",
                439.3
            ],
            [
                "1953",
                "Health and Human Services",
                543.2
            ],
            [
                "1965",
                "Housing and Urban Development",
                46.2
            ],
            [
                "1966",
                "Transportation",
                58.0
            ],
            [
                "1977",
                "Energy",
                21.5
            ],
            [
                "1979",
                "Education",
                62.8
            ],
            [
                "1989",
                "Veterans Affairs",
                73.2
            ],
            [
                "2002",
                "Homeland Security",
                44.6
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What are the maximum and minimum budget of the departments?",
        "cypher_query": "MATCH (d:department)\nRETURN max(d.Budget_in_Billions),min(d.Budget_in_Billions)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "d",
                "Budget_in_Billions"
            ],
            "Token_Name_Label": "department",
            "Token_Name_Function": [
                "max",
                "min"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                543.2,
                6.2
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What is the average number of employees of the departments whose rank is between 10 and 15?",
        "cypher_query": "MATCH (d:department)\nWHERE 10<=d.Ranking<=15\nRETURN avg(d.Num_Employees)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "d",
                "Ranking",
                "Num_Employees"
            ],
            "Token_Name_Label": "department",
            "Token_Literal_Number_Integer": [
                "10",
                "15"
            ],
            "Token_Operator": [
                "<=",
                "."
            ],
            "Token_Name_Function": "avg"
        },
        "answers": [
            [
                105468.16666666667
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What are the names of the heads who are born outside the California state?",
        "cypher_query": "MATCH (h:head)\nWHERE h.born_state<>'California'\nRETURN h.name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN",
                "name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "h",
                "born_state"
            ],
            "Token_Name_Label": "head",
            "Token_Operator": [
                ".",
                "<>"
            ],
            "Token_Literal_String": "'California'"
        },
        "answers": [
            [
                "Franklin Langham"
            ],
            [
                "Jeff Maggert"
            ],
            [
                "K. J. Choi"
            ],
            [
                "P\u00e1draig Harrington"
            ],
            [
                "Stewart Cink"
            ],
            [
                "Tiger Woods"
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What are the names of the states where at least 3 heads were born?",
        "cypher_query": "MATCH (h:head)\nWITH count(*) AS count, h.born_state AS born_state\nWHERE count >=3\nRETURN born_state",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "AS",
                "WHERE",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "h",
                "count",
                "born_state"
            ],
            "Token_Name_Label": "head",
            "Token_Name_Function": "count",
            "Token_Operator": [
                "*",
                ".",
                ">="
            ],
            "Token_Literal_Number_Integer": "3"
        },
        "answers": [
            [
                "California"
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "In which year were most departments established?",
        "cypher_query": "MATCH (d:department)\nWITH count(d.Creation) AS count, d.Creation AS Creation\nRETURN Creation\nORDER BY count DESC\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "AS",
                "RETURN",
                "ORDER BY",
                "DESC",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "d",
                "Creation",
                "count"
            ],
            "Token_Name_Label": "department",
            "Token_Name_Function": "count",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                "1789"
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "How many acting statuses are there?",
        "cypher_query": "MATCH (m:management)\nWITH DISTINCT m.temporary_acting AS temporary_acting\nRETURN count(temporary_acting)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH DISTINCT",
                "AS",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "m",
                "temporary_acting"
            ],
            "Token_Name_Label": "management",
            "Token_Operator": ".",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                0
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "Which head's name has the substring 'Ha'? List the id and name.",
        "cypher_query": "MATCH (h:head)\nWHERE h.name =~'.*Ha.*'\nRETURN h.head_ID,h.name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "h",
                "head_ID"
            ],
            "Token_Name_Label": "head",
            "Token_Operator": [
                ".",
                "=~"
            ],
            "Token_Literal_String": "'.*Ha.*'"
        },
        "answers": [
            [
                4,
                "Dudley Hart"
            ],
            [
                9,
                "P\u00e1draig Harrington"
            ]
        ]
    }
][
    {
        "db_id": "department_management",
        "question": "How many heads of the departments are older than 56 ?",
        "cypher_query": "MATCH (h:head)\nWHERE h.age>56\nRETURN count(*)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "h",
                "age"
            ],
            "Token_Name_Label": "head",
            "Token_Operator": [
                ".",
                ">",
                "*"
            ],
            "Token_Literal_Number_Integer": "56",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                5
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "List the name, born state and age of the heads of departments ordered by age.",
        "cypher_query": "MATCH (h:head)\nRETURN h.name,h.born_state,h.age\nORDER BY h.age",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "h",
                "born_state",
                "age"
            ],
            "Token_Name_Label": "head",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Billy Mayfair",
                "California",
                69.0
            ],
            [
                "Dudley Hart",
                "California",
                52.0
            ],
            [
                "Franklin Langham",
                "Connecticut",
                67.0
            ],
            [
                "Jeff Maggert",
                "Delaware",
                53.0
            ],
            [
                "K. J. Choi",
                "Alabama",
                69.0
            ],
            [
                "Nick Faldo",
                "California",
                56.0
            ],
            [
                "P\u00e1draig Harrington",
                "Connecticut",
                43.0
            ],
            [
                "Sergio Garc\u00eda",
                "California",
                68.0
            ],
            [
                "Stewart Cink",
                "Florida",
                50.0
            ],
            [
                "Tiger Woods",
                "Alabama",
                67.0
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "List the creation year, name and budget of each department.",
        "cypher_query": "MATCH (d:department)\nRETURN d.Creation,d.Name,d.Budget_in_Billions",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "d",
                "Creation",
                "Budget_in_Billions"
            ],
            "Token_Name_Label": "department",
            "Token_Operator": "."
        },
        "answers": [
            [
                "1789",
                "State",
                9.96
            ],
            [
                "1789",
                "Treasury",
                11.1
            ],
            [
                "1849",
                "Interior",
                10.7
            ],
            [
                "1870",
                "Justice",
                23.4
            ],
            [
                "1889",
                "Agriculture",
                77.6
            ],
            [
                "1903",
                "Commerce",
                6.2
            ],
            [
                "1913",
                "Labor",
                59.7
            ],
            [
                "1947",
                "Defense",
                439.3
            ],
            [
                "1953",
                "Health and Human Services",
                543.2
            ],
            [
                "1965",
                "Housing and Urban Development",
                46.2
            ],
            [
                "1966",
                "Transportation",
                58.0
            ],
            [
                "1977",
                "Energy",
                21.5
            ],
            [
                "1979",
                "Education",
                62.8
            ],
            [
                "1989",
                "Veterans Affairs",
                73.2
            ],
            [
                "2002",
                "Homeland Security",
                44.6
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What are the maximum and minimum budget of the departments?",
        "cypher_query": "MATCH (d:department)\nRETURN max(d.Budget_in_Billions),min(d.Budget_in_Billions)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "d",
                "Budget_in_Billions"
            ],
            "Token_Name_Label": "department",
            "Token_Name_Function": [
                "max",
                "min"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                543.2,
                6.2
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What is the average number of employees of the departments whose rank is between 10 and 15?",
        "cypher_query": "MATCH (d:department)\nWHERE 10<=d.Ranking<=15\nRETURN avg(d.Num_Employees)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "d",
                "Ranking",
                "Num_Employees"
            ],
            "Token_Name_Label": "department",
            "Token_Literal_Number_Integer": [
                "10",
                "15"
            ],
            "Token_Operator": [
                "<=",
                "."
            ],
            "Token_Name_Function": "avg"
        },
        "answers": [
            [
                105468.16666666667
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What are the names of the heads who are born outside the California state?",
        "cypher_query": "MATCH (h:head)\nWHERE h.born_state<>'California'\nRETURN h.name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN",
                "name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "h",
                "born_state"
            ],
            "Token_Name_Label": "head",
            "Token_Operator": [
                ".",
                "<>"
            ],
            "Token_Literal_String": "'California'"
        },
        "answers": [
            [
                "Franklin Langham"
            ],
            [
                "Jeff Maggert"
            ],
            [
                "K. J. Choi"
            ],
            [
                "P\u00e1draig Harrington"
            ],
            [
                "Stewart Cink"
            ],
            [
                "Tiger Woods"
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What are the names of the states where at least 3 heads were born?",
        "cypher_query": "MATCH (h:head)\nWITH h.born_state AS born_state, count(*) AS count\nWHERE count >=3\nRETURN born_state",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "AS",
                "WHERE",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "h",
                "born_state",
                "count"
            ],
            "Token_Name_Label": "head",
            "Token_Operator": [
                ".",
                "*",
                ">="
            ],
            "Token_Name_Function": "count",
            "Token_Literal_Number_Integer": "3"
        },
        "answers": [
            [
                "California"
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "In which year were most departments established?",
        "cypher_query": "MATCH (d:department)\nWITH d.Creation AS Creation, count(d.Creation) AS count\nRETURN Creation\nORDER BY count DESC\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "AS",
                "RETURN",
                "ORDER BY",
                "DESC",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "d",
                "Creation",
                "count"
            ],
            "Token_Name_Label": "department",
            "Token_Operator": ".",
            "Token_Name_Function": "count",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                "1789"
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "How many acting statuses are there?",
        "cypher_query": "MATCH (m:management)\nWITH DISTINCT m.temporary_acting AS temporary_acting\nRETURN count(temporary_acting)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH DISTINCT",
                "AS",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "m",
                "temporary_acting"
            ],
            "Token_Name_Label": "management",
            "Token_Operator": ".",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                0
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "Which head's name has the substring 'Ha'? List the id and name.",
        "cypher_query": "MATCH (h:head)\nWHERE h.name =~'.*Ha.*'\nRETURN h.head_ID,h.name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "h",
                "head_ID"
            ],
            "Token_Name_Label": "head",
            "Token_Operator": [
                ".",
                "=~"
            ],
            "Token_Literal_String": "'.*Ha.*'"
        },
        "answers": [
            [
                4,
                "Dudley Hart"
            ],
            [
                9,
                "P\u00e1draig Harrington"
            ]
        ]
    }
][
    {
        "db_id": "department_management",
        "question": "How many heads of the departments are older than 56 ?",
        "cypher_query": "MATCH (h:head)\nWHERE h.age>56\nRETURN count(*)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "h",
                "age"
            ],
            "Token_Name_Label": "head",
            "Token_Operator": [
                ".",
                ">",
                "*"
            ],
            "Token_Literal_Number_Integer": "56",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                5
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "List the name, born state and age of the heads of departments ordered by age.",
        "cypher_query": "MATCH (h:head)\nRETURN h.name,h.born_state,h.age\nORDER BY h.age",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "h",
                "born_state",
                "age"
            ],
            "Token_Name_Label": "head",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Billy Mayfair",
                "California",
                69.0
            ],
            [
                "Dudley Hart",
                "California",
                52.0
            ],
            [
                "Franklin Langham",
                "Connecticut",
                67.0
            ],
            [
                "Jeff Maggert",
                "Delaware",
                53.0
            ],
            [
                "K. J. Choi",
                "Alabama",
                69.0
            ],
            [
                "Nick Faldo",
                "California",
                56.0
            ],
            [
                "P\u00e1draig Harrington",
                "Connecticut",
                43.0
            ],
            [
                "Sergio Garc\u00eda",
                "California",
                68.0
            ],
            [
                "Stewart Cink",
                "Florida",
                50.0
            ],
            [
                "Tiger Woods",
                "Alabama",
                67.0
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "List the creation year, name and budget of each department.",
        "cypher_query": "MATCH (d:department)\nRETURN d.Creation,d.Name,d.Budget_in_Billions",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "d",
                "Creation",
                "Budget_in_Billions"
            ],
            "Token_Name_Label": "department",
            "Token_Operator": "."
        },
        "answers": [
            [
                "1789",
                "State",
                9.96
            ],
            [
                "1789",
                "Treasury",
                11.1
            ],
            [
                "1849",
                "Interior",
                10.7
            ],
            [
                "1870",
                "Justice",
                23.4
            ],
            [
                "1889",
                "Agriculture",
                77.6
            ],
            [
                "1903",
                "Commerce",
                6.2
            ],
            [
                "1913",
                "Labor",
                59.7
            ],
            [
                "1947",
                "Defense",
                439.3
            ],
            [
                "1953",
                "Health and Human Services",
                543.2
            ],
            [
                "1965",
                "Housing and Urban Development",
                46.2
            ],
            [
                "1966",
                "Transportation",
                58.0
            ],
            [
                "1977",
                "Energy",
                21.5
            ],
            [
                "1979",
                "Education",
                62.8
            ],
            [
                "1989",
                "Veterans Affairs",
                73.2
            ],
            [
                "2002",
                "Homeland Security",
                44.6
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What are the maximum and minimum budget of the departments?",
        "cypher_query": "MATCH (d:department)\nRETURN max(d.Budget_in_Billions),min(d.Budget_in_Billions)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "d",
                "Budget_in_Billions"
            ],
            "Token_Name_Label": "department",
            "Token_Name_Function": [
                "max",
                "min"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                543.2,
                6.2
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What is the average number of employees of the departments whose rank is between 10 and 15?",
        "cypher_query": "MATCH (d:department)\nWHERE 10<=d.Ranking<=15\nRETURN avg(d.Num_Employees)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "d",
                "Ranking",
                "Num_Employees"
            ],
            "Token_Name_Label": "department",
            "Token_Literal_Number_Integer": [
                "10",
                "15"
            ],
            "Token_Operator": [
                "<=",
                "."
            ],
            "Token_Name_Function": "avg"
        },
        "answers": [
            [
                105468.16666666667
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What are the names of the heads who are born outside the California state?",
        "cypher_query": "MATCH (h:head)\nWHERE h.born_state<>'California'\nRETURN h.name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN",
                "name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "h",
                "born_state"
            ],
            "Token_Name_Label": "head",
            "Token_Operator": [
                ".",
                "<>"
            ],
            "Token_Literal_String": "'California'"
        },
        "answers": [
            [
                "Franklin Langham"
            ],
            [
                "Jeff Maggert"
            ],
            [
                "K. J. Choi"
            ],
            [
                "P\u00e1draig Harrington"
            ],
            [
                "Stewart Cink"
            ],
            [
                "Tiger Woods"
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What are the names of the states where at least 3 heads were born?",
        "cypher_query": "MATCH (h:head)\nWITH h.born_state AS born_state, count(*) AS count\nWHERE count >=3\nRETURN born_state",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "AS",
                "WHERE",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "h",
                "born_state",
                "count"
            ],
            "Token_Name_Label": "head",
            "Token_Operator": [
                ".",
                "*",
                ">="
            ],
            "Token_Name_Function": "count",
            "Token_Literal_Number_Integer": "3"
        },
        "answers": [
            [
                "California"
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "In which year were most departments established?",
        "cypher_query": "MATCH (d:department)\nWITH d.Creation AS Creation, count(d.Creation) AS count\nRETURN Creation\nORDER BY count DESC\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "AS",
                "RETURN",
                "ORDER BY",
                "DESC",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "d",
                "Creation",
                "count"
            ],
            "Token_Name_Label": "department",
            "Token_Operator": ".",
            "Token_Name_Function": "count",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                "1789"
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "How many acting statuses are there?",
        "cypher_query": "MATCH (m:management)\nWITH DISTINCT m.temporary_acting AS temporary_acting\nRETURN count(temporary_acting)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH DISTINCT",
                "AS",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "m",
                "temporary_acting"
            ],
            "Token_Name_Label": "management",
            "Token_Operator": ".",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                0
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "Which head's name has the substring 'Ha'? List the id and name.",
        "cypher_query": "MATCH (h:head)\nWHERE h.name =~'.*Ha.*'\nRETURN h.head_ID,h.name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "h",
                "head_ID"
            ],
            "Token_Name_Label": "head",
            "Token_Operator": [
                ".",
                "=~"
            ],
            "Token_Literal_String": "'.*Ha.*'"
        },
        "answers": [
            [
                4,
                "Dudley Hart"
            ],
            [
                9,
                "P\u00e1draig Harrington"
            ]
        ]
    }
][
    {
        "db_id": "department_management",
        "question": "How many heads of the departments are older than 56 ?",
        "cypher_query": "MATCH (h:head)\nWHERE h.age>56\nRETURN count(*)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "h",
                "age"
            ],
            "Token_Name_Label": "head",
            "Token_Operator": [
                ".",
                ">",
                "*"
            ],
            "Token_Literal_Number_Integer": "56",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                5
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "List the name, born state and age of the heads of departments ordered by age.",
        "cypher_query": "MATCH (h:head)\nRETURN h.name,h.born_state,h.age\nORDER BY h.age",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "h",
                "born_state",
                "age"
            ],
            "Token_Name_Label": "head",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Billy Mayfair",
                "California",
                69.0
            ],
            [
                "Dudley Hart",
                "California",
                52.0
            ],
            [
                "Franklin Langham",
                "Connecticut",
                67.0
            ],
            [
                "Jeff Maggert",
                "Delaware",
                53.0
            ],
            [
                "K. J. Choi",
                "Alabama",
                69.0
            ],
            [
                "Nick Faldo",
                "California",
                56.0
            ],
            [
                "P\u00e1draig Harrington",
                "Connecticut",
                43.0
            ],
            [
                "Sergio Garc\u00eda",
                "California",
                68.0
            ],
            [
                "Stewart Cink",
                "Florida",
                50.0
            ],
            [
                "Tiger Woods",
                "Alabama",
                67.0
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "List the creation year, name and budget of each department.",
        "cypher_query": "MATCH (d:department)\nRETURN d.Creation,d.Name,d.Budget_in_Billions",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "d",
                "Creation",
                "Budget_in_Billions"
            ],
            "Token_Name_Label": "department",
            "Token_Operator": "."
        },
        "answers": [
            [
                "1789",
                "State",
                9.96
            ],
            [
                "1789",
                "Treasury",
                11.1
            ],
            [
                "1849",
                "Interior",
                10.7
            ],
            [
                "1870",
                "Justice",
                23.4
            ],
            [
                "1889",
                "Agriculture",
                77.6
            ],
            [
                "1903",
                "Commerce",
                6.2
            ],
            [
                "1913",
                "Labor",
                59.7
            ],
            [
                "1947",
                "Defense",
                439.3
            ],
            [
                "1953",
                "Health and Human Services",
                543.2
            ],
            [
                "1965",
                "Housing and Urban Development",
                46.2
            ],
            [
                "1966",
                "Transportation",
                58.0
            ],
            [
                "1977",
                "Energy",
                21.5
            ],
            [
                "1979",
                "Education",
                62.8
            ],
            [
                "1989",
                "Veterans Affairs",
                73.2
            ],
            [
                "2002",
                "Homeland Security",
                44.6
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What are the maximum and minimum budget of the departments?",
        "cypher_query": "MATCH (d:department)\nRETURN max(d.Budget_in_Billions),min(d.Budget_in_Billions)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "d",
                "Budget_in_Billions"
            ],
            "Token_Name_Label": "department",
            "Token_Name_Function": [
                "max",
                "min"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                543.2,
                6.2
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What is the average number of employees of the departments whose rank is between 10 and 15?",
        "cypher_query": "MATCH (d:department)\nWHERE 10<=d.Ranking<=15\nRETURN avg(d.Num_Employees)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "d",
                "Ranking",
                "Num_Employees"
            ],
            "Token_Name_Label": "department",
            "Token_Literal_Number_Integer": [
                "10",
                "15"
            ],
            "Token_Operator": [
                "<=",
                "."
            ],
            "Token_Name_Function": "avg"
        },
        "answers": [
            [
                105468.16666666667
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What are the names of the heads who are born outside the California state?",
        "cypher_query": "MATCH (h:head)\nWHERE h.born_state<>'California'\nRETURN h.name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN",
                "name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "h",
                "born_state"
            ],
            "Token_Name_Label": "head",
            "Token_Operator": [
                ".",
                "<>"
            ],
            "Token_Literal_String": "'California'"
        },
        "answers": [
            [
                "Franklin Langham"
            ],
            [
                "Jeff Maggert"
            ],
            [
                "K. J. Choi"
            ],
            [
                "P\u00e1draig Harrington"
            ],
            [
                "Stewart Cink"
            ],
            [
                "Tiger Woods"
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What are the names of the states where at least 3 heads were born?",
        "cypher_query": "MATCH (h:head)\nWITH count(*) AS count, h.born_state AS born_state\nWHERE count >=3\nRETURN born_state",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "AS",
                "WHERE",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "h",
                "count",
                "born_state"
            ],
            "Token_Name_Label": "head",
            "Token_Name_Function": "count",
            "Token_Operator": [
                "*",
                ".",
                ">="
            ],
            "Token_Literal_Number_Integer": "3"
        },
        "answers": [
            [
                "California"
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "In which year were most departments established?",
        "cypher_query": "MATCH (d:department)\nWITH d.Creation AS Creation, count(d.Creation) AS count\nRETURN Creation\nORDER BY count DESC\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "AS",
                "RETURN",
                "ORDER BY",
                "DESC",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "d",
                "Creation",
                "count"
            ],
            "Token_Name_Label": "department",
            "Token_Operator": ".",
            "Token_Name_Function": "count",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                "1789"
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "How many acting statuses are there?",
        "cypher_query": "MATCH (m:management)\nWITH DISTINCT m.temporary_acting AS temporary_acting\nRETURN count(temporary_acting)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH DISTINCT",
                "AS",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "m",
                "temporary_acting"
            ],
            "Token_Name_Label": "management",
            "Token_Operator": ".",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                0
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "Which head's name has the substring 'Ha'? List the id and name.",
        "cypher_query": "MATCH (h:head)\nWHERE h.name =~'.*Ha.*'\nRETURN h.head_ID,h.name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "h",
                "head_ID"
            ],
            "Token_Name_Label": "head",
            "Token_Operator": [
                ".",
                "=~"
            ],
            "Token_Literal_String": "'.*Ha.*'"
        },
        "answers": [
            [
                4,
                "Dudley Hart"
            ],
            [
                9,
                "P\u00e1draig Harrington"
            ]
        ]
    }
][
    {
        "db_id": "department_management",
        "question": "How many heads of the departments are older than 56 ?",
        "cypher_query": "MATCH (h:head)\nWHERE h.age>56\nRETURN count(*)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "h",
                "age"
            ],
            "Token_Name_Label": "head",
            "Token_Operator": [
                ".",
                ">",
                "*"
            ],
            "Token_Literal_Number_Integer": "56",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                5
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "List the name, born state and age of the heads of departments ordered by age.",
        "cypher_query": "MATCH (h:head)\nRETURN h.name,h.born_state,h.age\nORDER BY h.age",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "h",
                "born_state",
                "age"
            ],
            "Token_Name_Label": "head",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Billy Mayfair",
                "California",
                69.0
            ],
            [
                "Dudley Hart",
                "California",
                52.0
            ],
            [
                "Franklin Langham",
                "Connecticut",
                67.0
            ],
            [
                "Jeff Maggert",
                "Delaware",
                53.0
            ],
            [
                "K. J. Choi",
                "Alabama",
                69.0
            ],
            [
                "Nick Faldo",
                "California",
                56.0
            ],
            [
                "P\u00e1draig Harrington",
                "Connecticut",
                43.0
            ],
            [
                "Sergio Garc\u00eda",
                "California",
                68.0
            ],
            [
                "Stewart Cink",
                "Florida",
                50.0
            ],
            [
                "Tiger Woods",
                "Alabama",
                67.0
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "List the creation year, name and budget of each department.",
        "cypher_query": "MATCH (d:department)\nRETURN d.Creation,d.Name,d.Budget_in_Billions",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "d",
                "Creation",
                "Budget_in_Billions"
            ],
            "Token_Name_Label": "department",
            "Token_Operator": "."
        },
        "answers": [
            [
                "1789",
                "State",
                9.96
            ],
            [
                "1789",
                "Treasury",
                11.1
            ],
            [
                "1849",
                "Interior",
                10.7
            ],
            [
                "1870",
                "Justice",
                23.4
            ],
            [
                "1889",
                "Agriculture",
                77.6
            ],
            [
                "1903",
                "Commerce",
                6.2
            ],
            [
                "1913",
                "Labor",
                59.7
            ],
            [
                "1947",
                "Defense",
                439.3
            ],
            [
                "1953",
                "Health and Human Services",
                543.2
            ],
            [
                "1965",
                "Housing and Urban Development",
                46.2
            ],
            [
                "1966",
                "Transportation",
                58.0
            ],
            [
                "1977",
                "Energy",
                21.5
            ],
            [
                "1979",
                "Education",
                62.8
            ],
            [
                "1989",
                "Veterans Affairs",
                73.2
            ],
            [
                "2002",
                "Homeland Security",
                44.6
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What are the maximum and minimum budget of the departments?",
        "cypher_query": "MATCH (d:department)\nRETURN max(d.Budget_in_Billions),min(d.Budget_in_Billions)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "d",
                "Budget_in_Billions"
            ],
            "Token_Name_Label": "department",
            "Token_Name_Function": [
                "max",
                "min"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                543.2,
                6.2
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What is the average number of employees of the departments whose rank is between 10 and 15?",
        "cypher_query": "MATCH (d:department)\nWHERE 10<=d.Ranking<=15\nRETURN avg(d.Num_Employees)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "d",
                "Ranking",
                "Num_Employees"
            ],
            "Token_Name_Label": "department",
            "Token_Literal_Number_Integer": [
                "10",
                "15"
            ],
            "Token_Operator": [
                "<=",
                "."
            ],
            "Token_Name_Function": "avg"
        },
        "answers": [
            [
                105468.16666666667
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What are the names of the heads who are born outside the California state?",
        "cypher_query": "MATCH (h:head)\nWHERE h.born_state<>'California'\nRETURN h.name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN",
                "name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "h",
                "born_state"
            ],
            "Token_Name_Label": "head",
            "Token_Operator": [
                ".",
                "<>"
            ],
            "Token_Literal_String": "'California'"
        },
        "answers": [
            [
                "Franklin Langham"
            ],
            [
                "Jeff Maggert"
            ],
            [
                "K. J. Choi"
            ],
            [
                "P\u00e1draig Harrington"
            ],
            [
                "Stewart Cink"
            ],
            [
                "Tiger Woods"
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What are the names of the states where at least 3 heads were born?",
        "cypher_query": "MATCH (h:head)\nWITH h.born_state AS born_state, count(*) AS count\nWHERE count >=3\nRETURN born_state",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "AS",
                "WHERE",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "h",
                "born_state",
                "count"
            ],
            "Token_Name_Label": "head",
            "Token_Operator": [
                ".",
                "*",
                ">="
            ],
            "Token_Name_Function": "count",
            "Token_Literal_Number_Integer": "3"
        },
        "answers": [
            [
                "California"
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "In which year were most departments established?",
        "cypher_query": "MATCH (d:department)\nWITH d.Creation AS Creation, count(d.Creation) AS count\nRETURN Creation\nORDER BY count DESC\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "AS",
                "RETURN",
                "ORDER BY",
                "DESC",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "d",
                "Creation",
                "count"
            ],
            "Token_Name_Label": "department",
            "Token_Operator": ".",
            "Token_Name_Function": "count",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                "1789"
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "How many acting statuses are there?",
        "cypher_query": "MATCH (m:management)\nWITH DISTINCT m.temporary_acting AS temporary_acting\nRETURN count(temporary_acting)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH DISTINCT",
                "AS",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "m",
                "temporary_acting"
            ],
            "Token_Name_Label": "management",
            "Token_Operator": ".",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                0
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "Which head's name has the substring 'Ha'? List the id and name.",
        "cypher_query": "MATCH (h:head)\nWHERE h.name =~'.*Ha.*'\nRETURN h.head_ID,h.name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "h",
                "head_ID"
            ],
            "Token_Name_Label": "head",
            "Token_Operator": [
                ".",
                "=~"
            ],
            "Token_Literal_String": "'.*Ha.*'"
        },
        "answers": [
            [
                4,
                "Dudley Hart"
            ],
            [
                9,
                "P\u00e1draig Harrington"
            ]
        ]
    }
][
    {
        "db_id": "department_management",
        "question": "How many heads of the departments are older than 56 ?",
        "cypher_query": "MATCH (h:head)\nWHERE h.age>56\nRETURN count(*)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "h",
                "age"
            ],
            "Token_Name_Label": "head",
            "Token_Operator": [
                ".",
                ">",
                "*"
            ],
            "Token_Literal_Number_Integer": "56",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                5
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "List the name, born state and age of the heads of departments ordered by age.",
        "cypher_query": "MATCH (h:head)\nRETURN h.name,h.born_state,h.age\nORDER BY h.age",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "h",
                "born_state",
                "age"
            ],
            "Token_Name_Label": "head",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Billy Mayfair",
                "California",
                69.0
            ],
            [
                "Dudley Hart",
                "California",
                52.0
            ],
            [
                "Franklin Langham",
                "Connecticut",
                67.0
            ],
            [
                "Jeff Maggert",
                "Delaware",
                53.0
            ],
            [
                "K. J. Choi",
                "Alabama",
                69.0
            ],
            [
                "Nick Faldo",
                "California",
                56.0
            ],
            [
                "P\u00e1draig Harrington",
                "Connecticut",
                43.0
            ],
            [
                "Sergio Garc\u00eda",
                "California",
                68.0
            ],
            [
                "Stewart Cink",
                "Florida",
                50.0
            ],
            [
                "Tiger Woods",
                "Alabama",
                67.0
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "List the creation year, name and budget of each department.",
        "cypher_query": "MATCH (d:department)\nRETURN d.Creation,d.Name,d.Budget_in_Billions",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "d",
                "Creation",
                "Budget_in_Billions"
            ],
            "Token_Name_Label": "department",
            "Token_Operator": "."
        },
        "answers": [
            [
                "1789",
                "State",
                9.96
            ],
            [
                "1789",
                "Treasury",
                11.1
            ],
            [
                "1849",
                "Interior",
                10.7
            ],
            [
                "1870",
                "Justice",
                23.4
            ],
            [
                "1889",
                "Agriculture",
                77.6
            ],
            [
                "1903",
                "Commerce",
                6.2
            ],
            [
                "1913",
                "Labor",
                59.7
            ],
            [
                "1947",
                "Defense",
                439.3
            ],
            [
                "1953",
                "Health and Human Services",
                543.2
            ],
            [
                "1965",
                "Housing and Urban Development",
                46.2
            ],
            [
                "1966",
                "Transportation",
                58.0
            ],
            [
                "1977",
                "Energy",
                21.5
            ],
            [
                "1979",
                "Education",
                62.8
            ],
            [
                "1989",
                "Veterans Affairs",
                73.2
            ],
            [
                "2002",
                "Homeland Security",
                44.6
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What are the maximum and minimum budget of the departments?",
        "cypher_query": "MATCH (d:department)\nRETURN max(d.Budget_in_Billions),min(d.Budget_in_Billions)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "d",
                "Budget_in_Billions"
            ],
            "Token_Name_Label": "department",
            "Token_Name_Function": [
                "max",
                "min"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                543.2,
                6.2
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What is the average number of employees of the departments whose rank is between 10 and 15?",
        "cypher_query": "MATCH (d:department)\nWHERE 10<=d.Ranking<=15\nRETURN avg(d.Num_Employees)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "d",
                "Ranking",
                "Num_Employees"
            ],
            "Token_Name_Label": "department",
            "Token_Literal_Number_Integer": [
                "10",
                "15"
            ],
            "Token_Operator": [
                "<=",
                "."
            ],
            "Token_Name_Function": "avg"
        },
        "answers": [
            [
                105468.16666666667
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What are the names of the heads who are born outside the California state?",
        "cypher_query": "MATCH (h:head)\nWHERE h.born_state<>'California'\nRETURN h.name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN",
                "name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "h",
                "born_state"
            ],
            "Token_Name_Label": "head",
            "Token_Operator": [
                ".",
                "<>"
            ],
            "Token_Literal_String": "'California'"
        },
        "answers": [
            [
                "Franklin Langham"
            ],
            [
                "Jeff Maggert"
            ],
            [
                "K. J. Choi"
            ],
            [
                "P\u00e1draig Harrington"
            ],
            [
                "Stewart Cink"
            ],
            [
                "Tiger Woods"
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What are the names of the states where at least 3 heads were born?",
        "cypher_query": "MATCH (h:head)\nWITH count(*) AS count, h.born_state AS born_state\nWHERE count >=3\nRETURN born_state",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "AS",
                "WHERE",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "h",
                "count",
                "born_state"
            ],
            "Token_Name_Label": "head",
            "Token_Name_Function": "count",
            "Token_Operator": [
                "*",
                ".",
                ">="
            ],
            "Token_Literal_Number_Integer": "3"
        },
        "answers": [
            [
                "California"
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "In which year were most departments established?",
        "cypher_query": "MATCH (d:department)\nWITH d.Creation AS Creation, count(d.Creation) AS count\nRETURN Creation\nORDER BY count DESC\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "AS",
                "RETURN",
                "ORDER BY",
                "DESC",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "d",
                "Creation",
                "count"
            ],
            "Token_Name_Label": "department",
            "Token_Operator": ".",
            "Token_Name_Function": "count",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                "1789"
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "How many acting statuses are there?",
        "cypher_query": "MATCH (m:management)\nWITH DISTINCT m.temporary_acting AS temporary_acting\nRETURN count(temporary_acting)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH DISTINCT",
                "AS",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "m",
                "temporary_acting"
            ],
            "Token_Name_Label": "management",
            "Token_Operator": ".",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                0
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "Which head's name has the substring 'Ha'? List the id and name.",
        "cypher_query": "MATCH (h:head)\nWHERE h.name =~'.*Ha.*'\nRETURN h.head_ID,h.name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "h",
                "head_ID"
            ],
            "Token_Name_Label": "head",
            "Token_Operator": [
                ".",
                "=~"
            ],
            "Token_Literal_String": "'.*Ha.*'"
        },
        "answers": [
            [
                4,
                "Dudley Hart"
            ],
            [
                9,
                "P\u00e1draig Harrington"
            ]
        ]
    }
][
    {
        "db_id": "department_management",
        "question": "How many heads of the departments are older than 56 ?",
        "cypher_query": "MATCH (h:head)\nWHERE h.age>56\nRETURN count(*)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "h",
                "age"
            ],
            "Token_Name_Label": "head",
            "Token_Operator": [
                ".",
                ">",
                "*"
            ],
            "Token_Literal_Number_Integer": "56",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                5
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "List the name, born state and age of the heads of departments ordered by age.",
        "cypher_query": "MATCH (h:head)\nRETURN h.name,h.born_state,h.age\nORDER BY h.age",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "h",
                "born_state",
                "age"
            ],
            "Token_Name_Label": "head",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Billy Mayfair",
                "California",
                69.0
            ],
            [
                "Dudley Hart",
                "California",
                52.0
            ],
            [
                "Franklin Langham",
                "Connecticut",
                67.0
            ],
            [
                "Jeff Maggert",
                "Delaware",
                53.0
            ],
            [
                "K. J. Choi",
                "Alabama",
                69.0
            ],
            [
                "Nick Faldo",
                "California",
                56.0
            ],
            [
                "P\u00e1draig Harrington",
                "Connecticut",
                43.0
            ],
            [
                "Sergio Garc\u00eda",
                "California",
                68.0
            ],
            [
                "Stewart Cink",
                "Florida",
                50.0
            ],
            [
                "Tiger Woods",
                "Alabama",
                67.0
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "List the creation year, name and budget of each department.",
        "cypher_query": "MATCH (d:department)\nRETURN d.Creation,d.Name,d.Budget_in_Billions",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "d",
                "Creation",
                "Budget_in_Billions"
            ],
            "Token_Name_Label": "department",
            "Token_Operator": "."
        },
        "answers": [
            [
                "1789",
                "State",
                9.96
            ],
            [
                "1789",
                "Treasury",
                11.1
            ],
            [
                "1849",
                "Interior",
                10.7
            ],
            [
                "1870",
                "Justice",
                23.4
            ],
            [
                "1889",
                "Agriculture",
                77.6
            ],
            [
                "1903",
                "Commerce",
                6.2
            ],
            [
                "1913",
                "Labor",
                59.7
            ],
            [
                "1947",
                "Defense",
                439.3
            ],
            [
                "1953",
                "Health and Human Services",
                543.2
            ],
            [
                "1965",
                "Housing and Urban Development",
                46.2
            ],
            [
                "1966",
                "Transportation",
                58.0
            ],
            [
                "1977",
                "Energy",
                21.5
            ],
            [
                "1979",
                "Education",
                62.8
            ],
            [
                "1989",
                "Veterans Affairs",
                73.2
            ],
            [
                "2002",
                "Homeland Security",
                44.6
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What are the maximum and minimum budget of the departments?",
        "cypher_query": "MATCH (d:department)\nRETURN max(d.Budget_in_Billions),min(d.Budget_in_Billions)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "d",
                "Budget_in_Billions"
            ],
            "Token_Name_Label": "department",
            "Token_Name_Function": [
                "max",
                "min"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                543.2,
                6.2
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What is the average number of employees of the departments whose rank is between 10 and 15?",
        "cypher_query": "MATCH (d:department)\nWHERE 10<=d.Ranking<=15\nRETURN avg(d.Num_Employees)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "d",
                "Ranking",
                "Num_Employees"
            ],
            "Token_Name_Label": "department",
            "Token_Literal_Number_Integer": [
                "10",
                "15"
            ],
            "Token_Operator": [
                "<=",
                "."
            ],
            "Token_Name_Function": "avg"
        },
        "answers": [
            [
                105468.16666666667
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What are the names of the heads who are born outside the California state?",
        "cypher_query": "MATCH (h:head)\nWHERE h.born_state<>'California'\nRETURN h.name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN",
                "name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "h",
                "born_state"
            ],
            "Token_Name_Label": "head",
            "Token_Operator": [
                ".",
                "<>"
            ],
            "Token_Literal_String": "'California'"
        },
        "answers": [
            [
                "Franklin Langham"
            ],
            [
                "Jeff Maggert"
            ],
            [
                "K. J. Choi"
            ],
            [
                "P\u00e1draig Harrington"
            ],
            [
                "Stewart Cink"
            ],
            [
                "Tiger Woods"
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What are the names of the states where at least 3 heads were born?",
        "cypher_query": "MATCH (h:head)\nWITH count(*) AS count, h.born_state AS born_state\nWHERE count >=3\nRETURN born_state",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "AS",
                "WHERE",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "h",
                "count",
                "born_state"
            ],
            "Token_Name_Label": "head",
            "Token_Name_Function": "count",
            "Token_Operator": [
                "*",
                ".",
                ">="
            ],
            "Token_Literal_Number_Integer": "3"
        },
        "answers": [
            [
                "California"
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "In which year were most departments established?",
        "cypher_query": "MATCH (d:department)\nWITH d.Creation AS Creation, count(d.Creation) AS count\nRETURN Creation\nORDER BY count DESC\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "AS",
                "RETURN",
                "ORDER BY",
                "DESC",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "d",
                "Creation",
                "count"
            ],
            "Token_Name_Label": "department",
            "Token_Operator": ".",
            "Token_Name_Function": "count",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                "1789"
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "How many acting statuses are there?",
        "cypher_query": "MATCH (m:management)\nWITH DISTINCT m.temporary_acting AS temporary_acting\nRETURN count(temporary_acting)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH DISTINCT",
                "AS",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "m",
                "temporary_acting"
            ],
            "Token_Name_Label": "management",
            "Token_Operator": ".",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                0
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "Which head's name has the substring 'Ha'? List the id and name.",
        "cypher_query": "MATCH (h:head)\nWHERE h.name =~'.*Ha.*'\nRETURN h.head_ID,h.name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "h",
                "head_ID"
            ],
            "Token_Name_Label": "head",
            "Token_Operator": [
                ".",
                "=~"
            ],
            "Token_Literal_String": "'.*Ha.*'"
        },
        "answers": [
            [
                4,
                "Dudley Hart"
            ],
            [
                9,
                "P\u00e1draig Harrington"
            ]
        ]
    }
][
    {
        "db_id": "department_management",
        "question": "How many heads of the departments are older than 56 ?",
        "cypher_query": "MATCH (h:head)\nWHERE h.age>56\nRETURN count(*)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "h",
                "age"
            ],
            "Token_Name_Label": "head",
            "Token_Operator": [
                ".",
                ">",
                "*"
            ],
            "Token_Literal_Number_Integer": "56",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                5
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "List the name, born state and age of the heads of departments ordered by age.",
        "cypher_query": "MATCH (h:head)\nRETURN h.name,h.born_state,h.age\nORDER BY h.age",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "h",
                "born_state",
                "age"
            ],
            "Token_Name_Label": "head",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Billy Mayfair",
                "California",
                69.0
            ],
            [
                "Dudley Hart",
                "California",
                52.0
            ],
            [
                "Franklin Langham",
                "Connecticut",
                67.0
            ],
            [
                "Jeff Maggert",
                "Delaware",
                53.0
            ],
            [
                "K. J. Choi",
                "Alabama",
                69.0
            ],
            [
                "Nick Faldo",
                "California",
                56.0
            ],
            [
                "P\u00e1draig Harrington",
                "Connecticut",
                43.0
            ],
            [
                "Sergio Garc\u00eda",
                "California",
                68.0
            ],
            [
                "Stewart Cink",
                "Florida",
                50.0
            ],
            [
                "Tiger Woods",
                "Alabama",
                67.0
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "List the creation year, name and budget of each department.",
        "cypher_query": "MATCH (d:department)\nRETURN d.Creation,d.Name,d.Budget_in_Billions",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "d",
                "Creation",
                "Budget_in_Billions"
            ],
            "Token_Name_Label": "department",
            "Token_Operator": "."
        },
        "answers": [
            [
                "1789",
                "State",
                9.96
            ],
            [
                "1789",
                "Treasury",
                11.1
            ],
            [
                "1849",
                "Interior",
                10.7
            ],
            [
                "1870",
                "Justice",
                23.4
            ],
            [
                "1889",
                "Agriculture",
                77.6
            ],
            [
                "1903",
                "Commerce",
                6.2
            ],
            [
                "1913",
                "Labor",
                59.7
            ],
            [
                "1947",
                "Defense",
                439.3
            ],
            [
                "1953",
                "Health and Human Services",
                543.2
            ],
            [
                "1965",
                "Housing and Urban Development",
                46.2
            ],
            [
                "1966",
                "Transportation",
                58.0
            ],
            [
                "1977",
                "Energy",
                21.5
            ],
            [
                "1979",
                "Education",
                62.8
            ],
            [
                "1989",
                "Veterans Affairs",
                73.2
            ],
            [
                "2002",
                "Homeland Security",
                44.6
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What are the maximum and minimum budget of the departments?",
        "cypher_query": "MATCH (d:department)\nRETURN max(d.Budget_in_Billions),min(d.Budget_in_Billions)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "d",
                "Budget_in_Billions"
            ],
            "Token_Name_Label": "department",
            "Token_Name_Function": [
                "max",
                "min"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                543.2,
                6.2
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What is the average number of employees of the departments whose rank is between 10 and 15?",
        "cypher_query": "MATCH (d:department)\nWHERE 10<=d.Ranking<=15\nRETURN avg(d.Num_Employees)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "d",
                "Ranking",
                "Num_Employees"
            ],
            "Token_Name_Label": "department",
            "Token_Literal_Number_Integer": [
                "10",
                "15"
            ],
            "Token_Operator": [
                "<=",
                "."
            ],
            "Token_Name_Function": "avg"
        },
        "answers": [
            [
                105468.16666666667
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What are the names of the heads who are born outside the California state?",
        "cypher_query": "MATCH (h:head)\nWHERE h.born_state<>'California'\nRETURN h.name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN",
                "name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "h",
                "born_state"
            ],
            "Token_Name_Label": "head",
            "Token_Operator": [
                ".",
                "<>"
            ],
            "Token_Literal_String": "'California'"
        },
        "answers": [
            [
                "Franklin Langham"
            ],
            [
                "Jeff Maggert"
            ],
            [
                "K. J. Choi"
            ],
            [
                "P\u00e1draig Harrington"
            ],
            [
                "Stewart Cink"
            ],
            [
                "Tiger Woods"
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What are the names of the states where at least 3 heads were born?",
        "cypher_query": "MATCH (h:head)\nWITH count(*) AS count, h.born_state AS born_state\nWHERE count >=3\nRETURN born_state",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "AS",
                "WHERE",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "h",
                "count",
                "born_state"
            ],
            "Token_Name_Label": "head",
            "Token_Name_Function": "count",
            "Token_Operator": [
                "*",
                ".",
                ">="
            ],
            "Token_Literal_Number_Integer": "3"
        },
        "answers": [
            [
                "California"
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "In which year were most departments established?",
        "cypher_query": "MATCH (d:department)\nWITH d.Creation AS Creation, count(d.Creation) AS count\nRETURN Creation\nORDER BY count DESC\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "AS",
                "RETURN",
                "ORDER BY",
                "DESC",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "d",
                "Creation",
                "count"
            ],
            "Token_Name_Label": "department",
            "Token_Operator": ".",
            "Token_Name_Function": "count",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                "1789"
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "How many acting statuses are there?",
        "cypher_query": "MATCH (m:management)\nWITH DISTINCT m.temporary_acting AS temporary_acting\nRETURN count(temporary_acting)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH DISTINCT",
                "AS",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "m",
                "temporary_acting"
            ],
            "Token_Name_Label": "management",
            "Token_Operator": ".",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                0
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "Which head's name has the substring 'Ha'? List the id and name.",
        "cypher_query": "MATCH (h:head)\nWHERE h.name =~'.*Ha.*'\nRETURN h.head_ID,h.name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "h",
                "head_ID"
            ],
            "Token_Name_Label": "head",
            "Token_Operator": [
                ".",
                "=~"
            ],
            "Token_Literal_String": "'.*Ha.*'"
        },
        "answers": [
            [
                4,
                "Dudley Hart"
            ],
            [
                9,
                "P\u00e1draig Harrington"
            ]
        ]
    }
][
    {
        "db_id": "department_management",
        "question": "How many heads of the departments are older than 56 ?",
        "cypher_query": "MATCH (h:head)\nWHERE h.age>56\nRETURN count(*)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "h",
                "age"
            ],
            "Token_Name_Label": "head",
            "Token_Operator": [
                ".",
                ">",
                "*"
            ],
            "Token_Literal_Number_Integer": "56",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                5
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "List the name, born state and age of the heads of departments ordered by age.",
        "cypher_query": "MATCH (h:head)\nRETURN h.name,h.born_state,h.age\nORDER BY h.age",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "h",
                "born_state",
                "age"
            ],
            "Token_Name_Label": "head",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Billy Mayfair",
                "California",
                69.0
            ],
            [
                "Dudley Hart",
                "California",
                52.0
            ],
            [
                "Franklin Langham",
                "Connecticut",
                67.0
            ],
            [
                "Jeff Maggert",
                "Delaware",
                53.0
            ],
            [
                "K. J. Choi",
                "Alabama",
                69.0
            ],
            [
                "Nick Faldo",
                "California",
                56.0
            ],
            [
                "P\u00e1draig Harrington",
                "Connecticut",
                43.0
            ],
            [
                "Sergio Garc\u00eda",
                "California",
                68.0
            ],
            [
                "Stewart Cink",
                "Florida",
                50.0
            ],
            [
                "Tiger Woods",
                "Alabama",
                67.0
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "List the creation year, name and budget of each department.",
        "cypher_query": "MATCH (d:department)\nRETURN d.Creation,d.Name,d.Budget_in_Billions",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "d",
                "Creation",
                "Budget_in_Billions"
            ],
            "Token_Name_Label": "department",
            "Token_Operator": "."
        },
        "answers": [
            [
                "1789",
                "State",
                9.96
            ],
            [
                "1789",
                "Treasury",
                11.1
            ],
            [
                "1849",
                "Interior",
                10.7
            ],
            [
                "1870",
                "Justice",
                23.4
            ],
            [
                "1889",
                "Agriculture",
                77.6
            ],
            [
                "1903",
                "Commerce",
                6.2
            ],
            [
                "1913",
                "Labor",
                59.7
            ],
            [
                "1947",
                "Defense",
                439.3
            ],
            [
                "1953",
                "Health and Human Services",
                543.2
            ],
            [
                "1965",
                "Housing and Urban Development",
                46.2
            ],
            [
                "1966",
                "Transportation",
                58.0
            ],
            [
                "1977",
                "Energy",
                21.5
            ],
            [
                "1979",
                "Education",
                62.8
            ],
            [
                "1989",
                "Veterans Affairs",
                73.2
            ],
            [
                "2002",
                "Homeland Security",
                44.6
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What are the maximum and minimum budget of the departments?",
        "cypher_query": "MATCH (d:department)\nRETURN max(d.Budget_in_Billions),min(d.Budget_in_Billions)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "d",
                "Budget_in_Billions"
            ],
            "Token_Name_Label": "department",
            "Token_Name_Function": [
                "max",
                "min"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                543.2,
                6.2
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What is the average number of employees of the departments whose rank is between 10 and 15?",
        "cypher_query": "MATCH (d:department)\nWHERE 10<=d.Ranking<=15\nRETURN avg(d.Num_Employees)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "d",
                "Ranking",
                "Num_Employees"
            ],
            "Token_Name_Label": "department",
            "Token_Literal_Number_Integer": [
                "10",
                "15"
            ],
            "Token_Operator": [
                "<=",
                "."
            ],
            "Token_Name_Function": "avg"
        },
        "answers": [
            [
                105468.16666666667
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What are the names of the heads who are born outside the California state?",
        "cypher_query": "MATCH (h:head)\nWHERE h.born_state<>'California'\nRETURN h.name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN",
                "name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "h",
                "born_state"
            ],
            "Token_Name_Label": "head",
            "Token_Operator": [
                ".",
                "<>"
            ],
            "Token_Literal_String": "'California'"
        },
        "answers": [
            [
                "Franklin Langham"
            ],
            [
                "Jeff Maggert"
            ],
            [
                "K. J. Choi"
            ],
            [
                "P\u00e1draig Harrington"
            ],
            [
                "Stewart Cink"
            ],
            [
                "Tiger Woods"
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What are the names of the states where at least 3 heads were born?",
        "cypher_query": "MATCH (h:head)\nWITH h.born_state AS born_state, count(*) AS count\nWHERE count >=3\nRETURN born_state",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "AS",
                "WHERE",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "h",
                "born_state",
                "count"
            ],
            "Token_Name_Label": "head",
            "Token_Operator": [
                ".",
                "*",
                ">="
            ],
            "Token_Name_Function": "count",
            "Token_Literal_Number_Integer": "3"
        },
        "answers": [
            [
                "California"
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "In which year were most departments established?",
        "cypher_query": "MATCH (d:department)\nWITH d.Creation AS Creation, count(d.Creation) AS count\nRETURN Creation\nORDER BY count DESC\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "AS",
                "RETURN",
                "ORDER BY",
                "DESC",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "d",
                "Creation",
                "count"
            ],
            "Token_Name_Label": "department",
            "Token_Operator": ".",
            "Token_Name_Function": "count",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                "1789"
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "How many acting statuses are there?",
        "cypher_query": "MATCH (m:management)\nWITH DISTINCT m.temporary_acting AS temporary_acting\nRETURN count(temporary_acting)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH DISTINCT",
                "AS",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "m",
                "temporary_acting"
            ],
            "Token_Name_Label": "management",
            "Token_Operator": ".",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                0
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "Which head's name has the substring 'Ha'? List the id and name.",
        "cypher_query": "MATCH (h:head)\nWHERE h.name =~'.*Ha.*'\nRETURN h.head_ID,h.name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "h",
                "head_ID"
            ],
            "Token_Name_Label": "head",
            "Token_Operator": [
                ".",
                "=~"
            ],
            "Token_Literal_String": "'.*Ha.*'"
        },
        "answers": [
            [
                4,
                "Dudley Hart"
            ],
            [
                9,
                "P\u00e1draig Harrington"
            ]
        ]
    }
][
    {
        "db_id": "department_management",
        "question": "How many heads of the departments are older than 56 ?",
        "cypher_query": "MATCH (h:head)\nWHERE h.age>56\nRETURN count(*)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "h",
                "age"
            ],
            "Token_Name_Label": "head",
            "Token_Operator": [
                ".",
                ">",
                "*"
            ],
            "Token_Literal_Number_Integer": "56",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                5
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "List the name, born state and age of the heads of departments ordered by age.",
        "cypher_query": "MATCH (h:head)\nRETURN h.name,h.born_state,h.age\nORDER BY h.age",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "h",
                "born_state",
                "age"
            ],
            "Token_Name_Label": "head",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Billy Mayfair",
                "California",
                69.0
            ],
            [
                "Dudley Hart",
                "California",
                52.0
            ],
            [
                "Franklin Langham",
                "Connecticut",
                67.0
            ],
            [
                "Jeff Maggert",
                "Delaware",
                53.0
            ],
            [
                "K. J. Choi",
                "Alabama",
                69.0
            ],
            [
                "Nick Faldo",
                "California",
                56.0
            ],
            [
                "P\u00e1draig Harrington",
                "Connecticut",
                43.0
            ],
            [
                "Sergio Garc\u00eda",
                "California",
                68.0
            ],
            [
                "Stewart Cink",
                "Florida",
                50.0
            ],
            [
                "Tiger Woods",
                "Alabama",
                67.0
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "List the creation year, name and budget of each department.",
        "cypher_query": "MATCH (d:department)\nRETURN d.Creation,d.Name,d.Budget_in_Billions",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "d",
                "Creation",
                "Budget_in_Billions"
            ],
            "Token_Name_Label": "department",
            "Token_Operator": "."
        },
        "answers": [
            [
                "1789",
                "State",
                9.96
            ],
            [
                "1789",
                "Treasury",
                11.1
            ],
            [
                "1849",
                "Interior",
                10.7
            ],
            [
                "1870",
                "Justice",
                23.4
            ],
            [
                "1889",
                "Agriculture",
                77.6
            ],
            [
                "1903",
                "Commerce",
                6.2
            ],
            [
                "1913",
                "Labor",
                59.7
            ],
            [
                "1947",
                "Defense",
                439.3
            ],
            [
                "1953",
                "Health and Human Services",
                543.2
            ],
            [
                "1965",
                "Housing and Urban Development",
                46.2
            ],
            [
                "1966",
                "Transportation",
                58.0
            ],
            [
                "1977",
                "Energy",
                21.5
            ],
            [
                "1979",
                "Education",
                62.8
            ],
            [
                "1989",
                "Veterans Affairs",
                73.2
            ],
            [
                "2002",
                "Homeland Security",
                44.6
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What are the maximum and minimum budget of the departments?",
        "cypher_query": "MATCH (d:department)\nRETURN max(d.Budget_in_Billions),min(d.Budget_in_Billions)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "d",
                "Budget_in_Billions"
            ],
            "Token_Name_Label": "department",
            "Token_Name_Function": [
                "max",
                "min"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                543.2,
                6.2
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What is the average number of employees of the departments whose rank is between 10 and 15?",
        "cypher_query": "MATCH (d:department)\nWHERE 10<=d.Ranking<=15\nRETURN avg(d.Num_Employees)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "d",
                "Ranking",
                "Num_Employees"
            ],
            "Token_Name_Label": "department",
            "Token_Literal_Number_Integer": [
                "10",
                "15"
            ],
            "Token_Operator": [
                "<=",
                "."
            ],
            "Token_Name_Function": "avg"
        },
        "answers": [
            [
                105468.16666666667
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What are the names of the heads who are born outside the California state?",
        "cypher_query": "MATCH (h:head)\nWHERE h.born_state<>'California'\nRETURN h.name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN",
                "name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "h",
                "born_state"
            ],
            "Token_Name_Label": "head",
            "Token_Operator": [
                ".",
                "<>"
            ],
            "Token_Literal_String": "'California'"
        },
        "answers": [
            [
                "Franklin Langham"
            ],
            [
                "Jeff Maggert"
            ],
            [
                "K. J. Choi"
            ],
            [
                "P\u00e1draig Harrington"
            ],
            [
                "Stewart Cink"
            ],
            [
                "Tiger Woods"
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What are the names of the states where at least 3 heads were born?",
        "cypher_query": "MATCH (h:head)\nWITH count(*) AS count, h.born_state AS born_state\nWHERE count >=3\nRETURN born_state",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "AS",
                "WHERE",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "h",
                "count",
                "born_state"
            ],
            "Token_Name_Label": "head",
            "Token_Name_Function": "count",
            "Token_Operator": [
                "*",
                ".",
                ">="
            ],
            "Token_Literal_Number_Integer": "3"
        },
        "answers": [
            [
                "California"
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "In which year were most departments established?",
        "cypher_query": "MATCH (d:department)\nWITH count(d.Creation) AS count, d.Creation AS Creation\nRETURN Creation\nORDER BY count DESC\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "AS",
                "RETURN",
                "ORDER BY",
                "DESC",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "d",
                "Creation",
                "count"
            ],
            "Token_Name_Label": "department",
            "Token_Name_Function": "count",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                "1789"
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "How many acting statuses are there?",
        "cypher_query": "MATCH (m:management)\nWITH DISTINCT m.temporary_acting AS temporary_acting\nRETURN count(temporary_acting)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH DISTINCT",
                "AS",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "m",
                "temporary_acting"
            ],
            "Token_Name_Label": "management",
            "Token_Operator": ".",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                0
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "Which head's name has the substring 'Ha'? List the id and name.",
        "cypher_query": "MATCH (h:head)\nWHERE h.name =~'.*Ha.*'\nRETURN h.head_ID,h.name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "h",
                "head_ID"
            ],
            "Token_Name_Label": "head",
            "Token_Operator": [
                ".",
                "=~"
            ],
            "Token_Literal_String": "'.*Ha.*'"
        },
        "answers": [
            [
                4,
                "Dudley Hart"
            ],
            [
                9,
                "P\u00e1draig Harrington"
            ]
        ]
    }
][
    {
        "db_id": "department_management",
        "question": "How many heads of the departments are older than 56 ?",
        "cypher_query": "MATCH (h:head)\nWHERE h.age>56\nRETURN count(*)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "h",
                "age"
            ],
            "Token_Name_Label": "head",
            "Token_Operator": [
                ".",
                ">",
                "*"
            ],
            "Token_Literal_Number_Integer": "56",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                5
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What are the maximum and minimum budget of the departments?",
        "cypher_query": "MATCH (d:department)\nRETURN max(d.Budget_in_Billions),min(d.Budget_in_Billions)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "d",
                "Budget_in_Billions"
            ],
            "Token_Name_Label": "department",
            "Token_Name_Function": [
                "max",
                "min"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                543.2,
                6.2
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What is the average number of employees of the departments whose rank is between 10 and 15?",
        "cypher_query": "MATCH (d:department)\nWHERE 10<=d.Ranking<=15\nRETURN avg(d.Num_Employees)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "d",
                "Ranking",
                "Num_Employees"
            ],
            "Token_Name_Label": "department",
            "Token_Literal_Number_Integer": [
                "10",
                "15"
            ],
            "Token_Operator": [
                "<=",
                "."
            ],
            "Token_Name_Function": "avg"
        },
        "answers": [
            [
                105468.16666666667
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What are the names of the heads who are born outside the California state?",
        "cypher_query": "MATCH (h:head)\nWHERE h.born_state<>'California'\nRETURN h.name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN",
                "name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "h",
                "born_state"
            ],
            "Token_Name_Label": "head",
            "Token_Operator": [
                ".",
                "<>"
            ],
            "Token_Literal_String": "'California'"
        },
        "answers": [
            [
                "Tiger Woods"
            ],
            [
                "K. J. Choi"
            ],
            [
                "Jeff Maggert"
            ],
            [
                "Stewart Cink"
            ],
            [
                "P\u00e1draig Harrington"
            ],
            [
                "Franklin Langham"
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What are the names of the states where at least 3 heads were born?",
        "cypher_query": "MATCH (h:head)\nWITH count(*) AS count, h.born_state AS born_state\nWHERE count >=3\nRETURN born_state",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "AS",
                "WHERE",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "h",
                "count",
                "born_state"
            ],
            "Token_Name_Label": "head",
            "Token_Name_Function": "count",
            "Token_Operator": [
                "*",
                ".",
                ">="
            ],
            "Token_Literal_Number_Integer": "3"
        },
        "answers": [
            [
                "California"
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "In which year were most departments established?",
        "cypher_query": "MATCH (d:department)\nWITH d.Creation AS Creation, count(d.Creation) AS count\nRETURN Creation\nORDER BY count DESC\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "AS",
                "RETURN",
                "ORDER BY",
                "DESC",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "d",
                "Creation",
                "count"
            ],
            "Token_Name_Label": "department",
            "Token_Operator": ".",
            "Token_Name_Function": "count",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                "1789"
            ]
        ]
    }
][
    {
        "db_id": "department_management",
        "question": "How many heads of the departments are older than 56 ?",
        "cypher_query": "MATCH (h:head)\nWHERE h.age>56\nRETURN count(*)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "h",
                "age"
            ],
            "Token_Name_Label": "head",
            "Token_Operator": [
                ".",
                ">",
                "*"
            ],
            "Token_Literal_Number_Integer": "56",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                5
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What are the maximum and minimum budget of the departments?",
        "cypher_query": "MATCH (d:department)\nRETURN max(d.Budget_in_Billions),min(d.Budget_in_Billions)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "d",
                "Budget_in_Billions"
            ],
            "Token_Name_Label": "department",
            "Token_Name_Function": [
                "max",
                "min"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                543.2,
                6.2
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What is the average number of employees of the departments whose rank is between 10 and 15?",
        "cypher_query": "MATCH (d:department)\nWHERE 10<=d.Ranking<=15\nRETURN avg(d.Num_Employees)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "d",
                "Ranking",
                "Num_Employees"
            ],
            "Token_Name_Label": "department",
            "Token_Literal_Number_Integer": [
                "10",
                "15"
            ],
            "Token_Operator": [
                "<=",
                "."
            ],
            "Token_Name_Function": "avg"
        },
        "answers": [
            [
                105468.16666666667
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What are the names of the heads who are born outside the California state?",
        "cypher_query": "MATCH (h:head)\nWHERE h.born_state<>'California'\nRETURN h.name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN",
                "name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "h",
                "born_state"
            ],
            "Token_Name_Label": "head",
            "Token_Operator": [
                ".",
                "<>"
            ],
            "Token_Literal_String": "'California'"
        },
        "answers": [
            [
                "Tiger Woods"
            ],
            [
                "K. J. Choi"
            ],
            [
                "Jeff Maggert"
            ],
            [
                "Stewart Cink"
            ],
            [
                "P\u00e1draig Harrington"
            ],
            [
                "Franklin Langham"
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What are the names of the states where at least 3 heads were born?",
        "cypher_query": "MATCH (h:head)\nWITH count(*) AS count, h.born_state AS born_state\nWHERE count >=3\nRETURN born_state",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "AS",
                "WHERE",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "h",
                "count",
                "born_state"
            ],
            "Token_Name_Label": "head",
            "Token_Name_Function": "count",
            "Token_Operator": [
                "*",
                ".",
                ">="
            ],
            "Token_Literal_Number_Integer": "3"
        },
        "answers": [
            [
                "California"
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "In which year were most departments established?",
        "cypher_query": "MATCH (d:department)\nWITH d.Creation AS Creation, count(d.Creation) AS count\nRETURN Creation\nORDER BY count DESC\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "AS",
                "RETURN",
                "ORDER BY",
                "DESC",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "d",
                "Creation",
                "count"
            ],
            "Token_Name_Label": "department",
            "Token_Operator": ".",
            "Token_Name_Function": "count",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                "1789"
            ]
        ]
    }
][][][
    {
        "db_id": "department_management",
        "question": "How many heads of the departments are older than 56 ?",
        "cypher_query": "MATCH (h:head)\nWHERE h.age>56\nRETURN count(*)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "h",
                "age"
            ],
            "Token_Name_Label": "head",
            "Token_Operator": [
                ".",
                ">",
                "*"
            ],
            "Token_Literal_Number_Integer": "56",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                5
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "List the name, born state and age of the heads of departments ordered by age.",
        "cypher_query": "MATCH (h:head)\nRETURN h.name,h.born_state,h.age\nORDER BY h.age",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "h",
                "born_state",
                "age"
            ],
            "Token_Name_Label": "head",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Billy Mayfair",
                "California",
                69.0
            ],
            [
                "Dudley Hart",
                "California",
                52.0
            ],
            [
                "Franklin Langham",
                "Connecticut",
                67.0
            ],
            [
                "Jeff Maggert",
                "Delaware",
                53.0
            ],
            [
                "K. J. Choi",
                "Alabama",
                69.0
            ],
            [
                "Nick Faldo",
                "California",
                56.0
            ],
            [
                "P\u00e1draig Harrington",
                "Connecticut",
                43.0
            ],
            [
                "Sergio Garc\u00eda",
                "California",
                68.0
            ],
            [
                "Stewart Cink",
                "Florida",
                50.0
            ],
            [
                "Tiger Woods",
                "Alabama",
                67.0
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "List the creation year, name and budget of each department.",
        "cypher_query": "MATCH (d:department)\nRETURN d.Creation,d.Name,d.Budget_in_Billions",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "d",
                "Creation",
                "Budget_in_Billions"
            ],
            "Token_Name_Label": "department",
            "Token_Operator": "."
        },
        "answers": [
            [
                "1789",
                "State",
                9.96
            ],
            [
                "1789",
                "Treasury",
                11.1
            ],
            [
                "1849",
                "Interior",
                10.7
            ],
            [
                "1870",
                "Justice",
                23.4
            ],
            [
                "1889",
                "Agriculture",
                77.6
            ],
            [
                "1903",
                "Commerce",
                6.2
            ],
            [
                "1913",
                "Labor",
                59.7
            ],
            [
                "1947",
                "Defense",
                439.3
            ],
            [
                "1953",
                "Health and Human Services",
                543.2
            ],
            [
                "1965",
                "Housing and Urban Development",
                46.2
            ],
            [
                "1966",
                "Transportation",
                58.0
            ],
            [
                "1977",
                "Energy",
                21.5
            ],
            [
                "1979",
                "Education",
                62.8
            ],
            [
                "1989",
                "Veterans Affairs",
                73.2
            ],
            [
                "2002",
                "Homeland Security",
                44.6
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What are the maximum and minimum budget of the departments?",
        "cypher_query": "MATCH (d:department)\nRETURN max(d.Budget_in_Billions),min(d.Budget_in_Billions)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "d",
                "Budget_in_Billions"
            ],
            "Token_Name_Label": "department",
            "Token_Name_Function": [
                "max",
                "min"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                543.2,
                6.2
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What is the average number of employees of the departments whose rank is between 10 and 15?",
        "cypher_query": "MATCH (d:department)\nWHERE 10<=d.Ranking<=15\nRETURN avg(d.Num_Employees)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "d",
                "Ranking",
                "Num_Employees"
            ],
            "Token_Name_Label": "department",
            "Token_Literal_Number_Integer": [
                "10",
                "15"
            ],
            "Token_Operator": [
                "<=",
                "."
            ],
            "Token_Name_Function": "avg"
        },
        "answers": [
            [
                105468.16666666667
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What are the names of the heads who are born outside the California state?",
        "cypher_query": "MATCH (h:head)\nWHERE h.born_state<>'California'\nRETURN h.name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN",
                "name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "h",
                "born_state"
            ],
            "Token_Name_Label": "head",
            "Token_Operator": [
                ".",
                "<>"
            ],
            "Token_Literal_String": "'California'"
        },
        "answers": [
            [
                "Franklin Langham"
            ],
            [
                "Jeff Maggert"
            ],
            [
                "K. J. Choi"
            ],
            [
                "P\u00e1draig Harrington"
            ],
            [
                "Stewart Cink"
            ],
            [
                "Tiger Woods"
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What are the names of the states where at least 3 heads were born?",
        "cypher_query": "MATCH (h:head)\nWITH h.born_state AS born_state, count(*) AS count\nWHERE count >=3\nRETURN born_state",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "AS",
                "WHERE",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "h",
                "born_state",
                "count"
            ],
            "Token_Name_Label": "head",
            "Token_Operator": [
                ".",
                "*",
                ">="
            ],
            "Token_Name_Function": "count",
            "Token_Literal_Number_Integer": "3"
        },
        "answers": [
            [
                "California"
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "In which year were most departments established?",
        "cypher_query": "MATCH (d:department)\nWITH d.Creation AS Creation, count(d.Creation) AS count\nRETURN Creation\nORDER BY count DESC\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "AS",
                "RETURN",
                "ORDER BY",
                "DESC",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "d",
                "Creation",
                "count"
            ],
            "Token_Name_Label": "department",
            "Token_Operator": ".",
            "Token_Name_Function": "count",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                "1789"
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "How many acting statuses are there?",
        "cypher_query": "MATCH (m:management)\nWITH DISTINCT m.temporary_acting AS temporary_acting\nRETURN count(temporary_acting)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH DISTINCT",
                "AS",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "m",
                "temporary_acting"
            ],
            "Token_Name_Label": "management",
            "Token_Operator": ".",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                0
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "Which head's name has the substring 'Ha'? List the id and name.",
        "cypher_query": "MATCH (h:head)\nWHERE h.name =~'.*Ha.*'\nRETURN h.head_ID,h.name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "h",
                "head_ID"
            ],
            "Token_Name_Label": "head",
            "Token_Operator": [
                ".",
                "=~"
            ],
            "Token_Literal_String": "'.*Ha.*'"
        },
        "answers": [
            [
                4,
                "Dudley Hart"
            ],
            [
                9,
                "P\u00e1draig Harrington"
            ]
        ]
    }
][
    {
        "db_id": "department_management",
        "question": "How many heads of the departments are older than 56 ?",
        "cypher_query": "MATCH (h:head)\nWHERE h.age>56\nRETURN count(*)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "h",
                "age"
            ],
            "Token_Name_Label": "head",
            "Token_Operator": [
                ".",
                ">",
                "*"
            ],
            "Token_Literal_Number_Integer": "56",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                5
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "List the name, born state and age of the heads of departments ordered by age.",
        "cypher_query": "MATCH (h:head)\nRETURN h.name,h.born_state,h.age\nORDER BY h.age",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "h",
                "born_state",
                "age"
            ],
            "Token_Name_Label": "head",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Billy Mayfair",
                "California",
                69.0
            ],
            [
                "Dudley Hart",
                "California",
                52.0
            ],
            [
                "Franklin Langham",
                "Connecticut",
                67.0
            ],
            [
                "Jeff Maggert",
                "Delaware",
                53.0
            ],
            [
                "K. J. Choi",
                "Alabama",
                69.0
            ],
            [
                "Nick Faldo",
                "California",
                56.0
            ],
            [
                "P\u00e1draig Harrington",
                "Connecticut",
                43.0
            ],
            [
                "Sergio Garc\u00eda",
                "California",
                68.0
            ],
            [
                "Stewart Cink",
                "Florida",
                50.0
            ],
            [
                "Tiger Woods",
                "Alabama",
                67.0
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "List the creation year, name and budget of each department.",
        "cypher_query": "MATCH (d:department)\nRETURN d.Creation,d.Name,d.Budget_in_Billions",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "d",
                "Creation",
                "Budget_in_Billions"
            ],
            "Token_Name_Label": "department",
            "Token_Operator": "."
        },
        "answers": [
            [
                "1789",
                "State",
                9.96
            ],
            [
                "1789",
                "Treasury",
                11.1
            ],
            [
                "1849",
                "Interior",
                10.7
            ],
            [
                "1870",
                "Justice",
                23.4
            ],
            [
                "1889",
                "Agriculture",
                77.6
            ],
            [
                "1903",
                "Commerce",
                6.2
            ],
            [
                "1913",
                "Labor",
                59.7
            ],
            [
                "1947",
                "Defense",
                439.3
            ],
            [
                "1953",
                "Health and Human Services",
                543.2
            ],
            [
                "1965",
                "Housing and Urban Development",
                46.2
            ],
            [
                "1966",
                "Transportation",
                58.0
            ],
            [
                "1977",
                "Energy",
                21.5
            ],
            [
                "1979",
                "Education",
                62.8
            ],
            [
                "1989",
                "Veterans Affairs",
                73.2
            ],
            [
                "2002",
                "Homeland Security",
                44.6
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What are the maximum and minimum budget of the departments?",
        "cypher_query": "MATCH (d:department)\nRETURN max(d.Budget_in_Billions),min(d.Budget_in_Billions)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "d",
                "Budget_in_Billions"
            ],
            "Token_Name_Label": "department",
            "Token_Name_Function": [
                "max",
                "min"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                543.2,
                6.2
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What is the average number of employees of the departments whose rank is between 10 and 15?",
        "cypher_query": "MATCH (d:department)\nWHERE 10<=d.Ranking<=15\nRETURN avg(d.Num_Employees)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "d",
                "Ranking",
                "Num_Employees"
            ],
            "Token_Name_Label": "department",
            "Token_Literal_Number_Integer": [
                "10",
                "15"
            ],
            "Token_Operator": [
                "<=",
                "."
            ],
            "Token_Name_Function": "avg"
        },
        "answers": [
            [
                105468.16666666667
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What are the names of the heads who are born outside the California state?",
        "cypher_query": "MATCH (h:head)\nWHERE h.born_state<>'California'\nRETURN h.name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN",
                "name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "h",
                "born_state"
            ],
            "Token_Name_Label": "head",
            "Token_Operator": [
                ".",
                "<>"
            ],
            "Token_Literal_String": "'California'"
        },
        "answers": [
            [
                "Franklin Langham"
            ],
            [
                "Jeff Maggert"
            ],
            [
                "K. J. Choi"
            ],
            [
                "P\u00e1draig Harrington"
            ],
            [
                "Stewart Cink"
            ],
            [
                "Tiger Woods"
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What are the names of the states where at least 3 heads were born?",
        "cypher_query": "MATCH (h:head)\nWITH count(*) AS count, h.born_state AS born_state\nWHERE count >=3\nRETURN born_state",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "AS",
                "WHERE",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "h",
                "count",
                "born_state"
            ],
            "Token_Name_Label": "head",
            "Token_Name_Function": "count",
            "Token_Operator": [
                "*",
                ".",
                ">="
            ],
            "Token_Literal_Number_Integer": "3"
        },
        "answers": [
            [
                "California"
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "In which year were most departments established?",
        "cypher_query": "MATCH (d:department)\nWITH d.Creation AS Creation, count(d.Creation) AS count\nRETURN Creation\nORDER BY count DESC\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "AS",
                "RETURN",
                "ORDER BY",
                "DESC",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "d",
                "Creation",
                "count"
            ],
            "Token_Name_Label": "department",
            "Token_Operator": ".",
            "Token_Name_Function": "count",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                "1789"
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "How many acting statuses are there?",
        "cypher_query": "MATCH (m:management)\nWITH DISTINCT m.temporary_acting AS temporary_acting\nRETURN count(temporary_acting)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH DISTINCT",
                "AS",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "m",
                "temporary_acting"
            ],
            "Token_Name_Label": "management",
            "Token_Operator": ".",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                0
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "Which head's name has the substring 'Ha'? List the id and name.",
        "cypher_query": "MATCH (h:head)\nWHERE h.name =~'.*Ha.*'\nRETURN h.head_ID,h.name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "h",
                "head_ID"
            ],
            "Token_Name_Label": "head",
            "Token_Operator": [
                ".",
                "=~"
            ],
            "Token_Literal_String": "'.*Ha.*'"
        },
        "answers": [
            [
                4,
                "Dudley Hart"
            ],
            [
                9,
                "P\u00e1draig Harrington"
            ]
        ]
    }
][
    {
        "db_id": "department_management",
        "question": "How many heads of the departments are older than 56 ?",
        "cypher_query": "MATCH (h:head)\nWHERE h.age>56\nRETURN count(*)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "h",
                "age"
            ],
            "Token_Name_Label": "head",
            "Token_Operator": [
                ".",
                ">",
                "*"
            ],
            "Token_Literal_Number_Integer": "56",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                5
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "List the name, born state and age of the heads of departments ordered by age.",
        "cypher_query": "MATCH (h:head)\nRETURN h.name,h.born_state,h.age\nORDER BY h.age",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "h",
                "born_state",
                "age"
            ],
            "Token_Name_Label": "head",
            "Token_Operator": "."
        },
        "answers": [
            [
                "P\u00e1draig Harrington",
                "Connecticut",
                43.0
            ],
            [
                "Stewart Cink",
                "Florida",
                50.0
            ],
            [
                "Dudley Hart",
                "California",
                52.0
            ],
            [
                "Jeff Maggert",
                "Delaware",
                53.0
            ],
            [
                "Nick Faldo",
                "California",
                56.0
            ],
            [
                "Tiger Woods",
                "Alabama",
                67.0
            ],
            [
                "Franklin Langham",
                "Connecticut",
                67.0
            ],
            [
                "Sergio Garc\u00eda",
                "California",
                68.0
            ],
            [
                "K. J. Choi",
                "Alabama",
                69.0
            ],
            [
                "Billy Mayfair",
                "California",
                69.0
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What are the maximum and minimum budget of the departments?",
        "cypher_query": "MATCH (d:department)\nRETURN max(d.Budget_in_Billions),min(d.Budget_in_Billions)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "d",
                "Budget_in_Billions"
            ],
            "Token_Name_Label": "department",
            "Token_Name_Function": [
                "max",
                "min"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                543.2,
                6.2
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What is the average number of employees of the departments whose rank is between 10 and 15?",
        "cypher_query": "MATCH (d:department)\nWHERE 10<=d.Ranking<=15\nRETURN avg(d.Num_Employees)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "d",
                "Ranking",
                "Num_Employees"
            ],
            "Token_Name_Label": "department",
            "Token_Literal_Number_Integer": [
                "10",
                "15"
            ],
            "Token_Operator": [
                "<=",
                "."
            ],
            "Token_Name_Function": "avg"
        },
        "answers": [
            [
                105468.16666666667
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What are the names of the heads who are born outside the California state?",
        "cypher_query": "MATCH (h:head)\nWHERE h.born_state<>'California'\nRETURN h.name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN",
                "name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "h",
                "born_state"
            ],
            "Token_Name_Label": "head",
            "Token_Operator": [
                ".",
                "<>"
            ],
            "Token_Literal_String": "'California'"
        },
        "answers": [
            [
                "Tiger Woods"
            ],
            [
                "K. J. Choi"
            ],
            [
                "Jeff Maggert"
            ],
            [
                "Stewart Cink"
            ],
            [
                "P\u00e1draig Harrington"
            ],
            [
                "Franklin Langham"
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What are the names of the states where at least 3 heads were born?",
        "cypher_query": "MATCH (h:head)\nWITH count(*) AS count, h.born_state AS born_state\nWHERE count >=3\nRETURN born_state",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "AS",
                "WHERE",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "h",
                "count",
                "born_state"
            ],
            "Token_Name_Label": "head",
            "Token_Name_Function": "count",
            "Token_Operator": [
                "*",
                ".",
                ">="
            ],
            "Token_Literal_Number_Integer": "3"
        },
        "answers": [
            [
                "California"
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "In which year were most departments established?",
        "cypher_query": "MATCH (d:department)\nWITH d.Creation AS Creation, count(d.Creation) AS count\nRETURN Creation\nORDER BY count DESC\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "AS",
                "RETURN",
                "ORDER BY",
                "DESC",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "d",
                "Creation",
                "count"
            ],
            "Token_Name_Label": "department",
            "Token_Operator": ".",
            "Token_Name_Function": "count",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                "1789"
            ]
        ]
    }
][
    {
        "db_id": "department_management",
        "question": "How many heads of the departments are older than 56 ?",
        "cypher_query": "MATCH (h:head)\nWHERE h.age>56\nRETURN count(*)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "h",
                "age"
            ],
            "Token_Name_Label": "head",
            "Token_Operator": [
                ".",
                ">",
                "*"
            ],
            "Token_Literal_Number_Integer": "56",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                5
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "List the name, born state and age of the heads of departments ordered by age.",
        "cypher_query": "MATCH (h:head)\nRETURN h.name,h.born_state,h.age\nORDER BY h.age",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "h",
                "born_state",
                "age"
            ],
            "Token_Name_Label": "head",
            "Token_Operator": "."
        },
        "answers": [
            [
                "P\u00e1draig Harrington",
                "Connecticut",
                43.0
            ],
            [
                "Stewart Cink",
                "Florida",
                50.0
            ],
            [
                "Dudley Hart",
                "California",
                52.0
            ],
            [
                "Jeff Maggert",
                "Delaware",
                53.0
            ],
            [
                "Nick Faldo",
                "California",
                56.0
            ],
            [
                "Tiger Woods",
                "Alabama",
                67.0
            ],
            [
                "Franklin Langham",
                "Connecticut",
                67.0
            ],
            [
                "Sergio Garc\u00eda",
                "California",
                68.0
            ],
            [
                "K. J. Choi",
                "Alabama",
                69.0
            ],
            [
                "Billy Mayfair",
                "California",
                69.0
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What are the maximum and minimum budget of the departments?",
        "cypher_query": "MATCH (d:department)\nRETURN max(d.Budget_in_Billions),min(d.Budget_in_Billions)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "d",
                "Budget_in_Billions"
            ],
            "Token_Name_Label": "department",
            "Token_Name_Function": [
                "max",
                "min"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                543.2,
                6.2
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What is the average number of employees of the departments whose rank is between 10 and 15?",
        "cypher_query": "MATCH (d:department)\nWHERE 10<=d.Ranking<=15\nRETURN avg(d.Num_Employees)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "d",
                "Ranking",
                "Num_Employees"
            ],
            "Token_Name_Label": "department",
            "Token_Literal_Number_Integer": [
                "10",
                "15"
            ],
            "Token_Operator": [
                "<=",
                "."
            ],
            "Token_Name_Function": "avg"
        },
        "answers": [
            [
                105468.16666666667
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What are the names of the heads who are born outside the California state?",
        "cypher_query": "MATCH (h:head)\nWHERE h.born_state<>'California'\nRETURN h.name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN",
                "name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "h",
                "born_state"
            ],
            "Token_Name_Label": "head",
            "Token_Operator": [
                ".",
                "<>"
            ],
            "Token_Literal_String": "'California'"
        },
        "answers": [
            [
                "Tiger Woods"
            ],
            [
                "K. J. Choi"
            ],
            [
                "Jeff Maggert"
            ],
            [
                "Stewart Cink"
            ],
            [
                "P\u00e1draig Harrington"
            ],
            [
                "Franklin Langham"
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What are the names of the states where at least 3 heads were born?",
        "cypher_query": "MATCH (h:head)\nWITH count(*) AS count, h.born_state AS born_state\nWHERE count >=3\nRETURN born_state",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "AS",
                "WHERE",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "h",
                "count",
                "born_state"
            ],
            "Token_Name_Label": "head",
            "Token_Name_Function": "count",
            "Token_Operator": [
                "*",
                ".",
                ">="
            ],
            "Token_Literal_Number_Integer": "3"
        },
        "answers": [
            [
                "California"
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "In which year were most departments established?",
        "cypher_query": "MATCH (d:department)\nWITH count(d.Creation) AS count, d.Creation AS Creation\nRETURN Creation\nORDER BY count DESC\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "AS",
                "RETURN",
                "ORDER BY",
                "DESC",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "d",
                "Creation",
                "count"
            ],
            "Token_Name_Label": "department",
            "Token_Name_Function": "count",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                "1789"
            ]
        ]
    }
][
    {
        "db_id": "department_management",
        "question": "How many heads of the departments are older than 56 ?",
        "cypher_query": "MATCH (h:head)\nWHERE h.age>56\nRETURN count(*)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "h",
                "age"
            ],
            "Token_Name_Label": "head",
            "Token_Operator": [
                ".",
                ">",
                "*"
            ],
            "Token_Literal_Number_Integer": "56",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                5
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "List the name, born state and age of the heads of departments ordered by age.",
        "cypher_query": "MATCH (h:head)\nRETURN h.name,h.born_state,h.age\nORDER BY h.age",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "h",
                "born_state",
                "age"
            ],
            "Token_Name_Label": "head",
            "Token_Operator": "."
        },
        "answers": [
            [
                "P\u00e1draig Harrington",
                "Connecticut",
                43.0
            ],
            [
                "Stewart Cink",
                "Florida",
                50.0
            ],
            [
                "Dudley Hart",
                "California",
                52.0
            ],
            [
                "Jeff Maggert",
                "Delaware",
                53.0
            ],
            [
                "Nick Faldo",
                "California",
                56.0
            ],
            [
                "Tiger Woods",
                "Alabama",
                67.0
            ],
            [
                "Franklin Langham",
                "Connecticut",
                67.0
            ],
            [
                "Sergio Garc\u00eda",
                "California",
                68.0
            ],
            [
                "K. J. Choi",
                "Alabama",
                69.0
            ],
            [
                "Billy Mayfair",
                "California",
                69.0
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What are the maximum and minimum budget of the departments?",
        "cypher_query": "MATCH (d:department)\nRETURN max(d.Budget_in_Billions),min(d.Budget_in_Billions)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "d",
                "Budget_in_Billions"
            ],
            "Token_Name_Label": "department",
            "Token_Name_Function": [
                "max",
                "min"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                543.2,
                6.2
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What is the average number of employees of the departments whose rank is between 10 and 15?",
        "cypher_query": "MATCH (d:department)\nWHERE 10<=d.Ranking<=15\nRETURN avg(d.Num_Employees)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "d",
                "Ranking",
                "Num_Employees"
            ],
            "Token_Name_Label": "department",
            "Token_Literal_Number_Integer": [
                "10",
                "15"
            ],
            "Token_Operator": [
                "<=",
                "."
            ],
            "Token_Name_Function": "avg"
        },
        "answers": [
            [
                105468.16666666667
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What are the names of the heads who are born outside the California state?",
        "cypher_query": "MATCH (h:head)\nWHERE h.born_state<>'California'\nRETURN h.name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN",
                "name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "h",
                "born_state"
            ],
            "Token_Name_Label": "head",
            "Token_Operator": [
                ".",
                "<>"
            ],
            "Token_Literal_String": "'California'"
        },
        "answers": [
            [
                "Tiger Woods"
            ],
            [
                "K. J. Choi"
            ],
            [
                "Jeff Maggert"
            ],
            [
                "Stewart Cink"
            ],
            [
                "P\u00e1draig Harrington"
            ],
            [
                "Franklin Langham"
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What are the names of the states where at least 3 heads were born?",
        "cypher_query": "MATCH (h:head)\nWITH count(*) AS count, h.born_state AS born_state\nWHERE count >=3\nRETURN born_state",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "AS",
                "WHERE",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "h",
                "count",
                "born_state"
            ],
            "Token_Name_Label": "head",
            "Token_Name_Function": "count",
            "Token_Operator": [
                "*",
                ".",
                ">="
            ],
            "Token_Literal_Number_Integer": "3"
        },
        "answers": [
            [
                "California"
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "In which year were most departments established?",
        "cypher_query": "MATCH (d:department)\nWITH d.Creation AS Creation, count(d.Creation) AS count\nRETURN Creation\nORDER BY count DESC\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "AS",
                "RETURN",
                "ORDER BY",
                "DESC",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "d",
                "Creation",
                "count"
            ],
            "Token_Name_Label": "department",
            "Token_Operator": ".",
            "Token_Name_Function": "count",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                "1789"
            ]
        ]
    }
][
    {
        "db_id": "department_management",
        "question": "How many heads of the departments are older than 56 ?",
        "cypher_query": "MATCH (h:head)\nWHERE h.age>56\nRETURN count(*)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "h",
                "age"
            ],
            "Token_Name_Label": "head",
            "Token_Operator": [
                ".",
                ">",
                "*"
            ],
            "Token_Literal_Number_Integer": "56",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                5
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "List the name, born state and age of the heads of departments ordered by age.",
        "cypher_query": "MATCH (h:head)\nRETURN h.name,h.born_state,h.age\nORDER BY h.age",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "h",
                "born_state",
                "age"
            ],
            "Token_Name_Label": "head",
            "Token_Operator": "."
        },
        "answers": [
            [
                "P\u00e1draig Harrington",
                "Connecticut",
                43.0
            ],
            [
                "Stewart Cink",
                "Florida",
                50.0
            ],
            [
                "Dudley Hart",
                "California",
                52.0
            ],
            [
                "Jeff Maggert",
                "Delaware",
                53.0
            ],
            [
                "Nick Faldo",
                "California",
                56.0
            ],
            [
                "Tiger Woods",
                "Alabama",
                67.0
            ],
            [
                "Franklin Langham",
                "Connecticut",
                67.0
            ],
            [
                "Sergio Garc\u00eda",
                "California",
                68.0
            ],
            [
                "K. J. Choi",
                "Alabama",
                69.0
            ],
            [
                "Billy Mayfair",
                "California",
                69.0
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What are the maximum and minimum budget of the departments?",
        "cypher_query": "MATCH (d:department)\nRETURN max(d.Budget_in_Billions),min(d.Budget_in_Billions)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "d",
                "Budget_in_Billions"
            ],
            "Token_Name_Label": "department",
            "Token_Name_Function": [
                "max",
                "min"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                543.2,
                6.2
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What is the average number of employees of the departments whose rank is between 10 and 15?",
        "cypher_query": "MATCH (d:department)\nWHERE 10<=d.Ranking<=15\nRETURN avg(d.Num_Employees)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "d",
                "Ranking",
                "Num_Employees"
            ],
            "Token_Name_Label": "department",
            "Token_Literal_Number_Integer": [
                "10",
                "15"
            ],
            "Token_Operator": [
                "<=",
                "."
            ],
            "Token_Name_Function": "avg"
        },
        "answers": [
            [
                105468.16666666667
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What are the names of the heads who are born outside the California state?",
        "cypher_query": "MATCH (h:head)\nWHERE h.born_state<>'California'\nRETURN h.name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN",
                "name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "h",
                "born_state"
            ],
            "Token_Name_Label": "head",
            "Token_Operator": [
                ".",
                "<>"
            ],
            "Token_Literal_String": "'California'"
        },
        "answers": [
            [
                "Tiger Woods"
            ],
            [
                "K. J. Choi"
            ],
            [
                "Jeff Maggert"
            ],
            [
                "Stewart Cink"
            ],
            [
                "P\u00e1draig Harrington"
            ],
            [
                "Franklin Langham"
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What are the names of the states where at least 3 heads were born?",
        "cypher_query": "MATCH (h:head)\nWITH count(*) AS count, h.born_state AS born_state\nWHERE count >=3\nRETURN born_state",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "AS",
                "WHERE",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "h",
                "count",
                "born_state"
            ],
            "Token_Name_Label": "head",
            "Token_Name_Function": "count",
            "Token_Operator": [
                "*",
                ".",
                ">="
            ],
            "Token_Literal_Number_Integer": "3"
        },
        "answers": [
            [
                "California"
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "In which year were most departments established?",
        "cypher_query": "MATCH (d:department)\nWITH d.Creation AS Creation, count(d.Creation) AS count\nRETURN Creation\nORDER BY count DESC\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "AS",
                "RETURN",
                "ORDER BY",
                "DESC",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "d",
                "Creation",
                "count"
            ],
            "Token_Name_Label": "department",
            "Token_Operator": ".",
            "Token_Name_Function": "count",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                "1789"
            ]
        ]
    }
][][
    {
        "db_id": "department_management",
        "question": "How many heads of the departments are older than 56 ?",
        "cypher_query": "MATCH (h:head)\nWHERE h.age>56\nRETURN count(*)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "h",
                "age"
            ],
            "Token_Name_Label": "head",
            "Token_Operator": [
                ".",
                ">",
                "*"
            ],
            "Token_Literal_Number_Integer": "56",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                5
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What is the average number of employees of the departments whose rank is between 10 and 15?",
        "cypher_query": "MATCH (d:department)\nWHERE 10<=d.Ranking<=15\nRETURN avg(d.Num_Employees)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "d",
                "Ranking",
                "Num_Employees"
            ],
            "Token_Name_Label": "department",
            "Token_Literal_Number_Integer": [
                "10",
                "15"
            ],
            "Token_Operator": [
                "<=",
                "."
            ],
            "Token_Name_Function": "avg"
        },
        "answers": [
            [
                105468.16666666667
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What are the names of the heads who are born outside the California state?",
        "cypher_query": "MATCH (h:head)\nWHERE h.born_state<>'California'\nRETURN h.name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN",
                "name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "h",
                "born_state"
            ],
            "Token_Name_Label": "head",
            "Token_Operator": [
                ".",
                "<>"
            ],
            "Token_Literal_String": "'California'"
        },
        "answers": [
            [
                "Tiger Woods"
            ],
            [
                "K. J. Choi"
            ],
            [
                "Jeff Maggert"
            ],
            [
                "Stewart Cink"
            ],
            [
                "P\u00e1draig Harrington"
            ],
            [
                "Franklin Langham"
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What are the names of the states where at least 3 heads were born?",
        "cypher_query": "MATCH (h:head)\nWITH count(*) AS count, h.born_state AS born_state\nWHERE count >=3\nRETURN born_state",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "AS",
                "WHERE",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "h",
                "count",
                "born_state"
            ],
            "Token_Name_Label": "head",
            "Token_Name_Function": "count",
            "Token_Operator": [
                "*",
                ".",
                ">="
            ],
            "Token_Literal_Number_Integer": "3"
        },
        "answers": [
            [
                "California"
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "In which year were most departments established?",
        "cypher_query": "MATCH (d:department)\nWITH count(d.Creation) AS count, d.Creation AS Creation\nRETURN Creation\nORDER BY count DESC\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "AS",
                "RETURN",
                "ORDER BY",
                "DESC",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "d",
                "Creation",
                "count"
            ],
            "Token_Name_Label": "department",
            "Token_Name_Function": "count",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                "1789"
            ]
        ]
    }
][
    {
        "db_id": "department_management",
        "question": "How many heads of the departments are older than 56 ?",
        "cypher_query": "MATCH (h:head)\nWHERE h.age>56\nRETURN count(*)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "h",
                "age"
            ],
            "Token_Name_Label": "head",
            "Token_Operator": [
                ".",
                ">",
                "*"
            ],
            "Token_Literal_Number_Integer": "56",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                5
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What is the average number of employees of the departments whose rank is between 10 and 15?",
        "cypher_query": "MATCH (d:department)\nWHERE 10<=d.Ranking<=15\nRETURN avg(d.Num_Employees)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "d",
                "Ranking",
                "Num_Employees"
            ],
            "Token_Name_Label": "department",
            "Token_Literal_Number_Integer": [
                "10",
                "15"
            ],
            "Token_Operator": [
                "<=",
                "."
            ],
            "Token_Name_Function": "avg"
        },
        "answers": [
            [
                105468.16666666667
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What are the names of the heads who are born outside the California state?",
        "cypher_query": "MATCH (h:head)\nWHERE h.born_state<>'California'\nRETURN h.name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN",
                "name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "h",
                "born_state"
            ],
            "Token_Name_Label": "head",
            "Token_Operator": [
                ".",
                "<>"
            ],
            "Token_Literal_String": "'California'"
        },
        "answers": [
            [
                "Tiger Woods"
            ],
            [
                "K. J. Choi"
            ],
            [
                "Jeff Maggert"
            ],
            [
                "Stewart Cink"
            ],
            [
                "P\u00e1draig Harrington"
            ],
            [
                "Franklin Langham"
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What are the names of the states where at least 3 heads were born?",
        "cypher_query": "MATCH (h:head)\nWITH h.born_state AS born_state, count(*) AS count\nWHERE count >=3\nRETURN born_state",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "AS",
                "WHERE",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "h",
                "born_state",
                "count"
            ],
            "Token_Name_Label": "head",
            "Token_Operator": [
                ".",
                "*",
                ">="
            ],
            "Token_Name_Function": "count",
            "Token_Literal_Number_Integer": "3"
        },
        "answers": [
            [
                "California"
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "In which year were most departments established?",
        "cypher_query": "MATCH (d:department)\nWITH d.Creation AS Creation, count(d.Creation) AS count\nRETURN Creation\nORDER BY count DESC\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "AS",
                "RETURN",
                "ORDER BY",
                "DESC",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "d",
                "Creation",
                "count"
            ],
            "Token_Name_Label": "department",
            "Token_Operator": ".",
            "Token_Name_Function": "count",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                "1789"
            ]
        ]
    }
][][
    {
        "db_id": "department_management",
        "question": "How many heads of the departments are older than 56 ?",
        "cypher_query": "MATCH (h:head)\nWHERE h.age>56\nRETURN count(*)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "h",
                "age"
            ],
            "Token_Name_Label": "head",
            "Token_Operator": [
                ".",
                ">",
                "*"
            ],
            "Token_Literal_Number_Integer": "56",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                5
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "List the name, born state and age of the heads of departments ordered by age.",
        "cypher_query": "MATCH (h:head)\nRETURN h.name,h.born_state,h.age\nORDER BY h.age",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "h",
                "born_state",
                "age"
            ],
            "Token_Name_Label": "head",
            "Token_Operator": "."
        },
        "answers": [
            [
                "P\u00e1draig Harrington",
                "Connecticut",
                43.0
            ],
            [
                "Stewart Cink",
                "Florida",
                50.0
            ],
            [
                "Dudley Hart",
                "California",
                52.0
            ],
            [
                "Jeff Maggert",
                "Delaware",
                53.0
            ],
            [
                "Nick Faldo",
                "California",
                56.0
            ],
            [
                "Tiger Woods",
                "Alabama",
                67.0
            ],
            [
                "Franklin Langham",
                "Connecticut",
                67.0
            ],
            [
                "Sergio Garc\u00eda",
                "California",
                68.0
            ],
            [
                "K. J. Choi",
                "Alabama",
                69.0
            ],
            [
                "Billy Mayfair",
                "California",
                69.0
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "List the creation year, name and budget of each department.",
        "cypher_query": "MATCH (d:department)\nRETURN d.Creation,d.Name,d.Budget_in_Billions",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "d",
                "Creation",
                "Budget_in_Billions"
            ],
            "Token_Name_Label": "department",
            "Token_Operator": "."
        },
        "answers": [
            [
                "1789",
                "State",
                9.96
            ],
            [
                "1789",
                "Treasury",
                11.1
            ],
            [
                "1947",
                "Defense",
                439.3
            ],
            [
                "1870",
                "Justice",
                23.4
            ],
            [
                "1849",
                "Interior",
                10.7
            ],
            [
                "1889",
                "Agriculture",
                77.6
            ],
            [
                "1903",
                "Commerce",
                6.2
            ],
            [
                "1913",
                "Labor",
                59.7
            ],
            [
                "1953",
                "Health and Human Services",
                543.2
            ],
            [
                "1965",
                "Housing and Urban Development",
                46.2
            ],
            [
                "1966",
                "Transportation",
                58.0
            ],
            [
                "1977",
                "Energy",
                21.5
            ],
            [
                "1979",
                "Education",
                62.8
            ],
            [
                "1989",
                "Veterans Affairs",
                73.2
            ],
            [
                "2002",
                "Homeland Security",
                44.6
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What are the maximum and minimum budget of the departments?",
        "cypher_query": "MATCH (d:department)\nRETURN max(d.Budget_in_Billions),min(d.Budget_in_Billions)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "d",
                "Budget_in_Billions"
            ],
            "Token_Name_Label": "department",
            "Token_Name_Function": [
                "max",
                "min"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                543.2,
                6.2
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What is the average number of employees of the departments whose rank is between 10 and 15?",
        "cypher_query": "MATCH (d:department)\nWHERE 10<=d.Ranking<=15\nRETURN avg(d.Num_Employees)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "d",
                "Ranking",
                "Num_Employees"
            ],
            "Token_Name_Label": "department",
            "Token_Literal_Number_Integer": [
                "10",
                "15"
            ],
            "Token_Operator": [
                "<=",
                "."
            ],
            "Token_Name_Function": "avg"
        },
        "answers": [
            [
                105468.16666666667
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What are the names of the heads who are born outside the California state?",
        "cypher_query": "MATCH (h:head)\nWHERE h.born_state<>'California'\nRETURN h.name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN",
                "name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "h",
                "born_state"
            ],
            "Token_Name_Label": "head",
            "Token_Operator": [
                ".",
                "<>"
            ],
            "Token_Literal_String": "'California'"
        },
        "answers": [
            [
                "Tiger Woods"
            ],
            [
                "K. J. Choi"
            ],
            [
                "Jeff Maggert"
            ],
            [
                "Stewart Cink"
            ],
            [
                "P\u00e1draig Harrington"
            ],
            [
                "Franklin Langham"
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What are the names of the states where at least 3 heads were born?",
        "cypher_query": "MATCH (h:head)\nWITH count(*) AS count, h.born_state AS born_state\nWHERE count >=3\nRETURN born_state",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "AS",
                "WHERE",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "h",
                "count",
                "born_state"
            ],
            "Token_Name_Label": "head",
            "Token_Name_Function": "count",
            "Token_Operator": [
                "*",
                ".",
                ">="
            ],
            "Token_Literal_Number_Integer": "3"
        },
        "answers": [
            [
                "California"
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "In which year were most departments established?",
        "cypher_query": "MATCH (d:department)\nWITH count(d.Creation) AS count, d.Creation AS Creation\nRETURN Creation\nORDER BY count DESC\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "AS",
                "RETURN",
                "ORDER BY",
                "DESC",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "d",
                "Creation",
                "count"
            ],
            "Token_Name_Label": "department",
            "Token_Name_Function": "count",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                "1789"
            ]
        ]
    }
][
    {
        "db_id": "department_management",
        "question": "How many heads of the departments are older than 56 ?",
        "cypher_query": "MATCH (h:head)\nWHERE h.age>56\nRETURN count(*)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "h",
                "age"
            ],
            "Token_Name_Label": "head",
            "Token_Operator": [
                ".",
                ">",
                "*"
            ],
            "Token_Literal_Number_Integer": "56",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                5
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "List the name, born state and age of the heads of departments ordered by age.",
        "cypher_query": "MATCH (h:head)\nRETURN h.name,h.born_state,h.age\nORDER BY h.age",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "h",
                "born_state",
                "age"
            ],
            "Token_Name_Label": "head",
            "Token_Operator": "."
        },
        "answers": [
            [
                "P\u00e1draig Harrington",
                "Connecticut",
                43.0
            ],
            [
                "Stewart Cink",
                "Florida",
                50.0
            ],
            [
                "Dudley Hart",
                "California",
                52.0
            ],
            [
                "Jeff Maggert",
                "Delaware",
                53.0
            ],
            [
                "Nick Faldo",
                "California",
                56.0
            ],
            [
                "Tiger Woods",
                "Alabama",
                67.0
            ],
            [
                "Franklin Langham",
                "Connecticut",
                67.0
            ],
            [
                "Sergio Garc\u00eda",
                "California",
                68.0
            ],
            [
                "K. J. Choi",
                "Alabama",
                69.0
            ],
            [
                "Billy Mayfair",
                "California",
                69.0
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "List the creation year, name and budget of each department.",
        "cypher_query": "MATCH (d:department)\nRETURN d.Creation,d.Name,d.Budget_in_Billions",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "d",
                "Creation",
                "Budget_in_Billions"
            ],
            "Token_Name_Label": "department",
            "Token_Operator": "."
        },
        "answers": [
            [
                "1789",
                "State",
                9.96
            ],
            [
                "1789",
                "Treasury",
                11.1
            ],
            [
                "1947",
                "Defense",
                439.3
            ],
            [
                "1870",
                "Justice",
                23.4
            ],
            [
                "1849",
                "Interior",
                10.7
            ],
            [
                "1889",
                "Agriculture",
                77.6
            ],
            [
                "1903",
                "Commerce",
                6.2
            ],
            [
                "1913",
                "Labor",
                59.7
            ],
            [
                "1953",
                "Health and Human Services",
                543.2
            ],
            [
                "1965",
                "Housing and Urban Development",
                46.2
            ],
            [
                "1966",
                "Transportation",
                58.0
            ],
            [
                "1977",
                "Energy",
                21.5
            ],
            [
                "1979",
                "Education",
                62.8
            ],
            [
                "1989",
                "Veterans Affairs",
                73.2
            ],
            [
                "2002",
                "Homeland Security",
                44.6
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What are the maximum and minimum budget of the departments?",
        "cypher_query": "MATCH (d:department)\nRETURN max(d.Budget_in_Billions),min(d.Budget_in_Billions)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "d",
                "Budget_in_Billions"
            ],
            "Token_Name_Label": "department",
            "Token_Name_Function": [
                "max",
                "min"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                543.2,
                6.2
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What is the average number of employees of the departments whose rank is between 10 and 15?",
        "cypher_query": "MATCH (d:department)\nWHERE 10<=d.Ranking<=15\nRETURN avg(d.Num_Employees)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "d",
                "Ranking",
                "Num_Employees"
            ],
            "Token_Name_Label": "department",
            "Token_Literal_Number_Integer": [
                "10",
                "15"
            ],
            "Token_Operator": [
                "<=",
                "."
            ],
            "Token_Name_Function": "avg"
        },
        "answers": [
            [
                105468.16666666667
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What are the names of the heads who are born outside the California state?",
        "cypher_query": "MATCH (h:head)\nWHERE h.born_state<>'California'\nRETURN h.name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN",
                "name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "h",
                "born_state"
            ],
            "Token_Name_Label": "head",
            "Token_Operator": [
                ".",
                "<>"
            ],
            "Token_Literal_String": "'California'"
        },
        "answers": [
            [
                "Tiger Woods"
            ],
            [
                "K. J. Choi"
            ],
            [
                "Jeff Maggert"
            ],
            [
                "Stewart Cink"
            ],
            [
                "P\u00e1draig Harrington"
            ],
            [
                "Franklin Langham"
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What are the names of the states where at least 3 heads were born?",
        "cypher_query": "MATCH (h:head)\nWITH h.born_state AS born_state, count(*) AS count\nWHERE count >=3\nRETURN born_state",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "AS",
                "WHERE",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "h",
                "born_state",
                "count"
            ],
            "Token_Name_Label": "head",
            "Token_Operator": [
                ".",
                "*",
                ">="
            ],
            "Token_Name_Function": "count",
            "Token_Literal_Number_Integer": "3"
        },
        "answers": [
            [
                "California"
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "In which year were most departments established?",
        "cypher_query": "MATCH (d:department)\nWITH d.Creation AS Creation, count(d.Creation) AS count\nRETURN Creation\nORDER BY count DESC\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "AS",
                "RETURN",
                "ORDER BY",
                "DESC",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "d",
                "Creation",
                "count"
            ],
            "Token_Name_Label": "department",
            "Token_Operator": ".",
            "Token_Name_Function": "count",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                "1789"
            ]
        ]
    }
][
    {
        "db_id": "department_management",
        "question": "How many heads of the departments are older than 56 ?",
        "cypher_query": "MATCH (h:head)\nWHERE h.age>56\nRETURN count(*)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "h",
                "age"
            ],
            "Token_Name_Label": "head",
            "Token_Operator": [
                ".",
                ">",
                "*"
            ],
            "Token_Literal_Number_Integer": "56",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                5
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "List the name, born state and age of the heads of departments ordered by age.",
        "cypher_query": "MATCH (h:head)\nRETURN h.name,h.born_state,h.age\nORDER BY h.age",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "h",
                "born_state",
                "age"
            ],
            "Token_Name_Label": "head",
            "Token_Operator": "."
        },
        "answers": [
            [
                "P\u00e1draig Harrington",
                "Connecticut",
                43.0
            ],
            [
                "Stewart Cink",
                "Florida",
                50.0
            ],
            [
                "Dudley Hart",
                "California",
                52.0
            ],
            [
                "Jeff Maggert",
                "Delaware",
                53.0
            ],
            [
                "Nick Faldo",
                "California",
                56.0
            ],
            [
                "Tiger Woods",
                "Alabama",
                67.0
            ],
            [
                "Franklin Langham",
                "Connecticut",
                67.0
            ],
            [
                "Sergio Garc\u00eda",
                "California",
                68.0
            ],
            [
                "K. J. Choi",
                "Alabama",
                69.0
            ],
            [
                "Billy Mayfair",
                "California",
                69.0
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "List the creation year, name and budget of each department.",
        "cypher_query": "MATCH (d:department)\nRETURN d.Creation,d.Name,d.Budget_in_Billions",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "d",
                "Creation",
                "Budget_in_Billions"
            ],
            "Token_Name_Label": "department",
            "Token_Operator": "."
        },
        "answers": [
            [
                "1789",
                "State",
                9.96
            ],
            [
                "1789",
                "Treasury",
                11.1
            ],
            [
                "1947",
                "Defense",
                439.3
            ],
            [
                "1870",
                "Justice",
                23.4
            ],
            [
                "1849",
                "Interior",
                10.7
            ],
            [
                "1889",
                "Agriculture",
                77.6
            ],
            [
                "1903",
                "Commerce",
                6.2
            ],
            [
                "1913",
                "Labor",
                59.7
            ],
            [
                "1953",
                "Health and Human Services",
                543.2
            ],
            [
                "1965",
                "Housing and Urban Development",
                46.2
            ],
            [
                "1966",
                "Transportation",
                58.0
            ],
            [
                "1977",
                "Energy",
                21.5
            ],
            [
                "1979",
                "Education",
                62.8
            ],
            [
                "1989",
                "Veterans Affairs",
                73.2
            ],
            [
                "2002",
                "Homeland Security",
                44.6
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What are the maximum and minimum budget of the departments?",
        "cypher_query": "MATCH (d:department)\nRETURN max(d.Budget_in_Billions),min(d.Budget_in_Billions)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "d",
                "Budget_in_Billions"
            ],
            "Token_Name_Label": "department",
            "Token_Name_Function": [
                "max",
                "min"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                543.2,
                6.2
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What is the average number of employees of the departments whose rank is between 10 and 15?",
        "cypher_query": "MATCH (d:department)\nWHERE 10<=d.Ranking<=15\nRETURN avg(d.Num_Employees)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "d",
                "Ranking",
                "Num_Employees"
            ],
            "Token_Name_Label": "department",
            "Token_Literal_Number_Integer": [
                "10",
                "15"
            ],
            "Token_Operator": [
                "<=",
                "."
            ],
            "Token_Name_Function": "avg"
        },
        "answers": [
            [
                105468.16666666667
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What are the names of the heads who are born outside the California state?",
        "cypher_query": "MATCH (h:head)\nWHERE h.born_state<>'California'\nRETURN h.name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN",
                "name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "h",
                "born_state"
            ],
            "Token_Name_Label": "head",
            "Token_Operator": [
                ".",
                "<>"
            ],
            "Token_Literal_String": "'California'"
        },
        "answers": [
            [
                "Tiger Woods"
            ],
            [
                "K. J. Choi"
            ],
            [
                "Jeff Maggert"
            ],
            [
                "Stewart Cink"
            ],
            [
                "P\u00e1draig Harrington"
            ],
            [
                "Franklin Langham"
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What are the names of the states where at least 3 heads were born?",
        "cypher_query": "MATCH (h:head)\nWITH h.born_state AS born_state, count(*) AS count\nWHERE count >=3\nRETURN born_state",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "AS",
                "WHERE",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "h",
                "born_state",
                "count"
            ],
            "Token_Name_Label": "head",
            "Token_Operator": [
                ".",
                "*",
                ">="
            ],
            "Token_Name_Function": "count",
            "Token_Literal_Number_Integer": "3"
        },
        "answers": [
            [
                "California"
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "In which year were most departments established?",
        "cypher_query": "MATCH (d:department)\nWITH d.Creation AS Creation, count(d.Creation) AS count\nRETURN Creation\nORDER BY count DESC\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "AS",
                "RETURN",
                "ORDER BY",
                "DESC",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "d",
                "Creation",
                "count"
            ],
            "Token_Name_Label": "department",
            "Token_Operator": ".",
            "Token_Name_Function": "count",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                "1789"
            ]
        ]
    }
][][][][][][][][][][][][][][][][][][][][][][][][][][][][
    {
        "db_id": "department_management",
        "question": "Which department has more than 1 head at a time? List the id, name and the number of heads.",
        "cypher_query": "MATCH ()-[T2:management]-(T1:department)\nWITH T1.Name AS Name, T1.Department_ID AS Department_ID, count(*) AS count\nWHERE count >1\nRETURN Department_ID,Name,count",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "Name",
                "AS",
                "WHERE",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ")-[",
                ":",
                "]-(",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "T2",
                "T1",
                "Department_ID",
                "count"
            ],
            "Token_Name_Label": [
                "management",
                "department"
            ],
            "Token_Operator": [
                ".",
                "*",
                ">"
            ],
            "Token_Name_Function": "count",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                2,
                "Treasury",
                2
            ]
        ]
    }
][
    {
        "db_id": "department_management",
        "question": "How many heads of the departments are older than 56 ?",
        "cypher_query": "MATCH (h:head)\nWHERE h.age>56\nRETURN count(*)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "h",
                "age"
            ],
            "Token_Name_Label": "head",
            "Token_Operator": [
                ".",
                ">",
                "*"
            ],
            "Token_Literal_Number_Integer": "56",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                5
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "List the name, born state and age of the heads of departments ordered by age.",
        "cypher_query": "MATCH (h:head)\nRETURN h.name,h.born_state,h.age\nORDER BY h.age",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "h",
                "born_state",
                "age"
            ],
            "Token_Name_Label": "head",
            "Token_Operator": "."
        },
        "answers": [
            [
                "P\u00e1draig Harrington",
                "Connecticut",
                43.0
            ],
            [
                "Stewart Cink",
                "Florida",
                50.0
            ],
            [
                "Dudley Hart",
                "California",
                52.0
            ],
            [
                "Jeff Maggert",
                "Delaware",
                53.0
            ],
            [
                "Nick Faldo",
                "California",
                56.0
            ],
            [
                "Tiger Woods",
                "Alabama",
                67.0
            ],
            [
                "Franklin Langham",
                "Connecticut",
                67.0
            ],
            [
                "Sergio Garc\u00eda",
                "California",
                68.0
            ],
            [
                "K. J. Choi",
                "Alabama",
                69.0
            ],
            [
                "Billy Mayfair",
                "California",
                69.0
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "List the creation year, name and budget of each department.",
        "cypher_query": "MATCH (d:department)\nRETURN d.Creation,d.Name,d.Budget_in_Billions",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "d",
                "Creation",
                "Budget_in_Billions"
            ],
            "Token_Name_Label": "department",
            "Token_Operator": "."
        },
        "answers": [
            [
                "1789",
                "State",
                9.96
            ],
            [
                "1789",
                "Treasury",
                11.1
            ],
            [
                "1947",
                "Defense",
                439.3
            ],
            [
                "1870",
                "Justice",
                23.4
            ],
            [
                "1849",
                "Interior",
                10.7
            ],
            [
                "1889",
                "Agriculture",
                77.6
            ],
            [
                "1903",
                "Commerce",
                6.2
            ],
            [
                "1913",
                "Labor",
                59.7
            ],
            [
                "1953",
                "Health and Human Services",
                543.2
            ],
            [
                "1965",
                "Housing and Urban Development",
                46.2
            ],
            [
                "1966",
                "Transportation",
                58.0
            ],
            [
                "1977",
                "Energy",
                21.5
            ],
            [
                "1979",
                "Education",
                62.8
            ],
            [
                "1989",
                "Veterans Affairs",
                73.2
            ],
            [
                "2002",
                "Homeland Security",
                44.6
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What are the maximum and minimum budget of the departments?",
        "cypher_query": "MATCH (d:department)\nRETURN max(d.Budget_in_Billions),min(d.Budget_in_Billions)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "d",
                "Budget_in_Billions"
            ],
            "Token_Name_Label": "department",
            "Token_Name_Function": [
                "max",
                "min"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                543.2,
                6.2
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What is the average number of employees of the departments whose rank is between 10 and 15?",
        "cypher_query": "MATCH (d:department)\nWHERE 10<=d.Ranking<=15\nRETURN avg(d.Num_Employees)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "d",
                "Ranking",
                "Num_Employees"
            ],
            "Token_Name_Label": "department",
            "Token_Literal_Number_Integer": [
                "10",
                "15"
            ],
            "Token_Operator": [
                "<=",
                "."
            ],
            "Token_Name_Function": "avg"
        },
        "answers": [
            [
                105468.16666666667
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What are the names of the heads who are born outside the California state?",
        "cypher_query": "MATCH (h:head)\nWHERE h.born_state<>'California'\nRETURN h.name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN",
                "name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "h",
                "born_state"
            ],
            "Token_Name_Label": "head",
            "Token_Operator": [
                ".",
                "<>"
            ],
            "Token_Literal_String": "'California'"
        },
        "answers": [
            [
                "Tiger Woods"
            ],
            [
                "K. J. Choi"
            ],
            [
                "Jeff Maggert"
            ],
            [
                "Stewart Cink"
            ],
            [
                "P\u00e1draig Harrington"
            ],
            [
                "Franklin Langham"
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What are the distinct creation years of the departments managed by a secretary born in state 'Alabama'?",
        "cypher_query": "MATCH (T1:department)-[T2:management]-(T3:head)\nWHERE T3.born_state='Alabama'\nRETURN DISTINCT T1.Creation",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN DISTINCT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3",
                "born_state",
                "Creation"
            ],
            "Token_Name_Label": [
                "department",
                "management",
                "head"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "'Alabama'"
        },
        "answers": [
            [
                "1903"
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What are the names of the states where at least 3 heads were born?",
        "cypher_query": "MATCH (h:head)\nWITH h.born_state AS born_state, count(*) AS count\nWHERE count >=3\nRETURN born_state",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "AS",
                "WHERE",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "h",
                "born_state",
                "count"
            ],
            "Token_Name_Label": "head",
            "Token_Operator": [
                ".",
                "*",
                ">="
            ],
            "Token_Name_Function": "count",
            "Token_Literal_Number_Integer": "3"
        },
        "answers": [
            [
                "California"
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "In which year were most departments established?",
        "cypher_query": "MATCH (d:department)\nWITH count(d.Creation) AS count, d.Creation AS Creation\nRETURN Creation\nORDER BY count DESC\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "AS",
                "RETURN",
                "ORDER BY",
                "DESC",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "d",
                "Creation",
                "count"
            ],
            "Token_Name_Label": "department",
            "Token_Name_Function": "count",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                "1789"
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "Which department has more than 1 head at a time? List the id, name and the number of heads.",
        "cypher_query": "MATCH ()-[T2:management]-(T1:department)\nWITH T1.Department_ID AS Department_ID, count(*) AS count, T1.Name AS Name\nWHERE count >1\nRETURN Department_ID,Name,count",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "AS",
                "Name",
                "WHERE",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ")-[",
                ":",
                "]-(",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "T2",
                "T1",
                "Department_ID",
                "count"
            ],
            "Token_Name_Label": [
                "management",
                "department"
            ],
            "Token_Operator": [
                ".",
                "*",
                ">"
            ],
            "Token_Name_Function": "count",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                2,
                "Treasury",
                2
            ]
        ]
    }
][
    {
        "db_id": "department_management",
        "question": "How many heads of the departments are older than 56 ?",
        "cypher_query": "MATCH (h:head)\nWHERE h.age>56\nRETURN count(*)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "h",
                "age"
            ],
            "Token_Name_Label": "head",
            "Token_Operator": [
                ".",
                ">",
                "*"
            ],
            "Token_Literal_Number_Integer": "56",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                5
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "List the name, born state and age of the heads of departments ordered by age.",
        "cypher_query": "MATCH (h:head)\nRETURN h.name,h.born_state,h.age\nORDER BY h.age",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "h",
                "born_state",
                "age"
            ],
            "Token_Name_Label": "head",
            "Token_Operator": "."
        },
        "answers": [
            [
                "P\u00e1draig Harrington",
                "Connecticut",
                43.0
            ],
            [
                "Stewart Cink",
                "Florida",
                50.0
            ],
            [
                "Dudley Hart",
                "California",
                52.0
            ],
            [
                "Jeff Maggert",
                "Delaware",
                53.0
            ],
            [
                "Nick Faldo",
                "California",
                56.0
            ],
            [
                "Tiger Woods",
                "Alabama",
                67.0
            ],
            [
                "Franklin Langham",
                "Connecticut",
                67.0
            ],
            [
                "Sergio Garc\u00eda",
                "California",
                68.0
            ],
            [
                "K. J. Choi",
                "Alabama",
                69.0
            ],
            [
                "Billy Mayfair",
                "California",
                69.0
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "List the creation year, name and budget of each department.",
        "cypher_query": "MATCH (d:department)\nRETURN d.Creation,d.Name,d.Budget_in_Billions",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "d",
                "Creation",
                "Budget_in_Billions"
            ],
            "Token_Name_Label": "department",
            "Token_Operator": "."
        },
        "answers": [
            [
                "1789",
                "State",
                9.96
            ],
            [
                "1789",
                "Treasury",
                11.1
            ],
            [
                "1947",
                "Defense",
                439.3
            ],
            [
                "1870",
                "Justice",
                23.4
            ],
            [
                "1849",
                "Interior",
                10.7
            ],
            [
                "1889",
                "Agriculture",
                77.6
            ],
            [
                "1903",
                "Commerce",
                6.2
            ],
            [
                "1913",
                "Labor",
                59.7
            ],
            [
                "1953",
                "Health and Human Services",
                543.2
            ],
            [
                "1965",
                "Housing and Urban Development",
                46.2
            ],
            [
                "1966",
                "Transportation",
                58.0
            ],
            [
                "1977",
                "Energy",
                21.5
            ],
            [
                "1979",
                "Education",
                62.8
            ],
            [
                "1989",
                "Veterans Affairs",
                73.2
            ],
            [
                "2002",
                "Homeland Security",
                44.6
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What are the maximum and minimum budget of the departments?",
        "cypher_query": "MATCH (d:department)\nRETURN max(d.Budget_in_Billions),min(d.Budget_in_Billions)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "d",
                "Budget_in_Billions"
            ],
            "Token_Name_Label": "department",
            "Token_Name_Function": [
                "max",
                "min"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                543.2,
                6.2
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What is the average number of employees of the departments whose rank is between 10 and 15?",
        "cypher_query": "MATCH (d:department)\nWHERE 10<=d.Ranking<=15\nRETURN avg(d.Num_Employees)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "d",
                "Ranking",
                "Num_Employees"
            ],
            "Token_Name_Label": "department",
            "Token_Literal_Number_Integer": [
                "10",
                "15"
            ],
            "Token_Operator": [
                "<=",
                "."
            ],
            "Token_Name_Function": "avg"
        },
        "answers": [
            [
                105468.16666666667
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What are the names of the heads who are born outside the California state?",
        "cypher_query": "MATCH (h:head)\nWHERE h.born_state<>'California'\nRETURN h.name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN",
                "name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "h",
                "born_state"
            ],
            "Token_Name_Label": "head",
            "Token_Operator": [
                ".",
                "<>"
            ],
            "Token_Literal_String": "'California'"
        },
        "answers": [
            [
                "Tiger Woods"
            ],
            [
                "K. J. Choi"
            ],
            [
                "Jeff Maggert"
            ],
            [
                "Stewart Cink"
            ],
            [
                "P\u00e1draig Harrington"
            ],
            [
                "Franklin Langham"
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What are the distinct creation years of the departments managed by a secretary born in state 'Alabama'?",
        "cypher_query": "MATCH (T1:department)-[T2:management]-(T3:head)\nWHERE T3.born_state='Alabama'\nRETURN DISTINCT T1.Creation",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN DISTINCT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3",
                "born_state",
                "Creation"
            ],
            "Token_Name_Label": [
                "department",
                "management",
                "head"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "'Alabama'"
        },
        "answers": [
            [
                "1903"
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What are the names of the states where at least 3 heads were born?",
        "cypher_query": "MATCH (h:head)\nWITH h.born_state AS born_state, count(*) AS count\nWHERE count >=3\nRETURN born_state",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "AS",
                "WHERE",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "h",
                "born_state",
                "count"
            ],
            "Token_Name_Label": "head",
            "Token_Operator": [
                ".",
                "*",
                ">="
            ],
            "Token_Name_Function": "count",
            "Token_Literal_Number_Integer": "3"
        },
        "answers": [
            [
                "California"
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "In which year were most departments established?",
        "cypher_query": "MATCH (d:department)\nWITH d.Creation AS Creation, count(d.Creation) AS count\nRETURN Creation\nORDER BY count DESC\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "AS",
                "RETURN",
                "ORDER BY",
                "DESC",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "d",
                "Creation",
                "count"
            ],
            "Token_Name_Label": "department",
            "Token_Operator": ".",
            "Token_Name_Function": "count",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                "1789"
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "Which department has more than 1 head at a time? List the id, name and the number of heads.",
        "cypher_query": "MATCH ()-[T2:management]-(T1:department)\nWITH T1.Department_ID AS Department_ID, count(*) AS count, T1.Name AS Name\nWHERE count >1\nRETURN Department_ID,Name,count",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "AS",
                "Name",
                "WHERE",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ")-[",
                ":",
                "]-(",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "T2",
                "T1",
                "Department_ID",
                "count"
            ],
            "Token_Name_Label": [
                "management",
                "department"
            ],
            "Token_Operator": [
                ".",
                "*",
                ">"
            ],
            "Token_Name_Function": "count",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                2,
                "Treasury",
                2
            ]
        ]
    }
][][][][][][][][][][][][][][][][][][][
    {
        "db_id": "department_management",
        "question": "What are the distinct ages of the heads who are acting?",
        "cypher_query": "MATCH ()-[T2:management]-(T1:head)\nWHERE T2.temporary_acting='Yes'\nRETURN DISTINCT T1.age",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN DISTINCT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ")-[",
                ":",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T2",
                "T1",
                "temporary_acting",
                "age"
            ],
            "Token_Name_Label": [
                "management",
                "head"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "'Yes'"
        },
        "answers": [
            [
                52.0
            ],
            [
                53.0
            ],
            [
                69.0
            ]
        ]
    }
][
    {
        "db_id": "department_management",
        "question": "What are the distinct ages of the heads who are acting?",
        "cypher_query": "MATCH ()-[T2:management]-(T1:head)\nWHERE T2.temporary_acting='Yes'\nRETURN DISTINCT T1.age",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN DISTINCT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ")-[",
                ":",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T2",
                "T1",
                "temporary_acting",
                "age"
            ],
            "Token_Name_Label": [
                "management",
                "head"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "'Yes'"
        },
        "answers": [
            [
                52.0
            ],
            [
                53.0
            ],
            [
                69.0
            ]
        ]
    }
][
    {
        "db_id": "department_management",
        "question": "List the name, born state and age of the heads of departments ordered by age.",
        "cypher_query": "MATCH (h:head)\nRETURN h.name,h.born_state,h.age\nORDER BY h.age",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "h",
                "born_state",
                "age"
            ],
            "Token_Name_Label": "head",
            "Token_Operator": "."
        },
        "answers": [
            [
                "P\u00e1draig Harrington",
                "Connecticut",
                43.0
            ],
            [
                "Stewart Cink",
                "Florida",
                50.0
            ],
            [
                "Dudley Hart",
                "California",
                52.0
            ],
            [
                "Jeff Maggert",
                "Delaware",
                53.0
            ],
            [
                "Nick Faldo",
                "California",
                56.0
            ],
            [
                "Tiger Woods",
                "Alabama",
                67.0
            ],
            [
                "Franklin Langham",
                "Connecticut",
                67.0
            ],
            [
                "Sergio Garc\u00eda",
                "California",
                68.0
            ],
            [
                "K. J. Choi",
                "Alabama",
                69.0
            ],
            [
                "Billy Mayfair",
                "California",
                69.0
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "List the creation year, name and budget of each department.",
        "cypher_query": "MATCH (d:department)\nRETURN d.Creation,d.Name,d.Budget_in_Billions",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "d",
                "Creation",
                "Budget_in_Billions"
            ],
            "Token_Name_Label": "department",
            "Token_Operator": "."
        },
        "answers": [
            [
                "1789",
                "State",
                9.96
            ],
            [
                "1789",
                "Treasury",
                11.1
            ],
            [
                "1947",
                "Defense",
                439.3
            ],
            [
                "1870",
                "Justice",
                23.4
            ],
            [
                "1849",
                "Interior",
                10.7
            ],
            [
                "1889",
                "Agriculture",
                77.6
            ],
            [
                "1903",
                "Commerce",
                6.2
            ],
            [
                "1913",
                "Labor",
                59.7
            ],
            [
                "1953",
                "Health and Human Services",
                543.2
            ],
            [
                "1965",
                "Housing and Urban Development",
                46.2
            ],
            [
                "1966",
                "Transportation",
                58.0
            ],
            [
                "1977",
                "Energy",
                21.5
            ],
            [
                "1979",
                "Education",
                62.8
            ],
            [
                "1989",
                "Veterans Affairs",
                73.2
            ],
            [
                "2002",
                "Homeland Security",
                44.6
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What are the maximum and minimum budget of the departments?",
        "cypher_query": "MATCH (d:department)\nRETURN max(d.Budget_in_Billions),min(d.Budget_in_Billions)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "d",
                "Budget_in_Billions"
            ],
            "Token_Name_Label": "department",
            "Token_Name_Function": [
                "max",
                "min"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                543.2,
                6.2
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What is the average number of employees of the departments whose rank is between 10 and 15?",
        "cypher_query": "MATCH (d:department)\nWHERE 10<=d.Ranking<=15\nRETURN avg(d.Num_Employees)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "d",
                "Ranking",
                "Num_Employees"
            ],
            "Token_Name_Label": "department",
            "Token_Literal_Number_Integer": [
                "10",
                "15"
            ],
            "Token_Operator": [
                "<=",
                "."
            ],
            "Token_Name_Function": "avg"
        },
        "answers": [
            [
                105468.16666666667
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What are the distinct creation years of the departments managed by a secretary born in state 'Alabama'?",
        "cypher_query": "MATCH (T1:department)-[T2:management]-(T3:head)\nWHERE T3.born_state='Alabama'\nRETURN DISTINCT T1.Creation",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN DISTINCT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3",
                "born_state",
                "Creation"
            ],
            "Token_Name_Label": [
                "department",
                "management",
                "head"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "'Alabama'"
        },
        "answers": [
            [
                "1903"
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What are the names of the states where at least 3 heads were born?",
        "cypher_query": "MATCH (h:head)\nWITH count(*) AS count, h.born_state AS born_state\nWHERE count >=3\nRETURN born_state",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "AS",
                "WHERE",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "h",
                "count",
                "born_state"
            ],
            "Token_Name_Label": "head",
            "Token_Name_Function": "count",
            "Token_Operator": [
                "*",
                ".",
                ">="
            ],
            "Token_Literal_Number_Integer": "3"
        },
        "answers": [
            [
                "California"
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "In which year were most departments established?",
        "cypher_query": "MATCH (d:department)\nWITH count(d.Creation) AS count, d.Creation AS Creation\nRETURN Creation\nORDER BY count DESC\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "AS",
                "RETURN",
                "ORDER BY",
                "DESC",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "d",
                "Creation",
                "count"
            ],
            "Token_Name_Label": "department",
            "Token_Name_Function": "count",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                "1789"
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "Show the name and number of employees for the departments managed by heads whose temporary acting value is 'Yes'?",
        "cypher_query": "MATCH (T1:department)-[T2:management]-()\nWHERE T2.temporary_acting='Yes'\nRETURN T1.Name,T1.Num_Employees",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "temporary_acting",
                "Num_Employees"
            ],
            "Token_Name_Label": [
                "department",
                "management"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "'Yes'"
        },
        "answers": [
            [
                "Treasury",
                115897.0
            ],
            [
                "Treasury",
                115897.0
            ],
            [
                "Homeland Security",
                208000.0
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What are the distinct ages of the heads who are acting?",
        "cypher_query": "MATCH ()-[T2:management]-(T1:head)\nWHERE T2.temporary_acting='Yes'\nRETURN DISTINCT T1.age",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN DISTINCT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ")-[",
                ":",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T2",
                "T1",
                "temporary_acting",
                "age"
            ],
            "Token_Name_Label": [
                "management",
                "head"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "'Yes'"
        },
        "answers": [
            [
                52.0
            ],
            [
                53.0
            ],
            [
                69.0
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "Which department has more than 1 head at a time? List the id, name and the number of heads.",
        "cypher_query": "MATCH ()-[T2:management]-(T1:department)\nWITH T1.Department_ID AS Department_ID, T1.Name AS Name, count(*) AS count\nWHERE count >1\nRETURN Department_ID,Name,count",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "AS",
                "Name",
                "WHERE",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ")-[",
                ":",
                "]-(",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "T2",
                "T1",
                "Department_ID",
                "count"
            ],
            "Token_Name_Label": [
                "management",
                "department"
            ],
            "Token_Operator": [
                ".",
                "*",
                ">"
            ],
            "Token_Name_Function": "count",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                2,
                "Treasury",
                2
            ]
        ]
    }
][][
    {
        "db_id": "department_management",
        "question": "What are the names of the heads who are born outside the California state?",
        "cypher_query": "MATCH (h:head)\nWHERE h.born_state<>'California'\nRETURN h.name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN",
                "name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "h",
                "born_state"
            ],
            "Token_Name_Label": "head",
            "Token_Operator": [
                ".",
                "<>"
            ],
            "Token_Literal_String": "'California'"
        },
        "answers": [
            [
                "Tiger Woods"
            ],
            [
                "K. J. Choi"
            ],
            [
                "Jeff Maggert"
            ],
            [
                "Stewart Cink"
            ],
            [
                "P\u00e1draig Harrington"
            ],
            [
                "Franklin Langham"
            ]
        ]
    }
][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][
    {
        "db_id": "department_management",
        "question": "How many departments are led by heads who are not mentioned?",
        "cypher_query": "MATCH (d:department)\nWHERE NOT (d:department)-[:management]-()\nRETURN count(*)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ")-[",
                "]-("
            ],
            "Token_Name_Variable": "d",
            "Token_Name_Label": [
                "department",
                "management"
            ],
            "Token_Operator": [
                "NOT",
                "*"
            ],
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                11
            ]
        ]
    }
][
    {
        "db_id": "department_management",
        "question": "Which department has more than 1 head at a time? List the id, name and the number of heads.",
        "cypher_query": "MATCH ()-[T2:management]-(T1:department)\nWITH count(*) AS count, T1.Department_ID AS Department_ID, T1.Name AS Name\nWHERE count >1\nRETURN Department_ID,Name,count",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "AS",
                "Name",
                "WHERE",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ")-[",
                ":",
                "]-(",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "T2",
                "T1",
                "count",
                "Department_ID"
            ],
            "Token_Name_Label": [
                "management",
                "department"
            ],
            "Token_Name_Function": "count",
            "Token_Operator": [
                "*",
                ".",
                ">"
            ],
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                2,
                "Treasury",
                2
            ]
        ]
    }
][
    {
        "db_id": "department_management",
        "question": "What are the distinct ages of the heads who are acting?",
        "cypher_query": "MATCH ()-[T2:management]-(T1:head)\nWHERE T2.temporary_acting='Yes'\nRETURN DISTINCT T1.age",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN DISTINCT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ")-[",
                ":",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T2",
                "T1",
                "temporary_acting",
                "age"
            ],
            "Token_Name_Label": [
                "management",
                "head"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "'Yes'"
        },
        "answers": [
            [
                52.0
            ],
            [
                53.0
            ],
            [
                69.0
            ]
        ]
    }
][
    {
        "db_id": "department_management",
        "question": "How many departments are led by heads who are not mentioned?",
        "cypher_query": "MATCH (d:department)\nWHERE NOT (d:department)-[:management]-()\nRETURN count(*)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ")-[",
                "]-("
            ],
            "Token_Name_Variable": "d",
            "Token_Name_Label": [
                "department",
                "management"
            ],
            "Token_Operator": [
                "NOT",
                "*"
            ],
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                11
            ]
        ]
    }
][][][][
    {
        "db_id": "department_management",
        "question": "How many acting statuses are there?",
        "cypher_query": "MATCH ()-[m:management]-()\nWITH DISTINCT m.temporary_acting AS temporary_acting\nRETURN count(temporary_acting)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH DISTINCT",
                "AS",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ")-[",
                ":",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "m",
                "temporary_acting"
            ],
            "Token_Name_Label": "management",
            "Token_Operator": ".",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                2
            ]
        ]
    }
][
    {
        "db_id": "department_management",
        "question": "How many heads of the departments are older than 56 ?",
        "cypher_query": "MATCH (h:head)\nWHERE h.age>56\nRETURN count(*)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "h",
                "age"
            ],
            "Token_Name_Label": "head",
            "Token_Operator": [
                ".",
                ">",
                "*"
            ],
            "Token_Literal_Number_Integer": "56",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                5
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "List the name, born state and age of the heads of departments ordered by age.",
        "cypher_query": "MATCH (h:head)\nRETURN h.name,h.born_state,h.age\nORDER BY h.age",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "h",
                "born_state",
                "age"
            ],
            "Token_Name_Label": "head",
            "Token_Operator": "."
        },
        "answers": [
            [
                "P\u00e1draig Harrington",
                "Connecticut",
                43.0
            ],
            [
                "Stewart Cink",
                "Florida",
                50.0
            ],
            [
                "Dudley Hart",
                "California",
                52.0
            ],
            [
                "Jeff Maggert",
                "Delaware",
                53.0
            ],
            [
                "Nick Faldo",
                "California",
                56.0
            ],
            [
                "Tiger Woods",
                "Alabama",
                67.0
            ],
            [
                "Franklin Langham",
                "Connecticut",
                67.0
            ],
            [
                "Sergio Garc\u00eda",
                "California",
                68.0
            ],
            [
                "K. J. Choi",
                "Alabama",
                69.0
            ],
            [
                "Billy Mayfair",
                "California",
                69.0
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "List the creation year, name and budget of each department.",
        "cypher_query": "MATCH (d:department)\nRETURN d.Creation,d.Name,d.Budget_in_Billions",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "d",
                "Creation",
                "Budget_in_Billions"
            ],
            "Token_Name_Label": "department",
            "Token_Operator": "."
        },
        "answers": [
            [
                "1789",
                "State",
                9.96
            ],
            [
                "1789",
                "Treasury",
                11.1
            ],
            [
                "1947",
                "Defense",
                439.3
            ],
            [
                "1870",
                "Justice",
                23.4
            ],
            [
                "1849",
                "Interior",
                10.7
            ],
            [
                "1889",
                "Agriculture",
                77.6
            ],
            [
                "1903",
                "Commerce",
                6.2
            ],
            [
                "1913",
                "Labor",
                59.7
            ],
            [
                "1953",
                "Health and Human Services",
                543.2
            ],
            [
                "1965",
                "Housing and Urban Development",
                46.2
            ],
            [
                "1966",
                "Transportation",
                58.0
            ],
            [
                "1977",
                "Energy",
                21.5
            ],
            [
                "1979",
                "Education",
                62.8
            ],
            [
                "1989",
                "Veterans Affairs",
                73.2
            ],
            [
                "2002",
                "Homeland Security",
                44.6
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What are the maximum and minimum budget of the departments?",
        "cypher_query": "MATCH (d:department)\nRETURN max(d.Budget_in_Billions),min(d.Budget_in_Billions)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "d",
                "Budget_in_Billions"
            ],
            "Token_Name_Label": "department",
            "Token_Name_Function": [
                "max",
                "min"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                543.2,
                6.2
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What is the average number of employees of the departments whose rank is between 10 and 15?",
        "cypher_query": "MATCH (d:department)\nWHERE 10<=d.Ranking<=15\nRETURN avg(d.Num_Employees)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "d",
                "Ranking",
                "Num_Employees"
            ],
            "Token_Name_Label": "department",
            "Token_Literal_Number_Integer": [
                "10",
                "15"
            ],
            "Token_Operator": [
                "<=",
                "."
            ],
            "Token_Name_Function": "avg"
        },
        "answers": [
            [
                105468.16666666667
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What are the names of the heads who are born outside the California state?",
        "cypher_query": "MATCH (h:head)\nWHERE h.born_state<>'California'\nRETURN h.name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN",
                "name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "h",
                "born_state"
            ],
            "Token_Name_Label": "head",
            "Token_Operator": [
                ".",
                "<>"
            ],
            "Token_Literal_String": "'California'"
        },
        "answers": [
            [
                "Tiger Woods"
            ],
            [
                "K. J. Choi"
            ],
            [
                "Jeff Maggert"
            ],
            [
                "Stewart Cink"
            ],
            [
                "P\u00e1draig Harrington"
            ],
            [
                "Franklin Langham"
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What are the names of the states where at least 3 heads were born?",
        "cypher_query": "MATCH (h:head)\nWITH count(*) AS count, h.born_state AS born_state\nWHERE count >=3\nRETURN born_state",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "AS",
                "WHERE",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "h",
                "count",
                "born_state"
            ],
            "Token_Name_Label": "head",
            "Token_Name_Function": "count",
            "Token_Operator": [
                "*",
                ".",
                ">="
            ],
            "Token_Literal_Number_Integer": "3"
        },
        "answers": [
            [
                "California"
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "In which year were most departments established?",
        "cypher_query": "MATCH (d:department)\nWITH d.Creation AS Creation, count(d.Creation) AS count\nRETURN Creation\nORDER BY count DESC\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "AS",
                "RETURN",
                "ORDER BY",
                "DESC",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "d",
                "Creation",
                "count"
            ],
            "Token_Name_Label": "department",
            "Token_Operator": ".",
            "Token_Name_Function": "count",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                "1789"
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "How many acting statuses are there?",
        "cypher_query": "MATCH ()-[m:management]-()\nWITH DISTINCT m.temporary_acting AS temporary_acting\nRETURN count(temporary_acting)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH DISTINCT",
                "AS",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ")-[",
                ":",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "m",
                "temporary_acting"
            ],
            "Token_Name_Label": "management",
            "Token_Operator": ".",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                2
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "How many departments are led by heads who are not mentioned?",
        "cypher_query": "MATCH (d:department)\nWHERE NOT (d:department)-[:management]-()\nRETURN count(*)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ")-[",
                "]-("
            ],
            "Token_Name_Variable": "d",
            "Token_Name_Label": [
                "department",
                "management"
            ],
            "Token_Operator": [
                "NOT",
                "*"
            ],
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                11
            ]
        ]
    }
][
    {
        "db_id": "department_management",
        "question": "How many heads of the departments are older than 56 ?",
        "cypher_query": "MATCH (h:head)\nWHERE h.age>56\nRETURN count(*)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "h",
                "age"
            ],
            "Token_Name_Label": "head",
            "Token_Operator": [
                ".",
                ">",
                "*"
            ],
            "Token_Literal_Number_Integer": "56",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                5
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "List the name, born state and age of the heads of departments ordered by age.",
        "cypher_query": "MATCH (h:head)\nRETURN h.name,h.born_state,h.age\nORDER BY h.age",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "h",
                "born_state",
                "age"
            ],
            "Token_Name_Label": "head",
            "Token_Operator": "."
        },
        "answers": [
            [
                "P\u00e1draig Harrington",
                "Connecticut",
                43.0
            ],
            [
                "Stewart Cink",
                "Florida",
                50.0
            ],
            [
                "Dudley Hart",
                "California",
                52.0
            ],
            [
                "Jeff Maggert",
                "Delaware",
                53.0
            ],
            [
                "Nick Faldo",
                "California",
                56.0
            ],
            [
                "Tiger Woods",
                "Alabama",
                67.0
            ],
            [
                "Franklin Langham",
                "Connecticut",
                67.0
            ],
            [
                "Sergio Garc\u00eda",
                "California",
                68.0
            ],
            [
                "K. J. Choi",
                "Alabama",
                69.0
            ],
            [
                "Billy Mayfair",
                "California",
                69.0
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "List the creation year, name and budget of each department.",
        "cypher_query": "MATCH (d:department)\nRETURN d.Creation,d.Name,d.Budget_in_Billions",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "d",
                "Creation",
                "Budget_in_Billions"
            ],
            "Token_Name_Label": "department",
            "Token_Operator": "."
        },
        "answers": [
            [
                "1789",
                "State",
                9.96
            ],
            [
                "1789",
                "Treasury",
                11.1
            ],
            [
                "1947",
                "Defense",
                439.3
            ],
            [
                "1870",
                "Justice",
                23.4
            ],
            [
                "1849",
                "Interior",
                10.7
            ],
            [
                "1889",
                "Agriculture",
                77.6
            ],
            [
                "1903",
                "Commerce",
                6.2
            ],
            [
                "1913",
                "Labor",
                59.7
            ],
            [
                "1953",
                "Health and Human Services",
                543.2
            ],
            [
                "1965",
                "Housing and Urban Development",
                46.2
            ],
            [
                "1966",
                "Transportation",
                58.0
            ],
            [
                "1977",
                "Energy",
                21.5
            ],
            [
                "1979",
                "Education",
                62.8
            ],
            [
                "1989",
                "Veterans Affairs",
                73.2
            ],
            [
                "2002",
                "Homeland Security",
                44.6
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What are the maximum and minimum budget of the departments?",
        "cypher_query": "MATCH (d:department)\nRETURN max(d.Budget_in_Billions),min(d.Budget_in_Billions)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "d",
                "Budget_in_Billions"
            ],
            "Token_Name_Label": "department",
            "Token_Name_Function": [
                "max",
                "min"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                543.2,
                6.2
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What is the average number of employees of the departments whose rank is between 10 and 15?",
        "cypher_query": "MATCH (d:department)\nWHERE 10<=d.Ranking<=15\nRETURN avg(d.Num_Employees)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "d",
                "Ranking",
                "Num_Employees"
            ],
            "Token_Name_Label": "department",
            "Token_Literal_Number_Integer": [
                "10",
                "15"
            ],
            "Token_Operator": [
                "<=",
                "."
            ],
            "Token_Name_Function": "avg"
        },
        "answers": [
            [
                105468.16666666667
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What are the names of the heads who are born outside the California state?",
        "cypher_query": "MATCH (h:head)\nWHERE h.born_state<>'California'\nRETURN h.name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN",
                "name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "h",
                "born_state"
            ],
            "Token_Name_Label": "head",
            "Token_Operator": [
                ".",
                "<>"
            ],
            "Token_Literal_String": "'California'"
        },
        "answers": [
            [
                "Tiger Woods"
            ],
            [
                "K. J. Choi"
            ],
            [
                "Jeff Maggert"
            ],
            [
                "Stewart Cink"
            ],
            [
                "P\u00e1draig Harrington"
            ],
            [
                "Franklin Langham"
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What are the distinct creation years of the departments managed by a secretary born in state 'Alabama'?",
        "cypher_query": "MATCH (T1:department)-[T2:management]-(T3:head)\nWHERE T3.born_state='Alabama'\nRETURN DISTINCT T1.Creation",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN DISTINCT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3",
                "born_state",
                "Creation"
            ],
            "Token_Name_Label": [
                "department",
                "management",
                "head"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "'Alabama'"
        },
        "answers": [
            [
                "1903"
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What are the names of the states where at least 3 heads were born?",
        "cypher_query": "MATCH (h:head)\nWITH h.born_state AS born_state, count(*) AS count\nWHERE count >=3\nRETURN born_state",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "AS",
                "WHERE",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "h",
                "born_state",
                "count"
            ],
            "Token_Name_Label": "head",
            "Token_Operator": [
                ".",
                "*",
                ">="
            ],
            "Token_Name_Function": "count",
            "Token_Literal_Number_Integer": "3"
        },
        "answers": [
            [
                "California"
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "In which year were most departments established?",
        "cypher_query": "MATCH (d:department)\nWITH d.Creation AS Creation, count(d.Creation) AS count\nRETURN Creation\nORDER BY count DESC\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "AS",
                "RETURN",
                "ORDER BY",
                "DESC",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "d",
                "Creation",
                "count"
            ],
            "Token_Name_Label": "department",
            "Token_Operator": ".",
            "Token_Name_Function": "count",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                "1789"
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "Show the name and number of employees for the departments managed by heads whose temporary acting value is 'Yes'?",
        "cypher_query": "MATCH (T1:department)-[T2:management]-()\nWHERE T2.temporary_acting='Yes'\nRETURN T1.Name,T1.Num_Employees",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "temporary_acting",
                "Num_Employees"
            ],
            "Token_Name_Label": [
                "department",
                "management"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "'Yes'"
        },
        "answers": [
            [
                "Treasury",
                115897.0
            ],
            [
                "Treasury",
                115897.0
            ],
            [
                "Homeland Security",
                208000.0
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "How many acting statuses are there?",
        "cypher_query": "MATCH ()-[m:management]-()\nWITH DISTINCT m.temporary_acting AS temporary_acting\nRETURN count(temporary_acting)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH DISTINCT",
                "AS",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ")-[",
                ":",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "m",
                "temporary_acting"
            ],
            "Token_Name_Label": "management",
            "Token_Operator": ".",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                2
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "How many departments are led by heads who are not mentioned?",
        "cypher_query": "MATCH (d:department)\nWHERE NOT (d:department)-[:management]-()\nRETURN count(*)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ")-[",
                "]-("
            ],
            "Token_Name_Variable": "d",
            "Token_Name_Label": [
                "department",
                "management"
            ],
            "Token_Operator": [
                "NOT",
                "*"
            ],
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                11
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What are the distinct ages of the heads who are acting?",
        "cypher_query": "MATCH ()-[T2:management]-(T1:head)\nWHERE T2.temporary_acting='Yes'\nRETURN DISTINCT T1.age",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN DISTINCT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ")-[",
                ":",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T2",
                "T1",
                "temporary_acting",
                "age"
            ],
            "Token_Name_Label": [
                "management",
                "head"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "'Yes'"
        },
        "answers": [
            [
                52.0
            ],
            [
                53.0
            ],
            [
                69.0
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "Which department has more than 1 head at a time? List the id, name and the number of heads.",
        "cypher_query": "MATCH ()-[T2:management]-(T1:department)\nWITH T1.Department_ID AS Department_ID, T1.Name AS Name, count(*) AS count\nWHERE count >1\nRETURN Department_ID,Name,count",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "AS",
                "Name",
                "WHERE",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ")-[",
                ":",
                "]-(",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "T2",
                "T1",
                "Department_ID",
                "count"
            ],
            "Token_Name_Label": [
                "management",
                "department"
            ],
            "Token_Operator": [
                ".",
                "*",
                ">"
            ],
            "Token_Name_Function": "count",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                2,
                "Treasury",
                2
            ]
        ]
    }
][
    {
        "db_id": "department_management",
        "question": "How many heads of the departments are older than 56 ?",
        "cypher_query": "MATCH (h:head)\nWHERE h.age>56\nRETURN count(*)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "h",
                "age"
            ],
            "Token_Name_Label": "head",
            "Token_Operator": [
                ".",
                ">",
                "*"
            ],
            "Token_Literal_Number_Integer": "56",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                5
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "List the name, born state and age of the heads of departments ordered by age.",
        "cypher_query": "MATCH (h:head)\nRETURN h.name,h.born_state,h.age\nORDER BY h.age",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "h",
                "born_state",
                "age"
            ],
            "Token_Name_Label": "head",
            "Token_Operator": "."
        },
        "answers": [
            [
                "P\u00e1draig Harrington",
                "Connecticut",
                43.0
            ],
            [
                "Stewart Cink",
                "Florida",
                50.0
            ],
            [
                "Dudley Hart",
                "California",
                52.0
            ],
            [
                "Jeff Maggert",
                "Delaware",
                53.0
            ],
            [
                "Nick Faldo",
                "California",
                56.0
            ],
            [
                "Tiger Woods",
                "Alabama",
                67.0
            ],
            [
                "Franklin Langham",
                "Connecticut",
                67.0
            ],
            [
                "Sergio Garc\u00eda",
                "California",
                68.0
            ],
            [
                "K. J. Choi",
                "Alabama",
                69.0
            ],
            [
                "Billy Mayfair",
                "California",
                69.0
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "List the creation year, name and budget of each department.",
        "cypher_query": "MATCH (d:department)\nRETURN d.Creation,d.Name,d.Budget_in_Billions",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "d",
                "Creation",
                "Budget_in_Billions"
            ],
            "Token_Name_Label": "department",
            "Token_Operator": "."
        },
        "answers": [
            [
                "1789",
                "State",
                9.96
            ],
            [
                "1789",
                "Treasury",
                11.1
            ],
            [
                "1947",
                "Defense",
                439.3
            ],
            [
                "1870",
                "Justice",
                23.4
            ],
            [
                "1849",
                "Interior",
                10.7
            ],
            [
                "1889",
                "Agriculture",
                77.6
            ],
            [
                "1903",
                "Commerce",
                6.2
            ],
            [
                "1913",
                "Labor",
                59.7
            ],
            [
                "1953",
                "Health and Human Services",
                543.2
            ],
            [
                "1965",
                "Housing and Urban Development",
                46.2
            ],
            [
                "1966",
                "Transportation",
                58.0
            ],
            [
                "1977",
                "Energy",
                21.5
            ],
            [
                "1979",
                "Education",
                62.8
            ],
            [
                "1989",
                "Veterans Affairs",
                73.2
            ],
            [
                "2002",
                "Homeland Security",
                44.6
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What are the maximum and minimum budget of the departments?",
        "cypher_query": "MATCH (d:department)\nRETURN max(d.Budget_in_Billions),min(d.Budget_in_Billions)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "d",
                "Budget_in_Billions"
            ],
            "Token_Name_Label": "department",
            "Token_Name_Function": [
                "max",
                "min"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                543.2,
                6.2
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What is the average number of employees of the departments whose rank is between 10 and 15?",
        "cypher_query": "MATCH (d:department)\nWHERE 10<=d.Ranking<=15\nRETURN avg(d.Num_Employees)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "d",
                "Ranking",
                "Num_Employees"
            ],
            "Token_Name_Label": "department",
            "Token_Literal_Number_Integer": [
                "10",
                "15"
            ],
            "Token_Operator": [
                "<=",
                "."
            ],
            "Token_Name_Function": "avg"
        },
        "answers": [
            [
                105468.16666666667
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What are the names of the heads who are born outside the California state?",
        "cypher_query": "MATCH (h:head)\nWHERE h.born_state<>'California'\nRETURN h.name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN",
                "name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "h",
                "born_state"
            ],
            "Token_Name_Label": "head",
            "Token_Operator": [
                ".",
                "<>"
            ],
            "Token_Literal_String": "'California'"
        },
        "answers": [
            [
                "Tiger Woods"
            ],
            [
                "K. J. Choi"
            ],
            [
                "Jeff Maggert"
            ],
            [
                "Stewart Cink"
            ],
            [
                "P\u00e1draig Harrington"
            ],
            [
                "Franklin Langham"
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What are the distinct creation years of the departments managed by a secretary born in state 'Alabama'?",
        "cypher_query": "MATCH (T1:department)-[T2:management]-(T3:head)\nWHERE T3.born_state='Alabama'\nRETURN DISTINCT T1.Creation",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN DISTINCT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3",
                "born_state",
                "Creation"
            ],
            "Token_Name_Label": [
                "department",
                "management",
                "head"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "'Alabama'"
        },
        "answers": [
            [
                "1903"
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What are the names of the states where at least 3 heads were born?",
        "cypher_query": "MATCH (h:head)\nWITH count(*) AS count, h.born_state AS born_state\nWHERE count >=3\nRETURN born_state",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "AS",
                "WHERE",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "h",
                "count",
                "born_state"
            ],
            "Token_Name_Label": "head",
            "Token_Name_Function": "count",
            "Token_Operator": [
                "*",
                ".",
                ">="
            ],
            "Token_Literal_Number_Integer": "3"
        },
        "answers": [
            [
                "California"
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "In which year were most departments established?",
        "cypher_query": "MATCH (d:department)\nWITH d.Creation AS Creation, count(d.Creation) AS count\nRETURN Creation\nORDER BY count DESC\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "AS",
                "RETURN",
                "ORDER BY",
                "DESC",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "d",
                "Creation",
                "count"
            ],
            "Token_Name_Label": "department",
            "Token_Operator": ".",
            "Token_Name_Function": "count",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                "1789"
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "Show the name and number of employees for the departments managed by heads whose temporary acting value is 'Yes'?",
        "cypher_query": "MATCH (T1:department)-[T2:management]-()\nWHERE T2.temporary_acting='Yes'\nRETURN T1.Name,T1.Num_Employees",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "temporary_acting",
                "Num_Employees"
            ],
            "Token_Name_Label": [
                "department",
                "management"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "'Yes'"
        },
        "answers": [
            [
                "Treasury",
                115897.0
            ],
            [
                "Treasury",
                115897.0
            ],
            [
                "Homeland Security",
                208000.0
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "How many acting statuses are there?",
        "cypher_query": "MATCH ()-[m:management]-()\nWITH DISTINCT m.temporary_acting AS temporary_acting\nRETURN count(temporary_acting)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH DISTINCT",
                "AS",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ")-[",
                ":",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "m",
                "temporary_acting"
            ],
            "Token_Name_Label": "management",
            "Token_Operator": ".",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                2
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "How many departments are led by heads who are not mentioned?",
        "cypher_query": "MATCH (d:department)\nWHERE NOT (d:department)-[:management]-()\nRETURN count(*)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ")-[",
                "]-("
            ],
            "Token_Name_Variable": "d",
            "Token_Name_Label": [
                "department",
                "management"
            ],
            "Token_Operator": [
                "NOT",
                "*"
            ],
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                11
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What are the distinct ages of the heads who are acting?",
        "cypher_query": "MATCH ()-[T2:management]-(T1:head)\nWHERE T2.temporary_acting='Yes'\nRETURN DISTINCT T1.age",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN DISTINCT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ")-[",
                ":",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T2",
                "T1",
                "temporary_acting",
                "age"
            ],
            "Token_Name_Label": [
                "management",
                "head"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "'Yes'"
        },
        "answers": [
            [
                52.0
            ],
            [
                53.0
            ],
            [
                69.0
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "Which department has more than 1 head at a time? List the id, name and the number of heads.",
        "cypher_query": "MATCH ()-[T2:management]-(T1:department)\nWITH T1.Name AS Name, T1.Department_ID AS Department_ID, count(*) AS count\nWHERE count >1\nRETURN Department_ID,Name,count",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "Name",
                "AS",
                "WHERE",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ")-[",
                ":",
                "]-(",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "T2",
                "T1",
                "Department_ID",
                "count"
            ],
            "Token_Name_Label": [
                "management",
                "department"
            ],
            "Token_Operator": [
                ".",
                "*",
                ">"
            ],
            "Token_Name_Function": "count",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                2,
                "Treasury",
                2
            ]
        ]
    }
][
    {
        "db_id": "department_management",
        "question": "How many heads of the departments are older than 56 ?",
        "cypher_query": "MATCH (h:head)\nWHERE h.age>56\nRETURN count(*)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "h",
                "age"
            ],
            "Token_Name_Label": "head",
            "Token_Operator": [
                ".",
                ">",
                "*"
            ],
            "Token_Literal_Number_Integer": "56",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                5
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "List the name, born state and age of the heads of departments ordered by age.",
        "cypher_query": "MATCH (h:head)\nRETURN h.name,h.born_state,h.age\nORDER BY h.age",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "h",
                "born_state",
                "age"
            ],
            "Token_Name_Label": "head",
            "Token_Operator": "."
        },
        "answers": [
            [
                "P\u00e1draig Harrington",
                "Connecticut",
                43.0
            ],
            [
                "Stewart Cink",
                "Florida",
                50.0
            ],
            [
                "Dudley Hart",
                "California",
                52.0
            ],
            [
                "Jeff Maggert",
                "Delaware",
                53.0
            ],
            [
                "Nick Faldo",
                "California",
                56.0
            ],
            [
                "Tiger Woods",
                "Alabama",
                67.0
            ],
            [
                "Franklin Langham",
                "Connecticut",
                67.0
            ],
            [
                "Sergio Garc\u00eda",
                "California",
                68.0
            ],
            [
                "K. J. Choi",
                "Alabama",
                69.0
            ],
            [
                "Billy Mayfair",
                "California",
                69.0
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "List the creation year, name and budget of each department.",
        "cypher_query": "MATCH (d:department)\nRETURN d.Creation,d.Name,d.Budget_in_Billions",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "d",
                "Creation",
                "Budget_in_Billions"
            ],
            "Token_Name_Label": "department",
            "Token_Operator": "."
        },
        "answers": [
            [
                "1789",
                "State",
                9.96
            ],
            [
                "1789",
                "Treasury",
                11.1
            ],
            [
                "1947",
                "Defense",
                439.3
            ],
            [
                "1870",
                "Justice",
                23.4
            ],
            [
                "1849",
                "Interior",
                10.7
            ],
            [
                "1889",
                "Agriculture",
                77.6
            ],
            [
                "1903",
                "Commerce",
                6.2
            ],
            [
                "1913",
                "Labor",
                59.7
            ],
            [
                "1953",
                "Health and Human Services",
                543.2
            ],
            [
                "1965",
                "Housing and Urban Development",
                46.2
            ],
            [
                "1966",
                "Transportation",
                58.0
            ],
            [
                "1977",
                "Energy",
                21.5
            ],
            [
                "1979",
                "Education",
                62.8
            ],
            [
                "1989",
                "Veterans Affairs",
                73.2
            ],
            [
                "2002",
                "Homeland Security",
                44.6
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What are the maximum and minimum budget of the departments?",
        "cypher_query": "MATCH (d:department)\nRETURN max(d.Budget_in_Billions),min(d.Budget_in_Billions)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "d",
                "Budget_in_Billions"
            ],
            "Token_Name_Label": "department",
            "Token_Name_Function": [
                "max",
                "min"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                543.2,
                6.2
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What is the average number of employees of the departments whose rank is between 10 and 15?",
        "cypher_query": "MATCH (d:department)\nWHERE 10<=d.Ranking<=15\nRETURN avg(d.Num_Employees)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "d",
                "Ranking",
                "Num_Employees"
            ],
            "Token_Name_Label": "department",
            "Token_Literal_Number_Integer": [
                "10",
                "15"
            ],
            "Token_Operator": [
                "<=",
                "."
            ],
            "Token_Name_Function": "avg"
        },
        "answers": [
            [
                105468.16666666667
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What are the names of the heads who are born outside the California state?",
        "cypher_query": "MATCH (h:head)\nWHERE h.born_state<>'California'\nRETURN h.name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN",
                "name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "h",
                "born_state"
            ],
            "Token_Name_Label": "head",
            "Token_Operator": [
                ".",
                "<>"
            ],
            "Token_Literal_String": "'California'"
        },
        "answers": [
            [
                "Tiger Woods"
            ],
            [
                "K. J. Choi"
            ],
            [
                "Jeff Maggert"
            ],
            [
                "Stewart Cink"
            ],
            [
                "P\u00e1draig Harrington"
            ],
            [
                "Franklin Langham"
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What are the distinct creation years of the departments managed by a secretary born in state 'Alabama'?",
        "cypher_query": "MATCH (T1:department)-[T2:management]-(T3:head)\nWHERE T3.born_state='Alabama'\nRETURN DISTINCT T1.Creation",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN DISTINCT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3",
                "born_state",
                "Creation"
            ],
            "Token_Name_Label": [
                "department",
                "management",
                "head"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "'Alabama'"
        },
        "answers": [
            [
                "1903"
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What are the names of the states where at least 3 heads were born?",
        "cypher_query": "MATCH (h:head)\nWITH count(*) AS count, h.born_state AS born_state\nWHERE count >=3\nRETURN born_state",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "AS",
                "WHERE",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "h",
                "count",
                "born_state"
            ],
            "Token_Name_Label": "head",
            "Token_Name_Function": "count",
            "Token_Operator": [
                "*",
                ".",
                ">="
            ],
            "Token_Literal_Number_Integer": "3"
        },
        "answers": [
            [
                "California"
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "In which year were most departments established?",
        "cypher_query": "MATCH (d:department)\nWITH count(d.Creation) AS count, d.Creation AS Creation\nRETURN Creation\nORDER BY count DESC\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "AS",
                "RETURN",
                "ORDER BY",
                "DESC",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "d",
                "Creation",
                "count"
            ],
            "Token_Name_Label": "department",
            "Token_Name_Function": "count",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                "1789"
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "Show the name and number of employees for the departments managed by heads whose temporary acting value is 'Yes'?",
        "cypher_query": "MATCH (T1:department)-[T2:management]-()\nWHERE T2.temporary_acting='Yes'\nRETURN T1.Name,T1.Num_Employees",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "temporary_acting",
                "Num_Employees"
            ],
            "Token_Name_Label": [
                "department",
                "management"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "'Yes'"
        },
        "answers": [
            [
                "Treasury",
                115897.0
            ],
            [
                "Treasury",
                115897.0
            ],
            [
                "Homeland Security",
                208000.0
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "How many acting statuses are there?",
        "cypher_query": "MATCH ()-[m:management]-()\nWITH DISTINCT m.temporary_acting AS temporary_acting\nRETURN count(temporary_acting)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH DISTINCT",
                "AS",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ")-[",
                ":",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "m",
                "temporary_acting"
            ],
            "Token_Name_Label": "management",
            "Token_Operator": ".",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                2
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "How many departments are led by heads who are not mentioned?",
        "cypher_query": "MATCH (d:department)\nWHERE NOT (d:department)-[:management]-()\nRETURN count(*)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ")-[",
                "]-("
            ],
            "Token_Name_Variable": "d",
            "Token_Name_Label": [
                "department",
                "management"
            ],
            "Token_Operator": [
                "NOT",
                "*"
            ],
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                11
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What are the distinct ages of the heads who are acting?",
        "cypher_query": "MATCH ()-[T2:management]-(T1:head)\nWHERE T2.temporary_acting='Yes'\nRETURN DISTINCT T1.age",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN DISTINCT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ")-[",
                ":",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T2",
                "T1",
                "temporary_acting",
                "age"
            ],
            "Token_Name_Label": [
                "management",
                "head"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "'Yes'"
        },
        "answers": [
            [
                52.0
            ],
            [
                53.0
            ],
            [
                69.0
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "Which department has more than 1 head at a time? List the id, name and the number of heads.",
        "cypher_query": "MATCH ()-[T2:management]-(T1:department)\nWITH count(*) AS count, T1.Department_ID AS Department_ID, T1.Name AS Name\nWHERE count >1\nRETURN Department_ID,Name,count",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "AS",
                "Name",
                "WHERE",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ")-[",
                ":",
                "]-(",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "T2",
                "T1",
                "count",
                "Department_ID"
            ],
            "Token_Name_Label": [
                "management",
                "department"
            ],
            "Token_Name_Function": "count",
            "Token_Operator": [
                "*",
                ".",
                ">"
            ],
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                2,
                "Treasury",
                2
            ]
        ]
    }
][
    {
        "db_id": "department_management",
        "question": "How many heads of the departments are older than 56 ?",
        "cypher_query": "MATCH (h:head)\nWHERE h.age>56\nRETURN count(*)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "h",
                "age"
            ],
            "Token_Name_Label": "head",
            "Token_Operator": [
                ".",
                ">",
                "*"
            ],
            "Token_Literal_Number_Integer": "56",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                5
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "List the name, born state and age of the heads of departments ordered by age.",
        "cypher_query": "MATCH (h:head)\nRETURN h.name,h.born_state,h.age\nORDER BY h.age",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "h",
                "born_state",
                "age"
            ],
            "Token_Name_Label": "head",
            "Token_Operator": "."
        },
        "answers": [
            [
                "P\u00e1draig Harrington",
                "Connecticut",
                43.0
            ],
            [
                "Stewart Cink",
                "Florida",
                50.0
            ],
            [
                "Dudley Hart",
                "California",
                52.0
            ],
            [
                "Jeff Maggert",
                "Delaware",
                53.0
            ],
            [
                "Nick Faldo",
                "California",
                56.0
            ],
            [
                "Tiger Woods",
                "Alabama",
                67.0
            ],
            [
                "Franklin Langham",
                "Connecticut",
                67.0
            ],
            [
                "Sergio Garc\u00eda",
                "California",
                68.0
            ],
            [
                "K. J. Choi",
                "Alabama",
                69.0
            ],
            [
                "Billy Mayfair",
                "California",
                69.0
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "List the creation year, name and budget of each department.",
        "cypher_query": "MATCH (d:department)\nRETURN d.Creation,d.Name,d.Budget_in_Billions",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "d",
                "Creation",
                "Budget_in_Billions"
            ],
            "Token_Name_Label": "department",
            "Token_Operator": "."
        },
        "answers": [
            [
                "1789",
                "State",
                9.96
            ],
            [
                "1789",
                "Treasury",
                11.1
            ],
            [
                "1947",
                "Defense",
                439.3
            ],
            [
                "1870",
                "Justice",
                23.4
            ],
            [
                "1849",
                "Interior",
                10.7
            ],
            [
                "1889",
                "Agriculture",
                77.6
            ],
            [
                "1903",
                "Commerce",
                6.2
            ],
            [
                "1913",
                "Labor",
                59.7
            ],
            [
                "1953",
                "Health and Human Services",
                543.2
            ],
            [
                "1965",
                "Housing and Urban Development",
                46.2
            ],
            [
                "1966",
                "Transportation",
                58.0
            ],
            [
                "1977",
                "Energy",
                21.5
            ],
            [
                "1979",
                "Education",
                62.8
            ],
            [
                "1989",
                "Veterans Affairs",
                73.2
            ],
            [
                "2002",
                "Homeland Security",
                44.6
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What are the maximum and minimum budget of the departments?",
        "cypher_query": "MATCH (d:department)\nRETURN max(d.Budget_in_Billions),min(d.Budget_in_Billions)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "d",
                "Budget_in_Billions"
            ],
            "Token_Name_Label": "department",
            "Token_Name_Function": [
                "max",
                "min"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                543.2,
                6.2
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What is the average number of employees of the departments whose rank is between 10 and 15?",
        "cypher_query": "MATCH (d:department)\nWHERE 10<=d.Ranking<=15\nRETURN avg(d.Num_Employees)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "d",
                "Ranking",
                "Num_Employees"
            ],
            "Token_Name_Label": "department",
            "Token_Literal_Number_Integer": [
                "10",
                "15"
            ],
            "Token_Operator": [
                "<=",
                "."
            ],
            "Token_Name_Function": "avg"
        },
        "answers": [
            [
                105468.16666666667
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What are the names of the heads who are born outside the California state?",
        "cypher_query": "MATCH (h:head)\nWHERE h.born_state<>'California'\nRETURN h.name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN",
                "name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "h",
                "born_state"
            ],
            "Token_Name_Label": "head",
            "Token_Operator": [
                ".",
                "<>"
            ],
            "Token_Literal_String": "'California'"
        },
        "answers": [
            [
                "Tiger Woods"
            ],
            [
                "K. J. Choi"
            ],
            [
                "Jeff Maggert"
            ],
            [
                "Stewart Cink"
            ],
            [
                "P\u00e1draig Harrington"
            ],
            [
                "Franklin Langham"
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What are the distinct creation years of the departments managed by a secretary born in state 'Alabama'?",
        "cypher_query": "MATCH (T1:department)-[T2:management]-(T3:head)\nWHERE T3.born_state='Alabama'\nRETURN DISTINCT T1.Creation",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN DISTINCT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3",
                "born_state",
                "Creation"
            ],
            "Token_Name_Label": [
                "department",
                "management",
                "head"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "'Alabama'"
        },
        "answers": [
            [
                "1903"
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What are the names of the states where at least 3 heads were born?",
        "cypher_query": "MATCH (h:head)\nWITH h.born_state AS born_state, count(*) AS count\nWHERE count >=3\nRETURN born_state",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "AS",
                "WHERE",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "h",
                "born_state",
                "count"
            ],
            "Token_Name_Label": "head",
            "Token_Operator": [
                ".",
                "*",
                ">="
            ],
            "Token_Name_Function": "count",
            "Token_Literal_Number_Integer": "3"
        },
        "answers": [
            [
                "California"
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "In which year were most departments established?",
        "cypher_query": "MATCH (d:department)\nWITH count(d.Creation) AS count, d.Creation AS Creation\nRETURN Creation\nORDER BY count DESC\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "AS",
                "RETURN",
                "ORDER BY",
                "DESC",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "d",
                "Creation",
                "count"
            ],
            "Token_Name_Label": "department",
            "Token_Name_Function": "count",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                "1789"
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "Show the name and number of employees for the departments managed by heads whose temporary acting value is 'Yes'?",
        "cypher_query": "MATCH (T1:department)-[T2:management]-()\nWHERE T2.temporary_acting='Yes'\nRETURN T1.Name,T1.Num_Employees",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "temporary_acting",
                "Num_Employees"
            ],
            "Token_Name_Label": [
                "department",
                "management"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "'Yes'"
        },
        "answers": [
            [
                "Treasury",
                115897.0
            ],
            [
                "Treasury",
                115897.0
            ],
            [
                "Homeland Security",
                208000.0
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "How many acting statuses are there?",
        "cypher_query": "MATCH ()-[m:management]-()\nWITH DISTINCT m.temporary_acting AS temporary_acting\nRETURN count(temporary_acting)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH DISTINCT",
                "AS",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ")-[",
                ":",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "m",
                "temporary_acting"
            ],
            "Token_Name_Label": "management",
            "Token_Operator": ".",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                2
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "How many departments are led by heads who are not mentioned?",
        "cypher_query": "MATCH (d:department)\nWHERE NOT (d:department)-[:management]-()\nRETURN count(*)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ")-[",
                "]-("
            ],
            "Token_Name_Variable": "d",
            "Token_Name_Label": [
                "department",
                "management"
            ],
            "Token_Operator": [
                "NOT",
                "*"
            ],
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                11
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What are the distinct ages of the heads who are acting?",
        "cypher_query": "MATCH ()-[T2:management]-(T1:head)\nWHERE T2.temporary_acting='Yes'\nRETURN DISTINCT T1.age",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN DISTINCT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ")-[",
                ":",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T2",
                "T1",
                "temporary_acting",
                "age"
            ],
            "Token_Name_Label": [
                "management",
                "head"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "'Yes'"
        },
        "answers": [
            [
                52.0
            ],
            [
                53.0
            ],
            [
                69.0
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "Which department has more than 1 head at a time? List the id, name and the number of heads.",
        "cypher_query": "MATCH ()-[T2:management]-(T1:department)\nWITH T1.Name AS Name, T1.Department_ID AS Department_ID, count(*) AS count\nWHERE count >1\nRETURN Department_ID,Name,count",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "Name",
                "AS",
                "WHERE",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ")-[",
                ":",
                "]-(",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "T2",
                "T1",
                "Department_ID",
                "count"
            ],
            "Token_Name_Label": [
                "management",
                "department"
            ],
            "Token_Operator": [
                ".",
                "*",
                ">"
            ],
            "Token_Name_Function": "count",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                2,
                "Treasury",
                2
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "Which head's name has the substring 'Ha'? List the id and name.",
        "cypher_query": "MATCH (h:head)\nWHERE h.name =~'.*[H|h]a.*'\nRETURN h.head_ID,h.name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "h",
                "head_ID"
            ],
            "Token_Name_Label": "head",
            "Token_Operator": [
                ".",
                "=~"
            ],
            "Token_Literal_String": "'.*[H|h]a.*'"
        },
        "answers": [
            [
                4,
                "Dudley Hart"
            ],
            [
                9,
                "P\u00e1draig Harrington"
            ],
            [
                10,
                "Franklin Langham"
            ]
        ]
    }
][
    {
        "db_id": "department_management",
        "question": "How many heads of the departments are older than 56 ?",
        "cypher_query": "MATCH (h:head)\nWHERE h.age>56\nRETURN count(*)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "h",
                "age"
            ],
            "Token_Name_Label": "head",
            "Token_Operator": [
                ".",
                ">",
                "*"
            ],
            "Token_Literal_Number_Integer": "56",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                5
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "List the name, born state and age of the heads of departments ordered by age.",
        "cypher_query": "MATCH (h:head)\nRETURN h.name,h.born_state,h.age\nORDER BY h.age",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "h",
                "born_state",
                "age"
            ],
            "Token_Name_Label": "head",
            "Token_Operator": "."
        },
        "answers": [
            [
                "P\u00e1draig Harrington",
                "Connecticut",
                43.0
            ],
            [
                "Stewart Cink",
                "Florida",
                50.0
            ],
            [
                "Dudley Hart",
                "California",
                52.0
            ],
            [
                "Jeff Maggert",
                "Delaware",
                53.0
            ],
            [
                "Nick Faldo",
                "California",
                56.0
            ],
            [
                "Tiger Woods",
                "Alabama",
                67.0
            ],
            [
                "Franklin Langham",
                "Connecticut",
                67.0
            ],
            [
                "Sergio Garc\u00eda",
                "California",
                68.0
            ],
            [
                "K. J. Choi",
                "Alabama",
                69.0
            ],
            [
                "Billy Mayfair",
                "California",
                69.0
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "List the creation year, name and budget of each department.",
        "cypher_query": "MATCH (d:department)\nRETURN d.Creation,d.Name,d.Budget_in_Billions",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "d",
                "Creation",
                "Budget_in_Billions"
            ],
            "Token_Name_Label": "department",
            "Token_Operator": "."
        },
        "answers": [
            [
                "1789",
                "State",
                9.96
            ],
            [
                "1789",
                "Treasury",
                11.1
            ],
            [
                "1947",
                "Defense",
                439.3
            ],
            [
                "1870",
                "Justice",
                23.4
            ],
            [
                "1849",
                "Interior",
                10.7
            ],
            [
                "1889",
                "Agriculture",
                77.6
            ],
            [
                "1903",
                "Commerce",
                6.2
            ],
            [
                "1913",
                "Labor",
                59.7
            ],
            [
                "1953",
                "Health and Human Services",
                543.2
            ],
            [
                "1965",
                "Housing and Urban Development",
                46.2
            ],
            [
                "1966",
                "Transportation",
                58.0
            ],
            [
                "1977",
                "Energy",
                21.5
            ],
            [
                "1979",
                "Education",
                62.8
            ],
            [
                "1989",
                "Veterans Affairs",
                73.2
            ],
            [
                "2002",
                "Homeland Security",
                44.6
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What are the maximum and minimum budget of the departments?",
        "cypher_query": "MATCH (d:department)\nRETURN max(d.Budget_in_Billions),min(d.Budget_in_Billions)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "d",
                "Budget_in_Billions"
            ],
            "Token_Name_Label": "department",
            "Token_Name_Function": [
                "max",
                "min"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                543.2,
                6.2
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What is the average number of employees of the departments whose rank is between 10 and 15?",
        "cypher_query": "MATCH (d:department)\nWHERE 10<=d.Ranking<=15\nRETURN avg(d.Num_Employees)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "d",
                "Ranking",
                "Num_Employees"
            ],
            "Token_Name_Label": "department",
            "Token_Literal_Number_Integer": [
                "10",
                "15"
            ],
            "Token_Operator": [
                "<=",
                "."
            ],
            "Token_Name_Function": "avg"
        },
        "answers": [
            [
                105468.16666666667
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What are the names of the heads who are born outside the California state?",
        "cypher_query": "MATCH (h:head)\nWHERE h.born_state<>'California'\nRETURN h.name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN",
                "name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "h",
                "born_state"
            ],
            "Token_Name_Label": "head",
            "Token_Operator": [
                ".",
                "<>"
            ],
            "Token_Literal_String": "'California'"
        },
        "answers": [
            [
                "Tiger Woods"
            ],
            [
                "K. J. Choi"
            ],
            [
                "Jeff Maggert"
            ],
            [
                "Stewart Cink"
            ],
            [
                "P\u00e1draig Harrington"
            ],
            [
                "Franklin Langham"
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What are the distinct creation years of the departments managed by a secretary born in state 'Alabama'?",
        "cypher_query": "MATCH (T1:department)-[T2:management]-(T3:head)\nWHERE T3.born_state='Alabama'\nRETURN DISTINCT T1.Creation",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN DISTINCT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3",
                "born_state",
                "Creation"
            ],
            "Token_Name_Label": [
                "department",
                "management",
                "head"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "'Alabama'"
        },
        "answers": [
            [
                "1903"
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What are the names of the states where at least 3 heads were born?",
        "cypher_query": "MATCH (h:head)\nWITH h.born_state AS born_state, count(*) AS count\nWHERE count >=3\nRETURN born_state",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "AS",
                "WHERE",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "h",
                "born_state",
                "count"
            ],
            "Token_Name_Label": "head",
            "Token_Operator": [
                ".",
                "*",
                ">="
            ],
            "Token_Name_Function": "count",
            "Token_Literal_Number_Integer": "3"
        },
        "answers": [
            [
                "California"
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "In which year were most departments established?",
        "cypher_query": "MATCH (d:department)\nWITH d.Creation AS Creation, count(d.Creation) AS count\nRETURN Creation\nORDER BY count DESC\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "AS",
                "RETURN",
                "ORDER BY",
                "DESC",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "d",
                "Creation",
                "count"
            ],
            "Token_Name_Label": "department",
            "Token_Operator": ".",
            "Token_Name_Function": "count",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                "1789"
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "Show the name and number of employees for the departments managed by heads whose temporary acting value is 'Yes'?",
        "cypher_query": "MATCH (T1:department)-[T2:management]-()\nWHERE T2.temporary_acting='Yes'\nRETURN T1.Name,T1.Num_Employees",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "temporary_acting",
                "Num_Employees"
            ],
            "Token_Name_Label": [
                "department",
                "management"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "'Yes'"
        },
        "answers": [
            [
                "Treasury",
                115897.0
            ],
            [
                "Treasury",
                115897.0
            ],
            [
                "Homeland Security",
                208000.0
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "How many acting statuses are there?",
        "cypher_query": "MATCH ()-[m:management]-()\nWITH DISTINCT m.temporary_acting AS temporary_acting\nRETURN count(temporary_acting)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH DISTINCT",
                "AS",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ")-[",
                ":",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "m",
                "temporary_acting"
            ],
            "Token_Name_Label": "management",
            "Token_Operator": ".",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                2
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "How many departments are led by heads who are not mentioned?",
        "cypher_query": "MATCH (d:department)\nWHERE NOT (d:department)-[:management]-()\nRETURN count(*)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ")-[",
                "]-("
            ],
            "Token_Name_Variable": "d",
            "Token_Name_Label": [
                "department",
                "management"
            ],
            "Token_Operator": [
                "NOT",
                "*"
            ],
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                11
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What are the distinct ages of the heads who are acting?",
        "cypher_query": "MATCH ()-[T2:management]-(T1:head)\nWHERE T2.temporary_acting='Yes'\nRETURN DISTINCT T1.age",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN DISTINCT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ")-[",
                ":",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T2",
                "T1",
                "temporary_acting",
                "age"
            ],
            "Token_Name_Label": [
                "management",
                "head"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "'Yes'"
        },
        "answers": [
            [
                52.0
            ],
            [
                53.0
            ],
            [
                69.0
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "Which department has more than 1 head at a time? List the id, name and the number of heads.",
        "cypher_query": "MATCH ()-[T2:management]-(T1:department)\nWITH T1.Department_ID AS Department_ID, count(*) AS count, T1.Name AS Name\nWHERE count >1\nRETURN Department_ID,Name,count",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "AS",
                "Name",
                "WHERE",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ")-[",
                ":",
                "]-(",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "T2",
                "T1",
                "Department_ID",
                "count"
            ],
            "Token_Name_Label": [
                "management",
                "department"
            ],
            "Token_Operator": [
                ".",
                "*",
                ">"
            ],
            "Token_Name_Function": "count",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                2,
                "Treasury",
                2
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "Which head's name has the substring 'Ha'? List the id and name.",
        "cypher_query": "MATCH (h:head)\nWHERE h.name =~'.*[H|h]a.*'\nRETURN h.head_ID,h.name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "h",
                "head_ID"
            ],
            "Token_Name_Label": "head",
            "Token_Operator": [
                ".",
                "=~"
            ],
            "Token_Literal_String": "'.*[H|h]a.*'"
        },
        "answers": [
            [
                4,
                "Dudley Hart"
            ],
            [
                9,
                "P\u00e1draig Harrington"
            ],
            [
                10,
                "Franklin Langham"
            ]
        ]
    }
][][][][][][][][][][][][][
    {
        "db_id": "hospital_1",
        "question": "Count how many appointments have been made in total.",
        "cypher_query": "MATCH (a:Appointment)\nRETURN count(*)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "a",
            "Token_Name_Label": "Appointment",
            "Token_Name_Function": "count",
            "Token_Operator": "*"
        },
        "answers": [
            [
                9
            ]
        ]
    }
][][][][][][
    {
        "db_id": "hospital_1",
        "question": "Count how many appointments have been made in total.",
        "cypher_query": "MATCH (a:Appointment)\nRETURN count(*)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "a",
            "Token_Name_Label": "Appointment",
            "Token_Name_Function": "count",
            "Token_Operator": "*"
        },
        "answers": [
            [
                9
            ]
        ]
    }
][][][][][][][][][][][][][][][][][][][][
    {
        "db_id": "hospital_1",
        "question": "Find the names of nurses who are on call.",
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:On_Call)\nRETURN DISTINCT T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2"
            ],
            "Token_Name_Label": [
                "Nurse",
                "On_Call"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "Find the names of nurses who are on call.",
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:On_Call)\nRETURN DISTINCT T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2"
            ],
            "Token_Name_Label": [
                "Nurse",
                "On_Call"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "Find the patient who most recently stayed in room 111.",
        "cypher_query": "MATCH (s:Stay)\nWHERE s.Room=111\nRETURN s.Patient\nORDER BY s.StayStart DESC\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN",
                "ORDER BY",
                "DESC",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "s",
                "Room",
                "Patient",
                "StayStart"
            ],
            "Token_Name_Label": "Stay",
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_Number_Integer": "111"
        },
        "answers": [
            [
                100000001
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the id of the patient who stayed in room 111 most recently?",
        "cypher_query": "MATCH (s:Stay)\nWHERE s.Room=111\nRETURN s.Patient\nORDER BY s.StayStart DESC\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN",
                "ORDER BY",
                "DESC",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "s",
                "Room",
                "Patient",
                "StayStart"
            ],
            "Token_Name_Label": "Stay",
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_Number_Integer": "111"
        },
        "answers": [
            [
                100000001
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What are the unique block codes that have available rooms?",
        "cypher_query": "MATCH (r:Room)\nWHERE r.Unavailable=0\nRETURN DISTINCT r.BlockCode",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN DISTINCT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "r",
                "Unavailable",
                "BlockCode"
            ],
            "Token_Name_Label": "Room",
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_Number_Integer": "0"
        },
        "answers": [
            [
                1
            ],
            [
                2
            ],
            [
                3
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Tell me the distinct block codes where some rooms are available.",
        "cypher_query": "MATCH (r:Room)\nWHERE r.Unavailable=0\nRETURN DISTINCT r.BlockCode",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN DISTINCT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "r",
                "Unavailable",
                "BlockCode"
            ],
            "Token_Name_Label": "Room",
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_Number_Integer": "0"
        },
        "answers": [
            [
                1
            ],
            [
                2
            ],
            [
                3
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many different types of rooms are there?",
        "cypher_query": "MATCH (r:Room)\nWITH DISTINCT r.RoomType AS roomtype\nRETURN count(roomtype)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH DISTINCT",
                "AS",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "r",
                "RoomType",
                "roomtype"
            ],
            "Token_Name_Label": "Room",
            "Token_Operator": ".",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                1
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of distinct room types available.",
        "cypher_query": "MATCH (r:Room)\nWITH DISTINCT r.RoomType AS roomtype\nRETURN count(roomtype)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH DISTINCT",
                "AS",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "r",
                "RoomType",
                "roomtype"
            ],
            "Token_Name_Label": "Room",
            "Token_Operator": ".",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                1
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the patient who has the most recent undergoing treatment?",
        "cypher_query": "MATCH (u:Undergoes)\nRETURN u.Patient\nORDER BY u.DateUndergoes\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "ORDER BY",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "u",
                "Patient",
                "DateUndergoes"
            ],
            "Token_Name_Label": "Undergoes",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                100000001
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which patient is undergoing the most recent treatment?",
        "cypher_query": "MATCH (u:Undergoes)\nRETURN u.Patient\nORDER BY u.DateUndergoes\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "ORDER BY",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "u",
                "Patient",
                "DateUndergoes"
            ],
            "Token_Name_Label": "Undergoes",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                100000001
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "List the names of all distinct nurses ordered by alphabetical order?",
        "cypher_query": "MATCH (n:Nurse)\nRETURN DISTINCT n.Name\nORDER BY n.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "n",
            "Token_Name_Label": "Nurse",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the alphabetically ordered list of all the distinct names of nurses?",
        "cypher_query": "MATCH (n:Nurse)\nRETURN DISTINCT n.Name\nORDER BY n.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "n",
            "Token_Name_Label": "Nurse",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the names of nurses who are nursing an undergoing treatment.",
        "cypher_query": "MATCH (T1:Undergoes)-[]-(T2:Nurse)\nRETURN DISTINCT T2.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2"
            ],
            "Token_Name_Label": [
                "Undergoes",
                "Nurse"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which nurses are in charge of patients undergoing treatments?",
        "cypher_query": "MATCH (T1:Undergoes)-[]-(T2:Nurse)\nRETURN DISTINCT T2.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2"
            ],
            "Token_Name_Label": [
                "Undergoes",
                "Nurse"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "List the names of all distinct medications, ordered in an alphabetical order.",
        "cypher_query": "MATCH (m:Medication)\nRETURN DISTINCT m.Name\nORDER BY m.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "m",
            "Token_Name_Label": "Medication",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Awakin"
            ],
            [
                "Crescavitin"
            ],
            [
                "Melioraurin"
            ],
            [
                "Procrastin-X"
            ],
            [
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the alphabetically ordered list of all distinct medications?",
        "cypher_query": "MATCH (m:Medication)\nRETURN DISTINCT m.Name\nORDER BY m.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "m",
            "Token_Name_Label": "Medication",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Awakin"
            ],
            [
                "Crescavitin"
            ],
            [
                "Melioraurin"
            ],
            [
                "Procrastin-X"
            ],
            [
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What are the highest cost, lowest cost and average cost of procedures?",
        "cypher_query": "MATCH (p:Procedures)\nRETURN max(p.Cost),min(p.Cost),avg(p.Cost)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Name_Function": [
                "max",
                "min",
                "avg"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                10000.0,
                25.0,
                4324.857142857143
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Tell me the highest, lowest, and average cost of procedures.",
        "cypher_query": "MATCH (p:Procedures)\nRETURN max(p.Cost),min(p.Cost),avg(p.Cost)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Name_Function": [
                "max",
                "min",
                "avg"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                10000.0,
                25.0,
                4324.857142857143
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "List the name and cost of all procedures sorted by the cost from the highest to the lowest.",
        "cypher_query": "MATCH (p:Procedures)\nRETURN p.Name,p.Cost\nORDER BY p.Cost DESC",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name",
                "ORDER BY",
                "DESC"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Complete Walletectomy",
                10000.0
            ],
            [
                "Reversible Pancreomyoplasty",
                5600.0
            ],
            [
                "Obfuscated Dermogastrotomy",
                4899.0
            ],
            [
                "Folded Demiophtalmectomy",
                4500.0
            ],
            [
                "Obtuse Pyloric Recombobulation",
                3750.0
            ],
            [
                "Reverse Rhinopodoplasty",
                1500.0
            ],
            [
                "Follicular Demiectomy",
                25.0
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Sort the list of names and costs of all procedures in the descending order of cost.",
        "cypher_query": "MATCH (p:Procedures)\nRETURN p.Name,p.Cost\nORDER BY p.Cost DESC",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name",
                "ORDER BY",
                "DESC"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Complete Walletectomy",
                10000.0
            ],
            [
                "Reversible Pancreomyoplasty",
                5600.0
            ],
            [
                "Obfuscated Dermogastrotomy",
                4899.0
            ],
            [
                "Folded Demiophtalmectomy",
                4500.0
            ],
            [
                "Obtuse Pyloric Recombobulation",
                3750.0
            ],
            [
                "Reverse Rhinopodoplasty",
                1500.0
            ],
            [
                "Follicular Demiectomy",
                25.0
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the three most expensive procedures.",
        "cypher_query": "MATCH (p:Procedures)\nRETURN p.Name\nORDER BY p.Cost\nLIMIT 3",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name",
                "ORDER BY",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "3"
        },
        "answers": [
            [
                "Follicular Demiectomy"
            ],
            [
                "Reverse Rhinopodoplasty"
            ],
            [
                "Obtuse Pyloric Recombobulation"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What are the three most costly procedures?",
        "cypher_query": "MATCH (p:Procedures)\nRETURN p.Name\nORDER BY p.Cost\nLIMIT 3",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name",
                "ORDER BY",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "3"
        },
        "answers": [
            [
                "Follicular Demiectomy"
            ],
            [
                "Reverse Rhinopodoplasty"
            ],
            [
                "Obtuse Pyloric Recombobulation"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many appointments are there?",
        "cypher_query": "MATCH (a:Appointment)\nRETURN count(*)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "a",
            "Token_Name_Label": "Appointment",
            "Token_Name_Function": "count",
            "Token_Operator": "*"
        },
        "answers": [
            [
                9
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Count how many appointments have been made in total.",
        "cypher_query": "MATCH (a:Appointment)\nRETURN count(*)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "a",
            "Token_Name_Label": "Appointment",
            "Token_Name_Function": "count",
            "Token_Operator": "*"
        },
        "answers": [
            [
                9
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the names of nurses who are on call.",
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:On_Call)\nRETURN DISTINCT T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2"
            ],
            "Token_Name_Label": [
                "Nurse",
                "On_Call"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What are the distinct names of nurses on call?",
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:On_Call)\nRETURN DISTINCT T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2"
            ],
            "Token_Name_Label": [
                "Nurse",
                "On_Call"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    }
][][][][][][][][][][][][][][][][][][][][][][][][][][
    {
        "db_id": "hospital_1",
        "question": "How many appointments are there?",
        "cypher_query": "MATCH (a:Appointment)\nRETURN count(*)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "a",
            "Token_Name_Label": "Appointment",
            "Token_Name_Function": "count",
            "Token_Operator": "*"
        },
        "answers": [
            [
                9
            ]
        ]
    }
][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][
    {
        "db_id": "hospital_1",
        "question": "How many patients are not using Procrastin-X as medication?",
        "cypher_query": "MATCH (p:Patient) MATCH (T1:Prescribes)-[]-(T2:Medication)\nWHERE T2.Name='Procrastin-X' AND NOT p.SSN in T1.Patient\nRETURN count(DISTINCT p.SSN)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ")-[",
                "]-("
            ],
            "Token_Name_Variable": [
                "p",
                "T1",
                "T2",
                "SSN",
                "Patient"
            ],
            "Token_Name_Label": [
                "Patient",
                "Prescribes",
                "Medication"
            ],
            "Token_Operator": [
                ".",
                "=",
                "AND",
                "NOT",
                "in",
                "DISTINCT"
            ],
            "Token_Literal_String": "'Procrastin-X'",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                3
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "Find the patient who most recently stayed in room 111.",
        "cypher_query": "MATCH (s:Stay)\nWHERE s.Room=111\nRETURN s.Patient\nORDER BY s.StayStart DESC\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN",
                "ORDER BY",
                "DESC",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "s",
                "Room",
                "Patient",
                "StayStart"
            ],
            "Token_Name_Label": "Stay",
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_Number_Integer": "111"
        },
        "answers": [
            [
                100000001
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the id of the patient who stayed in room 111 most recently?",
        "cypher_query": "MATCH (s:Stay)\nWHERE s.Room=111\nRETURN s.Patient\nORDER BY s.StayStart DESC\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN",
                "ORDER BY",
                "DESC",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "s",
                "Room",
                "Patient",
                "StayStart"
            ],
            "Token_Name_Label": "Stay",
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_Number_Integer": "111"
        },
        "answers": [
            [
                100000001
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What are the unique block codes that have available rooms?",
        "cypher_query": "MATCH (r:Room)\nWHERE r.Unavailable=0\nRETURN DISTINCT r.BlockCode",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN DISTINCT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "r",
                "Unavailable",
                "BlockCode"
            ],
            "Token_Name_Label": "Room",
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_Number_Integer": "0"
        },
        "answers": [
            [
                1
            ],
            [
                2
            ],
            [
                3
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Tell me the distinct block codes where some rooms are available.",
        "cypher_query": "MATCH (r:Room)\nWHERE r.Unavailable=0\nRETURN DISTINCT r.BlockCode",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN DISTINCT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "r",
                "Unavailable",
                "BlockCode"
            ],
            "Token_Name_Label": "Room",
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_Number_Integer": "0"
        },
        "answers": [
            [
                1
            ],
            [
                2
            ],
            [
                3
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many different types of rooms are there?",
        "cypher_query": "MATCH (r:Room)\nWITH DISTINCT r.RoomType AS roomtype\nRETURN count(roomtype)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH DISTINCT",
                "AS",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "r",
                "RoomType",
                "roomtype"
            ],
            "Token_Name_Label": "Room",
            "Token_Operator": ".",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                1
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of distinct room types available.",
        "cypher_query": "MATCH (r:Room)\nWITH DISTINCT r.RoomType AS roomtype\nRETURN count(roomtype)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH DISTINCT",
                "AS",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "r",
                "RoomType",
                "roomtype"
            ],
            "Token_Name_Label": "Room",
            "Token_Operator": ".",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                1
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the patient who has the most recent undergoing treatment?",
        "cypher_query": "MATCH (u:Undergoes)\nRETURN u.Patient\nORDER BY u.DateUndergoes\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "ORDER BY",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "u",
                "Patient",
                "DateUndergoes"
            ],
            "Token_Name_Label": "Undergoes",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                100000001
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which patient is undergoing the most recent treatment?",
        "cypher_query": "MATCH (u:Undergoes)\nRETURN u.Patient\nORDER BY u.DateUndergoes\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "ORDER BY",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "u",
                "Patient",
                "DateUndergoes"
            ],
            "Token_Name_Label": "Undergoes",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                100000001
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "List the names of all distinct nurses ordered by alphabetical order?",
        "cypher_query": "MATCH (n:Nurse)\nRETURN DISTINCT n.Name\nORDER BY n.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "n",
            "Token_Name_Label": "Nurse",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the alphabetically ordered list of all the distinct names of nurses?",
        "cypher_query": "MATCH (n:Nurse)\nRETURN DISTINCT n.Name\nORDER BY n.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "n",
            "Token_Name_Label": "Nurse",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the names of nurses who are nursing an undergoing treatment.",
        "cypher_query": "MATCH (T1:Undergoes)-[]-(T2:Nurse)\nRETURN DISTINCT T2.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2"
            ],
            "Token_Name_Label": [
                "Undergoes",
                "Nurse"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which nurses are in charge of patients undergoing treatments?",
        "cypher_query": "MATCH (T1:Undergoes)-[]-(T2:Nurse)\nRETURN DISTINCT T2.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2"
            ],
            "Token_Name_Label": [
                "Undergoes",
                "Nurse"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "List the names of all distinct medications, ordered in an alphabetical order.",
        "cypher_query": "MATCH (m:Medication)\nRETURN DISTINCT m.Name\nORDER BY m.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "m",
            "Token_Name_Label": "Medication",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Awakin"
            ],
            [
                "Crescavitin"
            ],
            [
                "Melioraurin"
            ],
            [
                "Procrastin-X"
            ],
            [
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the alphabetically ordered list of all distinct medications?",
        "cypher_query": "MATCH (m:Medication)\nRETURN DISTINCT m.Name\nORDER BY m.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "m",
            "Token_Name_Label": "Medication",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Awakin"
            ],
            [
                "Crescavitin"
            ],
            [
                "Melioraurin"
            ],
            [
                "Procrastin-X"
            ],
            [
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What are the highest cost, lowest cost and average cost of procedures?",
        "cypher_query": "MATCH (p:Procedures)\nRETURN max(p.Cost),min(p.Cost),avg(p.Cost)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Name_Function": [
                "max",
                "min",
                "avg"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                10000.0,
                25.0,
                4324.857142857143
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Tell me the highest, lowest, and average cost of procedures.",
        "cypher_query": "MATCH (p:Procedures)\nRETURN max(p.Cost),min(p.Cost),avg(p.Cost)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Name_Function": [
                "max",
                "min",
                "avg"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                10000.0,
                25.0,
                4324.857142857143
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "List the name and cost of all procedures sorted by the cost from the highest to the lowest.",
        "cypher_query": "MATCH (p:Procedures)\nRETURN p.Name,p.Cost\nORDER BY p.Cost DESC",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name",
                "ORDER BY",
                "DESC"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Complete Walletectomy",
                10000.0
            ],
            [
                "Reversible Pancreomyoplasty",
                5600.0
            ],
            [
                "Obfuscated Dermogastrotomy",
                4899.0
            ],
            [
                "Folded Demiophtalmectomy",
                4500.0
            ],
            [
                "Obtuse Pyloric Recombobulation",
                3750.0
            ],
            [
                "Reverse Rhinopodoplasty",
                1500.0
            ],
            [
                "Follicular Demiectomy",
                25.0
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Sort the list of names and costs of all procedures in the descending order of cost.",
        "cypher_query": "MATCH (p:Procedures)\nRETURN p.Name,p.Cost\nORDER BY p.Cost DESC",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name",
                "ORDER BY",
                "DESC"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Complete Walletectomy",
                10000.0
            ],
            [
                "Reversible Pancreomyoplasty",
                5600.0
            ],
            [
                "Obfuscated Dermogastrotomy",
                4899.0
            ],
            [
                "Folded Demiophtalmectomy",
                4500.0
            ],
            [
                "Obtuse Pyloric Recombobulation",
                3750.0
            ],
            [
                "Reverse Rhinopodoplasty",
                1500.0
            ],
            [
                "Follicular Demiectomy",
                25.0
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the three most expensive procedures.",
        "cypher_query": "MATCH (p:Procedures)\nRETURN p.Name\nORDER BY p.Cost\nLIMIT 3",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name",
                "ORDER BY",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "3"
        },
        "answers": [
            [
                "Follicular Demiectomy"
            ],
            [
                "Reverse Rhinopodoplasty"
            ],
            [
                "Obtuse Pyloric Recombobulation"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What are the three most costly procedures?",
        "cypher_query": "MATCH (p:Procedures)\nRETURN p.Name\nORDER BY p.Cost\nLIMIT 3",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name",
                "ORDER BY",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "3"
        },
        "answers": [
            [
                "Follicular Demiectomy"
            ],
            [
                "Reverse Rhinopodoplasty"
            ],
            [
                "Obtuse Pyloric Recombobulation"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of patients who are not using the medication of Procrastin-X.",
        "cypher_query": "MATCH (p:Patient) MATCH (T1:Prescribes)-[]-(T2:Medication)\nWHERE T2.Name='Procrastin-X' AND NOT p.SSN in T1.Patient\nRETURN count(DISTINCT p.SSN)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ")-[",
                "]-("
            ],
            "Token_Name_Variable": [
                "p",
                "T1",
                "T2",
                "SSN",
                "Patient"
            ],
            "Token_Name_Label": [
                "Patient",
                "Prescribes",
                "Medication"
            ],
            "Token_Operator": [
                ".",
                "=",
                "AND",
                "NOT",
                "in",
                "DISTINCT"
            ],
            "Token_Literal_String": "'Procrastin-X'",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                3
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many patients are not using Procrastin-X as medication?",
        "cypher_query": "MATCH (p:Patient) MATCH (T1:Prescribes)-[]-(T2:Medication)\nWHERE T2.Name='Procrastin-X' AND NOT p.SSN in T1.Patient\nRETURN count(DISTINCT p.SSN)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ")-[",
                "]-("
            ],
            "Token_Name_Variable": [
                "p",
                "T1",
                "T2",
                "SSN",
                "Patient"
            ],
            "Token_Name_Label": [
                "Patient",
                "Prescribes",
                "Medication"
            ],
            "Token_Operator": [
                ".",
                "=",
                "AND",
                "NOT",
                "in",
                "DISTINCT"
            ],
            "Token_Literal_String": "'Procrastin-X'",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                3
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many appointments are there?",
        "cypher_query": "MATCH (a:Appointment)\nRETURN count(*)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "a",
            "Token_Name_Label": "Appointment",
            "Token_Name_Function": "count",
            "Token_Operator": "*"
        },
        "answers": [
            [
                9
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Count how many appointments have been made in total.",
        "cypher_query": "MATCH (a:Appointment)\nRETURN count(*)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "a",
            "Token_Name_Label": "Appointment",
            "Token_Name_Function": "count",
            "Token_Operator": "*"
        },
        "answers": [
            [
                9
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the names of nurses who are on call.",
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:On_Call)\nRETURN DISTINCT T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2"
            ],
            "Token_Name_Label": [
                "Nurse",
                "On_Call"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What are the distinct names of nurses on call?",
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:On_Call)\nRETURN DISTINCT T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2"
            ],
            "Token_Name_Label": [
                "Nurse",
                "On_Call"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "Find the patient who most recently stayed in room 111.",
        "cypher_query": "MATCH (s:Stay)\nWHERE s.Room = 111\nRETURN s.Patient\nORDER BY s.StayStart DESC\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN",
                "ORDER BY",
                "DESC",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "s",
                "Room",
                "Patient",
                "StayStart"
            ],
            "Token_Name_Label": "Stay",
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_Number_Integer": "111"
        },
        "answers": [
            [
                100000001
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the id of the patient who stayed in room 111 most recently?",
        "cypher_query": "MATCH (s:Stay)\nWHERE s.Room = 111\nRETURN s.Patient\nORDER BY s.StayStart DESC\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN",
                "ORDER BY",
                "DESC",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "s",
                "Room",
                "Patient",
                "StayStart"
            ],
            "Token_Name_Label": "Stay",
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_Number_Integer": "111"
        },
        "answers": [
            [
                100000001
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What are the unique block codes that have available rooms?",
        "cypher_query": "MATCH (r:Room)\nWHERE r.Unavailable = 0\nRETURN DISTINCT r.BlockCode",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN DISTINCT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "r",
                "Unavailable",
                "BlockCode"
            ],
            "Token_Name_Label": "Room",
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_Number_Integer": "0"
        },
        "answers": [
            [
                1
            ],
            [
                2
            ],
            [
                3
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Tell me the distinct block codes where some rooms are available.",
        "cypher_query": "MATCH (r:Room)\nWHERE r.Unavailable = 0\nRETURN DISTINCT r.BlockCode",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN DISTINCT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "r",
                "Unavailable",
                "BlockCode"
            ],
            "Token_Name_Label": "Room",
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_Number_Integer": "0"
        },
        "answers": [
            [
                1
            ],
            [
                2
            ],
            [
                3
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many different types of rooms are there?",
        "cypher_query": "MATCH (r:Room)\nWITH DISTINCT r.RoomType AS roomtype\nRETURN count(roomtype)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH DISTINCT",
                "AS",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "r",
                "RoomType",
                "roomtype"
            ],
            "Token_Name_Label": "Room",
            "Token_Operator": ".",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                1
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of distinct room types available.",
        "cypher_query": "MATCH (r:Room)\nWITH DISTINCT r.RoomType AS roomtype\nRETURN count(roomtype)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH DISTINCT",
                "AS",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "r",
                "RoomType",
                "roomtype"
            ],
            "Token_Name_Label": "Room",
            "Token_Operator": ".",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                1
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the patient who has the most recent undergoing treatment?",
        "cypher_query": "MATCH (u:Undergoes)\nRETURN u.Patient\nORDER BY u.DateUndergoes\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "ORDER BY",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "u",
                "Patient",
                "DateUndergoes"
            ],
            "Token_Name_Label": "Undergoes",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                100000001
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which patient is undergoing the most recent treatment?",
        "cypher_query": "MATCH (u:Undergoes)\nRETURN u.Patient\nORDER BY u.DateUndergoes\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "ORDER BY",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "u",
                "Patient",
                "DateUndergoes"
            ],
            "Token_Name_Label": "Undergoes",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                100000001
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "List the names of all distinct nurses ordered by alphabetical order?",
        "cypher_query": "MATCH (n:Nurse)\nRETURN DISTINCT n.Name\nORDER BY n.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "n",
            "Token_Name_Label": "Nurse",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the alphabetically ordered list of all the distinct names of nurses?",
        "cypher_query": "MATCH (n:Nurse)\nRETURN DISTINCT n.Name\nORDER BY n.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "n",
            "Token_Name_Label": "Nurse",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the names of nurses who are nursing an undergoing treatment.",
        "cypher_query": "MATCH (T1:Undergoes)-[]-(T2:Nurse)\nRETURN DISTINCT T2.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2"
            ],
            "Token_Name_Label": [
                "Undergoes",
                "Nurse"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which nurses are in charge of patients undergoing treatments?",
        "cypher_query": "MATCH (T1:Undergoes)-[]-(T2:Nurse)\nRETURN DISTINCT T2.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2"
            ],
            "Token_Name_Label": [
                "Undergoes",
                "Nurse"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "List the names of all distinct medications, ordered in an alphabetical order.",
        "cypher_query": "MATCH (m:Medication)\nRETURN DISTINCT m.Name\nORDER BY m.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "m",
            "Token_Name_Label": "Medication",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Awakin"
            ],
            [
                "Crescavitin"
            ],
            [
                "Melioraurin"
            ],
            [
                "Procrastin-X"
            ],
            [
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the alphabetically ordered list of all distinct medications?",
        "cypher_query": "MATCH (m:Medication)\nRETURN DISTINCT m.Name\nORDER BY m.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "m",
            "Token_Name_Label": "Medication",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Awakin"
            ],
            [
                "Crescavitin"
            ],
            [
                "Melioraurin"
            ],
            [
                "Procrastin-X"
            ],
            [
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "List the name and cost of all procedures sorted by the cost from the highest to the lowest.",
        "cypher_query": "MATCH (p:Procedures)\nRETURN p.Name,p.Cost\nORDER BY p.Cost DESC",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name",
                "ORDER BY",
                "DESC"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Complete Walletectomy",
                10000.0
            ],
            [
                "Reversible Pancreomyoplasty",
                5600.0
            ],
            [
                "Obfuscated Dermogastrotomy",
                4899.0
            ],
            [
                "Folded Demiophtalmectomy",
                4500.0
            ],
            [
                "Obtuse Pyloric Recombobulation",
                3750.0
            ],
            [
                "Reverse Rhinopodoplasty",
                1500.0
            ],
            [
                "Follicular Demiectomy",
                25.0
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Sort the list of names and costs of all procedures in the descending order of cost.",
        "cypher_query": "MATCH (p:Procedures)\nRETURN p.Name,p.Cost\nORDER BY p.Cost DESC",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name",
                "ORDER BY",
                "DESC"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Complete Walletectomy",
                10000.0
            ],
            [
                "Reversible Pancreomyoplasty",
                5600.0
            ],
            [
                "Obfuscated Dermogastrotomy",
                4899.0
            ],
            [
                "Folded Demiophtalmectomy",
                4500.0
            ],
            [
                "Obtuse Pyloric Recombobulation",
                3750.0
            ],
            [
                "Reverse Rhinopodoplasty",
                1500.0
            ],
            [
                "Follicular Demiectomy",
                25.0
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the three most expensive procedures.",
        "cypher_query": "MATCH (p:Procedures)\nRETURN p.Name\nORDER BY p.Cost\nLIMIT 3",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name",
                "ORDER BY",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "3"
        },
        "answers": [
            [
                "Follicular Demiectomy"
            ],
            [
                "Reverse Rhinopodoplasty"
            ],
            [
                "Obtuse Pyloric Recombobulation"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What are the three most costly procedures?",
        "cypher_query": "MATCH (p:Procedures)\nRETURN p.Name\nORDER BY p.Cost\nLIMIT 3",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name",
                "ORDER BY",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "3"
        },
        "answers": [
            [
                "Follicular Demiectomy"
            ],
            [
                "Reverse Rhinopodoplasty"
            ],
            [
                "Obtuse Pyloric Recombobulation"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of patients who are not using the medication of Procrastin-X.",
        "cypher_query": "MATCH (p:Patient) MATCH (T1:Prescribes)-[]-(T2:Medication)\nWHERE T2.Name = 'Procrastin-X' AND NOT p.SSN in T1.Patient\nRETURN count(DISTINCT p.SSN)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ")-[",
                "]-("
            ],
            "Token_Name_Variable": [
                "p",
                "T1",
                "T2",
                "SSN",
                "Patient"
            ],
            "Token_Name_Label": [
                "Patient",
                "Prescribes",
                "Medication"
            ],
            "Token_Operator": [
                ".",
                "=",
                "AND",
                "NOT",
                "in",
                "DISTINCT"
            ],
            "Token_Literal_String": "'Procrastin-X'",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                3
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many patients are not using Procrastin-X as medication?",
        "cypher_query": "MATCH (p:Patient) MATCH (T1:Prescribes)-[]-(T2:Medication)\nWHERE T2.Name = 'Procrastin-X' AND NOT p.SSN in T1.Patient\nRETURN count(DISTINCT p.SSN)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ")-[",
                "]-("
            ],
            "Token_Name_Variable": [
                "p",
                "T1",
                "T2",
                "SSN",
                "Patient"
            ],
            "Token_Name_Label": [
                "Patient",
                "Prescribes",
                "Medication"
            ],
            "Token_Operator": [
                ".",
                "=",
                "AND",
                "NOT",
                "in",
                "DISTINCT"
            ],
            "Token_Literal_String": "'Procrastin-X'",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                3
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many appointments are there?",
        "cypher_query": "MATCH (a:Appointment)\nRETURN count(*)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "a",
            "Token_Name_Label": "Appointment",
            "Token_Name_Function": "count",
            "Token_Operator": "*"
        },
        "answers": [
            [
                9
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Count how many appointments have been made in total.",
        "cypher_query": "MATCH (a:Appointment)\nRETURN count(*)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "a",
            "Token_Name_Label": "Appointment",
            "Token_Name_Function": "count",
            "Token_Operator": "*"
        },
        "answers": [
            [
                9
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the names of nurses who are on call.",
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:On_Call)\nRETURN DISTINCT T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2"
            ],
            "Token_Name_Label": [
                "Nurse",
                "On_Call"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What are the distinct names of nurses on call?",
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:On_Call)\nRETURN DISTINCT T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2"
            ],
            "Token_Name_Label": [
                "Nurse",
                "On_Call"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "Find the patient who most recently stayed in room 111.",
        "cypher_query": "MATCH (s:Stay)\nWHERE s.Room = 111\nRETURN s.Patient\nORDER BY s.StayStart DESC\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN",
                "ORDER BY",
                "DESC",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "s",
                "Room",
                "Patient",
                "StayStart"
            ],
            "Token_Name_Label": "Stay",
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_Number_Integer": "111"
        },
        "answers": [
            [
                100000001
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the id of the patient who stayed in room 111 most recently?",
        "cypher_query": "MATCH (s:Stay)\nWHERE s.Room = 111\nRETURN s.Patient\nORDER BY s.StayStart DESC\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN",
                "ORDER BY",
                "DESC",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "s",
                "Room",
                "Patient",
                "StayStart"
            ],
            "Token_Name_Label": "Stay",
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_Number_Integer": "111"
        },
        "answers": [
            [
                100000001
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What are the unique block codes that have available rooms?",
        "cypher_query": "MATCH (r:Room)\nWHERE r.Unavailable = 0\nRETURN DISTINCT r.BlockCode",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN DISTINCT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "r",
                "Unavailable",
                "BlockCode"
            ],
            "Token_Name_Label": "Room",
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_Number_Integer": "0"
        },
        "answers": [
            [
                1
            ],
            [
                2
            ],
            [
                3
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Tell me the distinct block codes where some rooms are available.",
        "cypher_query": "MATCH (r:Room)\nWHERE r.Unavailable = 0\nRETURN DISTINCT r.BlockCode",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN DISTINCT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "r",
                "Unavailable",
                "BlockCode"
            ],
            "Token_Name_Label": "Room",
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_Number_Integer": "0"
        },
        "answers": [
            [
                1
            ],
            [
                2
            ],
            [
                3
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many different types of rooms are there?",
        "cypher_query": "MATCH (r:Room)\nWITH DISTINCT r.RoomType AS roomtype\nRETURN count(roomtype)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH DISTINCT",
                "AS",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "r",
                "RoomType",
                "roomtype"
            ],
            "Token_Name_Label": "Room",
            "Token_Operator": ".",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                1
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of distinct room types available.",
        "cypher_query": "MATCH (r:Room)\nWITH DISTINCT r.RoomType AS roomtype\nRETURN count(roomtype)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH DISTINCT",
                "AS",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "r",
                "RoomType",
                "roomtype"
            ],
            "Token_Name_Label": "Room",
            "Token_Operator": ".",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                1
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the patient who has the most recent undergoing treatment?",
        "cypher_query": "MATCH (u:Undergoes)\nRETURN u.Patient\nORDER BY u.DateUndergoes\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "ORDER BY",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "u",
                "Patient",
                "DateUndergoes"
            ],
            "Token_Name_Label": "Undergoes",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                100000001
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which patient is undergoing the most recent treatment?",
        "cypher_query": "MATCH (u:Undergoes)\nRETURN u.Patient\nORDER BY u.DateUndergoes\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "ORDER BY",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "u",
                "Patient",
                "DateUndergoes"
            ],
            "Token_Name_Label": "Undergoes",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                100000001
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "List the names of all distinct nurses ordered by alphabetical order?",
        "cypher_query": "MATCH (n:Nurse)\nRETURN DISTINCT n.Name\nORDER BY n.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "n",
            "Token_Name_Label": "Nurse",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the alphabetically ordered list of all the distinct names of nurses?",
        "cypher_query": "MATCH (n:Nurse)\nRETURN DISTINCT n.Name\nORDER BY n.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "n",
            "Token_Name_Label": "Nurse",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the names of nurses who are nursing an undergoing treatment.",
        "cypher_query": "MATCH (T1:Undergoes)-[]-(T2:Nurse)\nRETURN DISTINCT T2.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2"
            ],
            "Token_Name_Label": [
                "Undergoes",
                "Nurse"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which nurses are in charge of patients undergoing treatments?",
        "cypher_query": "MATCH (T1:Undergoes)-[]-(T2:Nurse)\nRETURN DISTINCT T2.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2"
            ],
            "Token_Name_Label": [
                "Undergoes",
                "Nurse"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "List the names of all distinct medications, ordered in an alphabetical order.",
        "cypher_query": "MATCH (m:Medication)\nRETURN DISTINCT m.Name\nORDER BY m.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "m",
            "Token_Name_Label": "Medication",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Awakin"
            ],
            [
                "Crescavitin"
            ],
            [
                "Melioraurin"
            ],
            [
                "Procrastin-X"
            ],
            [
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the alphabetically ordered list of all distinct medications?",
        "cypher_query": "MATCH (m:Medication)\nRETURN DISTINCT m.Name\nORDER BY m.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "m",
            "Token_Name_Label": "Medication",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Awakin"
            ],
            [
                "Crescavitin"
            ],
            [
                "Melioraurin"
            ],
            [
                "Procrastin-X"
            ],
            [
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "List the name and cost of all procedures sorted by the cost from the highest to the lowest.",
        "cypher_query": "MATCH (p:Procedures)\nRETURN p.Name,p.Cost\nORDER BY p.Cost DESC",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name",
                "ORDER BY",
                "DESC"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Complete Walletectomy",
                10000.0
            ],
            [
                "Reversible Pancreomyoplasty",
                5600.0
            ],
            [
                "Obfuscated Dermogastrotomy",
                4899.0
            ],
            [
                "Folded Demiophtalmectomy",
                4500.0
            ],
            [
                "Obtuse Pyloric Recombobulation",
                3750.0
            ],
            [
                "Reverse Rhinopodoplasty",
                1500.0
            ],
            [
                "Follicular Demiectomy",
                25.0
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Sort the list of names and costs of all procedures in the descending order of cost.",
        "cypher_query": "MATCH (p:Procedures)\nRETURN p.Name,p.Cost\nORDER BY p.Cost DESC",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name",
                "ORDER BY",
                "DESC"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Complete Walletectomy",
                10000.0
            ],
            [
                "Reversible Pancreomyoplasty",
                5600.0
            ],
            [
                "Obfuscated Dermogastrotomy",
                4899.0
            ],
            [
                "Folded Demiophtalmectomy",
                4500.0
            ],
            [
                "Obtuse Pyloric Recombobulation",
                3750.0
            ],
            [
                "Reverse Rhinopodoplasty",
                1500.0
            ],
            [
                "Follicular Demiectomy",
                25.0
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the three most expensive procedures.",
        "cypher_query": "MATCH (p:Procedures)\nRETURN p.Name\nORDER BY p.Cost\nLIMIT 3",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name",
                "ORDER BY",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "3"
        },
        "answers": [
            [
                "Follicular Demiectomy"
            ],
            [
                "Reverse Rhinopodoplasty"
            ],
            [
                "Obtuse Pyloric Recombobulation"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What are the three most costly procedures?",
        "cypher_query": "MATCH (p:Procedures)\nRETURN p.Name\nORDER BY p.Cost\nLIMIT 3",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name",
                "ORDER BY",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "3"
        },
        "answers": [
            [
                "Follicular Demiectomy"
            ],
            [
                "Reverse Rhinopodoplasty"
            ],
            [
                "Obtuse Pyloric Recombobulation"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of patients who are not using the medication of Procrastin-X.",
        "cypher_query": "MATCH (p:Patient) MATCH (T1:Prescribes)-[]-(T2:Medication)\nWHERE T2.Name = 'Procrastin-X' AND NOT p.SSN in T1.Patient\nRETURN count(DISTINCT p.SSN)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ")-[",
                "]-("
            ],
            "Token_Name_Variable": [
                "p",
                "T1",
                "T2",
                "SSN",
                "Patient"
            ],
            "Token_Name_Label": [
                "Patient",
                "Prescribes",
                "Medication"
            ],
            "Token_Operator": [
                ".",
                "=",
                "AND",
                "NOT",
                "in",
                "DISTINCT"
            ],
            "Token_Literal_String": "'Procrastin-X'",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                3
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many patients are not using Procrastin-X as medication?",
        "cypher_query": "MATCH (p:Patient) MATCH (T1:Prescribes)-[]-(T2:Medication)\nWHERE T2.Name = 'Procrastin-X' AND NOT p.SSN in T1.Patient\nRETURN count(DISTINCT p.SSN)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ")-[",
                "]-("
            ],
            "Token_Name_Variable": [
                "p",
                "T1",
                "T2",
                "SSN",
                "Patient"
            ],
            "Token_Name_Label": [
                "Patient",
                "Prescribes",
                "Medication"
            ],
            "Token_Operator": [
                ".",
                "=",
                "AND",
                "NOT",
                "in",
                "DISTINCT"
            ],
            "Token_Literal_String": "'Procrastin-X'",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                3
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many appointments are there?",
        "cypher_query": "MATCH (a:Appointment)\nRETURN count(*)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "a",
            "Token_Name_Label": "Appointment",
            "Token_Name_Function": "count",
            "Token_Operator": "*"
        },
        "answers": [
            [
                9
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Count how many appointments have been made in total.",
        "cypher_query": "MATCH (a:Appointment)\nRETURN count(*)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "a",
            "Token_Name_Label": "Appointment",
            "Token_Name_Function": "count",
            "Token_Operator": "*"
        },
        "answers": [
            [
                9
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the names of nurses who are on call.",
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:On_Call)\nRETURN DISTINCT T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2"
            ],
            "Token_Name_Label": [
                "Nurse",
                "On_Call"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What are the distinct names of nurses on call?",
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:On_Call)\nRETURN DISTINCT T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2"
            ],
            "Token_Name_Label": [
                "Nurse",
                "On_Call"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    }
][][][][][][][][][][
    {
        "db_id": "hospital_1",
        "question": "Which physicians are affiliated with either Surgery or Psychiatry department? Give me their names.",
        "cypher_query": "MATCH (T1:Physician)-[T2:Affiliated_With]-(T3:Department)\nWHERE T3.Name = 'Surgery' OR T3.Name = 'Psychiatry'\nRETURN T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3"
            ],
            "Token_Name_Label": [
                "Physician",
                "Affiliated_With",
                "Department"
            ],
            "Token_Operator": [
                ".",
                "=",
                "OR"
            ],
            "Token_Literal_String": [
                "'Surgery'",
                "'Psychiatry'"
            ]
        },
        "answers": [
            [
                "Christopher Turk"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "John Wen"
            ],
            [
                "Molly Clock"
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "Find the patient who most recently stayed in room 111.",
        "cypher_query": "MATCH (s:Stay)\nWHERE s.Room = 111\nRETURN s.Patient\nORDER BY s.StayStart DESC\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN",
                "ORDER BY",
                "DESC",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "s",
                "Room",
                "Patient",
                "StayStart"
            ],
            "Token_Name_Label": "Stay",
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_Number_Integer": "111"
        },
        "answers": [
            [
                100000001
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the id of the patient who stayed in room 111 most recently?",
        "cypher_query": "MATCH (s:Stay)\nWHERE s.Room = 111\nRETURN s.Patient\nORDER BY s.StayStart DESC\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN",
                "ORDER BY",
                "DESC",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "s",
                "Room",
                "Patient",
                "StayStart"
            ],
            "Token_Name_Label": "Stay",
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_Number_Integer": "111"
        },
        "answers": [
            [
                100000001
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What are the unique block codes that have available rooms?",
        "cypher_query": "MATCH (r:Room)\nWHERE r.Unavailable = 0\nRETURN DISTINCT r.BlockCode",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN DISTINCT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "r",
                "Unavailable",
                "BlockCode"
            ],
            "Token_Name_Label": "Room",
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_Number_Integer": "0"
        },
        "answers": [
            [
                1
            ],
            [
                2
            ],
            [
                3
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Tell me the distinct block codes where some rooms are available.",
        "cypher_query": "MATCH (r:Room)\nWHERE r.Unavailable = 0\nRETURN DISTINCT r.BlockCode",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN DISTINCT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "r",
                "Unavailable",
                "BlockCode"
            ],
            "Token_Name_Label": "Room",
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_Number_Integer": "0"
        },
        "answers": [
            [
                1
            ],
            [
                2
            ],
            [
                3
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many different types of rooms are there?",
        "cypher_query": "MATCH (r:Room)\nWITH DISTINCT r.RoomType AS roomtype\nRETURN count(roomtype)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH DISTINCT",
                "AS",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "r",
                "RoomType",
                "roomtype"
            ],
            "Token_Name_Label": "Room",
            "Token_Operator": ".",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                1
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of distinct room types available.",
        "cypher_query": "MATCH (r:Room)\nWITH DISTINCT r.RoomType AS roomtype\nRETURN count(roomtype)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH DISTINCT",
                "AS",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "r",
                "RoomType",
                "roomtype"
            ],
            "Token_Name_Label": "Room",
            "Token_Operator": ".",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                1
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the patient who has the most recent undergoing treatment?",
        "cypher_query": "MATCH (u:Undergoes)\nRETURN u.Patient\nORDER BY u.DateUndergoes\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "ORDER BY",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "u",
                "Patient",
                "DateUndergoes"
            ],
            "Token_Name_Label": "Undergoes",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                100000001
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which patient is undergoing the most recent treatment?",
        "cypher_query": "MATCH (u:Undergoes)\nRETURN u.Patient\nORDER BY u.DateUndergoes\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "ORDER BY",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "u",
                "Patient",
                "DateUndergoes"
            ],
            "Token_Name_Label": "Undergoes",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                100000001
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "List the names of all distinct nurses ordered by alphabetical order?",
        "cypher_query": "MATCH (n:Nurse)\nRETURN DISTINCT n.Name\nORDER BY n.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "n",
            "Token_Name_Label": "Nurse",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the alphabetically ordered list of all the distinct names of nurses?",
        "cypher_query": "MATCH (n:Nurse)\nRETURN DISTINCT n.Name\nORDER BY n.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "n",
            "Token_Name_Label": "Nurse",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the names of nurses who are nursing an undergoing treatment.",
        "cypher_query": "MATCH (T1:Undergoes)-[]-(T2:Nurse)\nRETURN DISTINCT T2.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2"
            ],
            "Token_Name_Label": [
                "Undergoes",
                "Nurse"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which nurses are in charge of patients undergoing treatments?",
        "cypher_query": "MATCH (T1:Undergoes)-[]-(T2:Nurse)\nRETURN DISTINCT T2.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2"
            ],
            "Token_Name_Label": [
                "Undergoes",
                "Nurse"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "List the names of all distinct medications, ordered in an alphabetical order.",
        "cypher_query": "MATCH (m:Medication)\nRETURN DISTINCT m.Name\nORDER BY m.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "m",
            "Token_Name_Label": "Medication",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Awakin"
            ],
            [
                "Crescavitin"
            ],
            [
                "Melioraurin"
            ],
            [
                "Procrastin-X"
            ],
            [
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the alphabetically ordered list of all distinct medications?",
        "cypher_query": "MATCH (m:Medication)\nRETURN DISTINCT m.Name\nORDER BY m.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "m",
            "Token_Name_Label": "Medication",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Awakin"
            ],
            [
                "Crescavitin"
            ],
            [
                "Melioraurin"
            ],
            [
                "Procrastin-X"
            ],
            [
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "List the name and cost of all procedures sorted by the cost from the highest to the lowest.",
        "cypher_query": "MATCH (p:Procedures)\nRETURN p.Name,p.Cost\nORDER BY p.Cost DESC",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name",
                "ORDER BY",
                "DESC"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Complete Walletectomy",
                10000.0
            ],
            [
                "Reversible Pancreomyoplasty",
                5600.0
            ],
            [
                "Obfuscated Dermogastrotomy",
                4899.0
            ],
            [
                "Folded Demiophtalmectomy",
                4500.0
            ],
            [
                "Obtuse Pyloric Recombobulation",
                3750.0
            ],
            [
                "Reverse Rhinopodoplasty",
                1500.0
            ],
            [
                "Follicular Demiectomy",
                25.0
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Sort the list of names and costs of all procedures in the descending order of cost.",
        "cypher_query": "MATCH (p:Procedures)\nRETURN p.Name,p.Cost\nORDER BY p.Cost DESC",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name",
                "ORDER BY",
                "DESC"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Complete Walletectomy",
                10000.0
            ],
            [
                "Reversible Pancreomyoplasty",
                5600.0
            ],
            [
                "Obfuscated Dermogastrotomy",
                4899.0
            ],
            [
                "Folded Demiophtalmectomy",
                4500.0
            ],
            [
                "Obtuse Pyloric Recombobulation",
                3750.0
            ],
            [
                "Reverse Rhinopodoplasty",
                1500.0
            ],
            [
                "Follicular Demiectomy",
                25.0
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the three most expensive procedures.",
        "cypher_query": "MATCH (p:Procedures)\nRETURN p.Name\nORDER BY p.Cost\nLIMIT 3",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name",
                "ORDER BY",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "3"
        },
        "answers": [
            [
                "Follicular Demiectomy"
            ],
            [
                "Reverse Rhinopodoplasty"
            ],
            [
                "Obtuse Pyloric Recombobulation"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What are the three most costly procedures?",
        "cypher_query": "MATCH (p:Procedures)\nRETURN p.Name\nORDER BY p.Cost\nLIMIT 3",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name",
                "ORDER BY",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "3"
        },
        "answers": [
            [
                "Follicular Demiectomy"
            ],
            [
                "Reverse Rhinopodoplasty"
            ],
            [
                "Obtuse Pyloric Recombobulation"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the physicians who are trained in a procedure that costs more than 5000.",
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T3.Cost > 5000\nRETURN T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3",
                "Cost"
            ],
            "Token_Name_Label": [
                "Physician",
                "Trained_In",
                "Procedures"
            ],
            "Token_Operator": [
                ".",
                ">"
            ],
            "Token_Literal_Number_Integer": "5000"
        },
        "answers": [
            [
                "John Wen"
            ],
            [
                "John Wen"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "Christopher Turk"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which physicians are trained in procedures that are more expensive than 5000?",
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T3.Cost > 5000\nRETURN T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3",
                "Cost"
            ],
            "Token_Name_Label": [
                "Physician",
                "Trained_In",
                "Procedures"
            ],
            "Token_Operator": [
                ".",
                ">"
            ],
            "Token_Literal_Number_Integer": "5000"
        },
        "answers": [
            [
                "John Wen"
            ],
            [
                "John Wen"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "Christopher Turk"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians who are affiliated with Surgery or Psychiatry department.",
        "cypher_query": "MATCH (T1:Physician)-[T2:Affiliated_With]-(T3:Department)\nWHERE T3.Name = 'Surgery' OR T3.Name = 'Psychiatry'\nRETURN T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3"
            ],
            "Token_Name_Label": [
                "Physician",
                "Affiliated_With",
                "Department"
            ],
            "Token_Operator": [
                ".",
                "=",
                "OR"
            ],
            "Token_Literal_String": [
                "'Surgery'",
                "'Psychiatry'"
            ]
        },
        "answers": [
            [
                "Christopher Turk"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "John Wen"
            ],
            [
                "Molly Clock"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which physicians are affiliated with either Surgery or Psychiatry department? Give me their names.",
        "cypher_query": "MATCH (T1:Physician)-[T2:Affiliated_With]-(T3:Department)\nWHERE T3.Name = 'Surgery' OR T3.Name = 'Psychiatry'\nRETURN T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3"
            ],
            "Token_Name_Label": [
                "Physician",
                "Affiliated_With",
                "Department"
            ],
            "Token_Operator": [
                ".",
                "=",
                "OR"
            ],
            "Token_Literal_String": [
                "'Surgery'",
                "'Psychiatry'"
            ]
        },
        "answers": [
            [
                "Christopher Turk"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "John Wen"
            ],
            [
                "Molly Clock"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of patients who are not using the medication of Procrastin-X.",
        "cypher_query": "MATCH (p:Patient) MATCH (T1:Prescribes)-[]-(T2:Medication)\nWHERE T2.Name = 'Procrastin-X' AND NOT p.SSN in T1.Patient\nRETURN count(DISTINCT p.SSN)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ")-[",
                "]-("
            ],
            "Token_Name_Variable": [
                "p",
                "T1",
                "T2",
                "SSN",
                "Patient"
            ],
            "Token_Name_Label": [
                "Patient",
                "Prescribes",
                "Medication"
            ],
            "Token_Operator": [
                ".",
                "=",
                "AND",
                "NOT",
                "in",
                "DISTINCT"
            ],
            "Token_Literal_String": "'Procrastin-X'",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                3
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many patients are not using Procrastin-X as medication?",
        "cypher_query": "MATCH (p:Patient) MATCH (T1:Prescribes)-[]-(T2:Medication)\nWHERE T2.Name = 'Procrastin-X' AND NOT p.SSN in T1.Patient\nRETURN count(DISTINCT p.SSN)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ")-[",
                "]-("
            ],
            "Token_Name_Variable": [
                "p",
                "T1",
                "T2",
                "SSN",
                "Patient"
            ],
            "Token_Name_Label": [
                "Patient",
                "Prescribes",
                "Medication"
            ],
            "Token_Operator": [
                ".",
                "=",
                "AND",
                "NOT",
                "in",
                "DISTINCT"
            ],
            "Token_Literal_String": "'Procrastin-X'",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                3
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many appointments are there?",
        "cypher_query": "MATCH (a:Appointment)\nRETURN count(*)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "a",
            "Token_Name_Label": "Appointment",
            "Token_Name_Function": "count",
            "Token_Operator": "*"
        },
        "answers": [
            [
                9
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Count how many appointments have been made in total.",
        "cypher_query": "MATCH (a:Appointment)\nRETURN count(*)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "a",
            "Token_Name_Label": "Appointment",
            "Token_Name_Function": "count",
            "Token_Operator": "*"
        },
        "answers": [
            [
                9
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the names of nurses who are on call.",
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:On_Call)\nRETURN DISTINCT T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2"
            ],
            "Token_Name_Label": [
                "Nurse",
                "On_Call"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What are the distinct names of nurses on call?",
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:On_Call)\nRETURN DISTINCT T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2"
            ],
            "Token_Name_Label": [
                "Nurse",
                "On_Call"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    }
][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][
    {
        "db_id": "hospital_1",
        "question": "Find the names of procedures which physician John Wen was trained in.",
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T1.Name = \"John Wen\"\nRETURN T3.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3"
            ],
            "Token_Name_Label": [
                "Physician",
                "Trained_In",
                "Procedures"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "\"John Wen\""
        },
        "answers": [
            [
                "Obfuscated Dermogastrotomy"
            ],
            [
                "Reverse Rhinopodoplasty"
            ],
            [
                "Follicular Demiectomy"
            ],
            [
                "Folded Demiophtalmectomy"
            ],
            [
                "Reversible Pancreomyoplasty"
            ],
            [
                "Obtuse Pyloric Recombobulation"
            ],
            [
                "Complete Walletectomy"
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "Find the names of procedures which physician John Wen was trained in.",
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T1.Name = \"John Wen\"\nRETURN T3.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3"
            ],
            "Token_Name_Label": [
                "Physician",
                "Trained_In",
                "Procedures"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "\"John Wen\""
        },
        "answers": [
            [
                "Obfuscated Dermogastrotomy"
            ],
            [
                "Reverse Rhinopodoplasty"
            ],
            [
                "Follicular Demiectomy"
            ],
            [
                "Folded Demiophtalmectomy"
            ],
            [
                "Reversible Pancreomyoplasty"
            ],
            [
                "Obtuse Pyloric Recombobulation"
            ],
            [
                "Complete Walletectomy"
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "How many patients' prescriptions are made by physician John Dorian?",
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Prescribes)-[]-(T3:Physician)\nWHERE T3.Name = \"John Dorian\"\nRETURN count(T1.SSN)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3",
                "SSN"
            ],
            "Token_Name_Label": [
                "Patient",
                "Prescribes",
                "Physician"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "\"John Dorian\"",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                1
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of patients' prescriptions physician John Dorian made.",
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Prescribes)-[]-(T3:Physician)\nWHERE T3.Name = \"John Dorian\"\nRETURN count(T1.SSN)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3",
                "SSN"
            ],
            "Token_Name_Label": [
                "Patient",
                "Prescribes",
                "Physician"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "\"John Dorian\"",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                1
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many different types of rooms are there?",
        "cypher_query": "MATCH (r:Room)\nWITH DISTINCT r.RoomType AS roomtype\nRETURN count(roomtype)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH DISTINCT",
                "AS",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "r",
                "RoomType",
                "roomtype"
            ],
            "Token_Name_Label": "Room",
            "Token_Operator": ".",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                1
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of distinct room types available.",
        "cypher_query": "MATCH (r:Room)\nWITH DISTINCT r.RoomType AS roomtype\nRETURN count(roomtype)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH DISTINCT",
                "AS",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "r",
                "RoomType",
                "roomtype"
            ],
            "Token_Name_Label": "Room",
            "Token_Operator": ".",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                1
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the patient who has the most recent undergoing treatment?",
        "cypher_query": "MATCH (u:Undergoes)\nRETURN u.Patient\nORDER BY u.DateUndergoes\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "ORDER BY",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "u",
                "Patient",
                "DateUndergoes"
            ],
            "Token_Name_Label": "Undergoes",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                100000001
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which patient is undergoing the most recent treatment?",
        "cypher_query": "MATCH (u:Undergoes)\nRETURN u.Patient\nORDER BY u.DateUndergoes\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "ORDER BY",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "u",
                "Patient",
                "DateUndergoes"
            ],
            "Token_Name_Label": "Undergoes",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                100000001
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "List the names of all distinct nurses ordered by alphabetical order?",
        "cypher_query": "MATCH (n:Nurse)\nRETURN DISTINCT n.Name\nORDER BY n.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "n",
            "Token_Name_Label": "Nurse",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the alphabetically ordered list of all the distinct names of nurses?",
        "cypher_query": "MATCH (n:Nurse)\nRETURN DISTINCT n.Name\nORDER BY n.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "n",
            "Token_Name_Label": "Nurse",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the names of nurses who are nursing an undergoing treatment.",
        "cypher_query": "MATCH (T1:Undergoes)-[]-(T2:Nurse)\nRETURN DISTINCT T2.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2"
            ],
            "Token_Name_Label": [
                "Undergoes",
                "Nurse"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which nurses are in charge of patients undergoing treatments?",
        "cypher_query": "MATCH (T1:Undergoes)-[]-(T2:Nurse)\nRETURN DISTINCT T2.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2"
            ],
            "Token_Name_Label": [
                "Undergoes",
                "Nurse"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "List the names of all distinct medications, ordered in an alphabetical order.",
        "cypher_query": "MATCH (m:Medication)\nRETURN DISTINCT m.Name\nORDER BY m.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "m",
            "Token_Name_Label": "Medication",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Awakin"
            ],
            [
                "Crescavitin"
            ],
            [
                "Melioraurin"
            ],
            [
                "Procrastin-X"
            ],
            [
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the alphabetically ordered list of all distinct medications?",
        "cypher_query": "MATCH (m:Medication)\nRETURN DISTINCT m.Name\nORDER BY m.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "m",
            "Token_Name_Label": "Medication",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Awakin"
            ],
            [
                "Crescavitin"
            ],
            [
                "Melioraurin"
            ],
            [
                "Procrastin-X"
            ],
            [
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "List the name and cost of all procedures sorted by the cost from the highest to the lowest.",
        "cypher_query": "MATCH (p:Procedures)\nRETURN p.Name,p.Cost\nORDER BY p.Cost DESC",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name",
                "ORDER BY",
                "DESC"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Complete Walletectomy",
                10000.0
            ],
            [
                "Reversible Pancreomyoplasty",
                5600.0
            ],
            [
                "Obfuscated Dermogastrotomy",
                4899.0
            ],
            [
                "Folded Demiophtalmectomy",
                4500.0
            ],
            [
                "Obtuse Pyloric Recombobulation",
                3750.0
            ],
            [
                "Reverse Rhinopodoplasty",
                1500.0
            ],
            [
                "Follicular Demiectomy",
                25.0
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Sort the list of names and costs of all procedures in the descending order of cost.",
        "cypher_query": "MATCH (p:Procedures)\nRETURN p.Name,p.Cost\nORDER BY p.Cost DESC",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name",
                "ORDER BY",
                "DESC"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Complete Walletectomy",
                10000.0
            ],
            [
                "Reversible Pancreomyoplasty",
                5600.0
            ],
            [
                "Obfuscated Dermogastrotomy",
                4899.0
            ],
            [
                "Folded Demiophtalmectomy",
                4500.0
            ],
            [
                "Obtuse Pyloric Recombobulation",
                3750.0
            ],
            [
                "Reverse Rhinopodoplasty",
                1500.0
            ],
            [
                "Follicular Demiectomy",
                25.0
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the three most expensive procedures.",
        "cypher_query": "MATCH (p:Procedures)\nRETURN p.Name\nORDER BY p.Cost\nLIMIT 3",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name",
                "ORDER BY",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "3"
        },
        "answers": [
            [
                "Follicular Demiectomy"
            ],
            [
                "Reverse Rhinopodoplasty"
            ],
            [
                "Obtuse Pyloric Recombobulation"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What are the three most costly procedures?",
        "cypher_query": "MATCH (p:Procedures)\nRETURN p.Name\nORDER BY p.Cost\nLIMIT 3",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name",
                "ORDER BY",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "3"
        },
        "answers": [
            [
                "Follicular Demiectomy"
            ],
            [
                "Reverse Rhinopodoplasty"
            ],
            [
                "Obtuse Pyloric Recombobulation"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the physicians who are trained in a procedure that costs more than 5000.",
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T3.Cost > 5000\nRETURN T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3",
                "Cost"
            ],
            "Token_Name_Label": [
                "Physician",
                "Trained_In",
                "Procedures"
            ],
            "Token_Operator": [
                ".",
                ">"
            ],
            "Token_Literal_Number_Integer": "5000"
        },
        "answers": [
            [
                "John Wen"
            ],
            [
                "John Wen"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "Christopher Turk"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which physicians are trained in procedures that are more expensive than 5000?",
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T3.Cost > 5000\nRETURN T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3",
                "Cost"
            ],
            "Token_Name_Label": [
                "Physician",
                "Trained_In",
                "Procedures"
            ],
            "Token_Operator": [
                ".",
                ">"
            ],
            "Token_Literal_Number_Integer": "5000"
        },
        "answers": [
            [
                "John Wen"
            ],
            [
                "John Wen"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "Christopher Turk"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the names of procedures which physician John Wen was trained in.",
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T1.Name = \"John Wen\"\nRETURN T3.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3"
            ],
            "Token_Name_Label": [
                "Physician",
                "Trained_In",
                "Procedures"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "\"John Wen\""
        },
        "answers": [
            [
                "Obfuscated Dermogastrotomy"
            ],
            [
                "Reverse Rhinopodoplasty"
            ],
            [
                "Follicular Demiectomy"
            ],
            [
                "Folded Demiophtalmectomy"
            ],
            [
                "Reversible Pancreomyoplasty"
            ],
            [
                "Obtuse Pyloric Recombobulation"
            ],
            [
                "Complete Walletectomy"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of procedures physician John Wen was trained in?",
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T1.Name = \"John Wen\"\nRETURN T3.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3"
            ],
            "Token_Name_Label": [
                "Physician",
                "Trained_In",
                "Procedures"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "\"John Wen\""
        },
        "answers": [
            [
                "Obfuscated Dermogastrotomy"
            ],
            [
                "Reverse Rhinopodoplasty"
            ],
            [
                "Follicular Demiectomy"
            ],
            [
                "Folded Demiophtalmectomy"
            ],
            [
                "Reversible Pancreomyoplasty"
            ],
            [
                "Obtuse Pyloric Recombobulation"
            ],
            [
                "Complete Walletectomy"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of patients who are not using the medication of Procrastin-X.",
        "cypher_query": "MATCH (p:Patient) MATCH (T1:Prescribes)-[]-(T2:Medication)\nWHERE T2.Name = 'Procrastin-X' AND NOT p.SSN in T1.Patient\nRETURN count(DISTINCT p.SSN)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ")-[",
                "]-("
            ],
            "Token_Name_Variable": [
                "p",
                "T1",
                "T2",
                "SSN",
                "Patient"
            ],
            "Token_Name_Label": [
                "Patient",
                "Prescribes",
                "Medication"
            ],
            "Token_Operator": [
                ".",
                "=",
                "AND",
                "NOT",
                "in",
                "DISTINCT"
            ],
            "Token_Literal_String": "'Procrastin-X'",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                3
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many patients are not using Procrastin-X as medication?",
        "cypher_query": "MATCH (p:Patient) MATCH (T1:Prescribes)-[]-(T2:Medication)\nWHERE T2.Name = 'Procrastin-X' AND NOT p.SSN in T1.Patient\nRETURN count(DISTINCT p.SSN)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ")-[",
                "]-("
            ],
            "Token_Name_Variable": [
                "p",
                "T1",
                "T2",
                "SSN",
                "Patient"
            ],
            "Token_Name_Label": [
                "Patient",
                "Prescribes",
                "Medication"
            ],
            "Token_Operator": [
                ".",
                "=",
                "AND",
                "NOT",
                "in",
                "DISTINCT"
            ],
            "Token_Literal_String": "'Procrastin-X'",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                3
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many appointments are there?",
        "cypher_query": "MATCH (a:Appointment)\nRETURN count(\"*\")",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "a",
            "Token_Name_Label": "Appointment",
            "Token_Name_Function": "count",
            "Token_Literal_String": "\"*\""
        },
        "answers": [
            [
                9
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Count how many appointments have been made in total.",
        "cypher_query": "MATCH (a:Appointment)\nRETURN count(\"*\")",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "a",
            "Token_Name_Label": "Appointment",
            "Token_Name_Function": "count",
            "Token_Literal_String": "\"*\""
        },
        "answers": [
            [
                9
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the names of nurses who are on call.",
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:On_Call)\nRETURN DISTINCT T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2"
            ],
            "Token_Name_Label": [
                "Nurse",
                "On_Call"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What are the distinct names of nurses on call?",
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:On_Call)\nRETURN DISTINCT T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2"
            ],
            "Token_Name_Label": [
                "Nurse",
                "On_Call"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    }
][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][
    {
        "db_id": "hospital_1",
        "question": "Which physicians are affiliated with either Surgery or Psychiatry department? Give me their names.",
        "cypher_query": "MATCH (T1:Physician)-[T2:Affiliated_With]-(T3:Department)\nWHERE T3.Name = 'Surgery' OR T3.Name = 'Psychiatry'\nRETURN T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3"
            ],
            "Token_Name_Label": [
                "Physician",
                "Affiliated_With",
                "Department"
            ],
            "Token_Operator": [
                ".",
                "=",
                "OR"
            ],
            "Token_Literal_String": [
                "'Surgery'",
                "'Psychiatry'"
            ]
        },
        "answers": [
            [
                "Christopher Turk"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "John Wen"
            ],
            [
                "Molly Clock"
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "How many different types of rooms are there?",
        "cypher_query": "MATCH (r:Room)\nWITH DISTINCT r.RoomType AS roomtype\nRETURN count(roomtype)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH DISTINCT",
                "AS",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "r",
                "RoomType",
                "roomtype"
            ],
            "Token_Name_Label": "Room",
            "Token_Operator": ".",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                1
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of distinct room types available.",
        "cypher_query": "MATCH (r:Room)\nWITH DISTINCT r.RoomType AS roomtype\nRETURN count(roomtype)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH DISTINCT",
                "AS",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "r",
                "RoomType",
                "roomtype"
            ],
            "Token_Name_Label": "Room",
            "Token_Operator": ".",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                1
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the patient who has the most recent undergoing treatment?",
        "cypher_query": "MATCH (u:Undergoes)\nRETURN u.Patient\nORDER BY u.DateUndergoes\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "ORDER BY",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "u",
                "Patient",
                "DateUndergoes"
            ],
            "Token_Name_Label": "Undergoes",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                100000001
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which patient is undergoing the most recent treatment?",
        "cypher_query": "MATCH (u:Undergoes)\nRETURN u.Patient\nORDER BY u.DateUndergoes\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "ORDER BY",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "u",
                "Patient",
                "DateUndergoes"
            ],
            "Token_Name_Label": "Undergoes",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                100000001
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "List the names of all distinct nurses ordered by alphabetical order?",
        "cypher_query": "MATCH (n:Nurse)\nRETURN DISTINCT n.Name\nORDER BY n.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "n",
            "Token_Name_Label": "Nurse",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the alphabetically ordered list of all the distinct names of nurses?",
        "cypher_query": "MATCH (n:Nurse)\nRETURN DISTINCT n.Name\nORDER BY n.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "n",
            "Token_Name_Label": "Nurse",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the names of nurses who are nursing an undergoing treatment.",
        "cypher_query": "MATCH (T1:Undergoes)-[]-(T2:Nurse)\nRETURN DISTINCT T2.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2"
            ],
            "Token_Name_Label": [
                "Undergoes",
                "Nurse"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which nurses are in charge of patients undergoing treatments?",
        "cypher_query": "MATCH (T1:Undergoes)-[]-(T2:Nurse)\nRETURN DISTINCT T2.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2"
            ],
            "Token_Name_Label": [
                "Undergoes",
                "Nurse"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "List the names of all distinct medications, ordered in an alphabetical order.",
        "cypher_query": "MATCH (m:Medication)\nRETURN DISTINCT m.Name\nORDER BY m.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "m",
            "Token_Name_Label": "Medication",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Awakin"
            ],
            [
                "Crescavitin"
            ],
            [
                "Melioraurin"
            ],
            [
                "Procrastin-X"
            ],
            [
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the alphabetically ordered list of all distinct medications?",
        "cypher_query": "MATCH (m:Medication)\nRETURN DISTINCT m.Name\nORDER BY m.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "m",
            "Token_Name_Label": "Medication",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Awakin"
            ],
            [
                "Crescavitin"
            ],
            [
                "Melioraurin"
            ],
            [
                "Procrastin-X"
            ],
            [
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "List the name and cost of all procedures sorted by the cost from the highest to the lowest.",
        "cypher_query": "MATCH (p:Procedures)\nRETURN p.Name,p.Cost\nORDER BY p.Cost DESC",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name",
                "ORDER BY",
                "DESC"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Complete Walletectomy",
                10000.0
            ],
            [
                "Reversible Pancreomyoplasty",
                5600.0
            ],
            [
                "Obfuscated Dermogastrotomy",
                4899.0
            ],
            [
                "Folded Demiophtalmectomy",
                4500.0
            ],
            [
                "Obtuse Pyloric Recombobulation",
                3750.0
            ],
            [
                "Reverse Rhinopodoplasty",
                1500.0
            ],
            [
                "Follicular Demiectomy",
                25.0
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Sort the list of names and costs of all procedures in the descending order of cost.",
        "cypher_query": "MATCH (p:Procedures)\nRETURN p.Name,p.Cost\nORDER BY p.Cost DESC",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name",
                "ORDER BY",
                "DESC"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Complete Walletectomy",
                10000.0
            ],
            [
                "Reversible Pancreomyoplasty",
                5600.0
            ],
            [
                "Obfuscated Dermogastrotomy",
                4899.0
            ],
            [
                "Folded Demiophtalmectomy",
                4500.0
            ],
            [
                "Obtuse Pyloric Recombobulation",
                3750.0
            ],
            [
                "Reverse Rhinopodoplasty",
                1500.0
            ],
            [
                "Follicular Demiectomy",
                25.0
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the three most expensive procedures.",
        "cypher_query": "MATCH (p:Procedures)\nRETURN p.Name\nORDER BY p.Cost\nLIMIT 3",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name",
                "ORDER BY",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "3"
        },
        "answers": [
            [
                "Follicular Demiectomy"
            ],
            [
                "Reverse Rhinopodoplasty"
            ],
            [
                "Obtuse Pyloric Recombobulation"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What are the three most costly procedures?",
        "cypher_query": "MATCH (p:Procedures)\nRETURN p.Name\nORDER BY p.Cost\nLIMIT 3",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name",
                "ORDER BY",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "3"
        },
        "answers": [
            [
                "Follicular Demiectomy"
            ],
            [
                "Reverse Rhinopodoplasty"
            ],
            [
                "Obtuse Pyloric Recombobulation"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the physicians who are trained in a procedure that costs more than 5000.",
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T3.Cost > 5000\nRETURN T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3",
                "Cost"
            ],
            "Token_Name_Label": [
                "Physician",
                "Trained_In",
                "Procedures"
            ],
            "Token_Operator": [
                ".",
                ">"
            ],
            "Token_Literal_Number_Integer": "5000"
        },
        "answers": [
            [
                "John Wen"
            ],
            [
                "John Wen"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "Christopher Turk"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which physicians are trained in procedures that are more expensive than 5000?",
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T3.Cost > 5000\nRETURN T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3",
                "Cost"
            ],
            "Token_Name_Label": [
                "Physician",
                "Trained_In",
                "Procedures"
            ],
            "Token_Operator": [
                ".",
                ">"
            ],
            "Token_Literal_Number_Integer": "5000"
        },
        "answers": [
            [
                "John Wen"
            ],
            [
                "John Wen"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "Christopher Turk"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the names of procedures which physician John Wen was trained in.",
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T1.Name = \"John Wen\"\nRETURN T3.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3"
            ],
            "Token_Name_Label": [
                "Physician",
                "Trained_In",
                "Procedures"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "\"John Wen\""
        },
        "answers": [
            [
                "Obfuscated Dermogastrotomy"
            ],
            [
                "Reverse Rhinopodoplasty"
            ],
            [
                "Follicular Demiectomy"
            ],
            [
                "Folded Demiophtalmectomy"
            ],
            [
                "Reversible Pancreomyoplasty"
            ],
            [
                "Obtuse Pyloric Recombobulation"
            ],
            [
                "Complete Walletectomy"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of procedures physician John Wen was trained in?",
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T1.Name = \"John Wen\"\nRETURN T3.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3"
            ],
            "Token_Name_Label": [
                "Physician",
                "Trained_In",
                "Procedures"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "\"John Wen\""
        },
        "answers": [
            [
                "Obfuscated Dermogastrotomy"
            ],
            [
                "Reverse Rhinopodoplasty"
            ],
            [
                "Follicular Demiectomy"
            ],
            [
                "Folded Demiophtalmectomy"
            ],
            [
                "Reversible Pancreomyoplasty"
            ],
            [
                "Obtuse Pyloric Recombobulation"
            ],
            [
                "Complete Walletectomy"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians who are affiliated with Surgery or Psychiatry department.",
        "cypher_query": "MATCH (T1:Physician)-[T2:Affiliated_With]-(T3:Department)\nWHERE T3.Name = 'Surgery' OR T3.Name = 'Psychiatry'\nRETURN T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3"
            ],
            "Token_Name_Label": [
                "Physician",
                "Affiliated_With",
                "Department"
            ],
            "Token_Operator": [
                ".",
                "=",
                "OR"
            ],
            "Token_Literal_String": [
                "'Surgery'",
                "'Psychiatry'"
            ]
        },
        "answers": [
            [
                "Christopher Turk"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "John Wen"
            ],
            [
                "Molly Clock"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which physicians are affiliated with either Surgery or Psychiatry department? Give me their names.",
        "cypher_query": "MATCH (T1:Physician)-[T2:Affiliated_With]-(T3:Department)\nWHERE T3.Name = 'Surgery' OR T3.Name = 'Psychiatry'\nRETURN T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3"
            ],
            "Token_Name_Label": [
                "Physician",
                "Affiliated_With",
                "Department"
            ],
            "Token_Operator": [
                ".",
                "=",
                "OR"
            ],
            "Token_Literal_String": [
                "'Surgery'",
                "'Psychiatry'"
            ]
        },
        "answers": [
            [
                "Christopher Turk"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "John Wen"
            ],
            [
                "Molly Clock"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the names of nurses who are on call.",
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:On_Call)\nRETURN DISTINCT T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2"
            ],
            "Token_Name_Label": [
                "Nurse",
                "On_Call"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What are the distinct names of nurses on call?",
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:On_Call)\nRETURN DISTINCT T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2"
            ],
            "Token_Name_Label": [
                "Nurse",
                "On_Call"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "How many different types of rooms are there?",
        "cypher_query": "MATCH (r:Room)\nWITH DISTINCT r.RoomType AS roomtype\nRETURN count(roomtype)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH DISTINCT",
                "AS",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "r",
                "RoomType",
                "roomtype"
            ],
            "Token_Name_Label": "Room",
            "Token_Operator": ".",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                1
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of distinct room types available.",
        "cypher_query": "MATCH (r:Room)\nWITH DISTINCT r.RoomType AS roomtype\nRETURN count(roomtype)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH DISTINCT",
                "AS",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "r",
                "RoomType",
                "roomtype"
            ],
            "Token_Name_Label": "Room",
            "Token_Operator": ".",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                1
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the patient who has the most recent undergoing treatment?",
        "cypher_query": "MATCH (u:Undergoes)\nRETURN u.Patient\nORDER BY u.DateUndergoes\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "ORDER BY",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "u",
                "Patient",
                "DateUndergoes"
            ],
            "Token_Name_Label": "Undergoes",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                100000001
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which patient is undergoing the most recent treatment?",
        "cypher_query": "MATCH (u:Undergoes)\nRETURN u.Patient\nORDER BY u.DateUndergoes\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "ORDER BY",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "u",
                "Patient",
                "DateUndergoes"
            ],
            "Token_Name_Label": "Undergoes",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                100000001
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "List the names of all distinct nurses ordered by alphabetical order?",
        "cypher_query": "MATCH (n:Nurse)\nRETURN DISTINCT n.Name\nORDER BY n.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "n",
            "Token_Name_Label": "Nurse",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the alphabetically ordered list of all the distinct names of nurses?",
        "cypher_query": "MATCH (n:Nurse)\nRETURN DISTINCT n.Name\nORDER BY n.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "n",
            "Token_Name_Label": "Nurse",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the names of nurses who are nursing an undergoing treatment.",
        "cypher_query": "MATCH (T1:Undergoes)-[]-(T2:Nurse)\nRETURN DISTINCT T2.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2"
            ],
            "Token_Name_Label": [
                "Undergoes",
                "Nurse"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which nurses are in charge of patients undergoing treatments?",
        "cypher_query": "MATCH (T1:Undergoes)-[]-(T2:Nurse)\nRETURN DISTINCT T2.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2"
            ],
            "Token_Name_Label": [
                "Undergoes",
                "Nurse"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "List the names of all distinct medications, ordered in an alphabetical order.",
        "cypher_query": "MATCH (m:Medication)\nRETURN DISTINCT m.Name\nORDER BY m.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "m",
            "Token_Name_Label": "Medication",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Awakin"
            ],
            [
                "Crescavitin"
            ],
            [
                "Melioraurin"
            ],
            [
                "Procrastin-X"
            ],
            [
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the alphabetically ordered list of all distinct medications?",
        "cypher_query": "MATCH (m:Medication)\nRETURN DISTINCT m.Name\nORDER BY m.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "m",
            "Token_Name_Label": "Medication",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Awakin"
            ],
            [
                "Crescavitin"
            ],
            [
                "Melioraurin"
            ],
            [
                "Procrastin-X"
            ],
            [
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "List the name and cost of all procedures sorted by the cost from the highest to the lowest.",
        "cypher_query": "MATCH (p:Procedures)\nRETURN p.Name,p.Cost\nORDER BY p.Cost DESC",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name",
                "ORDER BY",
                "DESC"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Complete Walletectomy",
                10000.0
            ],
            [
                "Reversible Pancreomyoplasty",
                5600.0
            ],
            [
                "Obfuscated Dermogastrotomy",
                4899.0
            ],
            [
                "Folded Demiophtalmectomy",
                4500.0
            ],
            [
                "Obtuse Pyloric Recombobulation",
                3750.0
            ],
            [
                "Reverse Rhinopodoplasty",
                1500.0
            ],
            [
                "Follicular Demiectomy",
                25.0
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Sort the list of names and costs of all procedures in the descending order of cost.",
        "cypher_query": "MATCH (p:Procedures)\nRETURN p.Name,p.Cost\nORDER BY p.Cost DESC",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name",
                "ORDER BY",
                "DESC"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Complete Walletectomy",
                10000.0
            ],
            [
                "Reversible Pancreomyoplasty",
                5600.0
            ],
            [
                "Obfuscated Dermogastrotomy",
                4899.0
            ],
            [
                "Folded Demiophtalmectomy",
                4500.0
            ],
            [
                "Obtuse Pyloric Recombobulation",
                3750.0
            ],
            [
                "Reverse Rhinopodoplasty",
                1500.0
            ],
            [
                "Follicular Demiectomy",
                25.0
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the three most expensive procedures.",
        "cypher_query": "MATCH (p:Procedures)\nRETURN p.Name\nORDER BY p.Cost\nLIMIT 3",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name",
                "ORDER BY",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "3"
        },
        "answers": [
            [
                "Follicular Demiectomy"
            ],
            [
                "Reverse Rhinopodoplasty"
            ],
            [
                "Obtuse Pyloric Recombobulation"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What are the three most costly procedures?",
        "cypher_query": "MATCH (p:Procedures)\nRETURN p.Name\nORDER BY p.Cost\nLIMIT 3",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name",
                "ORDER BY",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "3"
        },
        "answers": [
            [
                "Follicular Demiectomy"
            ],
            [
                "Reverse Rhinopodoplasty"
            ],
            [
                "Obtuse Pyloric Recombobulation"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the physicians who are trained in a procedure that costs more than 5000.",
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T3.Cost > 5000\nRETURN T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3",
                "Cost"
            ],
            "Token_Name_Label": [
                "Physician",
                "Trained_In",
                "Procedures"
            ],
            "Token_Operator": [
                ".",
                ">"
            ],
            "Token_Literal_Number_Integer": "5000"
        },
        "answers": [
            [
                "John Wen"
            ],
            [
                "John Wen"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "Christopher Turk"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which physicians are trained in procedures that are more expensive than 5000?",
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T3.Cost > 5000\nRETURN T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3",
                "Cost"
            ],
            "Token_Name_Label": [
                "Physician",
                "Trained_In",
                "Procedures"
            ],
            "Token_Operator": [
                ".",
                ">"
            ],
            "Token_Literal_Number_Integer": "5000"
        },
        "answers": [
            [
                "John Wen"
            ],
            [
                "John Wen"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "Christopher Turk"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the names of procedures which physician John Wen was trained in.",
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T1.Name = \"John Wen\"\nRETURN T3.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3"
            ],
            "Token_Name_Label": [
                "Physician",
                "Trained_In",
                "Procedures"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "\"John Wen\""
        },
        "answers": [
            [
                "Obfuscated Dermogastrotomy"
            ],
            [
                "Reverse Rhinopodoplasty"
            ],
            [
                "Follicular Demiectomy"
            ],
            [
                "Folded Demiophtalmectomy"
            ],
            [
                "Reversible Pancreomyoplasty"
            ],
            [
                "Obtuse Pyloric Recombobulation"
            ],
            [
                "Complete Walletectomy"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of procedures physician John Wen was trained in?",
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T1.Name = \"John Wen\"\nRETURN T3.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3"
            ],
            "Token_Name_Label": [
                "Physician",
                "Trained_In",
                "Procedures"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "\"John Wen\""
        },
        "answers": [
            [
                "Obfuscated Dermogastrotomy"
            ],
            [
                "Reverse Rhinopodoplasty"
            ],
            [
                "Follicular Demiectomy"
            ],
            [
                "Folded Demiophtalmectomy"
            ],
            [
                "Reversible Pancreomyoplasty"
            ],
            [
                "Obtuse Pyloric Recombobulation"
            ],
            [
                "Complete Walletectomy"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians who are affiliated with Surgery or Psychiatry department.",
        "cypher_query": "MATCH (T1:Physician)-[T2:Affiliated_With]-(T3:Department)\nWHERE T3.Name = 'Surgery' OR T3.Name = 'Psychiatry'\nRETURN T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3"
            ],
            "Token_Name_Label": [
                "Physician",
                "Affiliated_With",
                "Department"
            ],
            "Token_Operator": [
                ".",
                "=",
                "OR"
            ],
            "Token_Literal_String": [
                "'Surgery'",
                "'Psychiatry'"
            ]
        },
        "answers": [
            [
                "Christopher Turk"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "John Wen"
            ],
            [
                "Molly Clock"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which physicians are affiliated with either Surgery or Psychiatry department? Give me their names.",
        "cypher_query": "MATCH (T1:Physician)-[T2:Affiliated_With]-(T3:Department)\nWHERE T3.Name = 'Surgery' OR T3.Name = 'Psychiatry'\nRETURN T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3"
            ],
            "Token_Name_Label": [
                "Physician",
                "Affiliated_With",
                "Department"
            ],
            "Token_Operator": [
                ".",
                "=",
                "OR"
            ],
            "Token_Literal_String": [
                "'Surgery'",
                "'Psychiatry'"
            ]
        },
        "answers": [
            [
                "Christopher Turk"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "John Wen"
            ],
            [
                "Molly Clock"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the names of nurses who are on call.",
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:On_Call)\nRETURN DISTINCT T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2"
            ],
            "Token_Name_Label": [
                "Nurse",
                "On_Call"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What are the distinct names of nurses on call?",
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:On_Call)\nRETURN DISTINCT T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2"
            ],
            "Token_Name_Label": [
                "Nurse",
                "On_Call"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "How many different types of rooms are there?",
        "cypher_query": "MATCH (r:Room)\nWITH DISTINCT r.RoomType AS roomtype\nRETURN count(roomtype)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH DISTINCT",
                "AS",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "r",
                "RoomType",
                "roomtype"
            ],
            "Token_Name_Label": "Room",
            "Token_Operator": ".",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                1
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of distinct room types available.",
        "cypher_query": "MATCH (r:Room)\nWITH DISTINCT r.RoomType AS roomtype\nRETURN count(roomtype)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH DISTINCT",
                "AS",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "r",
                "RoomType",
                "roomtype"
            ],
            "Token_Name_Label": "Room",
            "Token_Operator": ".",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                1
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the patient who has the most recent undergoing treatment?",
        "cypher_query": "MATCH (u:Undergoes)\nRETURN u.Patient\nORDER BY u.DateUndergoes\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "ORDER BY",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "u",
                "Patient",
                "DateUndergoes"
            ],
            "Token_Name_Label": "Undergoes",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                100000001
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which patient is undergoing the most recent treatment?",
        "cypher_query": "MATCH (u:Undergoes)\nRETURN u.Patient\nORDER BY u.DateUndergoes\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "ORDER BY",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "u",
                "Patient",
                "DateUndergoes"
            ],
            "Token_Name_Label": "Undergoes",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                100000001
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "List the names of all distinct nurses ordered by alphabetical order?",
        "cypher_query": "MATCH (n:Nurse)\nRETURN DISTINCT n.Name\nORDER BY n.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "n",
            "Token_Name_Label": "Nurse",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the alphabetically ordered list of all the distinct names of nurses?",
        "cypher_query": "MATCH (n:Nurse)\nRETURN DISTINCT n.Name\nORDER BY n.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "n",
            "Token_Name_Label": "Nurse",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the names of nurses who are nursing an undergoing treatment.",
        "cypher_query": "MATCH (T1:Undergoes)-[]-(T2:Nurse)\nRETURN DISTINCT T2.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2"
            ],
            "Token_Name_Label": [
                "Undergoes",
                "Nurse"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which nurses are in charge of patients undergoing treatments?",
        "cypher_query": "MATCH (T1:Undergoes)-[]-(T2:Nurse)\nRETURN DISTINCT T2.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2"
            ],
            "Token_Name_Label": [
                "Undergoes",
                "Nurse"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "List the names of all distinct medications, ordered in an alphabetical order.",
        "cypher_query": "MATCH (m:Medication)\nRETURN DISTINCT m.Name\nORDER BY m.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "m",
            "Token_Name_Label": "Medication",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Awakin"
            ],
            [
                "Crescavitin"
            ],
            [
                "Melioraurin"
            ],
            [
                "Procrastin-X"
            ],
            [
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the alphabetically ordered list of all distinct medications?",
        "cypher_query": "MATCH (m:Medication)\nRETURN DISTINCT m.Name\nORDER BY m.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "m",
            "Token_Name_Label": "Medication",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Awakin"
            ],
            [
                "Crescavitin"
            ],
            [
                "Melioraurin"
            ],
            [
                "Procrastin-X"
            ],
            [
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "List the name and cost of all procedures sorted by the cost from the highest to the lowest.",
        "cypher_query": "MATCH (p:Procedures)\nRETURN p.Name,p.Cost\nORDER BY p.Cost DESC",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name",
                "ORDER BY",
                "DESC"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Complete Walletectomy",
                10000.0
            ],
            [
                "Reversible Pancreomyoplasty",
                5600.0
            ],
            [
                "Obfuscated Dermogastrotomy",
                4899.0
            ],
            [
                "Folded Demiophtalmectomy",
                4500.0
            ],
            [
                "Obtuse Pyloric Recombobulation",
                3750.0
            ],
            [
                "Reverse Rhinopodoplasty",
                1500.0
            ],
            [
                "Follicular Demiectomy",
                25.0
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Sort the list of names and costs of all procedures in the descending order of cost.",
        "cypher_query": "MATCH (p:Procedures)\nRETURN p.Name,p.Cost\nORDER BY p.Cost DESC",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name",
                "ORDER BY",
                "DESC"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Complete Walletectomy",
                10000.0
            ],
            [
                "Reversible Pancreomyoplasty",
                5600.0
            ],
            [
                "Obfuscated Dermogastrotomy",
                4899.0
            ],
            [
                "Folded Demiophtalmectomy",
                4500.0
            ],
            [
                "Obtuse Pyloric Recombobulation",
                3750.0
            ],
            [
                "Reverse Rhinopodoplasty",
                1500.0
            ],
            [
                "Follicular Demiectomy",
                25.0
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the three most expensive procedures.",
        "cypher_query": "MATCH (p:Procedures)\nRETURN p.Name\nORDER BY p.Cost\nLIMIT 3",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name",
                "ORDER BY",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "3"
        },
        "answers": [
            [
                "Follicular Demiectomy"
            ],
            [
                "Reverse Rhinopodoplasty"
            ],
            [
                "Obtuse Pyloric Recombobulation"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What are the three most costly procedures?",
        "cypher_query": "MATCH (p:Procedures)\nRETURN p.Name\nORDER BY p.Cost\nLIMIT 3",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name",
                "ORDER BY",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "3"
        },
        "answers": [
            [
                "Follicular Demiectomy"
            ],
            [
                "Reverse Rhinopodoplasty"
            ],
            [
                "Obtuse Pyloric Recombobulation"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the physicians who are trained in a procedure that costs more than 5000.",
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T3.Cost > 5000\nRETURN T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3",
                "Cost"
            ],
            "Token_Name_Label": [
                "Physician",
                "Trained_In",
                "Procedures"
            ],
            "Token_Operator": [
                ".",
                ">"
            ],
            "Token_Literal_Number_Integer": "5000"
        },
        "answers": [
            [
                "John Wen"
            ],
            [
                "John Wen"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "Christopher Turk"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which physicians are trained in procedures that are more expensive than 5000?",
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T3.Cost > 5000\nRETURN T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3",
                "Cost"
            ],
            "Token_Name_Label": [
                "Physician",
                "Trained_In",
                "Procedures"
            ],
            "Token_Operator": [
                ".",
                ">"
            ],
            "Token_Literal_Number_Integer": "5000"
        },
        "answers": [
            [
                "John Wen"
            ],
            [
                "John Wen"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "Christopher Turk"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the names of procedures which physician John Wen was trained in.",
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T1.Name = \"John Wen\"\nRETURN T3.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3"
            ],
            "Token_Name_Label": [
                "Physician",
                "Trained_In",
                "Procedures"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "\"John Wen\""
        },
        "answers": [
            [
                "Obfuscated Dermogastrotomy"
            ],
            [
                "Reverse Rhinopodoplasty"
            ],
            [
                "Follicular Demiectomy"
            ],
            [
                "Folded Demiophtalmectomy"
            ],
            [
                "Reversible Pancreomyoplasty"
            ],
            [
                "Obtuse Pyloric Recombobulation"
            ],
            [
                "Complete Walletectomy"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of procedures physician John Wen was trained in?",
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T1.Name = \"John Wen\"\nRETURN T3.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3"
            ],
            "Token_Name_Label": [
                "Physician",
                "Trained_In",
                "Procedures"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "\"John Wen\""
        },
        "answers": [
            [
                "Obfuscated Dermogastrotomy"
            ],
            [
                "Reverse Rhinopodoplasty"
            ],
            [
                "Follicular Demiectomy"
            ],
            [
                "Folded Demiophtalmectomy"
            ],
            [
                "Reversible Pancreomyoplasty"
            ],
            [
                "Obtuse Pyloric Recombobulation"
            ],
            [
                "Complete Walletectomy"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians who are affiliated with Surgery or Psychiatry department.",
        "cypher_query": "MATCH (T1:Physician)-[T2:Affiliated_With]-(T3:Department)\nWHERE T3.Name = 'Surgery' OR T3.Name = 'Psychiatry'\nRETURN T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3"
            ],
            "Token_Name_Label": [
                "Physician",
                "Affiliated_With",
                "Department"
            ],
            "Token_Operator": [
                ".",
                "=",
                "OR"
            ],
            "Token_Literal_String": [
                "'Surgery'",
                "'Psychiatry'"
            ]
        },
        "answers": [
            [
                "Christopher Turk"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "John Wen"
            ],
            [
                "Molly Clock"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which physicians are affiliated with either Surgery or Psychiatry department? Give me their names.",
        "cypher_query": "MATCH (T1:Physician)-[T2:Affiliated_With]-(T3:Department)\nWHERE T3.Name = 'Surgery' OR T3.Name = 'Psychiatry'\nRETURN T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3"
            ],
            "Token_Name_Label": [
                "Physician",
                "Affiliated_With",
                "Department"
            ],
            "Token_Operator": [
                ".",
                "=",
                "OR"
            ],
            "Token_Literal_String": [
                "'Surgery'",
                "'Psychiatry'"
            ]
        },
        "answers": [
            [
                "Christopher Turk"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "John Wen"
            ],
            [
                "Molly Clock"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the names of nurses who are on call.",
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:On_Call)\nRETURN DISTINCT T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2"
            ],
            "Token_Name_Label": [
                "Nurse",
                "On_Call"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What are the distinct names of nurses on call?",
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:On_Call)\nRETURN DISTINCT T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2"
            ],
            "Token_Name_Label": [
                "Nurse",
                "On_Call"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "Find the patient who has the most recent undergoing treatment?",
        "cypher_query": "MATCH (u:Undergoes)\nRETURN u.Patient\nORDER BY u.DateUndergoes\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "ORDER BY",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "u",
                "Patient",
                "DateUndergoes"
            ],
            "Token_Name_Label": "Undergoes",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                100000001
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which patient is undergoing the most recent treatment?",
        "cypher_query": "MATCH (u:Undergoes)\nRETURN u.Patient\nORDER BY u.DateUndergoes\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "ORDER BY",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "u",
                "Patient",
                "DateUndergoes"
            ],
            "Token_Name_Label": "Undergoes",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                100000001
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "List the names of all distinct nurses ordered by alphabetical order?",
        "cypher_query": "MATCH (n:Nurse)\nRETURN DISTINCT n.Name\nORDER BY n.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "n",
            "Token_Name_Label": "Nurse",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the alphabetically ordered list of all the distinct names of nurses?",
        "cypher_query": "MATCH (n:Nurse)\nRETURN DISTINCT n.Name\nORDER BY n.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "n",
            "Token_Name_Label": "Nurse",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the names of nurses who are nursing an undergoing treatment.",
        "cypher_query": "MATCH (T1:Undergoes)-[]-(T2:Nurse)\nRETURN DISTINCT T2.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2"
            ],
            "Token_Name_Label": [
                "Undergoes",
                "Nurse"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which nurses are in charge of patients undergoing treatments?",
        "cypher_query": "MATCH (T1:Undergoes)-[]-(T2:Nurse)\nRETURN DISTINCT T2.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2"
            ],
            "Token_Name_Label": [
                "Undergoes",
                "Nurse"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "List the names of all distinct medications, ordered in an alphabetical order.",
        "cypher_query": "MATCH (m:Medication)\nRETURN DISTINCT m.Name\nORDER BY m.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "m",
            "Token_Name_Label": "Medication",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Awakin"
            ],
            [
                "Crescavitin"
            ],
            [
                "Melioraurin"
            ],
            [
                "Procrastin-X"
            ],
            [
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the alphabetically ordered list of all distinct medications?",
        "cypher_query": "MATCH (m:Medication)\nRETURN DISTINCT m.Name\nORDER BY m.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "m",
            "Token_Name_Label": "Medication",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Awakin"
            ],
            [
                "Crescavitin"
            ],
            [
                "Melioraurin"
            ],
            [
                "Procrastin-X"
            ],
            [
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "List the name and cost of all procedures sorted by the cost from the highest to the lowest.",
        "cypher_query": "MATCH (p:Procedures)\nRETURN p.Name,p.Cost\nORDER BY p.Cost DESC",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name",
                "ORDER BY",
                "DESC"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Complete Walletectomy",
                10000.0
            ],
            [
                "Reversible Pancreomyoplasty",
                5600.0
            ],
            [
                "Obfuscated Dermogastrotomy",
                4899.0
            ],
            [
                "Folded Demiophtalmectomy",
                4500.0
            ],
            [
                "Obtuse Pyloric Recombobulation",
                3750.0
            ],
            [
                "Reverse Rhinopodoplasty",
                1500.0
            ],
            [
                "Follicular Demiectomy",
                25.0
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Sort the list of names and costs of all procedures in the descending order of cost.",
        "cypher_query": "MATCH (p:Procedures)\nRETURN p.Name,p.Cost\nORDER BY p.Cost DESC",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name",
                "ORDER BY",
                "DESC"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Complete Walletectomy",
                10000.0
            ],
            [
                "Reversible Pancreomyoplasty",
                5600.0
            ],
            [
                "Obfuscated Dermogastrotomy",
                4899.0
            ],
            [
                "Folded Demiophtalmectomy",
                4500.0
            ],
            [
                "Obtuse Pyloric Recombobulation",
                3750.0
            ],
            [
                "Reverse Rhinopodoplasty",
                1500.0
            ],
            [
                "Follicular Demiectomy",
                25.0
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the three most expensive procedures.",
        "cypher_query": "MATCH (p:Procedures)\nRETURN p.Name\nORDER BY p.Cost\nLIMIT 3",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name",
                "ORDER BY",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "3"
        },
        "answers": [
            [
                "Follicular Demiectomy"
            ],
            [
                "Reverse Rhinopodoplasty"
            ],
            [
                "Obtuse Pyloric Recombobulation"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What are the three most costly procedures?",
        "cypher_query": "MATCH (p:Procedures)\nRETURN p.Name\nORDER BY p.Cost\nLIMIT 3",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name",
                "ORDER BY",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "3"
        },
        "answers": [
            [
                "Follicular Demiectomy"
            ],
            [
                "Reverse Rhinopodoplasty"
            ],
            [
                "Obtuse Pyloric Recombobulation"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the physicians who are trained in a procedure that costs more than 5000.",
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T3.Cost > 5000\nRETURN T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3",
                "Cost"
            ],
            "Token_Name_Label": [
                "Physician",
                "Trained_In",
                "Procedures"
            ],
            "Token_Operator": [
                ".",
                ">"
            ],
            "Token_Literal_Number_Integer": "5000"
        },
        "answers": [
            [
                "John Wen"
            ],
            [
                "John Wen"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "Christopher Turk"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which physicians are trained in procedures that are more expensive than 5000?",
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T3.Cost > 5000\nRETURN T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3",
                "Cost"
            ],
            "Token_Name_Label": [
                "Physician",
                "Trained_In",
                "Procedures"
            ],
            "Token_Operator": [
                ".",
                ">"
            ],
            "Token_Literal_Number_Integer": "5000"
        },
        "answers": [
            [
                "John Wen"
            ],
            [
                "John Wen"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "Christopher Turk"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the names of procedures which physician John Wen was trained in.",
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T1.Name = \"John Wen\"\nRETURN T3.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3"
            ],
            "Token_Name_Label": [
                "Physician",
                "Trained_In",
                "Procedures"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "\"John Wen\""
        },
        "answers": [
            [
                "Obfuscated Dermogastrotomy"
            ],
            [
                "Reverse Rhinopodoplasty"
            ],
            [
                "Follicular Demiectomy"
            ],
            [
                "Folded Demiophtalmectomy"
            ],
            [
                "Reversible Pancreomyoplasty"
            ],
            [
                "Obtuse Pyloric Recombobulation"
            ],
            [
                "Complete Walletectomy"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of procedures physician John Wen was trained in?",
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T1.Name = \"John Wen\"\nRETURN T3.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3"
            ],
            "Token_Name_Label": [
                "Physician",
                "Trained_In",
                "Procedures"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "\"John Wen\""
        },
        "answers": [
            [
                "Obfuscated Dermogastrotomy"
            ],
            [
                "Reverse Rhinopodoplasty"
            ],
            [
                "Follicular Demiectomy"
            ],
            [
                "Folded Demiophtalmectomy"
            ],
            [
                "Reversible Pancreomyoplasty"
            ],
            [
                "Obtuse Pyloric Recombobulation"
            ],
            [
                "Complete Walletectomy"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians who are affiliated with Surgery or Psychiatry department.",
        "cypher_query": "MATCH (T1:Physician)-[T2:Affiliated_With]-(T3:Department)\nWHERE T3.Name = 'Surgery' OR T3.Name = 'Psychiatry'\nRETURN T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3"
            ],
            "Token_Name_Label": [
                "Physician",
                "Affiliated_With",
                "Department"
            ],
            "Token_Operator": [
                ".",
                "=",
                "OR"
            ],
            "Token_Literal_String": [
                "'Surgery'",
                "'Psychiatry'"
            ]
        },
        "answers": [
            [
                "Christopher Turk"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "John Wen"
            ],
            [
                "Molly Clock"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which physicians are affiliated with either Surgery or Psychiatry department? Give me their names.",
        "cypher_query": "MATCH (T1:Physician)-[T2:Affiliated_With]-(T3:Department)\nWHERE T3.Name = 'Surgery' OR T3.Name = 'Psychiatry'\nRETURN T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3"
            ],
            "Token_Name_Label": [
                "Physician",
                "Affiliated_With",
                "Department"
            ],
            "Token_Operator": [
                ".",
                "=",
                "OR"
            ],
            "Token_Literal_String": [
                "'Surgery'",
                "'Psychiatry'"
            ]
        },
        "answers": [
            [
                "Christopher Turk"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "John Wen"
            ],
            [
                "Molly Clock"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the names of nurses who are on call.",
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:On_Call)\nRETURN DISTINCT T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2"
            ],
            "Token_Name_Label": [
                "Nurse",
                "On_Call"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What are the distinct names of nurses on call?",
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:On_Call)\nRETURN DISTINCT T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2"
            ],
            "Token_Name_Label": [
                "Nurse",
                "On_Call"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "Find the patient who has the most recent undergoing treatment?",
        "cypher_query": "MATCH (u:Undergoes)\nRETURN u.Patient\nORDER BY u.DateUndergoes\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "ORDER BY",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "u",
                "Patient",
                "DateUndergoes"
            ],
            "Token_Name_Label": "Undergoes",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                100000001
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which patient is undergoing the most recent treatment?",
        "cypher_query": "MATCH (u:Undergoes)\nRETURN u.Patient\nORDER BY u.DateUndergoes\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "ORDER BY",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "u",
                "Patient",
                "DateUndergoes"
            ],
            "Token_Name_Label": "Undergoes",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                100000001
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "List the names of all distinct nurses ordered by alphabetical order?",
        "cypher_query": "MATCH (n:Nurse)\nRETURN DISTINCT n.Name\nORDER BY n.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "n",
            "Token_Name_Label": "Nurse",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the alphabetically ordered list of all the distinct names of nurses?",
        "cypher_query": "MATCH (n:Nurse)\nRETURN DISTINCT n.Name\nORDER BY n.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "n",
            "Token_Name_Label": "Nurse",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the names of nurses who are nursing an undergoing treatment.",
        "cypher_query": "MATCH (T1:Undergoes)-[]-(T2:Nurse)\nRETURN DISTINCT T2.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2"
            ],
            "Token_Name_Label": [
                "Undergoes",
                "Nurse"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which nurses are in charge of patients undergoing treatments?",
        "cypher_query": "MATCH (T1:Undergoes)-[]-(T2:Nurse)\nRETURN DISTINCT T2.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2"
            ],
            "Token_Name_Label": [
                "Undergoes",
                "Nurse"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "List the names of all distinct medications, ordered in an alphabetical order.",
        "cypher_query": "MATCH (m:Medication)\nRETURN DISTINCT m.Name\nORDER BY m.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "m",
            "Token_Name_Label": "Medication",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Awakin"
            ],
            [
                "Crescavitin"
            ],
            [
                "Melioraurin"
            ],
            [
                "Procrastin-X"
            ],
            [
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the alphabetically ordered list of all distinct medications?",
        "cypher_query": "MATCH (m:Medication)\nRETURN DISTINCT m.Name\nORDER BY m.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "m",
            "Token_Name_Label": "Medication",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Awakin"
            ],
            [
                "Crescavitin"
            ],
            [
                "Melioraurin"
            ],
            [
                "Procrastin-X"
            ],
            [
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "List the name and cost of all procedures sorted by the cost from the highest to the lowest.",
        "cypher_query": "MATCH (p:Procedures)\nRETURN p.Name,p.Cost\nORDER BY p.Cost DESC",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name",
                "ORDER BY",
                "DESC"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Complete Walletectomy",
                10000.0
            ],
            [
                "Reversible Pancreomyoplasty",
                5600.0
            ],
            [
                "Obfuscated Dermogastrotomy",
                4899.0
            ],
            [
                "Folded Demiophtalmectomy",
                4500.0
            ],
            [
                "Obtuse Pyloric Recombobulation",
                3750.0
            ],
            [
                "Reverse Rhinopodoplasty",
                1500.0
            ],
            [
                "Follicular Demiectomy",
                25.0
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Sort the list of names and costs of all procedures in the descending order of cost.",
        "cypher_query": "MATCH (p:Procedures)\nRETURN p.Name,p.Cost\nORDER BY p.Cost DESC",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name",
                "ORDER BY",
                "DESC"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Complete Walletectomy",
                10000.0
            ],
            [
                "Reversible Pancreomyoplasty",
                5600.0
            ],
            [
                "Obfuscated Dermogastrotomy",
                4899.0
            ],
            [
                "Folded Demiophtalmectomy",
                4500.0
            ],
            [
                "Obtuse Pyloric Recombobulation",
                3750.0
            ],
            [
                "Reverse Rhinopodoplasty",
                1500.0
            ],
            [
                "Follicular Demiectomy",
                25.0
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the three most expensive procedures.",
        "cypher_query": "MATCH (p:Procedures)\nRETURN p.Name\nORDER BY p.Cost\nLIMIT 3",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name",
                "ORDER BY",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "3"
        },
        "answers": [
            [
                "Follicular Demiectomy"
            ],
            [
                "Reverse Rhinopodoplasty"
            ],
            [
                "Obtuse Pyloric Recombobulation"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What are the three most costly procedures?",
        "cypher_query": "MATCH (p:Procedures)\nRETURN p.Name\nORDER BY p.Cost\nLIMIT 3",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name",
                "ORDER BY",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "3"
        },
        "answers": [
            [
                "Follicular Demiectomy"
            ],
            [
                "Reverse Rhinopodoplasty"
            ],
            [
                "Obtuse Pyloric Recombobulation"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the physicians who are trained in a procedure that costs more than 5000.",
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T3.Cost > 5000\nRETURN T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3",
                "Cost"
            ],
            "Token_Name_Label": [
                "Physician",
                "Trained_In",
                "Procedures"
            ],
            "Token_Operator": [
                ".",
                ">"
            ],
            "Token_Literal_Number_Integer": "5000"
        },
        "answers": [
            [
                "John Wen"
            ],
            [
                "John Wen"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "Christopher Turk"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which physicians are trained in procedures that are more expensive than 5000?",
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T3.Cost > 5000\nRETURN T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3",
                "Cost"
            ],
            "Token_Name_Label": [
                "Physician",
                "Trained_In",
                "Procedures"
            ],
            "Token_Operator": [
                ".",
                ">"
            ],
            "Token_Literal_Number_Integer": "5000"
        },
        "answers": [
            [
                "John Wen"
            ],
            [
                "John Wen"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "Christopher Turk"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the names of procedures which physician John Wen was trained in.",
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T1.Name = \"John Wen\"\nRETURN T3.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3"
            ],
            "Token_Name_Label": [
                "Physician",
                "Trained_In",
                "Procedures"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "\"John Wen\""
        },
        "answers": [
            [
                "Obfuscated Dermogastrotomy"
            ],
            [
                "Reverse Rhinopodoplasty"
            ],
            [
                "Follicular Demiectomy"
            ],
            [
                "Folded Demiophtalmectomy"
            ],
            [
                "Reversible Pancreomyoplasty"
            ],
            [
                "Obtuse Pyloric Recombobulation"
            ],
            [
                "Complete Walletectomy"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of procedures physician John Wen was trained in?",
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T1.Name = \"John Wen\"\nRETURN T3.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3"
            ],
            "Token_Name_Label": [
                "Physician",
                "Trained_In",
                "Procedures"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "\"John Wen\""
        },
        "answers": [
            [
                "Obfuscated Dermogastrotomy"
            ],
            [
                "Reverse Rhinopodoplasty"
            ],
            [
                "Follicular Demiectomy"
            ],
            [
                "Folded Demiophtalmectomy"
            ],
            [
                "Reversible Pancreomyoplasty"
            ],
            [
                "Obtuse Pyloric Recombobulation"
            ],
            [
                "Complete Walletectomy"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians who are affiliated with Surgery or Psychiatry department.",
        "cypher_query": "MATCH (T1:Physician)-[T2:Affiliated_With]-(T3:Department)\nWHERE T3.Name = 'Surgery' OR T3.Name = 'Psychiatry'\nRETURN T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3"
            ],
            "Token_Name_Label": [
                "Physician",
                "Affiliated_With",
                "Department"
            ],
            "Token_Operator": [
                ".",
                "=",
                "OR"
            ],
            "Token_Literal_String": [
                "'Surgery'",
                "'Psychiatry'"
            ]
        },
        "answers": [
            [
                "Christopher Turk"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "John Wen"
            ],
            [
                "Molly Clock"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which physicians are affiliated with either Surgery or Psychiatry department? Give me their names.",
        "cypher_query": "MATCH (T1:Physician)-[T2:Affiliated_With]-(T3:Department)\nWHERE T3.Name = 'Surgery' OR T3.Name = 'Psychiatry'\nRETURN T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3"
            ],
            "Token_Name_Label": [
                "Physician",
                "Affiliated_With",
                "Department"
            ],
            "Token_Operator": [
                ".",
                "=",
                "OR"
            ],
            "Token_Literal_String": [
                "'Surgery'",
                "'Psychiatry'"
            ]
        },
        "answers": [
            [
                "Christopher Turk"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "John Wen"
            ],
            [
                "Molly Clock"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the names of nurses who are on call.",
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:On_Call)\nRETURN DISTINCT T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2"
            ],
            "Token_Name_Label": [
                "Nurse",
                "On_Call"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What are the distinct names of nurses on call?",
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:On_Call)\nRETURN DISTINCT T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2"
            ],
            "Token_Name_Label": [
                "Nurse",
                "On_Call"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "Find the patient who has the most recent undergoing treatment?",
        "cypher_query": "MATCH (u:Undergoes)\nRETURN u.Patient\nORDER BY u.DateUndergoes\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "ORDER BY",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "u",
                "Patient",
                "DateUndergoes"
            ],
            "Token_Name_Label": "Undergoes",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                100000001
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which patient is undergoing the most recent treatment?",
        "cypher_query": "MATCH (u:Undergoes)\nRETURN u.Patient\nORDER BY u.DateUndergoes\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "ORDER BY",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "u",
                "Patient",
                "DateUndergoes"
            ],
            "Token_Name_Label": "Undergoes",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                100000001
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "List the names of all distinct nurses ordered by alphabetical order?",
        "cypher_query": "MATCH (n:Nurse)\nRETURN DISTINCT n.Name\nORDER BY n.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "n",
            "Token_Name_Label": "Nurse",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the alphabetically ordered list of all the distinct names of nurses?",
        "cypher_query": "MATCH (n:Nurse)\nRETURN DISTINCT n.Name\nORDER BY n.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "n",
            "Token_Name_Label": "Nurse",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the names of nurses who are nursing an undergoing treatment.",
        "cypher_query": "MATCH (T1:Undergoes)-[]-(T2:Nurse)\nRETURN DISTINCT T2.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2"
            ],
            "Token_Name_Label": [
                "Undergoes",
                "Nurse"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which nurses are in charge of patients undergoing treatments?",
        "cypher_query": "MATCH (T1:Undergoes)-[]-(T2:Nurse)\nRETURN DISTINCT T2.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2"
            ],
            "Token_Name_Label": [
                "Undergoes",
                "Nurse"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "List the names of all distinct medications, ordered in an alphabetical order.",
        "cypher_query": "MATCH (m:Medication)\nRETURN DISTINCT m.Name\nORDER BY m.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "m",
            "Token_Name_Label": "Medication",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Awakin"
            ],
            [
                "Crescavitin"
            ],
            [
                "Melioraurin"
            ],
            [
                "Procrastin-X"
            ],
            [
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the alphabetically ordered list of all distinct medications?",
        "cypher_query": "MATCH (m:Medication)\nRETURN DISTINCT m.Name\nORDER BY m.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "m",
            "Token_Name_Label": "Medication",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Awakin"
            ],
            [
                "Crescavitin"
            ],
            [
                "Melioraurin"
            ],
            [
                "Procrastin-X"
            ],
            [
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "List the name and cost of all procedures sorted by the cost from the highest to the lowest.",
        "cypher_query": "MATCH (p:Procedures)\nRETURN p.Name,p.Cost\nORDER BY p.Cost DESC",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name",
                "ORDER BY",
                "DESC"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Complete Walletectomy",
                10000.0
            ],
            [
                "Reversible Pancreomyoplasty",
                5600.0
            ],
            [
                "Obfuscated Dermogastrotomy",
                4899.0
            ],
            [
                "Folded Demiophtalmectomy",
                4500.0
            ],
            [
                "Obtuse Pyloric Recombobulation",
                3750.0
            ],
            [
                "Reverse Rhinopodoplasty",
                1500.0
            ],
            [
                "Follicular Demiectomy",
                25.0
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Sort the list of names and costs of all procedures in the descending order of cost.",
        "cypher_query": "MATCH (p:Procedures)\nRETURN p.Name,p.Cost\nORDER BY p.Cost DESC",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name",
                "ORDER BY",
                "DESC"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Complete Walletectomy",
                10000.0
            ],
            [
                "Reversible Pancreomyoplasty",
                5600.0
            ],
            [
                "Obfuscated Dermogastrotomy",
                4899.0
            ],
            [
                "Folded Demiophtalmectomy",
                4500.0
            ],
            [
                "Obtuse Pyloric Recombobulation",
                3750.0
            ],
            [
                "Reverse Rhinopodoplasty",
                1500.0
            ],
            [
                "Follicular Demiectomy",
                25.0
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the three most expensive procedures.",
        "cypher_query": "MATCH (p:Procedures)\nRETURN p.Name\nORDER BY p.Cost\nLIMIT 3",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name",
                "ORDER BY",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "3"
        },
        "answers": [
            [
                "Follicular Demiectomy"
            ],
            [
                "Reverse Rhinopodoplasty"
            ],
            [
                "Obtuse Pyloric Recombobulation"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What are the three most costly procedures?",
        "cypher_query": "MATCH (p:Procedures)\nRETURN p.Name\nORDER BY p.Cost\nLIMIT 3",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name",
                "ORDER BY",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "3"
        },
        "answers": [
            [
                "Follicular Demiectomy"
            ],
            [
                "Reverse Rhinopodoplasty"
            ],
            [
                "Obtuse Pyloric Recombobulation"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the physicians who are trained in a procedure that costs more than 5000.",
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T3.Cost > 5000\nRETURN T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3",
                "Cost"
            ],
            "Token_Name_Label": [
                "Physician",
                "Trained_In",
                "Procedures"
            ],
            "Token_Operator": [
                ".",
                ">"
            ],
            "Token_Literal_Number_Integer": "5000"
        },
        "answers": [
            [
                "John Wen"
            ],
            [
                "John Wen"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "Christopher Turk"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which physicians are trained in procedures that are more expensive than 5000?",
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T3.Cost > 5000\nRETURN T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3",
                "Cost"
            ],
            "Token_Name_Label": [
                "Physician",
                "Trained_In",
                "Procedures"
            ],
            "Token_Operator": [
                ".",
                ">"
            ],
            "Token_Literal_Number_Integer": "5000"
        },
        "answers": [
            [
                "John Wen"
            ],
            [
                "John Wen"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "Christopher Turk"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the names of procedures which physician John Wen was trained in.",
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T1.Name = \"John Wen\"\nRETURN T3.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3"
            ],
            "Token_Name_Label": [
                "Physician",
                "Trained_In",
                "Procedures"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "\"John Wen\""
        },
        "answers": [
            [
                "Obfuscated Dermogastrotomy"
            ],
            [
                "Reverse Rhinopodoplasty"
            ],
            [
                "Follicular Demiectomy"
            ],
            [
                "Folded Demiophtalmectomy"
            ],
            [
                "Reversible Pancreomyoplasty"
            ],
            [
                "Obtuse Pyloric Recombobulation"
            ],
            [
                "Complete Walletectomy"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of procedures physician John Wen was trained in?",
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T1.Name = \"John Wen\"\nRETURN T3.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3"
            ],
            "Token_Name_Label": [
                "Physician",
                "Trained_In",
                "Procedures"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "\"John Wen\""
        },
        "answers": [
            [
                "Obfuscated Dermogastrotomy"
            ],
            [
                "Reverse Rhinopodoplasty"
            ],
            [
                "Follicular Demiectomy"
            ],
            [
                "Folded Demiophtalmectomy"
            ],
            [
                "Reversible Pancreomyoplasty"
            ],
            [
                "Obtuse Pyloric Recombobulation"
            ],
            [
                "Complete Walletectomy"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians who are affiliated with Surgery or Psychiatry department.",
        "cypher_query": "MATCH (T1:Physician)-[T2:Affiliated_With]-(T3:Department)\nWHERE T3.Name = 'Surgery' OR T3.Name = 'Psychiatry'\nRETURN T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3"
            ],
            "Token_Name_Label": [
                "Physician",
                "Affiliated_With",
                "Department"
            ],
            "Token_Operator": [
                ".",
                "=",
                "OR"
            ],
            "Token_Literal_String": [
                "'Surgery'",
                "'Psychiatry'"
            ]
        },
        "answers": [
            [
                "Christopher Turk"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "John Wen"
            ],
            [
                "Molly Clock"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which physicians are affiliated with either Surgery or Psychiatry department? Give me their names.",
        "cypher_query": "MATCH (T1:Physician)-[T2:Affiliated_With]-(T3:Department)\nWHERE T3.Name = 'Surgery' OR T3.Name = 'Psychiatry'\nRETURN T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3"
            ],
            "Token_Name_Label": [
                "Physician",
                "Affiliated_With",
                "Department"
            ],
            "Token_Operator": [
                ".",
                "=",
                "OR"
            ],
            "Token_Literal_String": [
                "'Surgery'",
                "'Psychiatry'"
            ]
        },
        "answers": [
            [
                "Christopher Turk"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "John Wen"
            ],
            [
                "Molly Clock"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the names of nurses who are on call.",
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:On_Call)\nRETURN DISTINCT T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2"
            ],
            "Token_Name_Label": [
                "Nurse",
                "On_Call"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What are the distinct names of nurses on call?",
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:On_Call)\nRETURN DISTINCT T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2"
            ],
            "Token_Name_Label": [
                "Nurse",
                "On_Call"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "How many patients' prescriptions are made by physician John Dorian?",
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Prescribes)-[]-(T3:Physician)\nWHERE T3.Name = \"John Dorian\"\nRETURN COUNT(T1.SSN)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3",
                "SSN"
            ],
            "Token_Name_Label": [
                "Patient",
                "Prescribes",
                "Physician"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "\"John Dorian\"",
            "Token_Name_Function": "COUNT"
        },
        "answers": [
            [
                1
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of patients' prescriptions physician John Dorian made.",
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Prescribes)-[]-(T3:Physician)\nWHERE T3.Name = \"John Dorian\"\nRETURN COUNT(T1.SSN)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3",
                "SSN"
            ],
            "Token_Name_Label": [
                "Patient",
                "Prescribes",
                "Physician"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "\"John Dorian\"",
            "Token_Name_Function": "COUNT"
        },
        "answers": [
            [
                1
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the patient who has the most recent undergoing treatment?",
        "cypher_query": "MATCH (u:Undergoes)\nRETURN u.Patient\nORDER BY u.DateUndergoes\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "ORDER BY",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "u",
                "Patient",
                "DateUndergoes"
            ],
            "Token_Name_Label": "Undergoes",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                100000001
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which patient is undergoing the most recent treatment?",
        "cypher_query": "MATCH (u:Undergoes)\nRETURN u.Patient\nORDER BY u.DateUndergoes\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "ORDER BY",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "u",
                "Patient",
                "DateUndergoes"
            ],
            "Token_Name_Label": "Undergoes",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                100000001
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "List the names of all distinct nurses ordered by alphabetical order?",
        "cypher_query": "MATCH (n:Nurse)\nRETURN DISTINCT n.Name\nORDER BY n.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "n",
            "Token_Name_Label": "Nurse",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the alphabetically ordered list of all the distinct names of nurses?",
        "cypher_query": "MATCH (n:Nurse)\nRETURN DISTINCT n.Name\nORDER BY n.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "n",
            "Token_Name_Label": "Nurse",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the names of nurses who are nursing an undergoing treatment.",
        "cypher_query": "MATCH (T1:Undergoes)-[]-(T2:Nurse)\nRETURN DISTINCT T2.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2"
            ],
            "Token_Name_Label": [
                "Undergoes",
                "Nurse"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which nurses are in charge of patients undergoing treatments?",
        "cypher_query": "MATCH (T1:Undergoes)-[]-(T2:Nurse)\nRETURN DISTINCT T2.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2"
            ],
            "Token_Name_Label": [
                "Undergoes",
                "Nurse"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "List the names of all distinct medications, ordered in an alphabetical order.",
        "cypher_query": "MATCH (m:Medication)\nRETURN DISTINCT m.Name\nORDER BY m.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "m",
            "Token_Name_Label": "Medication",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Awakin"
            ],
            [
                "Crescavitin"
            ],
            [
                "Melioraurin"
            ],
            [
                "Procrastin-X"
            ],
            [
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the alphabetically ordered list of all distinct medications?",
        "cypher_query": "MATCH (m:Medication)\nRETURN DISTINCT m.Name\nORDER BY m.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "m",
            "Token_Name_Label": "Medication",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Awakin"
            ],
            [
                "Crescavitin"
            ],
            [
                "Melioraurin"
            ],
            [
                "Procrastin-X"
            ],
            [
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "List the name and cost of all procedures sorted by the cost from the highest to the lowest.",
        "cypher_query": "MATCH (p:Procedures)\nRETURN p.Name,p.Cost\nORDER BY p.Cost DESC",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name",
                "ORDER BY",
                "DESC"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Complete Walletectomy",
                10000.0
            ],
            [
                "Reversible Pancreomyoplasty",
                5600.0
            ],
            [
                "Obfuscated Dermogastrotomy",
                4899.0
            ],
            [
                "Folded Demiophtalmectomy",
                4500.0
            ],
            [
                "Obtuse Pyloric Recombobulation",
                3750.0
            ],
            [
                "Reverse Rhinopodoplasty",
                1500.0
            ],
            [
                "Follicular Demiectomy",
                25.0
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Sort the list of names and costs of all procedures in the descending order of cost.",
        "cypher_query": "MATCH (p:Procedures)\nRETURN p.Name,p.Cost\nORDER BY p.Cost DESC",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name",
                "ORDER BY",
                "DESC"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Complete Walletectomy",
                10000.0
            ],
            [
                "Reversible Pancreomyoplasty",
                5600.0
            ],
            [
                "Obfuscated Dermogastrotomy",
                4899.0
            ],
            [
                "Folded Demiophtalmectomy",
                4500.0
            ],
            [
                "Obtuse Pyloric Recombobulation",
                3750.0
            ],
            [
                "Reverse Rhinopodoplasty",
                1500.0
            ],
            [
                "Follicular Demiectomy",
                25.0
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the three most expensive procedures.",
        "cypher_query": "MATCH (p:Procedures)\nRETURN p.Name\nORDER BY p.Cost\nLIMIT 3",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name",
                "ORDER BY",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "3"
        },
        "answers": [
            [
                "Follicular Demiectomy"
            ],
            [
                "Reverse Rhinopodoplasty"
            ],
            [
                "Obtuse Pyloric Recombobulation"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What are the three most costly procedures?",
        "cypher_query": "MATCH (p:Procedures)\nRETURN p.Name\nORDER BY p.Cost\nLIMIT 3",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name",
                "ORDER BY",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "3"
        },
        "answers": [
            [
                "Follicular Demiectomy"
            ],
            [
                "Reverse Rhinopodoplasty"
            ],
            [
                "Obtuse Pyloric Recombobulation"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the physicians who are trained in a procedure that costs more than 5000.",
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T3.Cost > 5000\nRETURN T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3",
                "Cost"
            ],
            "Token_Name_Label": [
                "Physician",
                "Trained_In",
                "Procedures"
            ],
            "Token_Operator": [
                ".",
                ">"
            ],
            "Token_Literal_Number_Integer": "5000"
        },
        "answers": [
            [
                "John Wen"
            ],
            [
                "John Wen"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "Christopher Turk"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which physicians are trained in procedures that are more expensive than 5000?",
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T3.Cost > 5000\nRETURN T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3",
                "Cost"
            ],
            "Token_Name_Label": [
                "Physician",
                "Trained_In",
                "Procedures"
            ],
            "Token_Operator": [
                ".",
                ">"
            ],
            "Token_Literal_Number_Integer": "5000"
        },
        "answers": [
            [
                "John Wen"
            ],
            [
                "John Wen"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "Christopher Turk"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the names of procedures which physician John Wen was trained in.",
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T1.Name = \"John Wen\"\nRETURN T3.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3"
            ],
            "Token_Name_Label": [
                "Physician",
                "Trained_In",
                "Procedures"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "\"John Wen\""
        },
        "answers": [
            [
                "Obfuscated Dermogastrotomy"
            ],
            [
                "Reverse Rhinopodoplasty"
            ],
            [
                "Follicular Demiectomy"
            ],
            [
                "Folded Demiophtalmectomy"
            ],
            [
                "Reversible Pancreomyoplasty"
            ],
            [
                "Obtuse Pyloric Recombobulation"
            ],
            [
                "Complete Walletectomy"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of procedures physician John Wen was trained in?",
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T1.Name = \"John Wen\"\nRETURN T3.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3"
            ],
            "Token_Name_Label": [
                "Physician",
                "Trained_In",
                "Procedures"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "\"John Wen\""
        },
        "answers": [
            [
                "Obfuscated Dermogastrotomy"
            ],
            [
                "Reverse Rhinopodoplasty"
            ],
            [
                "Follicular Demiectomy"
            ],
            [
                "Folded Demiophtalmectomy"
            ],
            [
                "Reversible Pancreomyoplasty"
            ],
            [
                "Obtuse Pyloric Recombobulation"
            ],
            [
                "Complete Walletectomy"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians who are affiliated with Surgery or Psychiatry department.",
        "cypher_query": "MATCH (T1:Physician)-[T2:Affiliated_With]-(T3:Department)\nWHERE T3.Name = 'Surgery' OR T3.Name = 'Psychiatry'\nRETURN T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3"
            ],
            "Token_Name_Label": [
                "Physician",
                "Affiliated_With",
                "Department"
            ],
            "Token_Operator": [
                ".",
                "=",
                "OR"
            ],
            "Token_Literal_String": [
                "'Surgery'",
                "'Psychiatry'"
            ]
        },
        "answers": [
            [
                "Christopher Turk"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "John Wen"
            ],
            [
                "Molly Clock"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which physicians are affiliated with either Surgery or Psychiatry department? Give me their names.",
        "cypher_query": "MATCH (T1:Physician)-[T2:Affiliated_With]-(T3:Department)\nWHERE T3.Name = 'Surgery' OR T3.Name = 'Psychiatry'\nRETURN T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3"
            ],
            "Token_Name_Label": [
                "Physician",
                "Affiliated_With",
                "Department"
            ],
            "Token_Operator": [
                ".",
                "=",
                "OR"
            ],
            "Token_Literal_String": [
                "'Surgery'",
                "'Psychiatry'"
            ]
        },
        "answers": [
            [
                "Christopher Turk"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "John Wen"
            ],
            [
                "Molly Clock"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many appointments are there?",
        "cypher_query": "MATCH (a:Appointment)\nRETURN COUNT(\"*\")",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "a",
            "Token_Name_Label": "Appointment",
            "Token_Name_Function": "COUNT",
            "Token_Literal_String": "\"*\""
        },
        "answers": [
            [
                9
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Count how many appointments have been made in total.",
        "cypher_query": "MATCH (a:Appointment)\nRETURN COUNT(\"*\")",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "a",
            "Token_Name_Label": "Appointment",
            "Token_Name_Function": "COUNT",
            "Token_Literal_String": "\"*\""
        },
        "answers": [
            [
                9
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the names of nurses who are on call.",
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:On_Call)\nRETURN DISTINCT T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2"
            ],
            "Token_Name_Label": [
                "Nurse",
                "On_Call"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What are the distinct names of nurses on call?",
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:On_Call)\nRETURN DISTINCT T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2"
            ],
            "Token_Name_Label": [
                "Nurse",
                "On_Call"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "How many patients' prescriptions are made by physician John Dorian?",
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Prescribes)-[]-(T3:Physician)\nWHERE T3.Name = \"John Dorian\"\nRETURN COUNT(T1.SSN)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3",
                "SSN"
            ],
            "Token_Name_Label": [
                "Patient",
                "Prescribes",
                "Physician"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "\"John Dorian\"",
            "Token_Name_Function": "COUNT"
        },
        "answers": [
            [
                1
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of patients' prescriptions physician John Dorian made.",
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Prescribes)-[]-(T3:Physician)\nWHERE T3.Name = \"John Dorian\"\nRETURN COUNT(T1.SSN)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3",
                "SSN"
            ],
            "Token_Name_Label": [
                "Patient",
                "Prescribes",
                "Physician"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "\"John Dorian\"",
            "Token_Name_Function": "COUNT"
        },
        "answers": [
            [
                1
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many different types of rooms are there?",
        "cypher_query": "MATCH (r:Room)\nWITH DISTINCT r.RoomType AS roomtype\nRETURN count(roomtype)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH DISTINCT",
                "AS",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "r",
                "RoomType",
                "roomtype"
            ],
            "Token_Name_Label": "Room",
            "Token_Operator": ".",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                1
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of distinct room types available.",
        "cypher_query": "MATCH (r:Room)\nWITH DISTINCT r.RoomType AS roomtype\nRETURN count(roomtype)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH DISTINCT",
                "AS",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "r",
                "RoomType",
                "roomtype"
            ],
            "Token_Name_Label": "Room",
            "Token_Operator": ".",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                1
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the patient who has the most recent undergoing treatment?",
        "cypher_query": "MATCH (u:Undergoes)\nRETURN u.Patient\nORDER BY u.DateUndergoes\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "ORDER BY",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "u",
                "Patient",
                "DateUndergoes"
            ],
            "Token_Name_Label": "Undergoes",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                100000001
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which patient is undergoing the most recent treatment?",
        "cypher_query": "MATCH (u:Undergoes)\nRETURN u.Patient\nORDER BY u.DateUndergoes\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "ORDER BY",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "u",
                "Patient",
                "DateUndergoes"
            ],
            "Token_Name_Label": "Undergoes",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                100000001
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "List the names of all distinct nurses ordered by alphabetical order?",
        "cypher_query": "MATCH (n:Nurse)\nRETURN DISTINCT n.Name\nORDER BY n.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "n",
            "Token_Name_Label": "Nurse",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the alphabetically ordered list of all the distinct names of nurses?",
        "cypher_query": "MATCH (n:Nurse)\nRETURN DISTINCT n.Name\nORDER BY n.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "n",
            "Token_Name_Label": "Nurse",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the names of nurses who are nursing an undergoing treatment.",
        "cypher_query": "MATCH (T1:Undergoes)-[]-(T2:Nurse)\nRETURN DISTINCT T2.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2"
            ],
            "Token_Name_Label": [
                "Undergoes",
                "Nurse"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which nurses are in charge of patients undergoing treatments?",
        "cypher_query": "MATCH (T1:Undergoes)-[]-(T2:Nurse)\nRETURN DISTINCT T2.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2"
            ],
            "Token_Name_Label": [
                "Undergoes",
                "Nurse"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "List the names of all distinct medications, ordered in an alphabetical order.",
        "cypher_query": "MATCH (m:Medication)\nRETURN DISTINCT m.Name\nORDER BY m.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "m",
            "Token_Name_Label": "Medication",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Awakin"
            ],
            [
                "Crescavitin"
            ],
            [
                "Melioraurin"
            ],
            [
                "Procrastin-X"
            ],
            [
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the alphabetically ordered list of all distinct medications?",
        "cypher_query": "MATCH (m:Medication)\nRETURN DISTINCT m.Name\nORDER BY m.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "m",
            "Token_Name_Label": "Medication",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Awakin"
            ],
            [
                "Crescavitin"
            ],
            [
                "Melioraurin"
            ],
            [
                "Procrastin-X"
            ],
            [
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "List the name and cost of all procedures sorted by the cost from the highest to the lowest.",
        "cypher_query": "MATCH (p:Procedures)\nRETURN p.Name,p.Cost\nORDER BY p.Cost DESC",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name",
                "ORDER BY",
                "DESC"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Complete Walletectomy",
                10000.0
            ],
            [
                "Reversible Pancreomyoplasty",
                5600.0
            ],
            [
                "Obfuscated Dermogastrotomy",
                4899.0
            ],
            [
                "Folded Demiophtalmectomy",
                4500.0
            ],
            [
                "Obtuse Pyloric Recombobulation",
                3750.0
            ],
            [
                "Reverse Rhinopodoplasty",
                1500.0
            ],
            [
                "Follicular Demiectomy",
                25.0
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Sort the list of names and costs of all procedures in the descending order of cost.",
        "cypher_query": "MATCH (p:Procedures)\nRETURN p.Name,p.Cost\nORDER BY p.Cost DESC",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name",
                "ORDER BY",
                "DESC"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Complete Walletectomy",
                10000.0
            ],
            [
                "Reversible Pancreomyoplasty",
                5600.0
            ],
            [
                "Obfuscated Dermogastrotomy",
                4899.0
            ],
            [
                "Folded Demiophtalmectomy",
                4500.0
            ],
            [
                "Obtuse Pyloric Recombobulation",
                3750.0
            ],
            [
                "Reverse Rhinopodoplasty",
                1500.0
            ],
            [
                "Follicular Demiectomy",
                25.0
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the three most expensive procedures.",
        "cypher_query": "MATCH (p:Procedures)\nRETURN p.Name\nORDER BY p.Cost\nLIMIT 3",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name",
                "ORDER BY",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "3"
        },
        "answers": [
            [
                "Follicular Demiectomy"
            ],
            [
                "Reverse Rhinopodoplasty"
            ],
            [
                "Obtuse Pyloric Recombobulation"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What are the three most costly procedures?",
        "cypher_query": "MATCH (p:Procedures)\nRETURN p.Name\nORDER BY p.Cost\nLIMIT 3",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name",
                "ORDER BY",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "3"
        },
        "answers": [
            [
                "Follicular Demiectomy"
            ],
            [
                "Reverse Rhinopodoplasty"
            ],
            [
                "Obtuse Pyloric Recombobulation"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the physicians who are trained in a procedure that costs more than 5000.",
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T3.Cost > 5000\nRETURN T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3",
                "Cost"
            ],
            "Token_Name_Label": [
                "Physician",
                "Trained_In",
                "Procedures"
            ],
            "Token_Operator": [
                ".",
                ">"
            ],
            "Token_Literal_Number_Integer": "5000"
        },
        "answers": [
            [
                "John Wen"
            ],
            [
                "John Wen"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "Christopher Turk"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which physicians are trained in procedures that are more expensive than 5000?",
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T3.Cost > 5000\nRETURN T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3",
                "Cost"
            ],
            "Token_Name_Label": [
                "Physician",
                "Trained_In",
                "Procedures"
            ],
            "Token_Operator": [
                ".",
                ">"
            ],
            "Token_Literal_Number_Integer": "5000"
        },
        "answers": [
            [
                "John Wen"
            ],
            [
                "John Wen"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "Christopher Turk"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the names of procedures which physician John Wen was trained in.",
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T1.Name = \"John Wen\"\nRETURN T3.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3"
            ],
            "Token_Name_Label": [
                "Physician",
                "Trained_In",
                "Procedures"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "\"John Wen\""
        },
        "answers": [
            [
                "Obfuscated Dermogastrotomy"
            ],
            [
                "Reverse Rhinopodoplasty"
            ],
            [
                "Follicular Demiectomy"
            ],
            [
                "Folded Demiophtalmectomy"
            ],
            [
                "Reversible Pancreomyoplasty"
            ],
            [
                "Obtuse Pyloric Recombobulation"
            ],
            [
                "Complete Walletectomy"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of procedures physician John Wen was trained in?",
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T1.Name = \"John Wen\"\nRETURN T3.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3"
            ],
            "Token_Name_Label": [
                "Physician",
                "Trained_In",
                "Procedures"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "\"John Wen\""
        },
        "answers": [
            [
                "Obfuscated Dermogastrotomy"
            ],
            [
                "Reverse Rhinopodoplasty"
            ],
            [
                "Follicular Demiectomy"
            ],
            [
                "Folded Demiophtalmectomy"
            ],
            [
                "Reversible Pancreomyoplasty"
            ],
            [
                "Obtuse Pyloric Recombobulation"
            ],
            [
                "Complete Walletectomy"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians who are affiliated with Surgery or Psychiatry department.",
        "cypher_query": "MATCH (T1:Physician)-[T2:Affiliated_With]-(T3:Department)\nWHERE T3.Name = 'Surgery' OR T3.Name = 'Psychiatry'\nRETURN T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3"
            ],
            "Token_Name_Label": [
                "Physician",
                "Affiliated_With",
                "Department"
            ],
            "Token_Operator": [
                ".",
                "=",
                "OR"
            ],
            "Token_Literal_String": [
                "'Surgery'",
                "'Psychiatry'"
            ]
        },
        "answers": [
            [
                "Christopher Turk"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "John Wen"
            ],
            [
                "Molly Clock"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which physicians are affiliated with either Surgery or Psychiatry department? Give me their names.",
        "cypher_query": "MATCH (T1:Physician)-[T2:Affiliated_With]-(T3:Department)\nWHERE T3.Name = 'Surgery' OR T3.Name = 'Psychiatry'\nRETURN T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3"
            ],
            "Token_Name_Label": [
                "Physician",
                "Affiliated_With",
                "Department"
            ],
            "Token_Operator": [
                ".",
                "=",
                "OR"
            ],
            "Token_Literal_String": [
                "'Surgery'",
                "'Psychiatry'"
            ]
        },
        "answers": [
            [
                "Christopher Turk"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "John Wen"
            ],
            [
                "Molly Clock"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many appointments are there?",
        "cypher_query": "MATCH (a:Appointment)\nRETURN COUNT(\"*\")",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "a",
            "Token_Name_Label": "Appointment",
            "Token_Name_Function": "COUNT",
            "Token_Literal_String": "\"*\""
        },
        "answers": [
            [
                9
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Count how many appointments have been made in total.",
        "cypher_query": "MATCH (a:Appointment)\nRETURN COUNT(\"*\")",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "a",
            "Token_Name_Label": "Appointment",
            "Token_Name_Function": "COUNT",
            "Token_Literal_String": "\"*\""
        },
        "answers": [
            [
                9
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the names of nurses who are on call.",
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:On_Call)\nRETURN DISTINCT T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2"
            ],
            "Token_Name_Label": [
                "Nurse",
                "On_Call"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What are the distinct names of nurses on call?",
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:On_Call)\nRETURN DISTINCT T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2"
            ],
            "Token_Name_Label": [
                "Nurse",
                "On_Call"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "How many patients' prescriptions are made by physician John Dorian?",
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Prescribes)-[]-(T3:Physician)\nWHERE T3.Name = \"John Dorian\"\nRETURN COUNT(T1.SSN)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3",
                "SSN"
            ],
            "Token_Name_Label": [
                "Patient",
                "Prescribes",
                "Physician"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "\"John Dorian\"",
            "Token_Name_Function": "COUNT"
        },
        "answers": [
            [
                1
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of patients' prescriptions physician John Dorian made.",
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Prescribes)-[]-(T3:Physician)\nWHERE T3.Name = \"John Dorian\"\nRETURN COUNT(T1.SSN)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3",
                "SSN"
            ],
            "Token_Name_Label": [
                "Patient",
                "Prescribes",
                "Physician"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "\"John Dorian\"",
            "Token_Name_Function": "COUNT"
        },
        "answers": [
            [
                1
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many different types of rooms are there?",
        "cypher_query": "MATCH (r:Room)\nWITH DISTINCT r.RoomType AS roomtype\nRETURN count(roomtype)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH DISTINCT",
                "AS",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "r",
                "RoomType",
                "roomtype"
            ],
            "Token_Name_Label": "Room",
            "Token_Operator": ".",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                1
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of distinct room types available.",
        "cypher_query": "MATCH (r:Room)\nWITH DISTINCT r.RoomType AS roomtype\nRETURN count(roomtype)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH DISTINCT",
                "AS",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "r",
                "RoomType",
                "roomtype"
            ],
            "Token_Name_Label": "Room",
            "Token_Operator": ".",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                1
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the patient who has the most recent undergoing treatment?",
        "cypher_query": "MATCH (u:Undergoes)\nRETURN u.Patient\nORDER BY u.DateUndergoes\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "ORDER BY",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "u",
                "Patient",
                "DateUndergoes"
            ],
            "Token_Name_Label": "Undergoes",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                100000001
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which patient is undergoing the most recent treatment?",
        "cypher_query": "MATCH (u:Undergoes)\nRETURN u.Patient\nORDER BY u.DateUndergoes\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "ORDER BY",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "u",
                "Patient",
                "DateUndergoes"
            ],
            "Token_Name_Label": "Undergoes",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                100000001
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "List the names of all distinct nurses ordered by alphabetical order?",
        "cypher_query": "MATCH (n:Nurse)\nRETURN DISTINCT n.Name\nORDER BY n.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "n",
            "Token_Name_Label": "Nurse",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the alphabetically ordered list of all the distinct names of nurses?",
        "cypher_query": "MATCH (n:Nurse)\nRETURN DISTINCT n.Name\nORDER BY n.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "n",
            "Token_Name_Label": "Nurse",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the names of nurses who are nursing an undergoing treatment.",
        "cypher_query": "MATCH (T1:Undergoes)-[]-(T2:Nurse)\nRETURN DISTINCT T2.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2"
            ],
            "Token_Name_Label": [
                "Undergoes",
                "Nurse"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which nurses are in charge of patients undergoing treatments?",
        "cypher_query": "MATCH (T1:Undergoes)-[]-(T2:Nurse)\nRETURN DISTINCT T2.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2"
            ],
            "Token_Name_Label": [
                "Undergoes",
                "Nurse"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "List the names of all distinct medications, ordered in an alphabetical order.",
        "cypher_query": "MATCH (m:Medication)\nRETURN DISTINCT m.Name\nORDER BY m.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "m",
            "Token_Name_Label": "Medication",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Awakin"
            ],
            [
                "Crescavitin"
            ],
            [
                "Melioraurin"
            ],
            [
                "Procrastin-X"
            ],
            [
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the alphabetically ordered list of all distinct medications?",
        "cypher_query": "MATCH (m:Medication)\nRETURN DISTINCT m.Name\nORDER BY m.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "m",
            "Token_Name_Label": "Medication",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Awakin"
            ],
            [
                "Crescavitin"
            ],
            [
                "Melioraurin"
            ],
            [
                "Procrastin-X"
            ],
            [
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "List the name and cost of all procedures sorted by the cost from the highest to the lowest.",
        "cypher_query": "MATCH (p:Procedures)\nRETURN p.Name,p.Cost\nORDER BY p.Cost DESC",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name",
                "ORDER BY",
                "DESC"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Complete Walletectomy",
                10000.0
            ],
            [
                "Reversible Pancreomyoplasty",
                5600.0
            ],
            [
                "Obfuscated Dermogastrotomy",
                4899.0
            ],
            [
                "Folded Demiophtalmectomy",
                4500.0
            ],
            [
                "Obtuse Pyloric Recombobulation",
                3750.0
            ],
            [
                "Reverse Rhinopodoplasty",
                1500.0
            ],
            [
                "Follicular Demiectomy",
                25.0
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Sort the list of names and costs of all procedures in the descending order of cost.",
        "cypher_query": "MATCH (p:Procedures)\nRETURN p.Name,p.Cost\nORDER BY p.Cost DESC",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name",
                "ORDER BY",
                "DESC"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Complete Walletectomy",
                10000.0
            ],
            [
                "Reversible Pancreomyoplasty",
                5600.0
            ],
            [
                "Obfuscated Dermogastrotomy",
                4899.0
            ],
            [
                "Folded Demiophtalmectomy",
                4500.0
            ],
            [
                "Obtuse Pyloric Recombobulation",
                3750.0
            ],
            [
                "Reverse Rhinopodoplasty",
                1500.0
            ],
            [
                "Follicular Demiectomy",
                25.0
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the three most expensive procedures.",
        "cypher_query": "MATCH (p:Procedures)\nRETURN p.Name\nORDER BY p.Cost\nLIMIT 3",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name",
                "ORDER BY",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "3"
        },
        "answers": [
            [
                "Follicular Demiectomy"
            ],
            [
                "Reverse Rhinopodoplasty"
            ],
            [
                "Obtuse Pyloric Recombobulation"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What are the three most costly procedures?",
        "cypher_query": "MATCH (p:Procedures)\nRETURN p.Name\nORDER BY p.Cost\nLIMIT 3",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name",
                "ORDER BY",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "3"
        },
        "answers": [
            [
                "Follicular Demiectomy"
            ],
            [
                "Reverse Rhinopodoplasty"
            ],
            [
                "Obtuse Pyloric Recombobulation"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the physicians who are trained in a procedure that costs more than 5000.",
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T3.Cost > 5000\nRETURN T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3",
                "Cost"
            ],
            "Token_Name_Label": [
                "Physician",
                "Trained_In",
                "Procedures"
            ],
            "Token_Operator": [
                ".",
                ">"
            ],
            "Token_Literal_Number_Integer": "5000"
        },
        "answers": [
            [
                "John Wen"
            ],
            [
                "John Wen"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "Christopher Turk"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which physicians are trained in procedures that are more expensive than 5000?",
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T3.Cost > 5000\nRETURN T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3",
                "Cost"
            ],
            "Token_Name_Label": [
                "Physician",
                "Trained_In",
                "Procedures"
            ],
            "Token_Operator": [
                ".",
                ">"
            ],
            "Token_Literal_Number_Integer": "5000"
        },
        "answers": [
            [
                "John Wen"
            ],
            [
                "John Wen"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "Christopher Turk"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the names of procedures which physician John Wen was trained in.",
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T1.Name = \"John Wen\"\nRETURN T3.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3"
            ],
            "Token_Name_Label": [
                "Physician",
                "Trained_In",
                "Procedures"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "\"John Wen\""
        },
        "answers": [
            [
                "Obfuscated Dermogastrotomy"
            ],
            [
                "Reverse Rhinopodoplasty"
            ],
            [
                "Follicular Demiectomy"
            ],
            [
                "Folded Demiophtalmectomy"
            ],
            [
                "Reversible Pancreomyoplasty"
            ],
            [
                "Obtuse Pyloric Recombobulation"
            ],
            [
                "Complete Walletectomy"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of procedures physician John Wen was trained in?",
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T1.Name = \"John Wen\"\nRETURN T3.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3"
            ],
            "Token_Name_Label": [
                "Physician",
                "Trained_In",
                "Procedures"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "\"John Wen\""
        },
        "answers": [
            [
                "Obfuscated Dermogastrotomy"
            ],
            [
                "Reverse Rhinopodoplasty"
            ],
            [
                "Follicular Demiectomy"
            ],
            [
                "Folded Demiophtalmectomy"
            ],
            [
                "Reversible Pancreomyoplasty"
            ],
            [
                "Obtuse Pyloric Recombobulation"
            ],
            [
                "Complete Walletectomy"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians who are affiliated with Surgery or Psychiatry department.",
        "cypher_query": "MATCH (T1:Physician)-[T2:Affiliated_With]-(T3:Department)\nWHERE T3.Name = 'Surgery' OR T3.Name = 'Psychiatry'\nRETURN T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3"
            ],
            "Token_Name_Label": [
                "Physician",
                "Affiliated_With",
                "Department"
            ],
            "Token_Operator": [
                ".",
                "=",
                "OR"
            ],
            "Token_Literal_String": [
                "'Surgery'",
                "'Psychiatry'"
            ]
        },
        "answers": [
            [
                "Christopher Turk"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "John Wen"
            ],
            [
                "Molly Clock"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which physicians are affiliated with either Surgery or Psychiatry department? Give me their names.",
        "cypher_query": "MATCH (T1:Physician)-[T2:Affiliated_With]-(T3:Department)\nWHERE T3.Name = 'Surgery' OR T3.Name = 'Psychiatry'\nRETURN T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3"
            ],
            "Token_Name_Label": [
                "Physician",
                "Affiliated_With",
                "Department"
            ],
            "Token_Operator": [
                ".",
                "=",
                "OR"
            ],
            "Token_Literal_String": [
                "'Surgery'",
                "'Psychiatry'"
            ]
        },
        "answers": [
            [
                "Christopher Turk"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "John Wen"
            ],
            [
                "Molly Clock"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many appointments are there?",
        "cypher_query": "MATCH (a:Appointment)\nRETURN COUNT(\"*\")",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "a",
            "Token_Name_Label": "Appointment",
            "Token_Name_Function": "COUNT",
            "Token_Literal_String": "\"*\""
        },
        "answers": [
            [
                9
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Count how many appointments have been made in total.",
        "cypher_query": "MATCH (a:Appointment)\nRETURN COUNT(\"*\")",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "a",
            "Token_Name_Label": "Appointment",
            "Token_Name_Function": "COUNT",
            "Token_Literal_String": "\"*\""
        },
        "answers": [
            [
                9
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the names of nurses who are on call.",
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:On_Call)\nRETURN DISTINCT T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2"
            ],
            "Token_Name_Label": [
                "Nurse",
                "On_Call"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What are the distinct names of nurses on call?",
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:On_Call)\nRETURN DISTINCT T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2"
            ],
            "Token_Name_Label": [
                "Nurse",
                "On_Call"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "How many patients' prescriptions are made by physician John Dorian?",
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Prescribes)-[]-(T3:Physician)\nWHERE T3.Name = \"John Dorian\"\nRETURN COUNT(T1.SSN)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3",
                "SSN"
            ],
            "Token_Name_Label": [
                "Patient",
                "Prescribes",
                "Physician"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "\"John Dorian\"",
            "Token_Name_Function": "COUNT"
        },
        "answers": [
            [
                1
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of patients' prescriptions physician John Dorian made.",
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Prescribes)-[]-(T3:Physician)\nWHERE T3.Name = \"John Dorian\"\nRETURN COUNT(T1.SSN)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3",
                "SSN"
            ],
            "Token_Name_Label": [
                "Patient",
                "Prescribes",
                "Physician"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "\"John Dorian\"",
            "Token_Name_Function": "COUNT"
        },
        "answers": [
            [
                1
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many different types of rooms are there?",
        "cypher_query": "MATCH (r:Room)\nWITH DISTINCT r.RoomType AS roomtype\nRETURN count(roomtype)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH DISTINCT",
                "AS",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "r",
                "RoomType",
                "roomtype"
            ],
            "Token_Name_Label": "Room",
            "Token_Operator": ".",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                1
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of distinct room types available.",
        "cypher_query": "MATCH (r:Room)\nWITH DISTINCT r.RoomType AS roomtype\nRETURN count(roomtype)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH DISTINCT",
                "AS",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "r",
                "RoomType",
                "roomtype"
            ],
            "Token_Name_Label": "Room",
            "Token_Operator": ".",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                1
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the patient who has the most recent undergoing treatment?",
        "cypher_query": "MATCH (u:Undergoes)\nRETURN u.Patient\nORDER BY u.DateUndergoes\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "ORDER BY",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "u",
                "Patient",
                "DateUndergoes"
            ],
            "Token_Name_Label": "Undergoes",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                100000001
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which patient is undergoing the most recent treatment?",
        "cypher_query": "MATCH (u:Undergoes)\nRETURN u.Patient\nORDER BY u.DateUndergoes\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "ORDER BY",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "u",
                "Patient",
                "DateUndergoes"
            ],
            "Token_Name_Label": "Undergoes",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                100000001
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "List the names of all distinct nurses ordered by alphabetical order?",
        "cypher_query": "MATCH (n:Nurse)\nRETURN DISTINCT n.Name\nORDER BY n.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "n",
            "Token_Name_Label": "Nurse",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the alphabetically ordered list of all the distinct names of nurses?",
        "cypher_query": "MATCH (n:Nurse)\nRETURN DISTINCT n.Name\nORDER BY n.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "n",
            "Token_Name_Label": "Nurse",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the names of nurses who are nursing an undergoing treatment.",
        "cypher_query": "MATCH (T1:Undergoes)-[]-(T2:Nurse)\nRETURN DISTINCT T2.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2"
            ],
            "Token_Name_Label": [
                "Undergoes",
                "Nurse"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which nurses are in charge of patients undergoing treatments?",
        "cypher_query": "MATCH (T1:Undergoes)-[]-(T2:Nurse)\nRETURN DISTINCT T2.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2"
            ],
            "Token_Name_Label": [
                "Undergoes",
                "Nurse"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "List the names of all distinct medications, ordered in an alphabetical order.",
        "cypher_query": "MATCH (m:Medication)\nRETURN DISTINCT m.Name\nORDER BY m.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "m",
            "Token_Name_Label": "Medication",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Awakin"
            ],
            [
                "Crescavitin"
            ],
            [
                "Melioraurin"
            ],
            [
                "Procrastin-X"
            ],
            [
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the alphabetically ordered list of all distinct medications?",
        "cypher_query": "MATCH (m:Medication)\nRETURN DISTINCT m.Name\nORDER BY m.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "m",
            "Token_Name_Label": "Medication",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Awakin"
            ],
            [
                "Crescavitin"
            ],
            [
                "Melioraurin"
            ],
            [
                "Procrastin-X"
            ],
            [
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "List the name and cost of all procedures sorted by the cost from the highest to the lowest.",
        "cypher_query": "MATCH (p:Procedures)\nRETURN p.Name,p.Cost\nORDER BY p.Cost DESC",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name",
                "ORDER BY",
                "DESC"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Complete Walletectomy",
                10000.0
            ],
            [
                "Reversible Pancreomyoplasty",
                5600.0
            ],
            [
                "Obfuscated Dermogastrotomy",
                4899.0
            ],
            [
                "Folded Demiophtalmectomy",
                4500.0
            ],
            [
                "Obtuse Pyloric Recombobulation",
                3750.0
            ],
            [
                "Reverse Rhinopodoplasty",
                1500.0
            ],
            [
                "Follicular Demiectomy",
                25.0
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Sort the list of names and costs of all procedures in the descending order of cost.",
        "cypher_query": "MATCH (p:Procedures)\nRETURN p.Name,p.Cost\nORDER BY p.Cost DESC",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name",
                "ORDER BY",
                "DESC"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Complete Walletectomy",
                10000.0
            ],
            [
                "Reversible Pancreomyoplasty",
                5600.0
            ],
            [
                "Obfuscated Dermogastrotomy",
                4899.0
            ],
            [
                "Folded Demiophtalmectomy",
                4500.0
            ],
            [
                "Obtuse Pyloric Recombobulation",
                3750.0
            ],
            [
                "Reverse Rhinopodoplasty",
                1500.0
            ],
            [
                "Follicular Demiectomy",
                25.0
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the three most expensive procedures.",
        "cypher_query": "MATCH (p:Procedures)\nRETURN p.Name\nORDER BY p.Cost\nLIMIT 3",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name",
                "ORDER BY",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "3"
        },
        "answers": [
            [
                "Follicular Demiectomy"
            ],
            [
                "Reverse Rhinopodoplasty"
            ],
            [
                "Obtuse Pyloric Recombobulation"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What are the three most costly procedures?",
        "cypher_query": "MATCH (p:Procedures)\nRETURN p.Name\nORDER BY p.Cost\nLIMIT 3",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name",
                "ORDER BY",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "3"
        },
        "answers": [
            [
                "Follicular Demiectomy"
            ],
            [
                "Reverse Rhinopodoplasty"
            ],
            [
                "Obtuse Pyloric Recombobulation"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the physicians who are trained in a procedure that costs more than 5000.",
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T3.Cost > 5000\nRETURN T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3",
                "Cost"
            ],
            "Token_Name_Label": [
                "Physician",
                "Trained_In",
                "Procedures"
            ],
            "Token_Operator": [
                ".",
                ">"
            ],
            "Token_Literal_Number_Integer": "5000"
        },
        "answers": [
            [
                "John Wen"
            ],
            [
                "John Wen"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "Christopher Turk"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which physicians are trained in procedures that are more expensive than 5000?",
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T3.Cost > 5000\nRETURN T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3",
                "Cost"
            ],
            "Token_Name_Label": [
                "Physician",
                "Trained_In",
                "Procedures"
            ],
            "Token_Operator": [
                ".",
                ">"
            ],
            "Token_Literal_Number_Integer": "5000"
        },
        "answers": [
            [
                "John Wen"
            ],
            [
                "John Wen"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "Christopher Turk"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the names of procedures which physician John Wen was trained in.",
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T1.Name = \"John Wen\"\nRETURN T3.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3"
            ],
            "Token_Name_Label": [
                "Physician",
                "Trained_In",
                "Procedures"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "\"John Wen\""
        },
        "answers": [
            [
                "Obfuscated Dermogastrotomy"
            ],
            [
                "Reverse Rhinopodoplasty"
            ],
            [
                "Follicular Demiectomy"
            ],
            [
                "Folded Demiophtalmectomy"
            ],
            [
                "Reversible Pancreomyoplasty"
            ],
            [
                "Obtuse Pyloric Recombobulation"
            ],
            [
                "Complete Walletectomy"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of procedures physician John Wen was trained in?",
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T1.Name = \"John Wen\"\nRETURN T3.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3"
            ],
            "Token_Name_Label": [
                "Physician",
                "Trained_In",
                "Procedures"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "\"John Wen\""
        },
        "answers": [
            [
                "Obfuscated Dermogastrotomy"
            ],
            [
                "Reverse Rhinopodoplasty"
            ],
            [
                "Follicular Demiectomy"
            ],
            [
                "Folded Demiophtalmectomy"
            ],
            [
                "Reversible Pancreomyoplasty"
            ],
            [
                "Obtuse Pyloric Recombobulation"
            ],
            [
                "Complete Walletectomy"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians who are affiliated with Surgery or Psychiatry department.",
        "cypher_query": "MATCH (T1:Physician)-[T2:Affiliated_With]-(T3:Department)\nWHERE T3.Name = 'Surgery' OR T3.Name = 'Psychiatry'\nRETURN T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3"
            ],
            "Token_Name_Label": [
                "Physician",
                "Affiliated_With",
                "Department"
            ],
            "Token_Operator": [
                ".",
                "=",
                "OR"
            ],
            "Token_Literal_String": [
                "'Surgery'",
                "'Psychiatry'"
            ]
        },
        "answers": [
            [
                "Christopher Turk"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "John Wen"
            ],
            [
                "Molly Clock"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which physicians are affiliated with either Surgery or Psychiatry department? Give me their names.",
        "cypher_query": "MATCH (T1:Physician)-[T2:Affiliated_With]-(T3:Department)\nWHERE T3.Name = 'Surgery' OR T3.Name = 'Psychiatry'\nRETURN T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3"
            ],
            "Token_Name_Label": [
                "Physician",
                "Affiliated_With",
                "Department"
            ],
            "Token_Operator": [
                ".",
                "=",
                "OR"
            ],
            "Token_Literal_String": [
                "'Surgery'",
                "'Psychiatry'"
            ]
        },
        "answers": [
            [
                "Christopher Turk"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "John Wen"
            ],
            [
                "Molly Clock"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of patients who are not using the medication of Procrastin-X.",
        "cypher_query": "MATCH (p:Patient) MATCH (T1:Prescribes)-[]-(T2:Medication)\nWHERE T2.Name = 'Procrastin-X' AND NOT p.SSN in T1.Patient\nRETURN count(DISTINCT p.SSN)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ")-[",
                "]-("
            ],
            "Token_Name_Variable": [
                "p",
                "T1",
                "T2",
                "SSN",
                "Patient"
            ],
            "Token_Name_Label": [
                "Patient",
                "Prescribes",
                "Medication"
            ],
            "Token_Operator": [
                ".",
                "=",
                "AND",
                "NOT",
                "in",
                "DISTINCT"
            ],
            "Token_Literal_String": "'Procrastin-X'",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                3
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many patients are not using Procrastin-X as medication?",
        "cypher_query": "MATCH (p:Patient) MATCH (T1:Prescribes)-[]-(T2:Medication)\nWHERE T2.Name = 'Procrastin-X' AND NOT p.SSN in T1.Patient\nRETURN count(DISTINCT p.SSN)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ")-[",
                "]-("
            ],
            "Token_Name_Variable": [
                "p",
                "T1",
                "T2",
                "SSN",
                "Patient"
            ],
            "Token_Name_Label": [
                "Patient",
                "Prescribes",
                "Medication"
            ],
            "Token_Operator": [
                ".",
                "=",
                "AND",
                "NOT",
                "in",
                "DISTINCT"
            ],
            "Token_Literal_String": "'Procrastin-X'",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                3
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many appointments are there?",
        "cypher_query": "MATCH (a:Appointment)\nRETURN COUNT(\"*\")",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "a",
            "Token_Name_Label": "Appointment",
            "Token_Name_Function": "COUNT",
            "Token_Literal_String": "\"*\""
        },
        "answers": [
            [
                9
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Count how many appointments have been made in total.",
        "cypher_query": "MATCH (a:Appointment)\nRETURN COUNT(\"*\")",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "a",
            "Token_Name_Label": "Appointment",
            "Token_Name_Function": "COUNT",
            "Token_Literal_String": "\"*\""
        },
        "answers": [
            [
                9
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the names of nurses who are on call.",
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:On_Call)\nRETURN DISTINCT T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2"
            ],
            "Token_Name_Label": [
                "Nurse",
                "On_Call"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What are the distinct names of nurses on call?",
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:On_Call)\nRETURN DISTINCT T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2"
            ],
            "Token_Name_Label": [
                "Nurse",
                "On_Call"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    }
][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][
    {
        "db_id": "hospital_1",
        "question": "Compute the mean price of procedures physician John Wen was trained in.",
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T1.Name = \"John Wen\"\nRETURN AVG(T3.Cost)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3",
                "Cost"
            ],
            "Token_Name_Label": [
                "Physician",
                "Trained_In",
                "Procedures"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "\"John Wen\"",
            "Token_Name_Function": "AVG"
        },
        "answers": [
            [
                4324.857142857143
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "What is the average cost of procedures that physician John Wen was trained in?",
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T1.Name = \"John Wen\"\nRETURN AVG(T3.Cost)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3",
                "Cost"
            ],
            "Token_Name_Label": [
                "Physician",
                "Trained_In",
                "Procedures"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "\"John Wen\"",
            "Token_Name_Function": "AVG"
        },
        "answers": [
            [
                4324.857142857143
            ]
        ]
    }
][][][][][][][][][
    {
        "db_id": "hospital_1",
        "question": "Tell me the highest, lowest, and average cost of procedures.",
        "cypher_query": "MATCH (p:Procedures)\nRETURN MAX(p.Cost),MIN(p.Cost),AVG(p.Cost)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Name_Function": [
                "MAX",
                "MIN",
                "AVG"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                10000.0,
                25.0,
                4324.857142857143
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "What are the highest cost, lowest cost and average cost of procedures?",
        "cypher_query": "MATCH (p:Procedures)\nRETURN MAX(p.Cost),MIN(p.Cost),AVG(p.Cost)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Name_Function": [
                "MAX",
                "MIN",
                "AVG"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                10000.0,
                25.0,
                4324.857142857143
            ]
        ]
    }
][][][][][][
    {
        "db_id": "hospital_1",
        "question": "Compute the mean price of procedures physician John Wen was trained in.",
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T1.Name = \"John Wen\"\nRETURN AVG(T3.Cost)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3",
                "Cost"
            ],
            "Token_Name_Label": [
                "Physician",
                "Trained_In",
                "Procedures"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "\"John Wen\"",
            "Token_Name_Function": "AVG"
        },
        "answers": [
            [
                4324.857142857143
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "What is the average cost of procedures that physician John Wen was trained in?",
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T1.Name = \"John Wen\"\nRETURN AVG(T3.Cost)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3",
                "Cost"
            ],
            "Token_Name_Label": [
                "Physician",
                "Trained_In",
                "Procedures"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "\"John Wen\"",
            "Token_Name_Function": "AVG"
        },
        "answers": [
            [
                4324.857142857143
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "Tell me the highest, lowest, and average cost of procedures.",
        "cypher_query": "MATCH (p:Procedures)\nRETURN MAX(p.Cost),MIN(p.Cost),AVG(p.Cost)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Name_Function": [
                "MAX",
                "MIN",
                "AVG"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                10000.0,
                25.0,
                4324.857142857143
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "What are the highest cost, lowest cost and average cost of procedures?",
        "cypher_query": "MATCH (p:Procedures)\nRETURN MAX(p.Cost),MIN(p.Cost),AVG(p.Cost)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Name_Function": [
                "MAX",
                "MIN",
                "AVG"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                10000.0,
                25.0,
                4324.857142857143
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "Find the id of the appointment with the most recent start date?",
        "cypher_query": "MATCH (a:Appointment)\nRETURN a.AppointmentID\nORDER BY a.Start DESC\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "ORDER BY",
                "Start",
                "DESC",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "a",
                "AppointmentID"
            ],
            "Token_Name_Label": "Appointment",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                86213939
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the id of the appointment that started most recently?",
        "cypher_query": "MATCH (a:Appointment)\nRETURN a.AppointmentID\nORDER BY a.Start DESC\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "ORDER BY",
                "Start",
                "DESC",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "a",
                "AppointmentID"
            ],
            "Token_Name_Label": "Appointment",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                86213939
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many patients' prescriptions are made by physician John Dorian?",
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Prescribes)-[]-(T3:Physician)\nWHERE T3.Name = \"John Dorian\"\nRETURN COUNT(T1.SSN)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3",
                "SSN"
            ],
            "Token_Name_Label": [
                "Patient",
                "Prescribes",
                "Physician"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "\"John Dorian\"",
            "Token_Name_Function": "COUNT"
        },
        "answers": [
            [
                1
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of patients' prescriptions physician John Dorian made.",
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Prescribes)-[]-(T3:Physician)\nWHERE T3.Name = \"John Dorian\"\nRETURN COUNT(T1.SSN)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3",
                "SSN"
            ],
            "Token_Name_Label": [
                "Patient",
                "Prescribes",
                "Physician"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "\"John Dorian\"",
            "Token_Name_Function": "COUNT"
        },
        "answers": [
            [
                1
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many different types of rooms are there?",
        "cypher_query": "MATCH (r:Room)\nWITH DISTINCT r.RoomType AS roomtype\nRETURN count(roomtype)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH DISTINCT",
                "AS",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "r",
                "RoomType",
                "roomtype"
            ],
            "Token_Name_Label": "Room",
            "Token_Operator": ".",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                1
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of distinct room types available.",
        "cypher_query": "MATCH (r:Room)\nWITH DISTINCT r.RoomType AS roomtype\nRETURN count(roomtype)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH DISTINCT",
                "AS",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "r",
                "RoomType",
                "roomtype"
            ],
            "Token_Name_Label": "Room",
            "Token_Operator": ".",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                1
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the patient who has the most recent undergoing treatment?",
        "cypher_query": "MATCH (u:Undergoes)\nRETURN u.Patient\nORDER BY u.DateUndergoes\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "ORDER BY",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "u",
                "Patient",
                "DateUndergoes"
            ],
            "Token_Name_Label": "Undergoes",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                100000001
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which patient is undergoing the most recent treatment?",
        "cypher_query": "MATCH (u:Undergoes)\nRETURN u.Patient\nORDER BY u.DateUndergoes\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "ORDER BY",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "u",
                "Patient",
                "DateUndergoes"
            ],
            "Token_Name_Label": "Undergoes",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                100000001
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "List the names of all distinct nurses ordered by alphabetical order?",
        "cypher_query": "MATCH (n:Nurse)\nRETURN DISTINCT n.Name\nORDER BY n.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "n",
            "Token_Name_Label": "Nurse",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the alphabetically ordered list of all the distinct names of nurses?",
        "cypher_query": "MATCH (n:Nurse)\nRETURN DISTINCT n.Name\nORDER BY n.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "n",
            "Token_Name_Label": "Nurse",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the names of nurses who are nursing an undergoing treatment.",
        "cypher_query": "MATCH (T1:Undergoes)-[]-(T2:Nurse)\nRETURN DISTINCT T2.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2"
            ],
            "Token_Name_Label": [
                "Undergoes",
                "Nurse"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which nurses are in charge of patients undergoing treatments?",
        "cypher_query": "MATCH (T1:Undergoes)-[]-(T2:Nurse)\nRETURN DISTINCT T2.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2"
            ],
            "Token_Name_Label": [
                "Undergoes",
                "Nurse"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "List the names of all distinct medications, ordered in an alphabetical order.",
        "cypher_query": "MATCH (m:Medication)\nRETURN DISTINCT m.Name\nORDER BY m.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "m",
            "Token_Name_Label": "Medication",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Awakin"
            ],
            [
                "Crescavitin"
            ],
            [
                "Melioraurin"
            ],
            [
                "Procrastin-X"
            ],
            [
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the alphabetically ordered list of all distinct medications?",
        "cypher_query": "MATCH (m:Medication)\nRETURN DISTINCT m.Name\nORDER BY m.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "m",
            "Token_Name_Label": "Medication",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Awakin"
            ],
            [
                "Crescavitin"
            ],
            [
                "Melioraurin"
            ],
            [
                "Procrastin-X"
            ],
            [
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What are the highest cost, lowest cost and average cost of procedures?",
        "cypher_query": "MATCH (p:Procedures)\nRETURN MAX(p.Cost),MIN(p.Cost),AVG(p.Cost)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Name_Function": [
                "MAX",
                "MIN",
                "AVG"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                10000.0,
                25.0,
                4324.857142857143
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Tell me the highest, lowest, and average cost of procedures.",
        "cypher_query": "MATCH (p:Procedures)\nRETURN MAX(p.Cost),MIN(p.Cost),AVG(p.Cost)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Name_Function": [
                "MAX",
                "MIN",
                "AVG"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                10000.0,
                25.0,
                4324.857142857143
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "List the name and cost of all procedures sorted by the cost from the highest to the lowest.",
        "cypher_query": "MATCH (p:Procedures)\nRETURN p.Name,p.Cost\nORDER BY p.Cost DESC",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name",
                "ORDER BY",
                "DESC"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Complete Walletectomy",
                10000.0
            ],
            [
                "Reversible Pancreomyoplasty",
                5600.0
            ],
            [
                "Obfuscated Dermogastrotomy",
                4899.0
            ],
            [
                "Folded Demiophtalmectomy",
                4500.0
            ],
            [
                "Obtuse Pyloric Recombobulation",
                3750.0
            ],
            [
                "Reverse Rhinopodoplasty",
                1500.0
            ],
            [
                "Follicular Demiectomy",
                25.0
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Sort the list of names and costs of all procedures in the descending order of cost.",
        "cypher_query": "MATCH (p:Procedures)\nRETURN p.Name,p.Cost\nORDER BY p.Cost DESC",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name",
                "ORDER BY",
                "DESC"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Complete Walletectomy",
                10000.0
            ],
            [
                "Reversible Pancreomyoplasty",
                5600.0
            ],
            [
                "Obfuscated Dermogastrotomy",
                4899.0
            ],
            [
                "Folded Demiophtalmectomy",
                4500.0
            ],
            [
                "Obtuse Pyloric Recombobulation",
                3750.0
            ],
            [
                "Reverse Rhinopodoplasty",
                1500.0
            ],
            [
                "Follicular Demiectomy",
                25.0
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the three most expensive procedures.",
        "cypher_query": "MATCH (p:Procedures)\nRETURN p.Name\nORDER BY p.Cost\nLIMIT 3",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name",
                "ORDER BY",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "3"
        },
        "answers": [
            [
                "Follicular Demiectomy"
            ],
            [
                "Reverse Rhinopodoplasty"
            ],
            [
                "Obtuse Pyloric Recombobulation"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What are the three most costly procedures?",
        "cypher_query": "MATCH (p:Procedures)\nRETURN p.Name\nORDER BY p.Cost\nLIMIT 3",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name",
                "ORDER BY",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "3"
        },
        "answers": [
            [
                "Follicular Demiectomy"
            ],
            [
                "Reverse Rhinopodoplasty"
            ],
            [
                "Obtuse Pyloric Recombobulation"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the physicians who are trained in a procedure that costs more than 5000.",
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T3.Cost > 5000\nRETURN T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3",
                "Cost"
            ],
            "Token_Name_Label": [
                "Physician",
                "Trained_In",
                "Procedures"
            ],
            "Token_Operator": [
                ".",
                ">"
            ],
            "Token_Literal_Number_Integer": "5000"
        },
        "answers": [
            [
                "John Wen"
            ],
            [
                "John Wen"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "Christopher Turk"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which physicians are trained in procedures that are more expensive than 5000?",
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T3.Cost > 5000\nRETURN T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3",
                "Cost"
            ],
            "Token_Name_Label": [
                "Physician",
                "Trained_In",
                "Procedures"
            ],
            "Token_Operator": [
                ".",
                ">"
            ],
            "Token_Literal_Number_Integer": "5000"
        },
        "answers": [
            [
                "John Wen"
            ],
            [
                "John Wen"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "Christopher Turk"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the average cost of procedures that physician John Wen was trained in?",
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T1.Name = \"John Wen\"\nRETURN AVG(T3.Cost)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3",
                "Cost"
            ],
            "Token_Name_Label": [
                "Physician",
                "Trained_In",
                "Procedures"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "\"John Wen\"",
            "Token_Name_Function": "AVG"
        },
        "answers": [
            [
                4324.857142857143
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Compute the mean price of procedures physician John Wen was trained in.",
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T1.Name = \"John Wen\"\nRETURN AVG(T3.Cost)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3",
                "Cost"
            ],
            "Token_Name_Label": [
                "Physician",
                "Trained_In",
                "Procedures"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "\"John Wen\"",
            "Token_Name_Function": "AVG"
        },
        "answers": [
            [
                4324.857142857143
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the names of procedures which physician John Wen was trained in.",
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T1.Name = \"John Wen\"\nRETURN T3.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3"
            ],
            "Token_Name_Label": [
                "Physician",
                "Trained_In",
                "Procedures"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "\"John Wen\""
        },
        "answers": [
            [
                "Obfuscated Dermogastrotomy"
            ],
            [
                "Reverse Rhinopodoplasty"
            ],
            [
                "Follicular Demiectomy"
            ],
            [
                "Folded Demiophtalmectomy"
            ],
            [
                "Reversible Pancreomyoplasty"
            ],
            [
                "Obtuse Pyloric Recombobulation"
            ],
            [
                "Complete Walletectomy"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of procedures physician John Wen was trained in?",
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T1.Name = \"John Wen\"\nRETURN T3.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3"
            ],
            "Token_Name_Label": [
                "Physician",
                "Trained_In",
                "Procedures"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "\"John Wen\""
        },
        "answers": [
            [
                "Obfuscated Dermogastrotomy"
            ],
            [
                "Reverse Rhinopodoplasty"
            ],
            [
                "Follicular Demiectomy"
            ],
            [
                "Folded Demiophtalmectomy"
            ],
            [
                "Reversible Pancreomyoplasty"
            ],
            [
                "Obtuse Pyloric Recombobulation"
            ],
            [
                "Complete Walletectomy"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians who are affiliated with Surgery or Psychiatry department.",
        "cypher_query": "MATCH (T1:Physician)-[T2:Affiliated_With]-(T3:Department)\nWHERE T3.Name = 'Surgery' OR T3.Name = 'Psychiatry'\nRETURN T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3"
            ],
            "Token_Name_Label": [
                "Physician",
                "Affiliated_With",
                "Department"
            ],
            "Token_Operator": [
                ".",
                "=",
                "OR"
            ],
            "Token_Literal_String": [
                "'Surgery'",
                "'Psychiatry'"
            ]
        },
        "answers": [
            [
                "Christopher Turk"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "John Wen"
            ],
            [
                "Molly Clock"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which physicians are affiliated with either Surgery or Psychiatry department? Give me their names.",
        "cypher_query": "MATCH (T1:Physician)-[T2:Affiliated_With]-(T3:Department)\nWHERE T3.Name = 'Surgery' OR T3.Name = 'Psychiatry'\nRETURN T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3"
            ],
            "Token_Name_Label": [
                "Physician",
                "Affiliated_With",
                "Department"
            ],
            "Token_Operator": [
                ".",
                "=",
                "OR"
            ],
            "Token_Literal_String": [
                "'Surgery'",
                "'Psychiatry'"
            ]
        },
        "answers": [
            [
                "Christopher Turk"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "John Wen"
            ],
            [
                "Molly Clock"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of patients who are not using the medication of Procrastin-X.",
        "cypher_query": "MATCH (p:Patient) MATCH (T1:Prescribes)-[]-(T2:Medication)\nWHERE T2.Name = 'Procrastin-X' AND NOT p.SSN in T1.Patient\nRETURN count(DISTINCT p.SSN)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ")-[",
                "]-("
            ],
            "Token_Name_Variable": [
                "p",
                "T1",
                "T2",
                "SSN",
                "Patient"
            ],
            "Token_Name_Label": [
                "Patient",
                "Prescribes",
                "Medication"
            ],
            "Token_Operator": [
                ".",
                "=",
                "AND",
                "NOT",
                "in",
                "DISTINCT"
            ],
            "Token_Literal_String": "'Procrastin-X'",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                3
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many patients are not using Procrastin-X as medication?",
        "cypher_query": "MATCH (p:Patient) MATCH (T1:Prescribes)-[]-(T2:Medication)\nWHERE T2.Name = 'Procrastin-X' AND NOT p.SSN in T1.Patient\nRETURN count(DISTINCT p.SSN)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ")-[",
                "]-("
            ],
            "Token_Name_Variable": [
                "p",
                "T1",
                "T2",
                "SSN",
                "Patient"
            ],
            "Token_Name_Label": [
                "Patient",
                "Prescribes",
                "Medication"
            ],
            "Token_Operator": [
                ".",
                "=",
                "AND",
                "NOT",
                "in",
                "DISTINCT"
            ],
            "Token_Literal_String": "'Procrastin-X'",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                3
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many appointments are there?",
        "cypher_query": "MATCH (a:Appointment)\nRETURN COUNT(\"*\")",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "a",
            "Token_Name_Label": "Appointment",
            "Token_Name_Function": "COUNT",
            "Token_Literal_String": "\"*\""
        },
        "answers": [
            [
                9
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Count how many appointments have been made in total.",
        "cypher_query": "MATCH (a:Appointment)\nRETURN COUNT(\"*\")",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "a",
            "Token_Name_Label": "Appointment",
            "Token_Name_Function": "COUNT",
            "Token_Literal_String": "\"*\""
        },
        "answers": [
            [
                9
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the names of nurses who are on call.",
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:On_Call)\nRETURN DISTINCT T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2"
            ],
            "Token_Name_Label": [
                "Nurse",
                "On_Call"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What are the distinct names of nurses on call?",
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:On_Call)\nRETURN DISTINCT T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2"
            ],
            "Token_Name_Label": [
                "Nurse",
                "On_Call"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    }
][][][][][][][][][][][][][
    {
        "db_id": "hospital_1",
        "question": "Find the id of the appointment with the most recent start date?",
        "cypher_query": "MATCH (a:Appointment)\nRETURN a.AppointmentID\nORDER BY a.Start DESC\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "ORDER BY",
                "Start",
                "DESC",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "a",
                "AppointmentID"
            ],
            "Token_Name_Label": "Appointment",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                86213939
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the id of the appointment that started most recently?",
        "cypher_query": "MATCH (a:Appointment)\nRETURN a.AppointmentID\nORDER BY a.Start DESC\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "ORDER BY",
                "Start",
                "DESC",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "a",
                "AppointmentID"
            ],
            "Token_Name_Label": "Appointment",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                86213939
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many different types of rooms are there?",
        "cypher_query": "MATCH (r:Room)\nWITH DISTINCT r.RoomType AS roomtype\nRETURN count(roomtype)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH DISTINCT",
                "AS",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "r",
                "RoomType",
                "roomtype"
            ],
            "Token_Name_Label": "Room",
            "Token_Operator": ".",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                1
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of distinct room types available.",
        "cypher_query": "MATCH (r:Room)\nWITH DISTINCT r.RoomType AS roomtype\nRETURN count(roomtype)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH DISTINCT",
                "AS",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "r",
                "RoomType",
                "roomtype"
            ],
            "Token_Name_Label": "Room",
            "Token_Operator": ".",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                1
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the patient who has the most recent undergoing treatment?",
        "cypher_query": "MATCH (u:Undergoes)\nRETURN u.Patient\nORDER BY u.DateUndergoes\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "ORDER BY",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "u",
                "Patient",
                "DateUndergoes"
            ],
            "Token_Name_Label": "Undergoes",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                100000001
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which patient is undergoing the most recent treatment?",
        "cypher_query": "MATCH (u:Undergoes)\nRETURN u.Patient\nORDER BY u.DateUndergoes\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "ORDER BY",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "u",
                "Patient",
                "DateUndergoes"
            ],
            "Token_Name_Label": "Undergoes",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                100000001
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "List the names of all distinct nurses ordered by alphabetical order?",
        "cypher_query": "MATCH (n:Nurse)\nRETURN DISTINCT n.Name\nORDER BY n.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "n",
            "Token_Name_Label": "Nurse",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the alphabetically ordered list of all the distinct names of nurses?",
        "cypher_query": "MATCH (n:Nurse)\nRETURN DISTINCT n.Name\nORDER BY n.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "n",
            "Token_Name_Label": "Nurse",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "List the names of all distinct medications, ordered in an alphabetical order.",
        "cypher_query": "MATCH (m:Medication)\nRETURN DISTINCT m.Name\nORDER BY m.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "m",
            "Token_Name_Label": "Medication",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Awakin"
            ],
            [
                "Crescavitin"
            ],
            [
                "Melioraurin"
            ],
            [
                "Procrastin-X"
            ],
            [
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the alphabetically ordered list of all distinct medications?",
        "cypher_query": "MATCH (m:Medication)\nRETURN DISTINCT m.Name\nORDER BY m.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "m",
            "Token_Name_Label": "Medication",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Awakin"
            ],
            [
                "Crescavitin"
            ],
            [
                "Melioraurin"
            ],
            [
                "Procrastin-X"
            ],
            [
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What are the highest cost, lowest cost and average cost of procedures?",
        "cypher_query": "MATCH (p:Procedures)\nRETURN MAX(p.Cost),MIN(p.Cost),AVG(p.Cost)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Name_Function": [
                "MAX",
                "MIN",
                "AVG"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                10000.0,
                25.0,
                4324.857142857143
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Tell me the highest, lowest, and average cost of procedures.",
        "cypher_query": "MATCH (p:Procedures)\nRETURN MAX(p.Cost),MIN(p.Cost),AVG(p.Cost)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Name_Function": [
                "MAX",
                "MIN",
                "AVG"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                10000.0,
                25.0,
                4324.857142857143
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "List the name and cost of all procedures sorted by the cost from the highest to the lowest.",
        "cypher_query": "MATCH (p:Procedures)\nRETURN p.Name,p.Cost\nORDER BY p.Cost DESC",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name",
                "ORDER BY",
                "DESC"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Complete Walletectomy",
                10000.0
            ],
            [
                "Reversible Pancreomyoplasty",
                5600.0
            ],
            [
                "Obfuscated Dermogastrotomy",
                4899.0
            ],
            [
                "Folded Demiophtalmectomy",
                4500.0
            ],
            [
                "Obtuse Pyloric Recombobulation",
                3750.0
            ],
            [
                "Reverse Rhinopodoplasty",
                1500.0
            ],
            [
                "Follicular Demiectomy",
                25.0
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Sort the list of names and costs of all procedures in the descending order of cost.",
        "cypher_query": "MATCH (p:Procedures)\nRETURN p.Name,p.Cost\nORDER BY p.Cost DESC",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name",
                "ORDER BY",
                "DESC"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Complete Walletectomy",
                10000.0
            ],
            [
                "Reversible Pancreomyoplasty",
                5600.0
            ],
            [
                "Obfuscated Dermogastrotomy",
                4899.0
            ],
            [
                "Folded Demiophtalmectomy",
                4500.0
            ],
            [
                "Obtuse Pyloric Recombobulation",
                3750.0
            ],
            [
                "Reverse Rhinopodoplasty",
                1500.0
            ],
            [
                "Follicular Demiectomy",
                25.0
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the three most expensive procedures.",
        "cypher_query": "MATCH (p:Procedures)\nRETURN p.Name\nORDER BY p.Cost\nLIMIT 3",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name",
                "ORDER BY",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "3"
        },
        "answers": [
            [
                "Follicular Demiectomy"
            ],
            [
                "Reverse Rhinopodoplasty"
            ],
            [
                "Obtuse Pyloric Recombobulation"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What are the three most costly procedures?",
        "cypher_query": "MATCH (p:Procedures)\nRETURN p.Name\nORDER BY p.Cost\nLIMIT 3",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name",
                "ORDER BY",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "3"
        },
        "answers": [
            [
                "Follicular Demiectomy"
            ],
            [
                "Reverse Rhinopodoplasty"
            ],
            [
                "Obtuse Pyloric Recombobulation"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many appointments are there?",
        "cypher_query": "MATCH (a:Appointment)\nRETURN COUNT(\"*\")",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "a",
            "Token_Name_Label": "Appointment",
            "Token_Name_Function": "COUNT",
            "Token_Literal_String": "\"*\""
        },
        "answers": [
            [
                9
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Count how many appointments have been made in total.",
        "cypher_query": "MATCH (a:Appointment)\nRETURN COUNT(\"*\")",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "a",
            "Token_Name_Label": "Appointment",
            "Token_Name_Function": "COUNT",
            "Token_Literal_String": "\"*\""
        },
        "answers": [
            [
                9
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "Find the id of the appointment with the most recent start date?",
        "cypher_query": "MATCH (a:Appointment)\nRETURN a.AppointmentID\nORDER BY a.Start DESC\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "ORDER BY",
                "Start",
                "DESC",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "a",
                "AppointmentID"
            ],
            "Token_Name_Label": "Appointment",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                86213939
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the id of the appointment that started most recently?",
        "cypher_query": "MATCH (a:Appointment)\nRETURN a.AppointmentID\nORDER BY a.Start DESC\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "ORDER BY",
                "Start",
                "DESC",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "a",
                "AppointmentID"
            ],
            "Token_Name_Label": "Appointment",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                86213939
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many different types of rooms are there?",
        "cypher_query": "MATCH (r:Room)\nWITH DISTINCT r.RoomType AS roomtype\nRETURN count(roomtype)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH DISTINCT",
                "AS",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "r",
                "RoomType",
                "roomtype"
            ],
            "Token_Name_Label": "Room",
            "Token_Operator": ".",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                1
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of distinct room types available.",
        "cypher_query": "MATCH (r:Room)\nWITH DISTINCT r.RoomType AS roomtype\nRETURN count(roomtype)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH DISTINCT",
                "AS",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "r",
                "RoomType",
                "roomtype"
            ],
            "Token_Name_Label": "Room",
            "Token_Operator": ".",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                1
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the patient who has the most recent undergoing treatment?",
        "cypher_query": "MATCH (u:Undergoes)\nRETURN u.Patient\nORDER BY u.DateUndergoes\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "ORDER BY",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "u",
                "Patient",
                "DateUndergoes"
            ],
            "Token_Name_Label": "Undergoes",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                100000001
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which patient is undergoing the most recent treatment?",
        "cypher_query": "MATCH (u:Undergoes)\nRETURN u.Patient\nORDER BY u.DateUndergoes\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "ORDER BY",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "u",
                "Patient",
                "DateUndergoes"
            ],
            "Token_Name_Label": "Undergoes",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                100000001
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "List the names of all distinct nurses ordered by alphabetical order?",
        "cypher_query": "MATCH (n:Nurse)\nRETURN DISTINCT n.Name\nORDER BY n.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "n",
            "Token_Name_Label": "Nurse",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the alphabetically ordered list of all the distinct names of nurses?",
        "cypher_query": "MATCH (n:Nurse)\nRETURN DISTINCT n.Name\nORDER BY n.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "n",
            "Token_Name_Label": "Nurse",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "List the names of all distinct medications, ordered in an alphabetical order.",
        "cypher_query": "MATCH (m:Medication)\nRETURN DISTINCT m.Name\nORDER BY m.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "m",
            "Token_Name_Label": "Medication",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Awakin"
            ],
            [
                "Crescavitin"
            ],
            [
                "Melioraurin"
            ],
            [
                "Procrastin-X"
            ],
            [
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the alphabetically ordered list of all distinct medications?",
        "cypher_query": "MATCH (m:Medication)\nRETURN DISTINCT m.Name\nORDER BY m.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "m",
            "Token_Name_Label": "Medication",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Awakin"
            ],
            [
                "Crescavitin"
            ],
            [
                "Melioraurin"
            ],
            [
                "Procrastin-X"
            ],
            [
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What are the highest cost, lowest cost and average cost of procedures?",
        "cypher_query": "MATCH (p:Procedures)\nRETURN MAX(p.Cost),MIN(p.Cost),AVG(p.Cost)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Name_Function": [
                "MAX",
                "MIN",
                "AVG"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                10000.0,
                25.0,
                4324.857142857143
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Tell me the highest, lowest, and average cost of procedures.",
        "cypher_query": "MATCH (p:Procedures)\nRETURN MAX(p.Cost),MIN(p.Cost),AVG(p.Cost)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Name_Function": [
                "MAX",
                "MIN",
                "AVG"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                10000.0,
                25.0,
                4324.857142857143
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "List the name and cost of all procedures sorted by the cost from the highest to the lowest.",
        "cypher_query": "MATCH (p:Procedures)\nRETURN p.Name,p.Cost\nORDER BY p.Cost DESC",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name",
                "ORDER BY",
                "DESC"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Complete Walletectomy",
                10000.0
            ],
            [
                "Reversible Pancreomyoplasty",
                5600.0
            ],
            [
                "Obfuscated Dermogastrotomy",
                4899.0
            ],
            [
                "Folded Demiophtalmectomy",
                4500.0
            ],
            [
                "Obtuse Pyloric Recombobulation",
                3750.0
            ],
            [
                "Reverse Rhinopodoplasty",
                1500.0
            ],
            [
                "Follicular Demiectomy",
                25.0
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Sort the list of names and costs of all procedures in the descending order of cost.",
        "cypher_query": "MATCH (p:Procedures)\nRETURN p.Name,p.Cost\nORDER BY p.Cost DESC",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name",
                "ORDER BY",
                "DESC"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Complete Walletectomy",
                10000.0
            ],
            [
                "Reversible Pancreomyoplasty",
                5600.0
            ],
            [
                "Obfuscated Dermogastrotomy",
                4899.0
            ],
            [
                "Folded Demiophtalmectomy",
                4500.0
            ],
            [
                "Obtuse Pyloric Recombobulation",
                3750.0
            ],
            [
                "Reverse Rhinopodoplasty",
                1500.0
            ],
            [
                "Follicular Demiectomy",
                25.0
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the three most expensive procedures.",
        "cypher_query": "MATCH (p:Procedures)\nRETURN p.Name\nORDER BY p.Cost\nLIMIT 3",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name",
                "ORDER BY",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "3"
        },
        "answers": [
            [
                "Follicular Demiectomy"
            ],
            [
                "Reverse Rhinopodoplasty"
            ],
            [
                "Obtuse Pyloric Recombobulation"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What are the three most costly procedures?",
        "cypher_query": "MATCH (p:Procedures)\nRETURN p.Name\nORDER BY p.Cost\nLIMIT 3",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name",
                "ORDER BY",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "3"
        },
        "answers": [
            [
                "Follicular Demiectomy"
            ],
            [
                "Reverse Rhinopodoplasty"
            ],
            [
                "Obtuse Pyloric Recombobulation"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many appointments are there?",
        "cypher_query": "MATCH (a:Appointment)\nRETURN COUNT(\"*\")",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "a",
            "Token_Name_Label": "Appointment",
            "Token_Name_Function": "COUNT",
            "Token_Literal_String": "\"*\""
        },
        "answers": [
            [
                9
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Count how many appointments have been made in total.",
        "cypher_query": "MATCH (a:Appointment)\nRETURN COUNT(\"*\")",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "a",
            "Token_Name_Label": "Appointment",
            "Token_Name_Function": "COUNT",
            "Token_Literal_String": "\"*\""
        },
        "answers": [
            [
                9
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "Find the id of the appointment with the most recent start date?",
        "cypher_query": "MATCH (a:Appointment)\nRETURN a.AppointmentID\nORDER BY a.Start DESC\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "ORDER BY",
                "Start",
                "DESC",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "a",
                "AppointmentID"
            ],
            "Token_Name_Label": "Appointment",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                86213939
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the id of the appointment that started most recently?",
        "cypher_query": "MATCH (a:Appointment)\nRETURN a.AppointmentID\nORDER BY a.Start DESC\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "ORDER BY",
                "Start",
                "DESC",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "a",
                "AppointmentID"
            ],
            "Token_Name_Label": "Appointment",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                86213939
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many different types of rooms are there?",
        "cypher_query": "MATCH (r:Room)\nWITH DISTINCT r.RoomType AS roomtype\nRETURN count(roomtype)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH DISTINCT",
                "AS",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "r",
                "RoomType",
                "roomtype"
            ],
            "Token_Name_Label": "Room",
            "Token_Operator": ".",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                1
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of distinct room types available.",
        "cypher_query": "MATCH (r:Room)\nWITH DISTINCT r.RoomType AS roomtype\nRETURN count(roomtype)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH DISTINCT",
                "AS",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "r",
                "RoomType",
                "roomtype"
            ],
            "Token_Name_Label": "Room",
            "Token_Operator": ".",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                1
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the patient who has the most recent undergoing treatment?",
        "cypher_query": "MATCH (u:Undergoes)\nRETURN u.Patient\nORDER BY u.DateUndergoes\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "ORDER BY",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "u",
                "Patient",
                "DateUndergoes"
            ],
            "Token_Name_Label": "Undergoes",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                100000001
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which patient is undergoing the most recent treatment?",
        "cypher_query": "MATCH (u:Undergoes)\nRETURN u.Patient\nORDER BY u.DateUndergoes\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "ORDER BY",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "u",
                "Patient",
                "DateUndergoes"
            ],
            "Token_Name_Label": "Undergoes",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                100000001
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "List the names of all distinct nurses ordered by alphabetical order?",
        "cypher_query": "MATCH (n:Nurse)\nRETURN DISTINCT n.Name\nORDER BY n.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "n",
            "Token_Name_Label": "Nurse",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the alphabetically ordered list of all the distinct names of nurses?",
        "cypher_query": "MATCH (n:Nurse)\nRETURN DISTINCT n.Name\nORDER BY n.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "n",
            "Token_Name_Label": "Nurse",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "List the names of all distinct medications, ordered in an alphabetical order.",
        "cypher_query": "MATCH (m:Medication)\nRETURN DISTINCT m.Name\nORDER BY m.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "m",
            "Token_Name_Label": "Medication",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Awakin"
            ],
            [
                "Crescavitin"
            ],
            [
                "Melioraurin"
            ],
            [
                "Procrastin-X"
            ],
            [
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the alphabetically ordered list of all distinct medications?",
        "cypher_query": "MATCH (m:Medication)\nRETURN DISTINCT m.Name\nORDER BY m.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "m",
            "Token_Name_Label": "Medication",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Awakin"
            ],
            [
                "Crescavitin"
            ],
            [
                "Melioraurin"
            ],
            [
                "Procrastin-X"
            ],
            [
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What are the highest cost, lowest cost and average cost of procedures?",
        "cypher_query": "MATCH (p:Procedures)\nRETURN MAX(p.Cost),MIN(p.Cost),AVG(p.Cost)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Name_Function": [
                "MAX",
                "MIN",
                "AVG"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                10000.0,
                25.0,
                4324.857142857143
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Tell me the highest, lowest, and average cost of procedures.",
        "cypher_query": "MATCH (p:Procedures)\nRETURN MAX(p.Cost),MIN(p.Cost),AVG(p.Cost)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Name_Function": [
                "MAX",
                "MIN",
                "AVG"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                10000.0,
                25.0,
                4324.857142857143
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "List the name and cost of all procedures sorted by the cost from the highest to the lowest.",
        "cypher_query": "MATCH (p:Procedures)\nRETURN p.Name,p.Cost\nORDER BY p.Cost DESC",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name",
                "ORDER BY",
                "DESC"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Complete Walletectomy",
                10000.0
            ],
            [
                "Reversible Pancreomyoplasty",
                5600.0
            ],
            [
                "Obfuscated Dermogastrotomy",
                4899.0
            ],
            [
                "Folded Demiophtalmectomy",
                4500.0
            ],
            [
                "Obtuse Pyloric Recombobulation",
                3750.0
            ],
            [
                "Reverse Rhinopodoplasty",
                1500.0
            ],
            [
                "Follicular Demiectomy",
                25.0
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Sort the list of names and costs of all procedures in the descending order of cost.",
        "cypher_query": "MATCH (p:Procedures)\nRETURN p.Name,p.Cost\nORDER BY p.Cost DESC",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name",
                "ORDER BY",
                "DESC"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Complete Walletectomy",
                10000.0
            ],
            [
                "Reversible Pancreomyoplasty",
                5600.0
            ],
            [
                "Obfuscated Dermogastrotomy",
                4899.0
            ],
            [
                "Folded Demiophtalmectomy",
                4500.0
            ],
            [
                "Obtuse Pyloric Recombobulation",
                3750.0
            ],
            [
                "Reverse Rhinopodoplasty",
                1500.0
            ],
            [
                "Follicular Demiectomy",
                25.0
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the three most expensive procedures.",
        "cypher_query": "MATCH (p:Procedures)\nRETURN p.Name\nORDER BY p.Cost\nLIMIT 3",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name",
                "ORDER BY",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "3"
        },
        "answers": [
            [
                "Follicular Demiectomy"
            ],
            [
                "Reverse Rhinopodoplasty"
            ],
            [
                "Obtuse Pyloric Recombobulation"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What are the three most costly procedures?",
        "cypher_query": "MATCH (p:Procedures)\nRETURN p.Name\nORDER BY p.Cost\nLIMIT 3",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name",
                "ORDER BY",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "3"
        },
        "answers": [
            [
                "Follicular Demiectomy"
            ],
            [
                "Reverse Rhinopodoplasty"
            ],
            [
                "Obtuse Pyloric Recombobulation"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many appointments are there?",
        "cypher_query": "MATCH (a:Appointment)\nRETURN COUNT(\"*\")",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "a",
            "Token_Name_Label": "Appointment",
            "Token_Name_Function": "COUNT",
            "Token_Literal_String": "\"*\""
        },
        "answers": [
            [
                9
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Count how many appointments have been made in total.",
        "cypher_query": "MATCH (a:Appointment)\nRETURN COUNT(\"*\")",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "a",
            "Token_Name_Label": "Appointment",
            "Token_Name_Function": "COUNT",
            "Token_Literal_String": "\"*\""
        },
        "answers": [
            [
                9
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "Find the id of the appointment with the most recent start date?",
        "cypher_query": "MATCH (a:Appointment)\nRETURN a.AppointmentID\nORDER BY a.Start DESC\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "ORDER BY",
                "Start",
                "DESC",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "a",
                "AppointmentID"
            ],
            "Token_Name_Label": "Appointment",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                86213939
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the id of the appointment that started most recently?",
        "cypher_query": "MATCH (a:Appointment)\nRETURN a.AppointmentID\nORDER BY a.Start DESC\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "ORDER BY",
                "Start",
                "DESC",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "a",
                "AppointmentID"
            ],
            "Token_Name_Label": "Appointment",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                86213939
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many different types of rooms are there?",
        "cypher_query": "MATCH (r:Room)\nWITH DISTINCT r.RoomType AS roomtype\nRETURN count(roomtype)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH DISTINCT",
                "AS",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "r",
                "RoomType",
                "roomtype"
            ],
            "Token_Name_Label": "Room",
            "Token_Operator": ".",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                1
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of distinct room types available.",
        "cypher_query": "MATCH (r:Room)\nWITH DISTINCT r.RoomType AS roomtype\nRETURN count(roomtype)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH DISTINCT",
                "AS",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "r",
                "RoomType",
                "roomtype"
            ],
            "Token_Name_Label": "Room",
            "Token_Operator": ".",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                1
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the patient who has the most recent undergoing treatment?",
        "cypher_query": "MATCH (u:Undergoes)\nRETURN u.Patient\nORDER BY u.DateUndergoes\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "ORDER BY",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "u",
                "Patient",
                "DateUndergoes"
            ],
            "Token_Name_Label": "Undergoes",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                100000001
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which patient is undergoing the most recent treatment?",
        "cypher_query": "MATCH (u:Undergoes)\nRETURN u.Patient\nORDER BY u.DateUndergoes\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "ORDER BY",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "u",
                "Patient",
                "DateUndergoes"
            ],
            "Token_Name_Label": "Undergoes",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                100000001
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "List the names of all distinct nurses ordered by alphabetical order?",
        "cypher_query": "MATCH (n:Nurse)\nRETURN DISTINCT n.Name\nORDER BY n.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "n",
            "Token_Name_Label": "Nurse",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the alphabetically ordered list of all the distinct names of nurses?",
        "cypher_query": "MATCH (n:Nurse)\nRETURN DISTINCT n.Name\nORDER BY n.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "n",
            "Token_Name_Label": "Nurse",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "List the names of all distinct medications, ordered in an alphabetical order.",
        "cypher_query": "MATCH (m:Medication)\nRETURN DISTINCT m.Name\nORDER BY m.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "m",
            "Token_Name_Label": "Medication",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Awakin"
            ],
            [
                "Crescavitin"
            ],
            [
                "Melioraurin"
            ],
            [
                "Procrastin-X"
            ],
            [
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the alphabetically ordered list of all distinct medications?",
        "cypher_query": "MATCH (m:Medication)\nRETURN DISTINCT m.Name\nORDER BY m.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "m",
            "Token_Name_Label": "Medication",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Awakin"
            ],
            [
                "Crescavitin"
            ],
            [
                "Melioraurin"
            ],
            [
                "Procrastin-X"
            ],
            [
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What are the highest cost, lowest cost and average cost of procedures?",
        "cypher_query": "MATCH (p:Procedures)\nRETURN MAX(p.Cost),MIN(p.Cost),AVG(p.Cost)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Name_Function": [
                "MAX",
                "MIN",
                "AVG"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                10000.0,
                25.0,
                4324.857142857143
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Tell me the highest, lowest, and average cost of procedures.",
        "cypher_query": "MATCH (p:Procedures)\nRETURN MAX(p.Cost),MIN(p.Cost),AVG(p.Cost)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Name_Function": [
                "MAX",
                "MIN",
                "AVG"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                10000.0,
                25.0,
                4324.857142857143
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "List the name and cost of all procedures sorted by the cost from the highest to the lowest.",
        "cypher_query": "MATCH (p:Procedures)\nRETURN p.Name,p.Cost\nORDER BY p.Cost DESC",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name",
                "ORDER BY",
                "DESC"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Complete Walletectomy",
                10000.0
            ],
            [
                "Reversible Pancreomyoplasty",
                5600.0
            ],
            [
                "Obfuscated Dermogastrotomy",
                4899.0
            ],
            [
                "Folded Demiophtalmectomy",
                4500.0
            ],
            [
                "Obtuse Pyloric Recombobulation",
                3750.0
            ],
            [
                "Reverse Rhinopodoplasty",
                1500.0
            ],
            [
                "Follicular Demiectomy",
                25.0
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Sort the list of names and costs of all procedures in the descending order of cost.",
        "cypher_query": "MATCH (p:Procedures)\nRETURN p.Name,p.Cost\nORDER BY p.Cost DESC",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name",
                "ORDER BY",
                "DESC"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Complete Walletectomy",
                10000.0
            ],
            [
                "Reversible Pancreomyoplasty",
                5600.0
            ],
            [
                "Obfuscated Dermogastrotomy",
                4899.0
            ],
            [
                "Folded Demiophtalmectomy",
                4500.0
            ],
            [
                "Obtuse Pyloric Recombobulation",
                3750.0
            ],
            [
                "Reverse Rhinopodoplasty",
                1500.0
            ],
            [
                "Follicular Demiectomy",
                25.0
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the three most expensive procedures.",
        "cypher_query": "MATCH (p:Procedures)\nRETURN p.Name\nORDER BY p.Cost\nLIMIT 3",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name",
                "ORDER BY",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "3"
        },
        "answers": [
            [
                "Follicular Demiectomy"
            ],
            [
                "Reverse Rhinopodoplasty"
            ],
            [
                "Obtuse Pyloric Recombobulation"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What are the three most costly procedures?",
        "cypher_query": "MATCH (p:Procedures)\nRETURN p.Name\nORDER BY p.Cost\nLIMIT 3",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name",
                "ORDER BY",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "3"
        },
        "answers": [
            [
                "Follicular Demiectomy"
            ],
            [
                "Reverse Rhinopodoplasty"
            ],
            [
                "Obtuse Pyloric Recombobulation"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many appointments are there?",
        "cypher_query": "MATCH (a:Appointment)\nRETURN COUNT(\"*\")",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "a",
            "Token_Name_Label": "Appointment",
            "Token_Name_Function": "COUNT",
            "Token_Literal_String": "\"*\""
        },
        "answers": [
            [
                9
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Count how many appointments have been made in total.",
        "cypher_query": "MATCH (a:Appointment)\nRETURN COUNT(\"*\")",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "a",
            "Token_Name_Label": "Appointment",
            "Token_Name_Function": "COUNT",
            "Token_Literal_String": "\"*\""
        },
        "answers": [
            [
                9
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "Find the id of the appointment with the most recent start date?",
        "cypher_query": "MATCH (a:Appointment)\nRETURN a.AppointmentID\nORDER BY a.Start DESC\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "ORDER BY",
                "Start",
                "DESC",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "a",
                "AppointmentID"
            ],
            "Token_Name_Label": "Appointment",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                86213939
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the id of the appointment that started most recently?",
        "cypher_query": "MATCH (a:Appointment)\nRETURN a.AppointmentID\nORDER BY a.Start DESC\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "ORDER BY",
                "Start",
                "DESC",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "a",
                "AppointmentID"
            ],
            "Token_Name_Label": "Appointment",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                86213939
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many different types of rooms are there?",
        "cypher_query": "MATCH (r:Room)\nWITH DISTINCT r.RoomType AS roomtype\nRETURN count(roomtype)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH DISTINCT",
                "AS",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "r",
                "RoomType",
                "roomtype"
            ],
            "Token_Name_Label": "Room",
            "Token_Operator": ".",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                1
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of distinct room types available.",
        "cypher_query": "MATCH (r:Room)\nWITH DISTINCT r.RoomType AS roomtype\nRETURN count(roomtype)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH DISTINCT",
                "AS",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "r",
                "RoomType",
                "roomtype"
            ],
            "Token_Name_Label": "Room",
            "Token_Operator": ".",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                1
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the patient who has the most recent undergoing treatment?",
        "cypher_query": "MATCH (u:Undergoes)\nRETURN u.Patient\nORDER BY u.DateUndergoes\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "ORDER BY",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "u",
                "Patient",
                "DateUndergoes"
            ],
            "Token_Name_Label": "Undergoes",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                100000001
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which patient is undergoing the most recent treatment?",
        "cypher_query": "MATCH (u:Undergoes)\nRETURN u.Patient\nORDER BY u.DateUndergoes\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "ORDER BY",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "u",
                "Patient",
                "DateUndergoes"
            ],
            "Token_Name_Label": "Undergoes",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                100000001
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "List the names of all distinct nurses ordered by alphabetical order?",
        "cypher_query": "MATCH (n:Nurse)\nRETURN DISTINCT n.Name\nORDER BY n.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "n",
            "Token_Name_Label": "Nurse",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the alphabetically ordered list of all the distinct names of nurses?",
        "cypher_query": "MATCH (n:Nurse)\nRETURN DISTINCT n.Name\nORDER BY n.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "n",
            "Token_Name_Label": "Nurse",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "List the names of all distinct medications, ordered in an alphabetical order.",
        "cypher_query": "MATCH (m:Medication)\nRETURN DISTINCT m.Name\nORDER BY m.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "m",
            "Token_Name_Label": "Medication",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Awakin"
            ],
            [
                "Crescavitin"
            ],
            [
                "Melioraurin"
            ],
            [
                "Procrastin-X"
            ],
            [
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the alphabetically ordered list of all distinct medications?",
        "cypher_query": "MATCH (m:Medication)\nRETURN DISTINCT m.Name\nORDER BY m.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "m",
            "Token_Name_Label": "Medication",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Awakin"
            ],
            [
                "Crescavitin"
            ],
            [
                "Melioraurin"
            ],
            [
                "Procrastin-X"
            ],
            [
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What are the highest cost, lowest cost and average cost of procedures?",
        "cypher_query": "MATCH (p:Procedures)\nRETURN MAX(p.Cost),MIN(p.Cost),AVG(p.Cost)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Name_Function": [
                "MAX",
                "MIN",
                "AVG"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                10000.0,
                25.0,
                4324.857142857143
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Tell me the highest, lowest, and average cost of procedures.",
        "cypher_query": "MATCH (p:Procedures)\nRETURN MAX(p.Cost),MIN(p.Cost),AVG(p.Cost)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Name_Function": [
                "MAX",
                "MIN",
                "AVG"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                10000.0,
                25.0,
                4324.857142857143
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "List the name and cost of all procedures sorted by the cost from the highest to the lowest.",
        "cypher_query": "MATCH (p:Procedures)\nRETURN p.Name,p.Cost\nORDER BY p.Cost DESC",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name",
                "ORDER BY",
                "DESC"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Complete Walletectomy",
                10000.0
            ],
            [
                "Reversible Pancreomyoplasty",
                5600.0
            ],
            [
                "Obfuscated Dermogastrotomy",
                4899.0
            ],
            [
                "Folded Demiophtalmectomy",
                4500.0
            ],
            [
                "Obtuse Pyloric Recombobulation",
                3750.0
            ],
            [
                "Reverse Rhinopodoplasty",
                1500.0
            ],
            [
                "Follicular Demiectomy",
                25.0
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Sort the list of names and costs of all procedures in the descending order of cost.",
        "cypher_query": "MATCH (p:Procedures)\nRETURN p.Name,p.Cost\nORDER BY p.Cost DESC",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name",
                "ORDER BY",
                "DESC"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Complete Walletectomy",
                10000.0
            ],
            [
                "Reversible Pancreomyoplasty",
                5600.0
            ],
            [
                "Obfuscated Dermogastrotomy",
                4899.0
            ],
            [
                "Folded Demiophtalmectomy",
                4500.0
            ],
            [
                "Obtuse Pyloric Recombobulation",
                3750.0
            ],
            [
                "Reverse Rhinopodoplasty",
                1500.0
            ],
            [
                "Follicular Demiectomy",
                25.0
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the three most expensive procedures.",
        "cypher_query": "MATCH (p:Procedures)\nRETURN p.Name\nORDER BY p.Cost\nLIMIT 3",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name",
                "ORDER BY",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "3"
        },
        "answers": [
            [
                "Follicular Demiectomy"
            ],
            [
                "Reverse Rhinopodoplasty"
            ],
            [
                "Obtuse Pyloric Recombobulation"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What are the three most costly procedures?",
        "cypher_query": "MATCH (p:Procedures)\nRETURN p.Name\nORDER BY p.Cost\nLIMIT 3",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name",
                "ORDER BY",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "3"
        },
        "answers": [
            [
                "Follicular Demiectomy"
            ],
            [
                "Reverse Rhinopodoplasty"
            ],
            [
                "Obtuse Pyloric Recombobulation"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many appointments are there?",
        "cypher_query": "MATCH (a:Appointment)\nRETURN COUNT(\"*\")",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "a",
            "Token_Name_Label": "Appointment",
            "Token_Name_Function": "COUNT",
            "Token_Literal_String": "\"*\""
        },
        "answers": [
            [
                9
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Count how many appointments have been made in total.",
        "cypher_query": "MATCH (a:Appointment)\nRETURN COUNT(\"*\")",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "a",
            "Token_Name_Label": "Appointment",
            "Token_Name_Function": "COUNT",
            "Token_Literal_String": "\"*\""
        },
        "answers": [
            [
                9
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "Find the id of the appointment with the most recent start date?",
        "cypher_query": "MATCH (a:Appointment)\nRETURN a.AppointmentID\nORDER BY a.Start DESC\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "ORDER BY",
                "Start",
                "DESC",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "a",
                "AppointmentID"
            ],
            "Token_Name_Label": "Appointment",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                86213939
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the id of the appointment that started most recently?",
        "cypher_query": "MATCH (a:Appointment)\nRETURN a.AppointmentID\nORDER BY a.Start DESC\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "ORDER BY",
                "Start",
                "DESC",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "a",
                "AppointmentID"
            ],
            "Token_Name_Label": "Appointment",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                86213939
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many different types of rooms are there?",
        "cypher_query": "MATCH (r:Room)\nWITH DISTINCT r.RoomType AS roomtype\nRETURN count(roomtype)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH DISTINCT",
                "AS",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "r",
                "RoomType",
                "roomtype"
            ],
            "Token_Name_Label": "Room",
            "Token_Operator": ".",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                1
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of distinct room types available.",
        "cypher_query": "MATCH (r:Room)\nWITH DISTINCT r.RoomType AS roomtype\nRETURN count(roomtype)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH DISTINCT",
                "AS",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "r",
                "RoomType",
                "roomtype"
            ],
            "Token_Name_Label": "Room",
            "Token_Operator": ".",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                1
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the patient who has the most recent undergoing treatment?",
        "cypher_query": "MATCH (u:Undergoes)\nRETURN u.Patient\nORDER BY u.DateUndergoes\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "ORDER BY",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "u",
                "Patient",
                "DateUndergoes"
            ],
            "Token_Name_Label": "Undergoes",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                100000001
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which patient is undergoing the most recent treatment?",
        "cypher_query": "MATCH (u:Undergoes)\nRETURN u.Patient\nORDER BY u.DateUndergoes\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "ORDER BY",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "u",
                "Patient",
                "DateUndergoes"
            ],
            "Token_Name_Label": "Undergoes",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                100000001
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "List the names of all distinct nurses ordered by alphabetical order?",
        "cypher_query": "MATCH (n:Nurse)\nRETURN DISTINCT n.Name\nORDER BY n.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "n",
            "Token_Name_Label": "Nurse",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the alphabetically ordered list of all the distinct names of nurses?",
        "cypher_query": "MATCH (n:Nurse)\nRETURN DISTINCT n.Name\nORDER BY n.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "n",
            "Token_Name_Label": "Nurse",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "List the names of all distinct medications, ordered in an alphabetical order.",
        "cypher_query": "MATCH (m:Medication)\nRETURN DISTINCT m.Name\nORDER BY m.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "m",
            "Token_Name_Label": "Medication",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Awakin"
            ],
            [
                "Crescavitin"
            ],
            [
                "Melioraurin"
            ],
            [
                "Procrastin-X"
            ],
            [
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the alphabetically ordered list of all distinct medications?",
        "cypher_query": "MATCH (m:Medication)\nRETURN DISTINCT m.Name\nORDER BY m.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "m",
            "Token_Name_Label": "Medication",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Awakin"
            ],
            [
                "Crescavitin"
            ],
            [
                "Melioraurin"
            ],
            [
                "Procrastin-X"
            ],
            [
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What are the highest cost, lowest cost and average cost of procedures?",
        "cypher_query": "MATCH (p:Procedures)\nRETURN MAX(p.Cost),MIN(p.Cost),AVG(p.Cost)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Name_Function": [
                "MAX",
                "MIN",
                "AVG"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                10000.0,
                25.0,
                4324.857142857143
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Tell me the highest, lowest, and average cost of procedures.",
        "cypher_query": "MATCH (p:Procedures)\nRETURN MAX(p.Cost),MIN(p.Cost),AVG(p.Cost)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Name_Function": [
                "MAX",
                "MIN",
                "AVG"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                10000.0,
                25.0,
                4324.857142857143
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "List the name and cost of all procedures sorted by the cost from the highest to the lowest.",
        "cypher_query": "MATCH (p:Procedures)\nRETURN p.Name,p.Cost\nORDER BY p.Cost DESC",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name",
                "ORDER BY",
                "DESC"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Complete Walletectomy",
                10000.0
            ],
            [
                "Reversible Pancreomyoplasty",
                5600.0
            ],
            [
                "Obfuscated Dermogastrotomy",
                4899.0
            ],
            [
                "Folded Demiophtalmectomy",
                4500.0
            ],
            [
                "Obtuse Pyloric Recombobulation",
                3750.0
            ],
            [
                "Reverse Rhinopodoplasty",
                1500.0
            ],
            [
                "Follicular Demiectomy",
                25.0
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Sort the list of names and costs of all procedures in the descending order of cost.",
        "cypher_query": "MATCH (p:Procedures)\nRETURN p.Name,p.Cost\nORDER BY p.Cost DESC",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name",
                "ORDER BY",
                "DESC"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Complete Walletectomy",
                10000.0
            ],
            [
                "Reversible Pancreomyoplasty",
                5600.0
            ],
            [
                "Obfuscated Dermogastrotomy",
                4899.0
            ],
            [
                "Folded Demiophtalmectomy",
                4500.0
            ],
            [
                "Obtuse Pyloric Recombobulation",
                3750.0
            ],
            [
                "Reverse Rhinopodoplasty",
                1500.0
            ],
            [
                "Follicular Demiectomy",
                25.0
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the three most expensive procedures.",
        "cypher_query": "MATCH (p:Procedures)\nRETURN p.Name\nORDER BY p.Cost\nLIMIT 3",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name",
                "ORDER BY",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "3"
        },
        "answers": [
            [
                "Follicular Demiectomy"
            ],
            [
                "Reverse Rhinopodoplasty"
            ],
            [
                "Obtuse Pyloric Recombobulation"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What are the three most costly procedures?",
        "cypher_query": "MATCH (p:Procedures)\nRETURN p.Name\nORDER BY p.Cost\nLIMIT 3",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name",
                "ORDER BY",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "3"
        },
        "answers": [
            [
                "Follicular Demiectomy"
            ],
            [
                "Reverse Rhinopodoplasty"
            ],
            [
                "Obtuse Pyloric Recombobulation"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many appointments are there?",
        "cypher_query": "MATCH (a:Appointment)\nRETURN COUNT(\"*\")",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "a",
            "Token_Name_Label": "Appointment",
            "Token_Name_Function": "COUNT",
            "Token_Literal_String": "\"*\""
        },
        "answers": [
            [
                9
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Count how many appointments have been made in total.",
        "cypher_query": "MATCH (a:Appointment)\nRETURN COUNT(\"*\")",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "a",
            "Token_Name_Label": "Appointment",
            "Token_Name_Function": "COUNT",
            "Token_Literal_String": "\"*\""
        },
        "answers": [
            [
                9
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "Find the id of the appointment with the most recent start date?",
        "cypher_query": "MATCH (a:Appointment)\nRETURN a.AppointmentID\nORDER BY a.Start DESC\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "ORDER BY",
                "Start",
                "DESC",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "a",
                "AppointmentID"
            ],
            "Token_Name_Label": "Appointment",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                86213939
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the id of the appointment that started most recently?",
        "cypher_query": "MATCH (a:Appointment)\nRETURN a.AppointmentID\nORDER BY a.Start DESC\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "ORDER BY",
                "Start",
                "DESC",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "a",
                "AppointmentID"
            ],
            "Token_Name_Label": "Appointment",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                86213939
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many different types of rooms are there?",
        "cypher_query": "MATCH (r:Room)\nWITH DISTINCT r.RoomType AS roomtype\nRETURN count(roomtype)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH DISTINCT",
                "AS",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "r",
                "RoomType",
                "roomtype"
            ],
            "Token_Name_Label": "Room",
            "Token_Operator": ".",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                1
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of distinct room types available.",
        "cypher_query": "MATCH (r:Room)\nWITH DISTINCT r.RoomType AS roomtype\nRETURN count(roomtype)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH DISTINCT",
                "AS",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "r",
                "RoomType",
                "roomtype"
            ],
            "Token_Name_Label": "Room",
            "Token_Operator": ".",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                1
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the patient who has the most recent undergoing treatment?",
        "cypher_query": "MATCH (u:Undergoes)\nRETURN u.Patient\nORDER BY u.DateUndergoes\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "ORDER BY",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "u",
                "Patient",
                "DateUndergoes"
            ],
            "Token_Name_Label": "Undergoes",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                100000001
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which patient is undergoing the most recent treatment?",
        "cypher_query": "MATCH (u:Undergoes)\nRETURN u.Patient\nORDER BY u.DateUndergoes\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "ORDER BY",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "u",
                "Patient",
                "DateUndergoes"
            ],
            "Token_Name_Label": "Undergoes",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                100000001
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "List the names of all distinct nurses ordered by alphabetical order?",
        "cypher_query": "MATCH (n:Nurse)\nRETURN DISTINCT n.Name\nORDER BY n.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "n",
            "Token_Name_Label": "Nurse",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the alphabetically ordered list of all the distinct names of nurses?",
        "cypher_query": "MATCH (n:Nurse)\nRETURN DISTINCT n.Name\nORDER BY n.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "n",
            "Token_Name_Label": "Nurse",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "List the names of all distinct medications, ordered in an alphabetical order.",
        "cypher_query": "MATCH (m:Medication)\nRETURN DISTINCT m.Name\nORDER BY m.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "m",
            "Token_Name_Label": "Medication",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Awakin"
            ],
            [
                "Crescavitin"
            ],
            [
                "Melioraurin"
            ],
            [
                "Procrastin-X"
            ],
            [
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the alphabetically ordered list of all distinct medications?",
        "cypher_query": "MATCH (m:Medication)\nRETURN DISTINCT m.Name\nORDER BY m.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "m",
            "Token_Name_Label": "Medication",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Awakin"
            ],
            [
                "Crescavitin"
            ],
            [
                "Melioraurin"
            ],
            [
                "Procrastin-X"
            ],
            [
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What are the highest cost, lowest cost and average cost of procedures?",
        "cypher_query": "MATCH (p:Procedures)\nRETURN MAX(p.Cost),MIN(p.Cost),AVG(p.Cost)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Name_Function": [
                "MAX",
                "MIN",
                "AVG"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                10000.0,
                25.0,
                4324.857142857143
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Tell me the highest, lowest, and average cost of procedures.",
        "cypher_query": "MATCH (p:Procedures)\nRETURN MAX(p.Cost),MIN(p.Cost),AVG(p.Cost)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Name_Function": [
                "MAX",
                "MIN",
                "AVG"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                10000.0,
                25.0,
                4324.857142857143
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "List the name and cost of all procedures sorted by the cost from the highest to the lowest.",
        "cypher_query": "MATCH (p:Procedures)\nRETURN p.Name,p.Cost\nORDER BY p.Cost DESC",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name",
                "ORDER BY",
                "DESC"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Complete Walletectomy",
                10000.0
            ],
            [
                "Reversible Pancreomyoplasty",
                5600.0
            ],
            [
                "Obfuscated Dermogastrotomy",
                4899.0
            ],
            [
                "Folded Demiophtalmectomy",
                4500.0
            ],
            [
                "Obtuse Pyloric Recombobulation",
                3750.0
            ],
            [
                "Reverse Rhinopodoplasty",
                1500.0
            ],
            [
                "Follicular Demiectomy",
                25.0
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Sort the list of names and costs of all procedures in the descending order of cost.",
        "cypher_query": "MATCH (p:Procedures)\nRETURN p.Name,p.Cost\nORDER BY p.Cost DESC",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name",
                "ORDER BY",
                "DESC"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Complete Walletectomy",
                10000.0
            ],
            [
                "Reversible Pancreomyoplasty",
                5600.0
            ],
            [
                "Obfuscated Dermogastrotomy",
                4899.0
            ],
            [
                "Folded Demiophtalmectomy",
                4500.0
            ],
            [
                "Obtuse Pyloric Recombobulation",
                3750.0
            ],
            [
                "Reverse Rhinopodoplasty",
                1500.0
            ],
            [
                "Follicular Demiectomy",
                25.0
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the three most expensive procedures.",
        "cypher_query": "MATCH (p:Procedures)\nRETURN p.Name\nORDER BY p.Cost\nLIMIT 3",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name",
                "ORDER BY",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "3"
        },
        "answers": [
            [
                "Follicular Demiectomy"
            ],
            [
                "Reverse Rhinopodoplasty"
            ],
            [
                "Obtuse Pyloric Recombobulation"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What are the three most costly procedures?",
        "cypher_query": "MATCH (p:Procedures)\nRETURN p.Name\nORDER BY p.Cost\nLIMIT 3",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name",
                "ORDER BY",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "3"
        },
        "answers": [
            [
                "Follicular Demiectomy"
            ],
            [
                "Reverse Rhinopodoplasty"
            ],
            [
                "Obtuse Pyloric Recombobulation"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many appointments are there?",
        "cypher_query": "MATCH (a:Appointment)\nRETURN COUNT(\"*\")",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "a",
            "Token_Name_Label": "Appointment",
            "Token_Name_Function": "COUNT",
            "Token_Literal_String": "\"*\""
        },
        "answers": [
            [
                9
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Count how many appointments have been made in total.",
        "cypher_query": "MATCH (a:Appointment)\nRETURN COUNT(\"*\")",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "a",
            "Token_Name_Label": "Appointment",
            "Token_Name_Function": "COUNT",
            "Token_Literal_String": "\"*\""
        },
        "answers": [
            [
                9
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "Find the id of the appointment with the most recent start date?",
        "cypher_query": "MATCH (a:Appointment)\nRETURN a.AppointmentID\nORDER BY a.Start DESC\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "ORDER BY",
                "Start",
                "DESC",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "a",
                "AppointmentID"
            ],
            "Token_Name_Label": "Appointment",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                86213939
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the id of the appointment that started most recently?",
        "cypher_query": "MATCH (a:Appointment)\nRETURN a.AppointmentID\nORDER BY a.Start DESC\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "ORDER BY",
                "Start",
                "DESC",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "a",
                "AppointmentID"
            ],
            "Token_Name_Label": "Appointment",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                86213939
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many different types of rooms are there?",
        "cypher_query": "MATCH (r:Room)\nWITH DISTINCT r.RoomType AS roomtype\nRETURN count(roomtype)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH DISTINCT",
                "AS",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "r",
                "RoomType",
                "roomtype"
            ],
            "Token_Name_Label": "Room",
            "Token_Operator": ".",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                1
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of distinct room types available.",
        "cypher_query": "MATCH (r:Room)\nWITH DISTINCT r.RoomType AS roomtype\nRETURN count(roomtype)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH DISTINCT",
                "AS",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "r",
                "RoomType",
                "roomtype"
            ],
            "Token_Name_Label": "Room",
            "Token_Operator": ".",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                1
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the patient who has the most recent undergoing treatment?",
        "cypher_query": "MATCH (u:Undergoes)\nRETURN u.Patient\nORDER BY u.DateUndergoes\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "ORDER BY",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "u",
                "Patient",
                "DateUndergoes"
            ],
            "Token_Name_Label": "Undergoes",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                100000001
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which patient is undergoing the most recent treatment?",
        "cypher_query": "MATCH (u:Undergoes)\nRETURN u.Patient\nORDER BY u.DateUndergoes\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "ORDER BY",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "u",
                "Patient",
                "DateUndergoes"
            ],
            "Token_Name_Label": "Undergoes",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                100000001
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "List the names of all distinct nurses ordered by alphabetical order?",
        "cypher_query": "MATCH (n:Nurse)\nRETURN DISTINCT n.Name\nORDER BY n.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "n",
            "Token_Name_Label": "Nurse",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the alphabetically ordered list of all the distinct names of nurses?",
        "cypher_query": "MATCH (n:Nurse)\nRETURN DISTINCT n.Name\nORDER BY n.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "n",
            "Token_Name_Label": "Nurse",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "List the names of all distinct medications, ordered in an alphabetical order.",
        "cypher_query": "MATCH (m:Medication)\nRETURN DISTINCT m.Name\nORDER BY m.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "m",
            "Token_Name_Label": "Medication",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Awakin"
            ],
            [
                "Crescavitin"
            ],
            [
                "Melioraurin"
            ],
            [
                "Procrastin-X"
            ],
            [
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the alphabetically ordered list of all distinct medications?",
        "cypher_query": "MATCH (m:Medication)\nRETURN DISTINCT m.Name\nORDER BY m.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "m",
            "Token_Name_Label": "Medication",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Awakin"
            ],
            [
                "Crescavitin"
            ],
            [
                "Melioraurin"
            ],
            [
                "Procrastin-X"
            ],
            [
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What are the highest cost, lowest cost and average cost of procedures?",
        "cypher_query": "MATCH (p:Procedures)\nRETURN MAX(p.Cost),MIN(p.Cost),AVG(p.Cost)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Name_Function": [
                "MAX",
                "MIN",
                "AVG"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                10000.0,
                25.0,
                4324.857142857143
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Tell me the highest, lowest, and average cost of procedures.",
        "cypher_query": "MATCH (p:Procedures)\nRETURN MAX(p.Cost),MIN(p.Cost),AVG(p.Cost)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Name_Function": [
                "MAX",
                "MIN",
                "AVG"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                10000.0,
                25.0,
                4324.857142857143
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "List the name and cost of all procedures sorted by the cost from the highest to the lowest.",
        "cypher_query": "MATCH (p:Procedures)\nRETURN p.Name,p.Cost\nORDER BY p.Cost DESC",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name",
                "ORDER BY",
                "DESC"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Complete Walletectomy",
                10000.0
            ],
            [
                "Reversible Pancreomyoplasty",
                5600.0
            ],
            [
                "Obfuscated Dermogastrotomy",
                4899.0
            ],
            [
                "Folded Demiophtalmectomy",
                4500.0
            ],
            [
                "Obtuse Pyloric Recombobulation",
                3750.0
            ],
            [
                "Reverse Rhinopodoplasty",
                1500.0
            ],
            [
                "Follicular Demiectomy",
                25.0
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Sort the list of names and costs of all procedures in the descending order of cost.",
        "cypher_query": "MATCH (p:Procedures)\nRETURN p.Name,p.Cost\nORDER BY p.Cost DESC",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name",
                "ORDER BY",
                "DESC"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Complete Walletectomy",
                10000.0
            ],
            [
                "Reversible Pancreomyoplasty",
                5600.0
            ],
            [
                "Obfuscated Dermogastrotomy",
                4899.0
            ],
            [
                "Folded Demiophtalmectomy",
                4500.0
            ],
            [
                "Obtuse Pyloric Recombobulation",
                3750.0
            ],
            [
                "Reverse Rhinopodoplasty",
                1500.0
            ],
            [
                "Follicular Demiectomy",
                25.0
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the three most expensive procedures.",
        "cypher_query": "MATCH (p:Procedures)\nRETURN p.Name\nORDER BY p.Cost\nLIMIT 3",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name",
                "ORDER BY",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "3"
        },
        "answers": [
            [
                "Follicular Demiectomy"
            ],
            [
                "Reverse Rhinopodoplasty"
            ],
            [
                "Obtuse Pyloric Recombobulation"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What are the three most costly procedures?",
        "cypher_query": "MATCH (p:Procedures)\nRETURN p.Name\nORDER BY p.Cost\nLIMIT 3",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name",
                "ORDER BY",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "3"
        },
        "answers": [
            [
                "Follicular Demiectomy"
            ],
            [
                "Reverse Rhinopodoplasty"
            ],
            [
                "Obtuse Pyloric Recombobulation"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many appointments are there?",
        "cypher_query": "MATCH (a:Appointment)\nRETURN COUNT(\"*\")",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "a",
            "Token_Name_Label": "Appointment",
            "Token_Name_Function": "COUNT",
            "Token_Literal_String": "\"*\""
        },
        "answers": [
            [
                9
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Count how many appointments have been made in total.",
        "cypher_query": "MATCH (a:Appointment)\nRETURN COUNT(\"*\")",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "a",
            "Token_Name_Label": "Appointment",
            "Token_Name_Function": "COUNT",
            "Token_Literal_String": "\"*\""
        },
        "answers": [
            [
                9
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "Find the id of the appointment with the most recent start date?",
        "cypher_query": "MATCH (a:Appointment)\nRETURN a.AppointmentID\nORDER BY a.Start DESC\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "ORDER BY",
                "Start",
                "DESC",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "a",
                "AppointmentID"
            ],
            "Token_Name_Label": "Appointment",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                86213939
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the id of the appointment that started most recently?",
        "cypher_query": "MATCH (a:Appointment)\nRETURN a.AppointmentID\nORDER BY a.Start DESC\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "ORDER BY",
                "Start",
                "DESC",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "a",
                "AppointmentID"
            ],
            "Token_Name_Label": "Appointment",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                86213939
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many different types of rooms are there?",
        "cypher_query": "MATCH (r:Room)\nWITH DISTINCT r.RoomType AS roomtype\nRETURN count(roomtype)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH DISTINCT",
                "AS",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "r",
                "RoomType",
                "roomtype"
            ],
            "Token_Name_Label": "Room",
            "Token_Operator": ".",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                1
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of distinct room types available.",
        "cypher_query": "MATCH (r:Room)\nWITH DISTINCT r.RoomType AS roomtype\nRETURN count(roomtype)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH DISTINCT",
                "AS",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "r",
                "RoomType",
                "roomtype"
            ],
            "Token_Name_Label": "Room",
            "Token_Operator": ".",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                1
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the patient who has the most recent undergoing treatment?",
        "cypher_query": "MATCH (u:Undergoes)\nRETURN u.Patient\nORDER BY u.DateUndergoes\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "ORDER BY",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "u",
                "Patient",
                "DateUndergoes"
            ],
            "Token_Name_Label": "Undergoes",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                100000001
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which patient is undergoing the most recent treatment?",
        "cypher_query": "MATCH (u:Undergoes)\nRETURN u.Patient\nORDER BY u.DateUndergoes\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "ORDER BY",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "u",
                "Patient",
                "DateUndergoes"
            ],
            "Token_Name_Label": "Undergoes",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                100000001
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "List the names of all distinct nurses ordered by alphabetical order?",
        "cypher_query": "MATCH (n:Nurse)\nRETURN DISTINCT n.Name\nORDER BY n.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "n",
            "Token_Name_Label": "Nurse",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the alphabetically ordered list of all the distinct names of nurses?",
        "cypher_query": "MATCH (n:Nurse)\nRETURN DISTINCT n.Name\nORDER BY n.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "n",
            "Token_Name_Label": "Nurse",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "List the names of all distinct medications, ordered in an alphabetical order.",
        "cypher_query": "MATCH (m:Medication)\nRETURN DISTINCT m.Name\nORDER BY m.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "m",
            "Token_Name_Label": "Medication",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Awakin"
            ],
            [
                "Crescavitin"
            ],
            [
                "Melioraurin"
            ],
            [
                "Procrastin-X"
            ],
            [
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the alphabetically ordered list of all distinct medications?",
        "cypher_query": "MATCH (m:Medication)\nRETURN DISTINCT m.Name\nORDER BY m.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "m",
            "Token_Name_Label": "Medication",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Awakin"
            ],
            [
                "Crescavitin"
            ],
            [
                "Melioraurin"
            ],
            [
                "Procrastin-X"
            ],
            [
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What are the highest cost, lowest cost and average cost of procedures?",
        "cypher_query": "MATCH (p:Procedures)\nRETURN MAX(p.Cost),MIN(p.Cost),AVG(p.Cost)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Name_Function": [
                "MAX",
                "MIN",
                "AVG"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                10000.0,
                25.0,
                4324.857142857143
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Tell me the highest, lowest, and average cost of procedures.",
        "cypher_query": "MATCH (p:Procedures)\nRETURN MAX(p.Cost),MIN(p.Cost),AVG(p.Cost)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Name_Function": [
                "MAX",
                "MIN",
                "AVG"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                10000.0,
                25.0,
                4324.857142857143
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "List the name and cost of all procedures sorted by the cost from the highest to the lowest.",
        "cypher_query": "MATCH (p:Procedures)\nRETURN p.Name,p.Cost\nORDER BY p.Cost DESC",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name",
                "ORDER BY",
                "DESC"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Complete Walletectomy",
                10000.0
            ],
            [
                "Reversible Pancreomyoplasty",
                5600.0
            ],
            [
                "Obfuscated Dermogastrotomy",
                4899.0
            ],
            [
                "Folded Demiophtalmectomy",
                4500.0
            ],
            [
                "Obtuse Pyloric Recombobulation",
                3750.0
            ],
            [
                "Reverse Rhinopodoplasty",
                1500.0
            ],
            [
                "Follicular Demiectomy",
                25.0
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Sort the list of names and costs of all procedures in the descending order of cost.",
        "cypher_query": "MATCH (p:Procedures)\nRETURN p.Name,p.Cost\nORDER BY p.Cost DESC",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name",
                "ORDER BY",
                "DESC"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Complete Walletectomy",
                10000.0
            ],
            [
                "Reversible Pancreomyoplasty",
                5600.0
            ],
            [
                "Obfuscated Dermogastrotomy",
                4899.0
            ],
            [
                "Folded Demiophtalmectomy",
                4500.0
            ],
            [
                "Obtuse Pyloric Recombobulation",
                3750.0
            ],
            [
                "Reverse Rhinopodoplasty",
                1500.0
            ],
            [
                "Follicular Demiectomy",
                25.0
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the three most expensive procedures.",
        "cypher_query": "MATCH (p:Procedures)\nRETURN p.Name\nORDER BY p.Cost\nLIMIT 3",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name",
                "ORDER BY",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "3"
        },
        "answers": [
            [
                "Follicular Demiectomy"
            ],
            [
                "Reverse Rhinopodoplasty"
            ],
            [
                "Obtuse Pyloric Recombobulation"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What are the three most costly procedures?",
        "cypher_query": "MATCH (p:Procedures)\nRETURN p.Name\nORDER BY p.Cost\nLIMIT 3",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name",
                "ORDER BY",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "3"
        },
        "answers": [
            [
                "Follicular Demiectomy"
            ],
            [
                "Reverse Rhinopodoplasty"
            ],
            [
                "Obtuse Pyloric Recombobulation"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many appointments are there?",
        "cypher_query": "MATCH (a:Appointment)\nRETURN COUNT(\"*\")",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "a",
            "Token_Name_Label": "Appointment",
            "Token_Name_Function": "COUNT",
            "Token_Literal_String": "\"*\""
        },
        "answers": [
            [
                9
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Count how many appointments have been made in total.",
        "cypher_query": "MATCH (a:Appointment)\nRETURN COUNT(\"*\")",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "a",
            "Token_Name_Label": "Appointment",
            "Token_Name_Function": "COUNT",
            "Token_Literal_String": "\"*\""
        },
        "answers": [
            [
                9
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "Find the id of the appointment with the most recent start date?",
        "cypher_query": "MATCH (a:Appointment)\nRETURN a.AppointmentID\nORDER BY a.Start DESC\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "ORDER BY",
                "Start",
                "DESC",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "a",
                "AppointmentID"
            ],
            "Token_Name_Label": "Appointment",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                86213939
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the id of the appointment that started most recently?",
        "cypher_query": "MATCH (a:Appointment)\nRETURN a.AppointmentID\nORDER BY a.Start DESC\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "ORDER BY",
                "Start",
                "DESC",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "a",
                "AppointmentID"
            ],
            "Token_Name_Label": "Appointment",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                86213939
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many different types of rooms are there?",
        "cypher_query": "MATCH (r:Room)\nWITH DISTINCT r.RoomType AS roomtype\nRETURN count(roomtype)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH DISTINCT",
                "AS",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "r",
                "RoomType",
                "roomtype"
            ],
            "Token_Name_Label": "Room",
            "Token_Operator": ".",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                1
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of distinct room types available.",
        "cypher_query": "MATCH (r:Room)\nWITH DISTINCT r.RoomType AS roomtype\nRETURN count(roomtype)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH DISTINCT",
                "AS",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "r",
                "RoomType",
                "roomtype"
            ],
            "Token_Name_Label": "Room",
            "Token_Operator": ".",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                1
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the patient who has the most recent undergoing treatment?",
        "cypher_query": "MATCH (u:Undergoes)\nRETURN u.Patient\nORDER BY u.DateUndergoes\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "ORDER BY",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "u",
                "Patient",
                "DateUndergoes"
            ],
            "Token_Name_Label": "Undergoes",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                100000001
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which patient is undergoing the most recent treatment?",
        "cypher_query": "MATCH (u:Undergoes)\nRETURN u.Patient\nORDER BY u.DateUndergoes\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "ORDER BY",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "u",
                "Patient",
                "DateUndergoes"
            ],
            "Token_Name_Label": "Undergoes",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                100000001
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "List the names of all distinct nurses ordered by alphabetical order?",
        "cypher_query": "MATCH (n:Nurse)\nRETURN DISTINCT n.Name\nORDER BY n.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "n",
            "Token_Name_Label": "Nurse",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the alphabetically ordered list of all the distinct names of nurses?",
        "cypher_query": "MATCH (n:Nurse)\nRETURN DISTINCT n.Name\nORDER BY n.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "n",
            "Token_Name_Label": "Nurse",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "List the names of all distinct medications, ordered in an alphabetical order.",
        "cypher_query": "MATCH (m:Medication)\nRETURN DISTINCT m.Name\nORDER BY m.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "m",
            "Token_Name_Label": "Medication",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Awakin"
            ],
            [
                "Crescavitin"
            ],
            [
                "Melioraurin"
            ],
            [
                "Procrastin-X"
            ],
            [
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the alphabetically ordered list of all distinct medications?",
        "cypher_query": "MATCH (m:Medication)\nRETURN DISTINCT m.Name\nORDER BY m.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "m",
            "Token_Name_Label": "Medication",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Awakin"
            ],
            [
                "Crescavitin"
            ],
            [
                "Melioraurin"
            ],
            [
                "Procrastin-X"
            ],
            [
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What are the highest cost, lowest cost and average cost of procedures?",
        "cypher_query": "MATCH (p:Procedures)\nRETURN MAX(p.Cost),MIN(p.Cost),AVG(p.Cost)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Name_Function": [
                "MAX",
                "MIN",
                "AVG"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                10000.0,
                25.0,
                4324.857142857143
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Tell me the highest, lowest, and average cost of procedures.",
        "cypher_query": "MATCH (p:Procedures)\nRETURN MAX(p.Cost),MIN(p.Cost),AVG(p.Cost)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Name_Function": [
                "MAX",
                "MIN",
                "AVG"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                10000.0,
                25.0,
                4324.857142857143
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "List the name and cost of all procedures sorted by the cost from the highest to the lowest.",
        "cypher_query": "MATCH (p:Procedures)\nRETURN p.Name,p.Cost\nORDER BY p.Cost DESC",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name",
                "ORDER BY",
                "DESC"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Complete Walletectomy",
                10000.0
            ],
            [
                "Reversible Pancreomyoplasty",
                5600.0
            ],
            [
                "Obfuscated Dermogastrotomy",
                4899.0
            ],
            [
                "Folded Demiophtalmectomy",
                4500.0
            ],
            [
                "Obtuse Pyloric Recombobulation",
                3750.0
            ],
            [
                "Reverse Rhinopodoplasty",
                1500.0
            ],
            [
                "Follicular Demiectomy",
                25.0
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Sort the list of names and costs of all procedures in the descending order of cost.",
        "cypher_query": "MATCH (p:Procedures)\nRETURN p.Name,p.Cost\nORDER BY p.Cost DESC",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name",
                "ORDER BY",
                "DESC"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Complete Walletectomy",
                10000.0
            ],
            [
                "Reversible Pancreomyoplasty",
                5600.0
            ],
            [
                "Obfuscated Dermogastrotomy",
                4899.0
            ],
            [
                "Folded Demiophtalmectomy",
                4500.0
            ],
            [
                "Obtuse Pyloric Recombobulation",
                3750.0
            ],
            [
                "Reverse Rhinopodoplasty",
                1500.0
            ],
            [
                "Follicular Demiectomy",
                25.0
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the three most expensive procedures.",
        "cypher_query": "MATCH (p:Procedures)\nRETURN p.Name\nORDER BY p.Cost\nLIMIT 3",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name",
                "ORDER BY",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "3"
        },
        "answers": [
            [
                "Follicular Demiectomy"
            ],
            [
                "Reverse Rhinopodoplasty"
            ],
            [
                "Obtuse Pyloric Recombobulation"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What are the three most costly procedures?",
        "cypher_query": "MATCH (p:Procedures)\nRETURN p.Name\nORDER BY p.Cost\nLIMIT 3",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name",
                "ORDER BY",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "3"
        },
        "answers": [
            [
                "Follicular Demiectomy"
            ],
            [
                "Reverse Rhinopodoplasty"
            ],
            [
                "Obtuse Pyloric Recombobulation"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many appointments are there?",
        "cypher_query": "MATCH (a:Appointment)\nRETURN COUNT(\"*\")",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "a",
            "Token_Name_Label": "Appointment",
            "Token_Name_Function": "COUNT",
            "Token_Literal_String": "\"*\""
        },
        "answers": [
            [
                9
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Count how many appointments have been made in total.",
        "cypher_query": "MATCH (a:Appointment)\nRETURN COUNT(\"*\")",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "a",
            "Token_Name_Label": "Appointment",
            "Token_Name_Function": "COUNT",
            "Token_Literal_String": "\"*\""
        },
        "answers": [
            [
                9
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "Find the id of the appointment with the most recent start date?",
        "cypher_query": "MATCH (a:Appointment)\nRETURN a.AppointmentID\nORDER BY a.Start DESC\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "ORDER BY",
                "Start",
                "DESC",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "a",
                "AppointmentID"
            ],
            "Token_Name_Label": "Appointment",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                86213939
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the id of the appointment that started most recently?",
        "cypher_query": "MATCH (a:Appointment)\nRETURN a.AppointmentID\nORDER BY a.Start DESC\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "ORDER BY",
                "Start",
                "DESC",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "a",
                "AppointmentID"
            ],
            "Token_Name_Label": "Appointment",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                86213939
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many patients' prescriptions are made by physician John Dorian?",
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Prescribes)-[]-(T3:Physician)\nWHERE T3.Name = \"John Dorian\"\nRETURN COUNT(T1.SSN)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3",
                "SSN"
            ],
            "Token_Name_Label": [
                "Patient",
                "Prescribes",
                "Physician"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "\"John Dorian\"",
            "Token_Name_Function": "COUNT"
        },
        "answers": [
            [
                1
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of patients' prescriptions physician John Dorian made.",
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Prescribes)-[]-(T3:Physician)\nWHERE T3.Name = \"John Dorian\"\nRETURN COUNT(T1.SSN)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3",
                "SSN"
            ],
            "Token_Name_Label": [
                "Patient",
                "Prescribes",
                "Physician"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "\"John Dorian\"",
            "Token_Name_Function": "COUNT"
        },
        "answers": [
            [
                1
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many different types of rooms are there?",
        "cypher_query": "MATCH (r:Room)\nWITH DISTINCT r.RoomType AS roomtype\nRETURN count(roomtype)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH DISTINCT",
                "AS",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "r",
                "RoomType",
                "roomtype"
            ],
            "Token_Name_Label": "Room",
            "Token_Operator": ".",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                1
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of distinct room types available.",
        "cypher_query": "MATCH (r:Room)\nWITH DISTINCT r.RoomType AS roomtype\nRETURN count(roomtype)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH DISTINCT",
                "AS",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "r",
                "RoomType",
                "roomtype"
            ],
            "Token_Name_Label": "Room",
            "Token_Operator": ".",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                1
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the patient who has the most recent undergoing treatment?",
        "cypher_query": "MATCH (u:Undergoes)\nRETURN u.Patient\nORDER BY u.DateUndergoes\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "ORDER BY",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "u",
                "Patient",
                "DateUndergoes"
            ],
            "Token_Name_Label": "Undergoes",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                100000001
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which patient is undergoing the most recent treatment?",
        "cypher_query": "MATCH (u:Undergoes)\nRETURN u.Patient\nORDER BY u.DateUndergoes\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "ORDER BY",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "u",
                "Patient",
                "DateUndergoes"
            ],
            "Token_Name_Label": "Undergoes",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                100000001
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "List the names of all distinct nurses ordered by alphabetical order?",
        "cypher_query": "MATCH (n:Nurse)\nRETURN DISTINCT n.Name\nORDER BY n.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "n",
            "Token_Name_Label": "Nurse",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the alphabetically ordered list of all the distinct names of nurses?",
        "cypher_query": "MATCH (n:Nurse)\nRETURN DISTINCT n.Name\nORDER BY n.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "n",
            "Token_Name_Label": "Nurse",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the names of nurses who are nursing an undergoing treatment.",
        "cypher_query": "MATCH (T1:Undergoes)-[]-(T2:Nurse)\nRETURN DISTINCT T2.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2"
            ],
            "Token_Name_Label": [
                "Undergoes",
                "Nurse"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which nurses are in charge of patients undergoing treatments?",
        "cypher_query": "MATCH (T1:Undergoes)-[]-(T2:Nurse)\nRETURN DISTINCT T2.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2"
            ],
            "Token_Name_Label": [
                "Undergoes",
                "Nurse"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "List the names of all distinct medications, ordered in an alphabetical order.",
        "cypher_query": "MATCH (m:Medication)\nRETURN DISTINCT m.Name\nORDER BY m.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "m",
            "Token_Name_Label": "Medication",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Awakin"
            ],
            [
                "Crescavitin"
            ],
            [
                "Melioraurin"
            ],
            [
                "Procrastin-X"
            ],
            [
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the alphabetically ordered list of all distinct medications?",
        "cypher_query": "MATCH (m:Medication)\nRETURN DISTINCT m.Name\nORDER BY m.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "m",
            "Token_Name_Label": "Medication",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Awakin"
            ],
            [
                "Crescavitin"
            ],
            [
                "Melioraurin"
            ],
            [
                "Procrastin-X"
            ],
            [
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What are the highest cost, lowest cost and average cost of procedures?",
        "cypher_query": "MATCH (p:Procedures)\nRETURN MAX(p.Cost),MIN(p.Cost),AVG(p.Cost)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Name_Function": [
                "MAX",
                "MIN",
                "AVG"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                10000.0,
                25.0,
                4324.857142857143
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Tell me the highest, lowest, and average cost of procedures.",
        "cypher_query": "MATCH (p:Procedures)\nRETURN MAX(p.Cost),MIN(p.Cost),AVG(p.Cost)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Name_Function": [
                "MAX",
                "MIN",
                "AVG"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                10000.0,
                25.0,
                4324.857142857143
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "List the name and cost of all procedures sorted by the cost from the highest to the lowest.",
        "cypher_query": "MATCH (p:Procedures)\nRETURN p.Name,p.Cost\nORDER BY p.Cost DESC",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name",
                "ORDER BY",
                "DESC"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Complete Walletectomy",
                10000.0
            ],
            [
                "Reversible Pancreomyoplasty",
                5600.0
            ],
            [
                "Obfuscated Dermogastrotomy",
                4899.0
            ],
            [
                "Folded Demiophtalmectomy",
                4500.0
            ],
            [
                "Obtuse Pyloric Recombobulation",
                3750.0
            ],
            [
                "Reverse Rhinopodoplasty",
                1500.0
            ],
            [
                "Follicular Demiectomy",
                25.0
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Sort the list of names and costs of all procedures in the descending order of cost.",
        "cypher_query": "MATCH (p:Procedures)\nRETURN p.Name,p.Cost\nORDER BY p.Cost DESC",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name",
                "ORDER BY",
                "DESC"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Complete Walletectomy",
                10000.0
            ],
            [
                "Reversible Pancreomyoplasty",
                5600.0
            ],
            [
                "Obfuscated Dermogastrotomy",
                4899.0
            ],
            [
                "Folded Demiophtalmectomy",
                4500.0
            ],
            [
                "Obtuse Pyloric Recombobulation",
                3750.0
            ],
            [
                "Reverse Rhinopodoplasty",
                1500.0
            ],
            [
                "Follicular Demiectomy",
                25.0
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the three most expensive procedures.",
        "cypher_query": "MATCH (p:Procedures)\nRETURN p.Name\nORDER BY p.Cost\nLIMIT 3",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name",
                "ORDER BY",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "3"
        },
        "answers": [
            [
                "Follicular Demiectomy"
            ],
            [
                "Reverse Rhinopodoplasty"
            ],
            [
                "Obtuse Pyloric Recombobulation"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What are the three most costly procedures?",
        "cypher_query": "MATCH (p:Procedures)\nRETURN p.Name\nORDER BY p.Cost\nLIMIT 3",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name",
                "ORDER BY",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "3"
        },
        "answers": [
            [
                "Follicular Demiectomy"
            ],
            [
                "Reverse Rhinopodoplasty"
            ],
            [
                "Obtuse Pyloric Recombobulation"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the physicians who are trained in a procedure that costs more than 5000.",
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T3.Cost > 5000\nRETURN T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3",
                "Cost"
            ],
            "Token_Name_Label": [
                "Physician",
                "Trained_In",
                "Procedures"
            ],
            "Token_Operator": [
                ".",
                ">"
            ],
            "Token_Literal_Number_Integer": "5000"
        },
        "answers": [
            [
                "John Wen"
            ],
            [
                "John Wen"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "Christopher Turk"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which physicians are trained in procedures that are more expensive than 5000?",
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T3.Cost > 5000\nRETURN T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3",
                "Cost"
            ],
            "Token_Name_Label": [
                "Physician",
                "Trained_In",
                "Procedures"
            ],
            "Token_Operator": [
                ".",
                ">"
            ],
            "Token_Literal_Number_Integer": "5000"
        },
        "answers": [
            [
                "John Wen"
            ],
            [
                "John Wen"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "Christopher Turk"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the average cost of procedures that physician John Wen was trained in?",
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T1.Name = \"John Wen\"\nRETURN AVG(T3.Cost)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3",
                "Cost"
            ],
            "Token_Name_Label": [
                "Physician",
                "Trained_In",
                "Procedures"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "\"John Wen\"",
            "Token_Name_Function": "AVG"
        },
        "answers": [
            [
                4324.857142857143
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Compute the mean price of procedures physician John Wen was trained in.",
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T1.Name = \"John Wen\"\nRETURN AVG(T3.Cost)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3",
                "Cost"
            ],
            "Token_Name_Label": [
                "Physician",
                "Trained_In",
                "Procedures"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "\"John Wen\"",
            "Token_Name_Function": "AVG"
        },
        "answers": [
            [
                4324.857142857143
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the names of procedures which physician John Wen was trained in.",
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T1.Name = \"John Wen\"\nRETURN T3.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3"
            ],
            "Token_Name_Label": [
                "Physician",
                "Trained_In",
                "Procedures"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "\"John Wen\""
        },
        "answers": [
            [
                "Obfuscated Dermogastrotomy"
            ],
            [
                "Reverse Rhinopodoplasty"
            ],
            [
                "Follicular Demiectomy"
            ],
            [
                "Folded Demiophtalmectomy"
            ],
            [
                "Reversible Pancreomyoplasty"
            ],
            [
                "Obtuse Pyloric Recombobulation"
            ],
            [
                "Complete Walletectomy"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of procedures physician John Wen was trained in?",
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T1.Name = \"John Wen\"\nRETURN T3.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3"
            ],
            "Token_Name_Label": [
                "Physician",
                "Trained_In",
                "Procedures"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "\"John Wen\""
        },
        "answers": [
            [
                "Obfuscated Dermogastrotomy"
            ],
            [
                "Reverse Rhinopodoplasty"
            ],
            [
                "Follicular Demiectomy"
            ],
            [
                "Folded Demiophtalmectomy"
            ],
            [
                "Reversible Pancreomyoplasty"
            ],
            [
                "Obtuse Pyloric Recombobulation"
            ],
            [
                "Complete Walletectomy"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians who are affiliated with Surgery or Psychiatry department.",
        "cypher_query": "MATCH (T1:Physician)-[T2:Affiliated_With]-(T3:Department)\nWHERE T3.Name = 'Surgery' OR T3.Name = 'Psychiatry'\nRETURN T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3"
            ],
            "Token_Name_Label": [
                "Physician",
                "Affiliated_With",
                "Department"
            ],
            "Token_Operator": [
                ".",
                "=",
                "OR"
            ],
            "Token_Literal_String": [
                "'Surgery'",
                "'Psychiatry'"
            ]
        },
        "answers": [
            [
                "Christopher Turk"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "John Wen"
            ],
            [
                "Molly Clock"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which physicians are affiliated with either Surgery or Psychiatry department? Give me their names.",
        "cypher_query": "MATCH (T1:Physician)-[T2:Affiliated_With]-(T3:Department)\nWHERE T3.Name = 'Surgery' OR T3.Name = 'Psychiatry'\nRETURN T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3"
            ],
            "Token_Name_Label": [
                "Physician",
                "Affiliated_With",
                "Department"
            ],
            "Token_Operator": [
                ".",
                "=",
                "OR"
            ],
            "Token_Literal_String": [
                "'Surgery'",
                "'Psychiatry'"
            ]
        },
        "answers": [
            [
                "Christopher Turk"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "John Wen"
            ],
            [
                "Molly Clock"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of patients who are not using the medication of Procrastin-X.",
        "cypher_query": "MATCH (p:Patient) MATCH (T1:Prescribes)-[]-(T2:Medication)\nWHERE T2.Name = 'Procrastin-X' AND NOT p.SSN in T1.Patient\nRETURN count(DISTINCT p.SSN)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ")-[",
                "]-("
            ],
            "Token_Name_Variable": [
                "p",
                "T1",
                "T2",
                "SSN",
                "Patient"
            ],
            "Token_Name_Label": [
                "Patient",
                "Prescribes",
                "Medication"
            ],
            "Token_Operator": [
                ".",
                "=",
                "AND",
                "NOT",
                "in",
                "DISTINCT"
            ],
            "Token_Literal_String": "'Procrastin-X'",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                3
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many patients are not using Procrastin-X as medication?",
        "cypher_query": "MATCH (p:Patient) MATCH (T1:Prescribes)-[]-(T2:Medication)\nWHERE T2.Name = 'Procrastin-X' AND NOT p.SSN in T1.Patient\nRETURN count(DISTINCT p.SSN)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ")-[",
                "]-("
            ],
            "Token_Name_Variable": [
                "p",
                "T1",
                "T2",
                "SSN",
                "Patient"
            ],
            "Token_Name_Label": [
                "Patient",
                "Prescribes",
                "Medication"
            ],
            "Token_Operator": [
                ".",
                "=",
                "AND",
                "NOT",
                "in",
                "DISTINCT"
            ],
            "Token_Literal_String": "'Procrastin-X'",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                3
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many appointments are there?",
        "cypher_query": "MATCH (a:Appointment)\nRETURN COUNT(\"*\")",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "a",
            "Token_Name_Label": "Appointment",
            "Token_Name_Function": "COUNT",
            "Token_Literal_String": "\"*\""
        },
        "answers": [
            [
                9
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Count how many appointments have been made in total.",
        "cypher_query": "MATCH (a:Appointment)\nRETURN COUNT(\"*\")",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "a",
            "Token_Name_Label": "Appointment",
            "Token_Name_Function": "COUNT",
            "Token_Literal_String": "\"*\""
        },
        "answers": [
            [
                9
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the names of nurses who are on call.",
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:On_Call)\nRETURN DISTINCT T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2"
            ],
            "Token_Name_Label": [
                "Nurse",
                "On_Call"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What are the distinct names of nurses on call?",
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:On_Call)\nRETURN DISTINCT T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2"
            ],
            "Token_Name_Label": [
                "Nurse",
                "On_Call"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    }
][][][][][
    {
        "db_id": "hospital_1",
        "question": "Which physician was trained in the procedure that costs the most.",
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name",
                "ORDER BY",
                "DESC",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3",
                "cost"
            ],
            "Token_Name_Label": [
                "Physician",
                "Trained_In",
                "Procedures"
            ],
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                "John Wen"
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "How many patients' prescriptions are made by physician John Dorian?",
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Prescribes)-[]-(T3:Physician)\nWHERE T3.Name = \"John Dorian\"\nRETURN COUNT(T1.SSN)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3",
                "SSN"
            ],
            "Token_Name_Label": [
                "Patient",
                "Prescribes",
                "Physician"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "\"John Dorian\"",
            "Token_Name_Function": "COUNT"
        },
        "answers": [
            [
                1
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of patients' prescriptions physician John Dorian made.",
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Prescribes)-[]-(T3:Physician)\nWHERE T3.Name = \"John Dorian\"\nRETURN COUNT(T1.SSN)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3",
                "SSN"
            ],
            "Token_Name_Label": [
                "Patient",
                "Prescribes",
                "Physician"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "\"John Dorian\"",
            "Token_Name_Function": "COUNT"
        },
        "answers": [
            [
                1
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many different types of rooms are there?",
        "cypher_query": "MATCH (r:Room)\nWITH DISTINCT r.RoomType AS roomtype\nRETURN count(roomtype)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH DISTINCT",
                "AS",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "r",
                "RoomType",
                "roomtype"
            ],
            "Token_Name_Label": "Room",
            "Token_Operator": ".",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                1
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of distinct room types available.",
        "cypher_query": "MATCH (r:Room)\nWITH DISTINCT r.RoomType AS roomtype\nRETURN count(roomtype)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH DISTINCT",
                "AS",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "r",
                "RoomType",
                "roomtype"
            ],
            "Token_Name_Label": "Room",
            "Token_Operator": ".",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                1
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the names of nurses who are nursing an undergoing treatment.",
        "cypher_query": "MATCH (T1:Undergoes)-[]-(T2:Nurse)\nRETURN DISTINCT T2.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2"
            ],
            "Token_Name_Label": [
                "Undergoes",
                "Nurse"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which nurses are in charge of patients undergoing treatments?",
        "cypher_query": "MATCH (T1:Undergoes)-[]-(T2:Nurse)\nRETURN DISTINCT T2.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2"
            ],
            "Token_Name_Label": [
                "Undergoes",
                "Nurse"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of the physician who prescribed the highest dose?",
        "cypher_query": "MATCH (T1:Physician)-[]-(T2:Prescribes)\nRETURN T1.Name\nORDER BY T2.dose DESC\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name",
                "ORDER BY",
                "DESC",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "dose"
            ],
            "Token_Name_Label": [
                "Physician",
                "Prescribes"
            ],
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                "John Dorian"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the physician who prescribed the highest dose. What is his or her name?",
        "cypher_query": "MATCH (T1:Physician)-[]-(T2:Prescribes)\nRETURN T1.Name\nORDER BY T2.dose DESC\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name",
                "ORDER BY",
                "DESC",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "dose"
            ],
            "Token_Name_Label": [
                "Physician",
                "Prescribes"
            ],
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                "John Dorian"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What are the highest cost, lowest cost and average cost of procedures?",
        "cypher_query": "MATCH (p:Procedures)\nRETURN MAX(p.Cost),MIN(p.Cost),AVG(p.Cost)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Name_Function": [
                "MAX",
                "MIN",
                "AVG"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                10000.0,
                25.0,
                4324.857142857143
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Tell me the highest, lowest, and average cost of procedures.",
        "cypher_query": "MATCH (p:Procedures)\nRETURN MAX(p.Cost),MIN(p.Cost),AVG(p.Cost)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Name_Function": [
                "MAX",
                "MIN",
                "AVG"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                10000.0,
                25.0,
                4324.857142857143
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the physicians who are trained in a procedure that costs more than 5000.",
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T3.Cost > 5000\nRETURN T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3",
                "Cost"
            ],
            "Token_Name_Label": [
                "Physician",
                "Trained_In",
                "Procedures"
            ],
            "Token_Operator": [
                ".",
                ">"
            ],
            "Token_Literal_Number_Integer": "5000"
        },
        "answers": [
            [
                "John Wen"
            ],
            [
                "John Wen"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "Christopher Turk"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which physicians are trained in procedures that are more expensive than 5000?",
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T3.Cost > 5000\nRETURN T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3",
                "Cost"
            ],
            "Token_Name_Label": [
                "Physician",
                "Trained_In",
                "Procedures"
            ],
            "Token_Operator": [
                ".",
                ">"
            ],
            "Token_Literal_Number_Integer": "5000"
        },
        "answers": [
            [
                "John Wen"
            ],
            [
                "John Wen"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "Christopher Turk"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the physician who was trained in the most expensive procedure?",
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name",
                "ORDER BY",
                "DESC",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3",
                "cost"
            ],
            "Token_Name_Label": [
                "Physician",
                "Trained_In",
                "Procedures"
            ],
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                "John Wen"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which physician was trained in the procedure that costs the most.",
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name",
                "ORDER BY",
                "DESC",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3",
                "cost"
            ],
            "Token_Name_Label": [
                "Physician",
                "Trained_In",
                "Procedures"
            ],
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                "John Wen"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the average cost of procedures that physician John Wen was trained in?",
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T1.Name = \"John Wen\"\nRETURN AVG(T3.Cost)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3",
                "Cost"
            ],
            "Token_Name_Label": [
                "Physician",
                "Trained_In",
                "Procedures"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "\"John Wen\"",
            "Token_Name_Function": "AVG"
        },
        "answers": [
            [
                4324.857142857143
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Compute the mean price of procedures physician John Wen was trained in.",
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T1.Name = \"John Wen\"\nRETURN AVG(T3.Cost)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3",
                "Cost"
            ],
            "Token_Name_Label": [
                "Physician",
                "Trained_In",
                "Procedures"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "\"John Wen\"",
            "Token_Name_Function": "AVG"
        },
        "answers": [
            [
                4324.857142857143
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the names of procedures which physician John Wen was trained in.",
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T1.Name = \"John Wen\"\nRETURN T3.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3"
            ],
            "Token_Name_Label": [
                "Physician",
                "Trained_In",
                "Procedures"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "\"John Wen\""
        },
        "answers": [
            [
                "Obfuscated Dermogastrotomy"
            ],
            [
                "Reverse Rhinopodoplasty"
            ],
            [
                "Follicular Demiectomy"
            ],
            [
                "Folded Demiophtalmectomy"
            ],
            [
                "Reversible Pancreomyoplasty"
            ],
            [
                "Obtuse Pyloric Recombobulation"
            ],
            [
                "Complete Walletectomy"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of procedures physician John Wen was trained in?",
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T1.Name = \"John Wen\"\nRETURN T3.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3"
            ],
            "Token_Name_Label": [
                "Physician",
                "Trained_In",
                "Procedures"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "\"John Wen\""
        },
        "answers": [
            [
                "Obfuscated Dermogastrotomy"
            ],
            [
                "Reverse Rhinopodoplasty"
            ],
            [
                "Follicular Demiectomy"
            ],
            [
                "Folded Demiophtalmectomy"
            ],
            [
                "Reversible Pancreomyoplasty"
            ],
            [
                "Obtuse Pyloric Recombobulation"
            ],
            [
                "Complete Walletectomy"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians who are affiliated with Surgery or Psychiatry department.",
        "cypher_query": "MATCH (T1:Physician)-[T2:Affiliated_With]-(T3:Department)\nWHERE T3.Name = 'Surgery' OR T3.Name = 'Psychiatry'\nRETURN T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3"
            ],
            "Token_Name_Label": [
                "Physician",
                "Affiliated_With",
                "Department"
            ],
            "Token_Operator": [
                ".",
                "=",
                "OR"
            ],
            "Token_Literal_String": [
                "'Surgery'",
                "'Psychiatry'"
            ]
        },
        "answers": [
            [
                "Christopher Turk"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "John Wen"
            ],
            [
                "Molly Clock"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which physicians are affiliated with either Surgery or Psychiatry department? Give me their names.",
        "cypher_query": "MATCH (T1:Physician)-[T2:Affiliated_With]-(T3:Department)\nWHERE T3.Name = 'Surgery' OR T3.Name = 'Psychiatry'\nRETURN T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3"
            ],
            "Token_Name_Label": [
                "Physician",
                "Affiliated_With",
                "Department"
            ],
            "Token_Operator": [
                ".",
                "=",
                "OR"
            ],
            "Token_Literal_String": [
                "'Surgery'",
                "'Psychiatry'"
            ]
        },
        "answers": [
            [
                "Christopher Turk"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "John Wen"
            ],
            [
                "Molly Clock"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of patients who are not using the medication of Procrastin-X.",
        "cypher_query": "MATCH (p:Patient) MATCH (T1:Prescribes)-[]-(T2:Medication)\nWHERE T2.Name = 'Procrastin-X' AND NOT p.SSN in T1.Patient\nRETURN count(DISTINCT p.SSN)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ")-[",
                "]-("
            ],
            "Token_Name_Variable": [
                "p",
                "T1",
                "T2",
                "SSN",
                "Patient"
            ],
            "Token_Name_Label": [
                "Patient",
                "Prescribes",
                "Medication"
            ],
            "Token_Operator": [
                ".",
                "=",
                "AND",
                "NOT",
                "in",
                "DISTINCT"
            ],
            "Token_Literal_String": "'Procrastin-X'",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                3
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many patients are not using Procrastin-X as medication?",
        "cypher_query": "MATCH (p:Patient) MATCH (T1:Prescribes)-[]-(T2:Medication)\nWHERE T2.Name = 'Procrastin-X' AND NOT p.SSN in T1.Patient\nRETURN count(DISTINCT p.SSN)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ")-[",
                "]-("
            ],
            "Token_Name_Variable": [
                "p",
                "T1",
                "T2",
                "SSN",
                "Patient"
            ],
            "Token_Name_Label": [
                "Patient",
                "Prescribes",
                "Medication"
            ],
            "Token_Operator": [
                ".",
                "=",
                "AND",
                "NOT",
                "in",
                "DISTINCT"
            ],
            "Token_Literal_String": "'Procrastin-X'",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                3
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many appointments are there?",
        "cypher_query": "MATCH (a:Appointment)\nRETURN COUNT(\"*\")",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "a",
            "Token_Name_Label": "Appointment",
            "Token_Name_Function": "COUNT",
            "Token_Literal_String": "\"*\""
        },
        "answers": [
            [
                9
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Count how many appointments have been made in total.",
        "cypher_query": "MATCH (a:Appointment)\nRETURN COUNT(\"*\")",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "a",
            "Token_Name_Label": "Appointment",
            "Token_Name_Function": "COUNT",
            "Token_Literal_String": "\"*\""
        },
        "answers": [
            [
                9
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the names of nurses who are on call.",
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:On_Call)\nRETURN DISTINCT T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2"
            ],
            "Token_Name_Label": [
                "Nurse",
                "On_Call"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What are the distinct names of nurses on call?",
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:On_Call)\nRETURN DISTINCT T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2"
            ],
            "Token_Name_Label": [
                "Nurse",
                "On_Call"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    }
][][][][][][][][][][][][][][][][
    {
        "db_id": "hospital_1",
        "question": "What are the three most costly procedures?",
        "cypher_query": "MATCH (p:Procedures)\nRETURN p.Name\nORDER BY p.Cost\nLIMIT 3",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name",
                "ORDER BY",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "3"
        },
        "answers": [
            [
                "Follicular Demiectomy"
            ],
            [
                "Reverse Rhinopodoplasty"
            ],
            [
                "Obtuse Pyloric Recombobulation"
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "Find the id of the appointment with the most recent start date?",
        "cypher_query": "MATCH (a:Appointment)\nRETURN a.AppointmentID\nORDER BY a.Start DESC\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "ORDER BY",
                "Start",
                "DESC",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "a",
                "AppointmentID"
            ],
            "Token_Name_Label": "Appointment",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                86213939
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the id of the appointment that started most recently?",
        "cypher_query": "MATCH (a:Appointment)\nRETURN a.AppointmentID\nORDER BY a.Start DESC\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "ORDER BY",
                "Start",
                "DESC",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "a",
                "AppointmentID"
            ],
            "Token_Name_Label": "Appointment",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                86213939
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many patients' prescriptions are made by physician John Dorian?",
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Prescribes)-[]-(T3:Physician)\nWHERE T3.Name = \"John Dorian\"\nRETURN COUNT(T1.SSN)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3",
                "SSN"
            ],
            "Token_Name_Label": [
                "Patient",
                "Prescribes",
                "Physician"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "\"John Dorian\"",
            "Token_Name_Function": "COUNT"
        },
        "answers": [
            [
                1
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of patients' prescriptions physician John Dorian made.",
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Prescribes)-[]-(T3:Physician)\nWHERE T3.Name = \"John Dorian\"\nRETURN COUNT(T1.SSN)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3",
                "SSN"
            ],
            "Token_Name_Label": [
                "Patient",
                "Prescribes",
                "Physician"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "\"John Dorian\"",
            "Token_Name_Function": "COUNT"
        },
        "answers": [
            [
                1
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many different types of rooms are there?",
        "cypher_query": "MATCH (r:Room)\nWITH DISTINCT r.RoomType AS roomtype\nRETURN count(roomtype)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH DISTINCT",
                "AS",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "r",
                "RoomType",
                "roomtype"
            ],
            "Token_Name_Label": "Room",
            "Token_Operator": ".",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                1
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of distinct room types available.",
        "cypher_query": "MATCH (r:Room)\nWITH DISTINCT r.RoomType AS roomtype\nRETURN count(roomtype)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH DISTINCT",
                "AS",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "r",
                "RoomType",
                "roomtype"
            ],
            "Token_Name_Label": "Room",
            "Token_Operator": ".",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                1
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the patient who has the most recent undergoing treatment?",
        "cypher_query": "MATCH (u:Undergoes)\nRETURN u.Patient\nORDER BY u.DateUndergoes\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "ORDER BY",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "u",
                "Patient",
                "DateUndergoes"
            ],
            "Token_Name_Label": "Undergoes",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                100000001
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which patient is undergoing the most recent treatment?",
        "cypher_query": "MATCH (u:Undergoes)\nRETURN u.Patient\nORDER BY u.DateUndergoes\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "ORDER BY",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "u",
                "Patient",
                "DateUndergoes"
            ],
            "Token_Name_Label": "Undergoes",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                100000001
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "List the names of all distinct nurses ordered by alphabetical order?",
        "cypher_query": "MATCH (n:Nurse)\nRETURN DISTINCT n.Name\nORDER BY n.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "n",
            "Token_Name_Label": "Nurse",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the alphabetically ordered list of all the distinct names of nurses?",
        "cypher_query": "MATCH (n:Nurse)\nRETURN DISTINCT n.Name\nORDER BY n.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "n",
            "Token_Name_Label": "Nurse",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the names of nurses who are nursing an undergoing treatment.",
        "cypher_query": "MATCH (T1:Undergoes)-[]-(T2:Nurse)\nRETURN DISTINCT T2.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2"
            ],
            "Token_Name_Label": [
                "Undergoes",
                "Nurse"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which nurses are in charge of patients undergoing treatments?",
        "cypher_query": "MATCH (T1:Undergoes)-[]-(T2:Nurse)\nRETURN DISTINCT T2.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2"
            ],
            "Token_Name_Label": [
                "Undergoes",
                "Nurse"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "List the names of all distinct medications, ordered in an alphabetical order.",
        "cypher_query": "MATCH (m:Medication)\nRETURN DISTINCT m.Name\nORDER BY m.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "m",
            "Token_Name_Label": "Medication",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Awakin"
            ],
            [
                "Crescavitin"
            ],
            [
                "Melioraurin"
            ],
            [
                "Procrastin-X"
            ],
            [
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the alphabetically ordered list of all distinct medications?",
        "cypher_query": "MATCH (m:Medication)\nRETURN DISTINCT m.Name\nORDER BY m.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "m",
            "Token_Name_Label": "Medication",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Awakin"
            ],
            [
                "Crescavitin"
            ],
            [
                "Melioraurin"
            ],
            [
                "Procrastin-X"
            ],
            [
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What are the highest cost, lowest cost and average cost of procedures?",
        "cypher_query": "MATCH (p:Procedures)\nRETURN MAX(p.Cost),MIN(p.Cost),AVG(p.Cost)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Name_Function": [
                "MAX",
                "MIN",
                "AVG"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                10000.0,
                25.0,
                4324.857142857143
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Tell me the highest, lowest, and average cost of procedures.",
        "cypher_query": "MATCH (p:Procedures)\nRETURN MAX(p.Cost),MIN(p.Cost),AVG(p.Cost)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Name_Function": [
                "MAX",
                "MIN",
                "AVG"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                10000.0,
                25.0,
                4324.857142857143
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "List the name and cost of all procedures sorted by the cost from the highest to the lowest.",
        "cypher_query": "MATCH (p:Procedures)\nRETURN p.Name,p.Cost\nORDER BY p.Cost DESC",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name",
                "ORDER BY",
                "DESC"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Complete Walletectomy",
                10000.0
            ],
            [
                "Reversible Pancreomyoplasty",
                5600.0
            ],
            [
                "Obfuscated Dermogastrotomy",
                4899.0
            ],
            [
                "Folded Demiophtalmectomy",
                4500.0
            ],
            [
                "Obtuse Pyloric Recombobulation",
                3750.0
            ],
            [
                "Reverse Rhinopodoplasty",
                1500.0
            ],
            [
                "Follicular Demiectomy",
                25.0
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Sort the list of names and costs of all procedures in the descending order of cost.",
        "cypher_query": "MATCH (p:Procedures)\nRETURN p.Name,p.Cost\nORDER BY p.Cost DESC",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name",
                "ORDER BY",
                "DESC"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Complete Walletectomy",
                10000.0
            ],
            [
                "Reversible Pancreomyoplasty",
                5600.0
            ],
            [
                "Obfuscated Dermogastrotomy",
                4899.0
            ],
            [
                "Folded Demiophtalmectomy",
                4500.0
            ],
            [
                "Obtuse Pyloric Recombobulation",
                3750.0
            ],
            [
                "Reverse Rhinopodoplasty",
                1500.0
            ],
            [
                "Follicular Demiectomy",
                25.0
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the three most expensive procedures.",
        "cypher_query": "MATCH (p:Procedures)\nRETURN p.Name\nORDER BY p.Cost\nLIMIT 3",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name",
                "ORDER BY",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "3"
        },
        "answers": [
            [
                "Follicular Demiectomy"
            ],
            [
                "Reverse Rhinopodoplasty"
            ],
            [
                "Obtuse Pyloric Recombobulation"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What are the three most costly procedures?",
        "cypher_query": "MATCH (p:Procedures)\nRETURN p.Name\nORDER BY p.Cost\nLIMIT 3",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name",
                "ORDER BY",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "3"
        },
        "answers": [
            [
                "Follicular Demiectomy"
            ],
            [
                "Reverse Rhinopodoplasty"
            ],
            [
                "Obtuse Pyloric Recombobulation"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the physicians who are trained in a procedure that costs more than 5000.",
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T3.Cost > 5000\nRETURN T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3",
                "Cost"
            ],
            "Token_Name_Label": [
                "Physician",
                "Trained_In",
                "Procedures"
            ],
            "Token_Operator": [
                ".",
                ">"
            ],
            "Token_Literal_Number_Integer": "5000"
        },
        "answers": [
            [
                "John Wen"
            ],
            [
                "John Wen"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "Christopher Turk"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which physicians are trained in procedures that are more expensive than 5000?",
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T3.Cost > 5000\nRETURN T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3",
                "Cost"
            ],
            "Token_Name_Label": [
                "Physician",
                "Trained_In",
                "Procedures"
            ],
            "Token_Operator": [
                ".",
                ">"
            ],
            "Token_Literal_Number_Integer": "5000"
        },
        "answers": [
            [
                "John Wen"
            ],
            [
                "John Wen"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "Christopher Turk"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the average cost of procedures that physician John Wen was trained in?",
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T1.Name = \"John Wen\"\nRETURN AVG(T3.Cost)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3",
                "Cost"
            ],
            "Token_Name_Label": [
                "Physician",
                "Trained_In",
                "Procedures"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "\"John Wen\"",
            "Token_Name_Function": "AVG"
        },
        "answers": [
            [
                4324.857142857143
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Compute the mean price of procedures physician John Wen was trained in.",
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T1.Name = \"John Wen\"\nRETURN AVG(T3.Cost)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3",
                "Cost"
            ],
            "Token_Name_Label": [
                "Physician",
                "Trained_In",
                "Procedures"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "\"John Wen\"",
            "Token_Name_Function": "AVG"
        },
        "answers": [
            [
                4324.857142857143
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the names of procedures which physician John Wen was trained in.",
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T1.Name = \"John Wen\"\nRETURN T3.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3"
            ],
            "Token_Name_Label": [
                "Physician",
                "Trained_In",
                "Procedures"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "\"John Wen\""
        },
        "answers": [
            [
                "Obfuscated Dermogastrotomy"
            ],
            [
                "Reverse Rhinopodoplasty"
            ],
            [
                "Follicular Demiectomy"
            ],
            [
                "Folded Demiophtalmectomy"
            ],
            [
                "Reversible Pancreomyoplasty"
            ],
            [
                "Obtuse Pyloric Recombobulation"
            ],
            [
                "Complete Walletectomy"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of procedures physician John Wen was trained in?",
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T1.Name = \"John Wen\"\nRETURN T3.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3"
            ],
            "Token_Name_Label": [
                "Physician",
                "Trained_In",
                "Procedures"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "\"John Wen\""
        },
        "answers": [
            [
                "Obfuscated Dermogastrotomy"
            ],
            [
                "Reverse Rhinopodoplasty"
            ],
            [
                "Follicular Demiectomy"
            ],
            [
                "Folded Demiophtalmectomy"
            ],
            [
                "Reversible Pancreomyoplasty"
            ],
            [
                "Obtuse Pyloric Recombobulation"
            ],
            [
                "Complete Walletectomy"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians who are affiliated with Surgery or Psychiatry department.",
        "cypher_query": "MATCH (T1:Physician)-[T2:Affiliated_With]-(T3:Department)\nWHERE T3.Name = 'Surgery' OR T3.Name = 'Psychiatry'\nRETURN T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3"
            ],
            "Token_Name_Label": [
                "Physician",
                "Affiliated_With",
                "Department"
            ],
            "Token_Operator": [
                ".",
                "=",
                "OR"
            ],
            "Token_Literal_String": [
                "'Surgery'",
                "'Psychiatry'"
            ]
        },
        "answers": [
            [
                "Christopher Turk"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "John Wen"
            ],
            [
                "Molly Clock"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which physicians are affiliated with either Surgery or Psychiatry department? Give me their names.",
        "cypher_query": "MATCH (T1:Physician)-[T2:Affiliated_With]-(T3:Department)\nWHERE T3.Name = 'Surgery' OR T3.Name = 'Psychiatry'\nRETURN T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3"
            ],
            "Token_Name_Label": [
                "Physician",
                "Affiliated_With",
                "Department"
            ],
            "Token_Operator": [
                ".",
                "=",
                "OR"
            ],
            "Token_Literal_String": [
                "'Surgery'",
                "'Psychiatry'"
            ]
        },
        "answers": [
            [
                "Christopher Turk"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "John Wen"
            ],
            [
                "Molly Clock"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of patients who are not using the medication of Procrastin-X.",
        "cypher_query": "MATCH (p:Patient) MATCH (T1:Prescribes)-[]-(T2:Medication)\nWHERE T2.Name = 'Procrastin-X' AND NOT p.SSN in T1.Patient\nRETURN count(DISTINCT p.SSN)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ")-[",
                "]-("
            ],
            "Token_Name_Variable": [
                "p",
                "T1",
                "T2",
                "SSN",
                "Patient"
            ],
            "Token_Name_Label": [
                "Patient",
                "Prescribes",
                "Medication"
            ],
            "Token_Operator": [
                ".",
                "=",
                "AND",
                "NOT",
                "in",
                "DISTINCT"
            ],
            "Token_Literal_String": "'Procrastin-X'",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                3
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many patients are not using Procrastin-X as medication?",
        "cypher_query": "MATCH (p:Patient) MATCH (T1:Prescribes)-[]-(T2:Medication)\nWHERE T2.Name = 'Procrastin-X' AND NOT p.SSN in T1.Patient\nRETURN count(DISTINCT p.SSN)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ")-[",
                "]-("
            ],
            "Token_Name_Variable": [
                "p",
                "T1",
                "T2",
                "SSN",
                "Patient"
            ],
            "Token_Name_Label": [
                "Patient",
                "Prescribes",
                "Medication"
            ],
            "Token_Operator": [
                ".",
                "=",
                "AND",
                "NOT",
                "in",
                "DISTINCT"
            ],
            "Token_Literal_String": "'Procrastin-X'",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                3
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many appointments are there?",
        "cypher_query": "MATCH (a:Appointment)\nRETURN COUNT(\"*\")",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "a",
            "Token_Name_Label": "Appointment",
            "Token_Name_Function": "COUNT",
            "Token_Literal_String": "\"*\""
        },
        "answers": [
            [
                9
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Count how many appointments have been made in total.",
        "cypher_query": "MATCH (a:Appointment)\nRETURN COUNT(\"*\")",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "a",
            "Token_Name_Label": "Appointment",
            "Token_Name_Function": "COUNT",
            "Token_Literal_String": "\"*\""
        },
        "answers": [
            [
                9
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the names of nurses who are on call.",
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:On_Call)\nRETURN DISTINCT T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2"
            ],
            "Token_Name_Label": [
                "Nurse",
                "On_Call"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What are the distinct names of nurses on call?",
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:On_Call)\nRETURN DISTINCT T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2"
            ],
            "Token_Name_Label": [
                "Nurse",
                "On_Call"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "What are the three most costly procedures?",
        "cypher_query": "MATCH (p:Procedures)\nRETURN p.Name\nORDER BY p.Cost\nLIMIT 3",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name",
                "ORDER BY",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "3"
        },
        "answers": [
            [
                "Follicular Demiectomy"
            ],
            [
                "Reverse Rhinopodoplasty"
            ],
            [
                "Obtuse Pyloric Recombobulation"
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "Find the id of the appointment with the most recent start date?",
        "cypher_query": "MATCH (a:Appointment)\nRETURN a.AppointmentID\nORDER BY a.Start DESC\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "ORDER BY",
                "Start",
                "DESC",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "a",
                "AppointmentID"
            ],
            "Token_Name_Label": "Appointment",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                86213939
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the id of the appointment that started most recently?",
        "cypher_query": "MATCH (a:Appointment)\nRETURN a.AppointmentID\nORDER BY a.Start DESC\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "ORDER BY",
                "Start",
                "DESC",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "a",
                "AppointmentID"
            ],
            "Token_Name_Label": "Appointment",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                86213939
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many patients' prescriptions are made by physician John Dorian?",
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Prescribes)-[]-(T3:Physician)\nWHERE T3.Name = \"John Dorian\"\nRETURN COUNT(T1.SSN)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3",
                "SSN"
            ],
            "Token_Name_Label": [
                "Patient",
                "Prescribes",
                "Physician"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "\"John Dorian\"",
            "Token_Name_Function": "COUNT"
        },
        "answers": [
            [
                1
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of patients' prescriptions physician John Dorian made.",
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Prescribes)-[]-(T3:Physician)\nWHERE T3.Name = \"John Dorian\"\nRETURN COUNT(T1.SSN)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3",
                "SSN"
            ],
            "Token_Name_Label": [
                "Patient",
                "Prescribes",
                "Physician"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "\"John Dorian\"",
            "Token_Name_Function": "COUNT"
        },
        "answers": [
            [
                1
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many different types of rooms are there?",
        "cypher_query": "MATCH (r:Room)\nWITH DISTINCT r.RoomType AS roomtype\nRETURN count(roomtype)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH DISTINCT",
                "AS",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "r",
                "RoomType",
                "roomtype"
            ],
            "Token_Name_Label": "Room",
            "Token_Operator": ".",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                1
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of distinct room types available.",
        "cypher_query": "MATCH (r:Room)\nWITH DISTINCT r.RoomType AS roomtype\nRETURN count(roomtype)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH DISTINCT",
                "AS",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "r",
                "RoomType",
                "roomtype"
            ],
            "Token_Name_Label": "Room",
            "Token_Operator": ".",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                1
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the patient who has the most recent undergoing treatment?",
        "cypher_query": "MATCH (u:Undergoes)\nRETURN u.Patient\nORDER BY u.DateUndergoes\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "ORDER BY",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "u",
                "Patient",
                "DateUndergoes"
            ],
            "Token_Name_Label": "Undergoes",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                100000001
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which patient is undergoing the most recent treatment?",
        "cypher_query": "MATCH (u:Undergoes)\nRETURN u.Patient\nORDER BY u.DateUndergoes\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "ORDER BY",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "u",
                "Patient",
                "DateUndergoes"
            ],
            "Token_Name_Label": "Undergoes",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                100000001
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "List the names of all distinct nurses ordered by alphabetical order?",
        "cypher_query": "MATCH (n:Nurse)\nRETURN DISTINCT n.Name\nORDER BY n.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "n",
            "Token_Name_Label": "Nurse",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the alphabetically ordered list of all the distinct names of nurses?",
        "cypher_query": "MATCH (n:Nurse)\nRETURN DISTINCT n.Name\nORDER BY n.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "n",
            "Token_Name_Label": "Nurse",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the names of nurses who are nursing an undergoing treatment.",
        "cypher_query": "MATCH (T1:Undergoes)-[]-(T2:Nurse)\nRETURN DISTINCT T2.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2"
            ],
            "Token_Name_Label": [
                "Undergoes",
                "Nurse"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which nurses are in charge of patients undergoing treatments?",
        "cypher_query": "MATCH (T1:Undergoes)-[]-(T2:Nurse)\nRETURN DISTINCT T2.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2"
            ],
            "Token_Name_Label": [
                "Undergoes",
                "Nurse"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "List the names of all distinct medications, ordered in an alphabetical order.",
        "cypher_query": "MATCH (m:Medication)\nRETURN DISTINCT m.Name\nORDER BY m.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "m",
            "Token_Name_Label": "Medication",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Awakin"
            ],
            [
                "Crescavitin"
            ],
            [
                "Melioraurin"
            ],
            [
                "Procrastin-X"
            ],
            [
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the alphabetically ordered list of all distinct medications?",
        "cypher_query": "MATCH (m:Medication)\nRETURN DISTINCT m.Name\nORDER BY m.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "m",
            "Token_Name_Label": "Medication",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Awakin"
            ],
            [
                "Crescavitin"
            ],
            [
                "Melioraurin"
            ],
            [
                "Procrastin-X"
            ],
            [
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What are the highest cost, lowest cost and average cost of procedures?",
        "cypher_query": "MATCH (p:Procedures)\nRETURN MAX(p.Cost),MIN(p.Cost),AVG(p.Cost)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Name_Function": [
                "MAX",
                "MIN",
                "AVG"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                10000.0,
                25.0,
                4324.857142857143
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Tell me the highest, lowest, and average cost of procedures.",
        "cypher_query": "MATCH (p:Procedures)\nRETURN MAX(p.Cost),MIN(p.Cost),AVG(p.Cost)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Name_Function": [
                "MAX",
                "MIN",
                "AVG"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                10000.0,
                25.0,
                4324.857142857143
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "List the name and cost of all procedures sorted by the cost from the highest to the lowest.",
        "cypher_query": "MATCH (p:Procedures)\nRETURN p.Name,p.Cost\nORDER BY p.Cost DESC",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name",
                "ORDER BY",
                "DESC"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Complete Walletectomy",
                10000.0
            ],
            [
                "Reversible Pancreomyoplasty",
                5600.0
            ],
            [
                "Obfuscated Dermogastrotomy",
                4899.0
            ],
            [
                "Folded Demiophtalmectomy",
                4500.0
            ],
            [
                "Obtuse Pyloric Recombobulation",
                3750.0
            ],
            [
                "Reverse Rhinopodoplasty",
                1500.0
            ],
            [
                "Follicular Demiectomy",
                25.0
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Sort the list of names and costs of all procedures in the descending order of cost.",
        "cypher_query": "MATCH (p:Procedures)\nRETURN p.Name,p.Cost\nORDER BY p.Cost DESC",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name",
                "ORDER BY",
                "DESC"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Complete Walletectomy",
                10000.0
            ],
            [
                "Reversible Pancreomyoplasty",
                5600.0
            ],
            [
                "Obfuscated Dermogastrotomy",
                4899.0
            ],
            [
                "Folded Demiophtalmectomy",
                4500.0
            ],
            [
                "Obtuse Pyloric Recombobulation",
                3750.0
            ],
            [
                "Reverse Rhinopodoplasty",
                1500.0
            ],
            [
                "Follicular Demiectomy",
                25.0
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the three most expensive procedures.",
        "cypher_query": "MATCH (p:Procedures)\nRETURN p.Name\nORDER BY p.Cost\nLIMIT 3",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name",
                "ORDER BY",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "3"
        },
        "answers": [
            [
                "Follicular Demiectomy"
            ],
            [
                "Reverse Rhinopodoplasty"
            ],
            [
                "Obtuse Pyloric Recombobulation"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What are the three most costly procedures?",
        "cypher_query": "MATCH (p:Procedures)\nRETURN p.Name\nORDER BY p.Cost\nLIMIT 3",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name",
                "ORDER BY",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "3"
        },
        "answers": [
            [
                "Follicular Demiectomy"
            ],
            [
                "Reverse Rhinopodoplasty"
            ],
            [
                "Obtuse Pyloric Recombobulation"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the physicians who are trained in a procedure that costs more than 5000.",
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T3.Cost > 5000\nRETURN T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3",
                "Cost"
            ],
            "Token_Name_Label": [
                "Physician",
                "Trained_In",
                "Procedures"
            ],
            "Token_Operator": [
                ".",
                ">"
            ],
            "Token_Literal_Number_Integer": "5000"
        },
        "answers": [
            [
                "John Wen"
            ],
            [
                "John Wen"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "Christopher Turk"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which physicians are trained in procedures that are more expensive than 5000?",
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T3.Cost > 5000\nRETURN T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3",
                "Cost"
            ],
            "Token_Name_Label": [
                "Physician",
                "Trained_In",
                "Procedures"
            ],
            "Token_Operator": [
                ".",
                ">"
            ],
            "Token_Literal_Number_Integer": "5000"
        },
        "answers": [
            [
                "John Wen"
            ],
            [
                "John Wen"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "Christopher Turk"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the average cost of procedures that physician John Wen was trained in?",
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T1.Name = \"John Wen\"\nRETURN AVG(T3.Cost)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3",
                "Cost"
            ],
            "Token_Name_Label": [
                "Physician",
                "Trained_In",
                "Procedures"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "\"John Wen\"",
            "Token_Name_Function": "AVG"
        },
        "answers": [
            [
                4324.857142857143
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Compute the mean price of procedures physician John Wen was trained in.",
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T1.Name = \"John Wen\"\nRETURN AVG(T3.Cost)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3",
                "Cost"
            ],
            "Token_Name_Label": [
                "Physician",
                "Trained_In",
                "Procedures"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "\"John Wen\"",
            "Token_Name_Function": "AVG"
        },
        "answers": [
            [
                4324.857142857143
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the names of procedures which physician John Wen was trained in.",
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T1.Name = \"John Wen\"\nRETURN T3.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3"
            ],
            "Token_Name_Label": [
                "Physician",
                "Trained_In",
                "Procedures"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "\"John Wen\""
        },
        "answers": [
            [
                "Obfuscated Dermogastrotomy"
            ],
            [
                "Reverse Rhinopodoplasty"
            ],
            [
                "Follicular Demiectomy"
            ],
            [
                "Folded Demiophtalmectomy"
            ],
            [
                "Reversible Pancreomyoplasty"
            ],
            [
                "Obtuse Pyloric Recombobulation"
            ],
            [
                "Complete Walletectomy"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of procedures physician John Wen was trained in?",
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T1.Name = \"John Wen\"\nRETURN T3.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3"
            ],
            "Token_Name_Label": [
                "Physician",
                "Trained_In",
                "Procedures"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "\"John Wen\""
        },
        "answers": [
            [
                "Obfuscated Dermogastrotomy"
            ],
            [
                "Reverse Rhinopodoplasty"
            ],
            [
                "Follicular Demiectomy"
            ],
            [
                "Folded Demiophtalmectomy"
            ],
            [
                "Reversible Pancreomyoplasty"
            ],
            [
                "Obtuse Pyloric Recombobulation"
            ],
            [
                "Complete Walletectomy"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians who are affiliated with Surgery or Psychiatry department.",
        "cypher_query": "MATCH (T1:Physician)-[T2:Affiliated_With]-(T3:Department)\nWHERE T3.Name = 'Surgery' OR T3.Name = 'Psychiatry'\nRETURN T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3"
            ],
            "Token_Name_Label": [
                "Physician",
                "Affiliated_With",
                "Department"
            ],
            "Token_Operator": [
                ".",
                "=",
                "OR"
            ],
            "Token_Literal_String": [
                "'Surgery'",
                "'Psychiatry'"
            ]
        },
        "answers": [
            [
                "Christopher Turk"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "John Wen"
            ],
            [
                "Molly Clock"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which physicians are affiliated with either Surgery or Psychiatry department? Give me their names.",
        "cypher_query": "MATCH (T1:Physician)-[T2:Affiliated_With]-(T3:Department)\nWHERE T3.Name = 'Surgery' OR T3.Name = 'Psychiatry'\nRETURN T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3"
            ],
            "Token_Name_Label": [
                "Physician",
                "Affiliated_With",
                "Department"
            ],
            "Token_Operator": [
                ".",
                "=",
                "OR"
            ],
            "Token_Literal_String": [
                "'Surgery'",
                "'Psychiatry'"
            ]
        },
        "answers": [
            [
                "Christopher Turk"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "John Wen"
            ],
            [
                "Molly Clock"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of patients who are not using the medication of Procrastin-X.",
        "cypher_query": "MATCH (p:Patient) MATCH (T1:Prescribes)-[]-(T2:Medication)\nWHERE T2.Name = 'Procrastin-X' AND NOT p.SSN in T1.Patient\nRETURN count(DISTINCT p.SSN)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ")-[",
                "]-("
            ],
            "Token_Name_Variable": [
                "p",
                "T1",
                "T2",
                "SSN",
                "Patient"
            ],
            "Token_Name_Label": [
                "Patient",
                "Prescribes",
                "Medication"
            ],
            "Token_Operator": [
                ".",
                "=",
                "AND",
                "NOT",
                "in",
                "DISTINCT"
            ],
            "Token_Literal_String": "'Procrastin-X'",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                3
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many patients are not using Procrastin-X as medication?",
        "cypher_query": "MATCH (p:Patient) MATCH (T1:Prescribes)-[]-(T2:Medication)\nWHERE T2.Name = 'Procrastin-X' AND NOT p.SSN in T1.Patient\nRETURN count(DISTINCT p.SSN)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ")-[",
                "]-("
            ],
            "Token_Name_Variable": [
                "p",
                "T1",
                "T2",
                "SSN",
                "Patient"
            ],
            "Token_Name_Label": [
                "Patient",
                "Prescribes",
                "Medication"
            ],
            "Token_Operator": [
                ".",
                "=",
                "AND",
                "NOT",
                "in",
                "DISTINCT"
            ],
            "Token_Literal_String": "'Procrastin-X'",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                3
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many appointments are there?",
        "cypher_query": "MATCH (a:Appointment)\nRETURN COUNT(\"*\")",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "a",
            "Token_Name_Label": "Appointment",
            "Token_Name_Function": "COUNT",
            "Token_Literal_String": "\"*\""
        },
        "answers": [
            [
                9
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Count how many appointments have been made in total.",
        "cypher_query": "MATCH (a:Appointment)\nRETURN COUNT(\"*\")",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "a",
            "Token_Name_Label": "Appointment",
            "Token_Name_Function": "COUNT",
            "Token_Literal_String": "\"*\""
        },
        "answers": [
            [
                9
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the names of nurses who are on call.",
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:On_Call)\nRETURN DISTINCT T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2"
            ],
            "Token_Name_Label": [
                "Nurse",
                "On_Call"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What are the distinct names of nurses on call?",
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:On_Call)\nRETURN DISTINCT T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2"
            ],
            "Token_Name_Label": [
                "Nurse",
                "On_Call"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "Find the id of the appointment with the most recent start date?",
        "cypher_query": "MATCH (a:Appointment)\nRETURN a.AppointmentID\nORDER BY a.Start DESC\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "ORDER BY",
                "Start",
                "DESC",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "a",
                "AppointmentID"
            ],
            "Token_Name_Label": "Appointment",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                86213939
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the id of the appointment that started most recently?",
        "cypher_query": "MATCH (a:Appointment)\nRETURN a.AppointmentID\nORDER BY a.Start DESC\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "ORDER BY",
                "Start",
                "DESC",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "a",
                "AppointmentID"
            ],
            "Token_Name_Label": "Appointment",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                86213939
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many patients' prescriptions are made by physician John Dorian?",
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Prescribes)-[]-(T3:Physician)\nWHERE T3.Name = \"John Dorian\"\nRETURN COUNT(T1.SSN)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3",
                "SSN"
            ],
            "Token_Name_Label": [
                "Patient",
                "Prescribes",
                "Physician"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "\"John Dorian\"",
            "Token_Name_Function": "COUNT"
        },
        "answers": [
            [
                1
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of patients' prescriptions physician John Dorian made.",
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Prescribes)-[]-(T3:Physician)\nWHERE T3.Name = \"John Dorian\"\nRETURN COUNT(T1.SSN)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3",
                "SSN"
            ],
            "Token_Name_Label": [
                "Patient",
                "Prescribes",
                "Physician"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "\"John Dorian\"",
            "Token_Name_Function": "COUNT"
        },
        "answers": [
            [
                1
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many different types of rooms are there?",
        "cypher_query": "MATCH (r:Room)\nWITH DISTINCT r.RoomType AS roomtype\nRETURN count(roomtype)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH DISTINCT",
                "AS",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "r",
                "RoomType",
                "roomtype"
            ],
            "Token_Name_Label": "Room",
            "Token_Operator": ".",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                1
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of distinct room types available.",
        "cypher_query": "MATCH (r:Room)\nWITH DISTINCT r.RoomType AS roomtype\nRETURN count(roomtype)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH DISTINCT",
                "AS",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "r",
                "RoomType",
                "roomtype"
            ],
            "Token_Name_Label": "Room",
            "Token_Operator": ".",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                1
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the patient who has the most recent undergoing treatment?",
        "cypher_query": "MATCH (u:Undergoes)\nRETURN u.Patient\nORDER BY u.DateUndergoes\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "ORDER BY",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "u",
                "Patient",
                "DateUndergoes"
            ],
            "Token_Name_Label": "Undergoes",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                100000001
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which patient is undergoing the most recent treatment?",
        "cypher_query": "MATCH (u:Undergoes)\nRETURN u.Patient\nORDER BY u.DateUndergoes\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "ORDER BY",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "u",
                "Patient",
                "DateUndergoes"
            ],
            "Token_Name_Label": "Undergoes",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                100000001
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "List the names of all distinct nurses ordered by alphabetical order?",
        "cypher_query": "MATCH (n:Nurse)\nRETURN DISTINCT n.Name\nORDER BY n.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "n",
            "Token_Name_Label": "Nurse",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the alphabetically ordered list of all the distinct names of nurses?",
        "cypher_query": "MATCH (n:Nurse)\nRETURN DISTINCT n.Name\nORDER BY n.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "n",
            "Token_Name_Label": "Nurse",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the names of nurses who are nursing an undergoing treatment.",
        "cypher_query": "MATCH (T1:Undergoes)-[]-(T2:Nurse)\nRETURN DISTINCT T2.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2"
            ],
            "Token_Name_Label": [
                "Undergoes",
                "Nurse"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which nurses are in charge of patients undergoing treatments?",
        "cypher_query": "MATCH (T1:Undergoes)-[]-(T2:Nurse)\nRETURN DISTINCT T2.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2"
            ],
            "Token_Name_Label": [
                "Undergoes",
                "Nurse"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "List the names of all distinct medications, ordered in an alphabetical order.",
        "cypher_query": "MATCH (m:Medication)\nRETURN DISTINCT m.Name\nORDER BY m.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "m",
            "Token_Name_Label": "Medication",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Awakin"
            ],
            [
                "Crescavitin"
            ],
            [
                "Melioraurin"
            ],
            [
                "Procrastin-X"
            ],
            [
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the alphabetically ordered list of all distinct medications?",
        "cypher_query": "MATCH (m:Medication)\nRETURN DISTINCT m.Name\nORDER BY m.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "m",
            "Token_Name_Label": "Medication",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Awakin"
            ],
            [
                "Crescavitin"
            ],
            [
                "Melioraurin"
            ],
            [
                "Procrastin-X"
            ],
            [
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What are the highest cost, lowest cost and average cost of procedures?",
        "cypher_query": "MATCH (p:Procedures)\nRETURN MAX(p.Cost),MIN(p.Cost),AVG(p.Cost)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Name_Function": [
                "MAX",
                "MIN",
                "AVG"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                10000.0,
                25.0,
                4324.857142857143
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Tell me the highest, lowest, and average cost of procedures.",
        "cypher_query": "MATCH (p:Procedures)\nRETURN MAX(p.Cost),MIN(p.Cost),AVG(p.Cost)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Name_Function": [
                "MAX",
                "MIN",
                "AVG"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                10000.0,
                25.0,
                4324.857142857143
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "List the name and cost of all procedures sorted by the cost from the highest to the lowest.",
        "cypher_query": "MATCH (p:Procedures)\nRETURN p.Name,p.Cost\nORDER BY p.Cost DESC",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name",
                "ORDER BY",
                "DESC"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Complete Walletectomy",
                10000.0
            ],
            [
                "Reversible Pancreomyoplasty",
                5600.0
            ],
            [
                "Obfuscated Dermogastrotomy",
                4899.0
            ],
            [
                "Folded Demiophtalmectomy",
                4500.0
            ],
            [
                "Obtuse Pyloric Recombobulation",
                3750.0
            ],
            [
                "Reverse Rhinopodoplasty",
                1500.0
            ],
            [
                "Follicular Demiectomy",
                25.0
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Sort the list of names and costs of all procedures in the descending order of cost.",
        "cypher_query": "MATCH (p:Procedures)\nRETURN p.Name,p.Cost\nORDER BY p.Cost DESC",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name",
                "ORDER BY",
                "DESC"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Complete Walletectomy",
                10000.0
            ],
            [
                "Reversible Pancreomyoplasty",
                5600.0
            ],
            [
                "Obfuscated Dermogastrotomy",
                4899.0
            ],
            [
                "Folded Demiophtalmectomy",
                4500.0
            ],
            [
                "Obtuse Pyloric Recombobulation",
                3750.0
            ],
            [
                "Reverse Rhinopodoplasty",
                1500.0
            ],
            [
                "Follicular Demiectomy",
                25.0
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the three most expensive procedures.",
        "cypher_query": "MATCH (p:Procedures)\nRETURN p.Name\nORDER BY p.Cost\nLIMIT 3",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name",
                "ORDER BY",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "3"
        },
        "answers": [
            [
                "Follicular Demiectomy"
            ],
            [
                "Reverse Rhinopodoplasty"
            ],
            [
                "Obtuse Pyloric Recombobulation"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What are the three most costly procedures?",
        "cypher_query": "MATCH (p:Procedures)\nRETURN p.Name\nORDER BY p.Cost\nLIMIT 3",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name",
                "ORDER BY",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "3"
        },
        "answers": [
            [
                "Follicular Demiectomy"
            ],
            [
                "Reverse Rhinopodoplasty"
            ],
            [
                "Obtuse Pyloric Recombobulation"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the physicians who are trained in a procedure that costs more than 5000.",
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T3.Cost > 5000\nRETURN T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3",
                "Cost"
            ],
            "Token_Name_Label": [
                "Physician",
                "Trained_In",
                "Procedures"
            ],
            "Token_Operator": [
                ".",
                ">"
            ],
            "Token_Literal_Number_Integer": "5000"
        },
        "answers": [
            [
                "John Wen"
            ],
            [
                "John Wen"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "Christopher Turk"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which physicians are trained in procedures that are more expensive than 5000?",
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T3.Cost > 5000\nRETURN T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3",
                "Cost"
            ],
            "Token_Name_Label": [
                "Physician",
                "Trained_In",
                "Procedures"
            ],
            "Token_Operator": [
                ".",
                ">"
            ],
            "Token_Literal_Number_Integer": "5000"
        },
        "answers": [
            [
                "John Wen"
            ],
            [
                "John Wen"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "Christopher Turk"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the average cost of procedures that physician John Wen was trained in?",
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T1.Name = \"John Wen\"\nRETURN AVG(T3.Cost)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3",
                "Cost"
            ],
            "Token_Name_Label": [
                "Physician",
                "Trained_In",
                "Procedures"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "\"John Wen\"",
            "Token_Name_Function": "AVG"
        },
        "answers": [
            [
                4324.857142857143
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Compute the mean price of procedures physician John Wen was trained in.",
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T1.Name = \"John Wen\"\nRETURN AVG(T3.Cost)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3",
                "Cost"
            ],
            "Token_Name_Label": [
                "Physician",
                "Trained_In",
                "Procedures"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "\"John Wen\"",
            "Token_Name_Function": "AVG"
        },
        "answers": [
            [
                4324.857142857143
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the names of procedures which physician John Wen was trained in.",
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T1.Name = \"John Wen\"\nRETURN T3.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3"
            ],
            "Token_Name_Label": [
                "Physician",
                "Trained_In",
                "Procedures"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "\"John Wen\""
        },
        "answers": [
            [
                "Obfuscated Dermogastrotomy"
            ],
            [
                "Reverse Rhinopodoplasty"
            ],
            [
                "Follicular Demiectomy"
            ],
            [
                "Folded Demiophtalmectomy"
            ],
            [
                "Reversible Pancreomyoplasty"
            ],
            [
                "Obtuse Pyloric Recombobulation"
            ],
            [
                "Complete Walletectomy"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of procedures physician John Wen was trained in?",
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T1.Name = \"John Wen\"\nRETURN T3.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3"
            ],
            "Token_Name_Label": [
                "Physician",
                "Trained_In",
                "Procedures"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "\"John Wen\""
        },
        "answers": [
            [
                "Obfuscated Dermogastrotomy"
            ],
            [
                "Reverse Rhinopodoplasty"
            ],
            [
                "Follicular Demiectomy"
            ],
            [
                "Folded Demiophtalmectomy"
            ],
            [
                "Reversible Pancreomyoplasty"
            ],
            [
                "Obtuse Pyloric Recombobulation"
            ],
            [
                "Complete Walletectomy"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians who are affiliated with Surgery or Psychiatry department.",
        "cypher_query": "MATCH (T1:Physician)-[T2:Affiliated_With]-(T3:Department)\nWHERE T3.Name = 'Surgery' OR T3.Name = 'Psychiatry'\nRETURN T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3"
            ],
            "Token_Name_Label": [
                "Physician",
                "Affiliated_With",
                "Department"
            ],
            "Token_Operator": [
                ".",
                "=",
                "OR"
            ],
            "Token_Literal_String": [
                "'Surgery'",
                "'Psychiatry'"
            ]
        },
        "answers": [
            [
                "Christopher Turk"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "John Wen"
            ],
            [
                "Molly Clock"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which physicians are affiliated with either Surgery or Psychiatry department? Give me their names.",
        "cypher_query": "MATCH (T1:Physician)-[T2:Affiliated_With]-(T3:Department)\nWHERE T3.Name = 'Surgery' OR T3.Name = 'Psychiatry'\nRETURN T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3"
            ],
            "Token_Name_Label": [
                "Physician",
                "Affiliated_With",
                "Department"
            ],
            "Token_Operator": [
                ".",
                "=",
                "OR"
            ],
            "Token_Literal_String": [
                "'Surgery'",
                "'Psychiatry'"
            ]
        },
        "answers": [
            [
                "Christopher Turk"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "John Wen"
            ],
            [
                "Molly Clock"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of patients who are not using the medication of Procrastin-X.",
        "cypher_query": "MATCH (p:Patient) MATCH (T1:Prescribes)-[]-(T2:Medication)\nWHERE T2.Name = 'Procrastin-X' AND NOT p.SSN in T1.Patient\nRETURN count(DISTINCT p.SSN)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ")-[",
                "]-("
            ],
            "Token_Name_Variable": [
                "p",
                "T1",
                "T2",
                "SSN",
                "Patient"
            ],
            "Token_Name_Label": [
                "Patient",
                "Prescribes",
                "Medication"
            ],
            "Token_Operator": [
                ".",
                "=",
                "AND",
                "NOT",
                "in",
                "DISTINCT"
            ],
            "Token_Literal_String": "'Procrastin-X'",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                3
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many patients are not using Procrastin-X as medication?",
        "cypher_query": "MATCH (p:Patient) MATCH (T1:Prescribes)-[]-(T2:Medication)\nWHERE T2.Name = 'Procrastin-X' AND NOT p.SSN in T1.Patient\nRETURN count(DISTINCT p.SSN)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ")-[",
                "]-("
            ],
            "Token_Name_Variable": [
                "p",
                "T1",
                "T2",
                "SSN",
                "Patient"
            ],
            "Token_Name_Label": [
                "Patient",
                "Prescribes",
                "Medication"
            ],
            "Token_Operator": [
                ".",
                "=",
                "AND",
                "NOT",
                "in",
                "DISTINCT"
            ],
            "Token_Literal_String": "'Procrastin-X'",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                3
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many appointments are there?",
        "cypher_query": "MATCH (a:Appointment)\nRETURN COUNT(\"*\")",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "a",
            "Token_Name_Label": "Appointment",
            "Token_Name_Function": "COUNT",
            "Token_Literal_String": "\"*\""
        },
        "answers": [
            [
                9
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Count how many appointments have been made in total.",
        "cypher_query": "MATCH (a:Appointment)\nRETURN COUNT(\"*\")",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "a",
            "Token_Name_Label": "Appointment",
            "Token_Name_Function": "COUNT",
            "Token_Literal_String": "\"*\""
        },
        "answers": [
            [
                9
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the names of nurses who are on call.",
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:On_Call)\nRETURN DISTINCT T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2"
            ],
            "Token_Name_Label": [
                "Nurse",
                "On_Call"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What are the distinct names of nurses on call?",
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:On_Call)\nRETURN DISTINCT T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2"
            ],
            "Token_Name_Label": [
                "Nurse",
                "On_Call"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "Find the id of the appointment with the most recent start date?",
        "cypher_query": "MATCH (a:Appointment)\nRETURN a.AppointmentID\nORDER BY a.Start DESC\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "ORDER BY",
                "Start",
                "DESC",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "a",
                "AppointmentID"
            ],
            "Token_Name_Label": "Appointment",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                86213939
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the id of the appointment that started most recently?",
        "cypher_query": "MATCH (a:Appointment)\nRETURN a.AppointmentID\nORDER BY a.Start DESC\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "ORDER BY",
                "Start",
                "DESC",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "a",
                "AppointmentID"
            ],
            "Token_Name_Label": "Appointment",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                86213939
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many patients' prescriptions are made by physician John Dorian?",
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Prescribes)-[]-(T3:Physician)\nWHERE T3.Name = \"John Dorian\"\nRETURN COUNT(T1.SSN)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3",
                "SSN"
            ],
            "Token_Name_Label": [
                "Patient",
                "Prescribes",
                "Physician"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "\"John Dorian\"",
            "Token_Name_Function": "COUNT"
        },
        "answers": [
            [
                1
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of patients' prescriptions physician John Dorian made.",
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Prescribes)-[]-(T3:Physician)\nWHERE T3.Name = \"John Dorian\"\nRETURN COUNT(T1.SSN)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3",
                "SSN"
            ],
            "Token_Name_Label": [
                "Patient",
                "Prescribes",
                "Physician"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "\"John Dorian\"",
            "Token_Name_Function": "COUNT"
        },
        "answers": [
            [
                1
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many different types of rooms are there?",
        "cypher_query": "MATCH (r:Room)\nWITH DISTINCT r.RoomType AS roomtype\nRETURN count(roomtype)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH DISTINCT",
                "AS",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "r",
                "RoomType",
                "roomtype"
            ],
            "Token_Name_Label": "Room",
            "Token_Operator": ".",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                1
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of distinct room types available.",
        "cypher_query": "MATCH (r:Room)\nWITH DISTINCT r.RoomType AS roomtype\nRETURN count(roomtype)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH DISTINCT",
                "AS",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "r",
                "RoomType",
                "roomtype"
            ],
            "Token_Name_Label": "Room",
            "Token_Operator": ".",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                1
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the patient who has the most recent undergoing treatment?",
        "cypher_query": "MATCH (u:Undergoes)\nRETURN u.Patient\nORDER BY u.DateUndergoes\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "ORDER BY",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "u",
                "Patient",
                "DateUndergoes"
            ],
            "Token_Name_Label": "Undergoes",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                100000001
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which patient is undergoing the most recent treatment?",
        "cypher_query": "MATCH (u:Undergoes)\nRETURN u.Patient\nORDER BY u.DateUndergoes\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "ORDER BY",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "u",
                "Patient",
                "DateUndergoes"
            ],
            "Token_Name_Label": "Undergoes",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                100000001
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "List the names of all distinct nurses ordered by alphabetical order?",
        "cypher_query": "MATCH (n:Nurse)\nRETURN DISTINCT n.Name\nORDER BY n.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "n",
            "Token_Name_Label": "Nurse",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the alphabetically ordered list of all the distinct names of nurses?",
        "cypher_query": "MATCH (n:Nurse)\nRETURN DISTINCT n.Name\nORDER BY n.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "n",
            "Token_Name_Label": "Nurse",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the names of nurses who are nursing an undergoing treatment.",
        "cypher_query": "MATCH (T1:Undergoes)-[]-(T2:Nurse)\nRETURN DISTINCT T2.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2"
            ],
            "Token_Name_Label": [
                "Undergoes",
                "Nurse"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which nurses are in charge of patients undergoing treatments?",
        "cypher_query": "MATCH (T1:Undergoes)-[]-(T2:Nurse)\nRETURN DISTINCT T2.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2"
            ],
            "Token_Name_Label": [
                "Undergoes",
                "Nurse"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "List the names of all distinct medications, ordered in an alphabetical order.",
        "cypher_query": "MATCH (m:Medication)\nRETURN DISTINCT m.Name\nORDER BY m.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "m",
            "Token_Name_Label": "Medication",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Awakin"
            ],
            [
                "Crescavitin"
            ],
            [
                "Melioraurin"
            ],
            [
                "Procrastin-X"
            ],
            [
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the alphabetically ordered list of all distinct medications?",
        "cypher_query": "MATCH (m:Medication)\nRETURN DISTINCT m.Name\nORDER BY m.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "m",
            "Token_Name_Label": "Medication",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Awakin"
            ],
            [
                "Crescavitin"
            ],
            [
                "Melioraurin"
            ],
            [
                "Procrastin-X"
            ],
            [
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What are the highest cost, lowest cost and average cost of procedures?",
        "cypher_query": "MATCH (p:Procedures)\nRETURN MAX(p.Cost),MIN(p.Cost),AVG(p.Cost)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Name_Function": [
                "MAX",
                "MIN",
                "AVG"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                10000.0,
                25.0,
                4324.857142857143
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Tell me the highest, lowest, and average cost of procedures.",
        "cypher_query": "MATCH (p:Procedures)\nRETURN MAX(p.Cost),MIN(p.Cost),AVG(p.Cost)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Name_Function": [
                "MAX",
                "MIN",
                "AVG"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                10000.0,
                25.0,
                4324.857142857143
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "List the name and cost of all procedures sorted by the cost from the highest to the lowest.",
        "cypher_query": "MATCH (p:Procedures)\nRETURN p.Name,p.Cost\nORDER BY p.Cost DESC",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name",
                "ORDER BY",
                "DESC"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Complete Walletectomy",
                10000.0
            ],
            [
                "Reversible Pancreomyoplasty",
                5600.0
            ],
            [
                "Obfuscated Dermogastrotomy",
                4899.0
            ],
            [
                "Folded Demiophtalmectomy",
                4500.0
            ],
            [
                "Obtuse Pyloric Recombobulation",
                3750.0
            ],
            [
                "Reverse Rhinopodoplasty",
                1500.0
            ],
            [
                "Follicular Demiectomy",
                25.0
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Sort the list of names and costs of all procedures in the descending order of cost.",
        "cypher_query": "MATCH (p:Procedures)\nRETURN p.Name,p.Cost\nORDER BY p.Cost DESC",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name",
                "ORDER BY",
                "DESC"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Complete Walletectomy",
                10000.0
            ],
            [
                "Reversible Pancreomyoplasty",
                5600.0
            ],
            [
                "Obfuscated Dermogastrotomy",
                4899.0
            ],
            [
                "Folded Demiophtalmectomy",
                4500.0
            ],
            [
                "Obtuse Pyloric Recombobulation",
                3750.0
            ],
            [
                "Reverse Rhinopodoplasty",
                1500.0
            ],
            [
                "Follicular Demiectomy",
                25.0
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the three most expensive procedures.",
        "cypher_query": "MATCH (p:Procedures)\nRETURN p.Name\nORDER BY p.Cost\nLIMIT 3",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name",
                "ORDER BY",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "3"
        },
        "answers": [
            [
                "Follicular Demiectomy"
            ],
            [
                "Reverse Rhinopodoplasty"
            ],
            [
                "Obtuse Pyloric Recombobulation"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What are the three most costly procedures?",
        "cypher_query": "MATCH (p:Procedures)\nRETURN p.Name\nORDER BY p.Cost\nLIMIT 3",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name",
                "ORDER BY",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "3"
        },
        "answers": [
            [
                "Follicular Demiectomy"
            ],
            [
                "Reverse Rhinopodoplasty"
            ],
            [
                "Obtuse Pyloric Recombobulation"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the physicians who are trained in a procedure that costs more than 5000.",
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T3.Cost > 5000\nRETURN T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3",
                "Cost"
            ],
            "Token_Name_Label": [
                "Physician",
                "Trained_In",
                "Procedures"
            ],
            "Token_Operator": [
                ".",
                ">"
            ],
            "Token_Literal_Number_Integer": "5000"
        },
        "answers": [
            [
                "John Wen"
            ],
            [
                "John Wen"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "Christopher Turk"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which physicians are trained in procedures that are more expensive than 5000?",
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T3.Cost > 5000\nRETURN T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3",
                "Cost"
            ],
            "Token_Name_Label": [
                "Physician",
                "Trained_In",
                "Procedures"
            ],
            "Token_Operator": [
                ".",
                ">"
            ],
            "Token_Literal_Number_Integer": "5000"
        },
        "answers": [
            [
                "John Wen"
            ],
            [
                "John Wen"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "Christopher Turk"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the average cost of procedures that physician John Wen was trained in?",
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T1.Name = \"John Wen\"\nRETURN AVG(T3.Cost)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3",
                "Cost"
            ],
            "Token_Name_Label": [
                "Physician",
                "Trained_In",
                "Procedures"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "\"John Wen\"",
            "Token_Name_Function": "AVG"
        },
        "answers": [
            [
                4324.857142857143
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Compute the mean price of procedures physician John Wen was trained in.",
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T1.Name = \"John Wen\"\nRETURN AVG(T3.Cost)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3",
                "Cost"
            ],
            "Token_Name_Label": [
                "Physician",
                "Trained_In",
                "Procedures"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "\"John Wen\"",
            "Token_Name_Function": "AVG"
        },
        "answers": [
            [
                4324.857142857143
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the names of procedures which physician John Wen was trained in.",
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T1.Name = \"John Wen\"\nRETURN T3.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3"
            ],
            "Token_Name_Label": [
                "Physician",
                "Trained_In",
                "Procedures"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "\"John Wen\""
        },
        "answers": [
            [
                "Obfuscated Dermogastrotomy"
            ],
            [
                "Reverse Rhinopodoplasty"
            ],
            [
                "Follicular Demiectomy"
            ],
            [
                "Folded Demiophtalmectomy"
            ],
            [
                "Reversible Pancreomyoplasty"
            ],
            [
                "Obtuse Pyloric Recombobulation"
            ],
            [
                "Complete Walletectomy"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of procedures physician John Wen was trained in?",
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T1.Name = \"John Wen\"\nRETURN T3.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3"
            ],
            "Token_Name_Label": [
                "Physician",
                "Trained_In",
                "Procedures"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "\"John Wen\""
        },
        "answers": [
            [
                "Obfuscated Dermogastrotomy"
            ],
            [
                "Reverse Rhinopodoplasty"
            ],
            [
                "Follicular Demiectomy"
            ],
            [
                "Folded Demiophtalmectomy"
            ],
            [
                "Reversible Pancreomyoplasty"
            ],
            [
                "Obtuse Pyloric Recombobulation"
            ],
            [
                "Complete Walletectomy"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians who are affiliated with Surgery or Psychiatry department.",
        "cypher_query": "MATCH (T1:Physician)-[T2:Affiliated_With]-(T3:Department)\nWHERE T3.Name = 'Surgery' OR T3.Name = 'Psychiatry'\nRETURN T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3"
            ],
            "Token_Name_Label": [
                "Physician",
                "Affiliated_With",
                "Department"
            ],
            "Token_Operator": [
                ".",
                "=",
                "OR"
            ],
            "Token_Literal_String": [
                "'Surgery'",
                "'Psychiatry'"
            ]
        },
        "answers": [
            [
                "Christopher Turk"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "John Wen"
            ],
            [
                "Molly Clock"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which physicians are affiliated with either Surgery or Psychiatry department? Give me their names.",
        "cypher_query": "MATCH (T1:Physician)-[T2:Affiliated_With]-(T3:Department)\nWHERE T3.Name = 'Surgery' OR T3.Name = 'Psychiatry'\nRETURN T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3"
            ],
            "Token_Name_Label": [
                "Physician",
                "Affiliated_With",
                "Department"
            ],
            "Token_Operator": [
                ".",
                "=",
                "OR"
            ],
            "Token_Literal_String": [
                "'Surgery'",
                "'Psychiatry'"
            ]
        },
        "answers": [
            [
                "Christopher Turk"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "John Wen"
            ],
            [
                "Molly Clock"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of patients who are not using the medication of Procrastin-X.",
        "cypher_query": "MATCH (p:Patient) MATCH (T1:Prescribes)-[]-(T2:Medication)\nWHERE T2.Name = 'Procrastin-X' AND NOT p.SSN in T1.Patient\nRETURN count(DISTINCT p.SSN)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ")-[",
                "]-("
            ],
            "Token_Name_Variable": [
                "p",
                "T1",
                "T2",
                "SSN",
                "Patient"
            ],
            "Token_Name_Label": [
                "Patient",
                "Prescribes",
                "Medication"
            ],
            "Token_Operator": [
                ".",
                "=",
                "AND",
                "NOT",
                "in",
                "DISTINCT"
            ],
            "Token_Literal_String": "'Procrastin-X'",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                3
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many patients are not using Procrastin-X as medication?",
        "cypher_query": "MATCH (p:Patient) MATCH (T1:Prescribes)-[]-(T2:Medication)\nWHERE T2.Name = 'Procrastin-X' AND NOT p.SSN in T1.Patient\nRETURN count(DISTINCT p.SSN)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ")-[",
                "]-("
            ],
            "Token_Name_Variable": [
                "p",
                "T1",
                "T2",
                "SSN",
                "Patient"
            ],
            "Token_Name_Label": [
                "Patient",
                "Prescribes",
                "Medication"
            ],
            "Token_Operator": [
                ".",
                "=",
                "AND",
                "NOT",
                "in",
                "DISTINCT"
            ],
            "Token_Literal_String": "'Procrastin-X'",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                3
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many appointments are there?",
        "cypher_query": "MATCH (a:Appointment)\nRETURN COUNT(\"*\")",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "a",
            "Token_Name_Label": "Appointment",
            "Token_Name_Function": "COUNT",
            "Token_Literal_String": "\"*\""
        },
        "answers": [
            [
                9
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Count how many appointments have been made in total.",
        "cypher_query": "MATCH (a:Appointment)\nRETURN COUNT(\"*\")",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "a",
            "Token_Name_Label": "Appointment",
            "Token_Name_Function": "COUNT",
            "Token_Literal_String": "\"*\""
        },
        "answers": [
            [
                9
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the names of nurses who are on call.",
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:On_Call)\nRETURN DISTINCT T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2"
            ],
            "Token_Name_Label": [
                "Nurse",
                "On_Call"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What are the distinct names of nurses on call?",
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:On_Call)\nRETURN DISTINCT T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2"
            ],
            "Token_Name_Label": [
                "Nurse",
                "On_Call"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "Find the id of the appointment with the most recent start date?",
        "cypher_query": "MATCH (a:Appointment)\nRETURN a.AppointmentID\nORDER BY a.Start DESC\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "ORDER BY",
                "Start",
                "DESC",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "a",
                "AppointmentID"
            ],
            "Token_Name_Label": "Appointment",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                86213939
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the id of the appointment that started most recently?",
        "cypher_query": "MATCH (a:Appointment)\nRETURN a.AppointmentID\nORDER BY a.Start DESC\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "ORDER BY",
                "Start",
                "DESC",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "a",
                "AppointmentID"
            ],
            "Token_Name_Label": "Appointment",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                86213939
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many patients' prescriptions are made by physician John Dorian?",
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Prescribes)-[]-(T3:Physician)\nWHERE T3.Name = \"John Dorian\"\nRETURN COUNT(T1.SSN)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3",
                "SSN"
            ],
            "Token_Name_Label": [
                "Patient",
                "Prescribes",
                "Physician"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "\"John Dorian\"",
            "Token_Name_Function": "COUNT"
        },
        "answers": [
            [
                1
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of patients' prescriptions physician John Dorian made.",
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Prescribes)-[]-(T3:Physician)\nWHERE T3.Name = \"John Dorian\"\nRETURN COUNT(T1.SSN)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3",
                "SSN"
            ],
            "Token_Name_Label": [
                "Patient",
                "Prescribes",
                "Physician"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "\"John Dorian\"",
            "Token_Name_Function": "COUNT"
        },
        "answers": [
            [
                1
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many different types of rooms are there?",
        "cypher_query": "MATCH (r:Room)\nWITH DISTINCT r.RoomType AS roomtype\nRETURN count(roomtype)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH DISTINCT",
                "AS",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "r",
                "RoomType",
                "roomtype"
            ],
            "Token_Name_Label": "Room",
            "Token_Operator": ".",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                1
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of distinct room types available.",
        "cypher_query": "MATCH (r:Room)\nWITH DISTINCT r.RoomType AS roomtype\nRETURN count(roomtype)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH DISTINCT",
                "AS",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "r",
                "RoomType",
                "roomtype"
            ],
            "Token_Name_Label": "Room",
            "Token_Operator": ".",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                1
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the patient who has the most recent undergoing treatment?",
        "cypher_query": "MATCH (u:Undergoes)\nRETURN u.Patient\nORDER BY u.DateUndergoes\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "ORDER BY",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "u",
                "Patient",
                "DateUndergoes"
            ],
            "Token_Name_Label": "Undergoes",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                100000001
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which patient is undergoing the most recent treatment?",
        "cypher_query": "MATCH (u:Undergoes)\nRETURN u.Patient\nORDER BY u.DateUndergoes\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "ORDER BY",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "u",
                "Patient",
                "DateUndergoes"
            ],
            "Token_Name_Label": "Undergoes",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                100000001
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "List the names of all distinct nurses ordered by alphabetical order?",
        "cypher_query": "MATCH (n:Nurse)\nRETURN DISTINCT n.Name\nORDER BY n.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "n",
            "Token_Name_Label": "Nurse",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the alphabetically ordered list of all the distinct names of nurses?",
        "cypher_query": "MATCH (n:Nurse)\nRETURN DISTINCT n.Name\nORDER BY n.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "n",
            "Token_Name_Label": "Nurse",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the names of nurses who are nursing an undergoing treatment.",
        "cypher_query": "MATCH (T1:Undergoes)-[]-(T2:Nurse)\nRETURN DISTINCT T2.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2"
            ],
            "Token_Name_Label": [
                "Undergoes",
                "Nurse"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which nurses are in charge of patients undergoing treatments?",
        "cypher_query": "MATCH (T1:Undergoes)-[]-(T2:Nurse)\nRETURN DISTINCT T2.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2"
            ],
            "Token_Name_Label": [
                "Undergoes",
                "Nurse"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "List the names of all distinct medications, ordered in an alphabetical order.",
        "cypher_query": "MATCH (m:Medication)\nRETURN DISTINCT m.Name\nORDER BY m.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "m",
            "Token_Name_Label": "Medication",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Awakin"
            ],
            [
                "Crescavitin"
            ],
            [
                "Melioraurin"
            ],
            [
                "Procrastin-X"
            ],
            [
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the alphabetically ordered list of all distinct medications?",
        "cypher_query": "MATCH (m:Medication)\nRETURN DISTINCT m.Name\nORDER BY m.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "m",
            "Token_Name_Label": "Medication",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Awakin"
            ],
            [
                "Crescavitin"
            ],
            [
                "Melioraurin"
            ],
            [
                "Procrastin-X"
            ],
            [
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What are the highest cost, lowest cost and average cost of procedures?",
        "cypher_query": "MATCH (p:Procedures)\nRETURN MAX(p.Cost),MIN(p.Cost),AVG(p.Cost)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Name_Function": [
                "MAX",
                "MIN",
                "AVG"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                10000.0,
                25.0,
                4324.857142857143
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Tell me the highest, lowest, and average cost of procedures.",
        "cypher_query": "MATCH (p:Procedures)\nRETURN MAX(p.Cost),MIN(p.Cost),AVG(p.Cost)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Name_Function": [
                "MAX",
                "MIN",
                "AVG"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                10000.0,
                25.0,
                4324.857142857143
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "List the name and cost of all procedures sorted by the cost from the highest to the lowest.",
        "cypher_query": "MATCH (p:Procedures)\nRETURN p.Name,p.Cost\nORDER BY p.Cost DESC",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name",
                "ORDER BY",
                "DESC"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Complete Walletectomy",
                10000.0
            ],
            [
                "Reversible Pancreomyoplasty",
                5600.0
            ],
            [
                "Obfuscated Dermogastrotomy",
                4899.0
            ],
            [
                "Folded Demiophtalmectomy",
                4500.0
            ],
            [
                "Obtuse Pyloric Recombobulation",
                3750.0
            ],
            [
                "Reverse Rhinopodoplasty",
                1500.0
            ],
            [
                "Follicular Demiectomy",
                25.0
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Sort the list of names and costs of all procedures in the descending order of cost.",
        "cypher_query": "MATCH (p:Procedures)\nRETURN p.Name,p.Cost\nORDER BY p.Cost DESC",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name",
                "ORDER BY",
                "DESC"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Complete Walletectomy",
                10000.0
            ],
            [
                "Reversible Pancreomyoplasty",
                5600.0
            ],
            [
                "Obfuscated Dermogastrotomy",
                4899.0
            ],
            [
                "Folded Demiophtalmectomy",
                4500.0
            ],
            [
                "Obtuse Pyloric Recombobulation",
                3750.0
            ],
            [
                "Reverse Rhinopodoplasty",
                1500.0
            ],
            [
                "Follicular Demiectomy",
                25.0
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the three most expensive procedures.",
        "cypher_query": "MATCH (p:Procedures)\nRETURN p.Name\nORDER BY p.Cost\nLIMIT 3",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name",
                "ORDER BY",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "3"
        },
        "answers": [
            [
                "Follicular Demiectomy"
            ],
            [
                "Reverse Rhinopodoplasty"
            ],
            [
                "Obtuse Pyloric Recombobulation"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What are the three most costly procedures?",
        "cypher_query": "MATCH (p:Procedures)\nRETURN p.Name\nORDER BY p.Cost\nLIMIT 3",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name",
                "ORDER BY",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "3"
        },
        "answers": [
            [
                "Follicular Demiectomy"
            ],
            [
                "Reverse Rhinopodoplasty"
            ],
            [
                "Obtuse Pyloric Recombobulation"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the physicians who are trained in a procedure that costs more than 5000.",
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T3.Cost > 5000\nRETURN T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3",
                "Cost"
            ],
            "Token_Name_Label": [
                "Physician",
                "Trained_In",
                "Procedures"
            ],
            "Token_Operator": [
                ".",
                ">"
            ],
            "Token_Literal_Number_Integer": "5000"
        },
        "answers": [
            [
                "John Wen"
            ],
            [
                "John Wen"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "Christopher Turk"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which physicians are trained in procedures that are more expensive than 5000?",
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T3.Cost > 5000\nRETURN T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3",
                "Cost"
            ],
            "Token_Name_Label": [
                "Physician",
                "Trained_In",
                "Procedures"
            ],
            "Token_Operator": [
                ".",
                ">"
            ],
            "Token_Literal_Number_Integer": "5000"
        },
        "answers": [
            [
                "John Wen"
            ],
            [
                "John Wen"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "Christopher Turk"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the average cost of procedures that physician John Wen was trained in?",
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T1.Name = \"John Wen\"\nRETURN AVG(T3.Cost)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3",
                "Cost"
            ],
            "Token_Name_Label": [
                "Physician",
                "Trained_In",
                "Procedures"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "\"John Wen\"",
            "Token_Name_Function": "AVG"
        },
        "answers": [
            [
                4324.857142857143
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Compute the mean price of procedures physician John Wen was trained in.",
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T1.Name = \"John Wen\"\nRETURN AVG(T3.Cost)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3",
                "Cost"
            ],
            "Token_Name_Label": [
                "Physician",
                "Trained_In",
                "Procedures"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "\"John Wen\"",
            "Token_Name_Function": "AVG"
        },
        "answers": [
            [
                4324.857142857143
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the names of procedures which physician John Wen was trained in.",
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T1.Name = \"John Wen\"\nRETURN T3.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3"
            ],
            "Token_Name_Label": [
                "Physician",
                "Trained_In",
                "Procedures"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "\"John Wen\""
        },
        "answers": [
            [
                "Obfuscated Dermogastrotomy"
            ],
            [
                "Reverse Rhinopodoplasty"
            ],
            [
                "Follicular Demiectomy"
            ],
            [
                "Folded Demiophtalmectomy"
            ],
            [
                "Reversible Pancreomyoplasty"
            ],
            [
                "Obtuse Pyloric Recombobulation"
            ],
            [
                "Complete Walletectomy"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of procedures physician John Wen was trained in?",
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T1.Name = \"John Wen\"\nRETURN T3.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3"
            ],
            "Token_Name_Label": [
                "Physician",
                "Trained_In",
                "Procedures"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "\"John Wen\""
        },
        "answers": [
            [
                "Obfuscated Dermogastrotomy"
            ],
            [
                "Reverse Rhinopodoplasty"
            ],
            [
                "Follicular Demiectomy"
            ],
            [
                "Folded Demiophtalmectomy"
            ],
            [
                "Reversible Pancreomyoplasty"
            ],
            [
                "Obtuse Pyloric Recombobulation"
            ],
            [
                "Complete Walletectomy"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians who are affiliated with Surgery or Psychiatry department.",
        "cypher_query": "MATCH (T1:Physician)-[T2:Affiliated_With]-(T3:Department)\nWHERE T3.Name = 'Surgery' OR T3.Name = 'Psychiatry'\nRETURN T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3"
            ],
            "Token_Name_Label": [
                "Physician",
                "Affiliated_With",
                "Department"
            ],
            "Token_Operator": [
                ".",
                "=",
                "OR"
            ],
            "Token_Literal_String": [
                "'Surgery'",
                "'Psychiatry'"
            ]
        },
        "answers": [
            [
                "Christopher Turk"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "John Wen"
            ],
            [
                "Molly Clock"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which physicians are affiliated with either Surgery or Psychiatry department? Give me their names.",
        "cypher_query": "MATCH (T1:Physician)-[T2:Affiliated_With]-(T3:Department)\nWHERE T3.Name = 'Surgery' OR T3.Name = 'Psychiatry'\nRETURN T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3"
            ],
            "Token_Name_Label": [
                "Physician",
                "Affiliated_With",
                "Department"
            ],
            "Token_Operator": [
                ".",
                "=",
                "OR"
            ],
            "Token_Literal_String": [
                "'Surgery'",
                "'Psychiatry'"
            ]
        },
        "answers": [
            [
                "Christopher Turk"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "John Wen"
            ],
            [
                "Molly Clock"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of patients who are not using the medication of Procrastin-X.",
        "cypher_query": "MATCH (p:Patient) MATCH (T1:Prescribes)-[]-(T2:Medication)\nWHERE T2.Name = 'Procrastin-X' AND NOT p.SSN in T1.Patient\nRETURN count(DISTINCT p.SSN)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ")-[",
                "]-("
            ],
            "Token_Name_Variable": [
                "p",
                "T1",
                "T2",
                "SSN",
                "Patient"
            ],
            "Token_Name_Label": [
                "Patient",
                "Prescribes",
                "Medication"
            ],
            "Token_Operator": [
                ".",
                "=",
                "AND",
                "NOT",
                "in",
                "DISTINCT"
            ],
            "Token_Literal_String": "'Procrastin-X'",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                3
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many patients are not using Procrastin-X as medication?",
        "cypher_query": "MATCH (p:Patient) MATCH (T1:Prescribes)-[]-(T2:Medication)\nWHERE T2.Name = 'Procrastin-X' AND NOT p.SSN in T1.Patient\nRETURN count(DISTINCT p.SSN)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ")-[",
                "]-("
            ],
            "Token_Name_Variable": [
                "p",
                "T1",
                "T2",
                "SSN",
                "Patient"
            ],
            "Token_Name_Label": [
                "Patient",
                "Prescribes",
                "Medication"
            ],
            "Token_Operator": [
                ".",
                "=",
                "AND",
                "NOT",
                "in",
                "DISTINCT"
            ],
            "Token_Literal_String": "'Procrastin-X'",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                3
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many appointments are there?",
        "cypher_query": "MATCH (a:Appointment)\nRETURN COUNT(\"*\")",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "a",
            "Token_Name_Label": "Appointment",
            "Token_Name_Function": "COUNT",
            "Token_Literal_String": "\"*\""
        },
        "answers": [
            [
                9
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Count how many appointments have been made in total.",
        "cypher_query": "MATCH (a:Appointment)\nRETURN COUNT(\"*\")",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "a",
            "Token_Name_Label": "Appointment",
            "Token_Name_Function": "COUNT",
            "Token_Literal_String": "\"*\""
        },
        "answers": [
            [
                9
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the names of nurses who are on call.",
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:On_Call)\nRETURN DISTINCT T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2"
            ],
            "Token_Name_Label": [
                "Nurse",
                "On_Call"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What are the distinct names of nurses on call?",
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:On_Call)\nRETURN DISTINCT T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2"
            ],
            "Token_Name_Label": [
                "Nurse",
                "On_Call"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "Find the id of the appointment with the most recent start date?",
        "cypher_query": "MATCH (a:Appointment)\nRETURN a.AppointmentID\nORDER BY a.Start DESC\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "ORDER BY",
                "Start",
                "DESC",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "a",
                "AppointmentID"
            ],
            "Token_Name_Label": "Appointment",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                86213939
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the id of the appointment that started most recently?",
        "cypher_query": "MATCH (a:Appointment)\nRETURN a.AppointmentID\nORDER BY a.Start DESC\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "ORDER BY",
                "Start",
                "DESC",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "a",
                "AppointmentID"
            ],
            "Token_Name_Label": "Appointment",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                86213939
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many patients' prescriptions are made by physician John Dorian?",
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Prescribes)-[]-(T3:Physician)\nWHERE T3.Name = \"John Dorian\"\nRETURN COUNT(T1.SSN)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3",
                "SSN"
            ],
            "Token_Name_Label": [
                "Patient",
                "Prescribes",
                "Physician"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "\"John Dorian\"",
            "Token_Name_Function": "COUNT"
        },
        "answers": [
            [
                1
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of patients' prescriptions physician John Dorian made.",
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Prescribes)-[]-(T3:Physician)\nWHERE T3.Name = \"John Dorian\"\nRETURN COUNT(T1.SSN)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3",
                "SSN"
            ],
            "Token_Name_Label": [
                "Patient",
                "Prescribes",
                "Physician"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "\"John Dorian\"",
            "Token_Name_Function": "COUNT"
        },
        "answers": [
            [
                1
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many different types of rooms are there?",
        "cypher_query": "MATCH (r:Room)\nWITH DISTINCT r.RoomType AS roomtype\nRETURN count(roomtype)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH DISTINCT",
                "AS",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "r",
                "RoomType",
                "roomtype"
            ],
            "Token_Name_Label": "Room",
            "Token_Operator": ".",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                1
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of distinct room types available.",
        "cypher_query": "MATCH (r:Room)\nWITH DISTINCT r.RoomType AS roomtype\nRETURN count(roomtype)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH DISTINCT",
                "AS",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "r",
                "RoomType",
                "roomtype"
            ],
            "Token_Name_Label": "Room",
            "Token_Operator": ".",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                1
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the patient who has the most recent undergoing treatment?",
        "cypher_query": "MATCH (u:Undergoes)\nRETURN u.Patient\nORDER BY u.DateUndergoes\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "ORDER BY",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "u",
                "Patient",
                "DateUndergoes"
            ],
            "Token_Name_Label": "Undergoes",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                100000001
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which patient is undergoing the most recent treatment?",
        "cypher_query": "MATCH (u:Undergoes)\nRETURN u.Patient\nORDER BY u.DateUndergoes\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "ORDER BY",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "u",
                "Patient",
                "DateUndergoes"
            ],
            "Token_Name_Label": "Undergoes",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                100000001
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "List the names of all distinct nurses ordered by alphabetical order?",
        "cypher_query": "MATCH (n:Nurse)\nRETURN DISTINCT n.Name\nORDER BY n.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "n",
            "Token_Name_Label": "Nurse",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the alphabetically ordered list of all the distinct names of nurses?",
        "cypher_query": "MATCH (n:Nurse)\nRETURN DISTINCT n.Name\nORDER BY n.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "n",
            "Token_Name_Label": "Nurse",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the names of nurses who are nursing an undergoing treatment.",
        "cypher_query": "MATCH (T1:Undergoes)-[]-(T2:Nurse)\nRETURN DISTINCT T2.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2"
            ],
            "Token_Name_Label": [
                "Undergoes",
                "Nurse"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which nurses are in charge of patients undergoing treatments?",
        "cypher_query": "MATCH (T1:Undergoes)-[]-(T2:Nurse)\nRETURN DISTINCT T2.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2"
            ],
            "Token_Name_Label": [
                "Undergoes",
                "Nurse"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "List the names of all distinct medications, ordered in an alphabetical order.",
        "cypher_query": "MATCH (m:Medication)\nRETURN DISTINCT m.Name\nORDER BY m.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "m",
            "Token_Name_Label": "Medication",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Awakin"
            ],
            [
                "Crescavitin"
            ],
            [
                "Melioraurin"
            ],
            [
                "Procrastin-X"
            ],
            [
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the alphabetically ordered list of all distinct medications?",
        "cypher_query": "MATCH (m:Medication)\nRETURN DISTINCT m.Name\nORDER BY m.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "m",
            "Token_Name_Label": "Medication",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Awakin"
            ],
            [
                "Crescavitin"
            ],
            [
                "Melioraurin"
            ],
            [
                "Procrastin-X"
            ],
            [
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What are the highest cost, lowest cost and average cost of procedures?",
        "cypher_query": "MATCH (p:Procedures)\nRETURN MAX(p.Cost),MIN(p.Cost),AVG(p.Cost)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Name_Function": [
                "MAX",
                "MIN",
                "AVG"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                10000.0,
                25.0,
                4324.857142857143
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Tell me the highest, lowest, and average cost of procedures.",
        "cypher_query": "MATCH (p:Procedures)\nRETURN MAX(p.Cost),MIN(p.Cost),AVG(p.Cost)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Name_Function": [
                "MAX",
                "MIN",
                "AVG"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                10000.0,
                25.0,
                4324.857142857143
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "List the name and cost of all procedures sorted by the cost from the highest to the lowest.",
        "cypher_query": "MATCH (p:Procedures)\nRETURN p.Name,p.Cost\nORDER BY p.Cost DESC",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name",
                "ORDER BY",
                "DESC"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Complete Walletectomy",
                10000.0
            ],
            [
                "Reversible Pancreomyoplasty",
                5600.0
            ],
            [
                "Obfuscated Dermogastrotomy",
                4899.0
            ],
            [
                "Folded Demiophtalmectomy",
                4500.0
            ],
            [
                "Obtuse Pyloric Recombobulation",
                3750.0
            ],
            [
                "Reverse Rhinopodoplasty",
                1500.0
            ],
            [
                "Follicular Demiectomy",
                25.0
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Sort the list of names and costs of all procedures in the descending order of cost.",
        "cypher_query": "MATCH (p:Procedures)\nRETURN p.Name,p.Cost\nORDER BY p.Cost DESC",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name",
                "ORDER BY",
                "DESC"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Complete Walletectomy",
                10000.0
            ],
            [
                "Reversible Pancreomyoplasty",
                5600.0
            ],
            [
                "Obfuscated Dermogastrotomy",
                4899.0
            ],
            [
                "Folded Demiophtalmectomy",
                4500.0
            ],
            [
                "Obtuse Pyloric Recombobulation",
                3750.0
            ],
            [
                "Reverse Rhinopodoplasty",
                1500.0
            ],
            [
                "Follicular Demiectomy",
                25.0
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the three most expensive procedures.",
        "cypher_query": "MATCH (p:Procedures)\nRETURN p.Name\nORDER BY p.Cost\nLIMIT 3",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name",
                "ORDER BY",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "3"
        },
        "answers": [
            [
                "Follicular Demiectomy"
            ],
            [
                "Reverse Rhinopodoplasty"
            ],
            [
                "Obtuse Pyloric Recombobulation"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What are the three most costly procedures?",
        "cypher_query": "MATCH (p:Procedures)\nRETURN p.Name\nORDER BY p.Cost\nLIMIT 3",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name",
                "ORDER BY",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "3"
        },
        "answers": [
            [
                "Follicular Demiectomy"
            ],
            [
                "Reverse Rhinopodoplasty"
            ],
            [
                "Obtuse Pyloric Recombobulation"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the physicians who are trained in a procedure that costs more than 5000.",
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T3.Cost > 5000\nRETURN T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3",
                "Cost"
            ],
            "Token_Name_Label": [
                "Physician",
                "Trained_In",
                "Procedures"
            ],
            "Token_Operator": [
                ".",
                ">"
            ],
            "Token_Literal_Number_Integer": "5000"
        },
        "answers": [
            [
                "John Wen"
            ],
            [
                "John Wen"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "Christopher Turk"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which physicians are trained in procedures that are more expensive than 5000?",
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T3.Cost > 5000\nRETURN T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3",
                "Cost"
            ],
            "Token_Name_Label": [
                "Physician",
                "Trained_In",
                "Procedures"
            ],
            "Token_Operator": [
                ".",
                ">"
            ],
            "Token_Literal_Number_Integer": "5000"
        },
        "answers": [
            [
                "John Wen"
            ],
            [
                "John Wen"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "Christopher Turk"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the average cost of procedures that physician John Wen was trained in?",
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T1.Name = \"John Wen\"\nRETURN AVG(T3.Cost)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3",
                "Cost"
            ],
            "Token_Name_Label": [
                "Physician",
                "Trained_In",
                "Procedures"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "\"John Wen\"",
            "Token_Name_Function": "AVG"
        },
        "answers": [
            [
                4324.857142857143
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Compute the mean price of procedures physician John Wen was trained in.",
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T1.Name = \"John Wen\"\nRETURN AVG(T3.Cost)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3",
                "Cost"
            ],
            "Token_Name_Label": [
                "Physician",
                "Trained_In",
                "Procedures"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "\"John Wen\"",
            "Token_Name_Function": "AVG"
        },
        "answers": [
            [
                4324.857142857143
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the names of procedures which physician John Wen was trained in.",
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T1.Name = \"John Wen\"\nRETURN T3.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3"
            ],
            "Token_Name_Label": [
                "Physician",
                "Trained_In",
                "Procedures"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "\"John Wen\""
        },
        "answers": [
            [
                "Obfuscated Dermogastrotomy"
            ],
            [
                "Reverse Rhinopodoplasty"
            ],
            [
                "Follicular Demiectomy"
            ],
            [
                "Folded Demiophtalmectomy"
            ],
            [
                "Reversible Pancreomyoplasty"
            ],
            [
                "Obtuse Pyloric Recombobulation"
            ],
            [
                "Complete Walletectomy"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of procedures physician John Wen was trained in?",
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T1.Name = \"John Wen\"\nRETURN T3.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3"
            ],
            "Token_Name_Label": [
                "Physician",
                "Trained_In",
                "Procedures"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "\"John Wen\""
        },
        "answers": [
            [
                "Obfuscated Dermogastrotomy"
            ],
            [
                "Reverse Rhinopodoplasty"
            ],
            [
                "Follicular Demiectomy"
            ],
            [
                "Folded Demiophtalmectomy"
            ],
            [
                "Reversible Pancreomyoplasty"
            ],
            [
                "Obtuse Pyloric Recombobulation"
            ],
            [
                "Complete Walletectomy"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians who are affiliated with Surgery or Psychiatry department.",
        "cypher_query": "MATCH (T1:Physician)-[T2:Affiliated_With]-(T3:Department)\nWHERE T3.Name = 'Surgery' OR T3.Name = 'Psychiatry'\nRETURN T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3"
            ],
            "Token_Name_Label": [
                "Physician",
                "Affiliated_With",
                "Department"
            ],
            "Token_Operator": [
                ".",
                "=",
                "OR"
            ],
            "Token_Literal_String": [
                "'Surgery'",
                "'Psychiatry'"
            ]
        },
        "answers": [
            [
                "Christopher Turk"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "John Wen"
            ],
            [
                "Molly Clock"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which physicians are affiliated with either Surgery or Psychiatry department? Give me their names.",
        "cypher_query": "MATCH (T1:Physician)-[T2:Affiliated_With]-(T3:Department)\nWHERE T3.Name = 'Surgery' OR T3.Name = 'Psychiatry'\nRETURN T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3"
            ],
            "Token_Name_Label": [
                "Physician",
                "Affiliated_With",
                "Department"
            ],
            "Token_Operator": [
                ".",
                "=",
                "OR"
            ],
            "Token_Literal_String": [
                "'Surgery'",
                "'Psychiatry'"
            ]
        },
        "answers": [
            [
                "Christopher Turk"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "John Wen"
            ],
            [
                "Molly Clock"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of patients who are not using the medication of Procrastin-X.",
        "cypher_query": "MATCH (p:Patient) MATCH (T1:Prescribes)-[]-(T2:Medication)\nWHERE T2.Name = 'Procrastin-X' AND NOT p.SSN in T1.Patient\nRETURN count(DISTINCT p.SSN)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ")-[",
                "]-("
            ],
            "Token_Name_Variable": [
                "p",
                "T1",
                "T2",
                "SSN",
                "Patient"
            ],
            "Token_Name_Label": [
                "Patient",
                "Prescribes",
                "Medication"
            ],
            "Token_Operator": [
                ".",
                "=",
                "AND",
                "NOT",
                "in",
                "DISTINCT"
            ],
            "Token_Literal_String": "'Procrastin-X'",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                3
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many patients are not using Procrastin-X as medication?",
        "cypher_query": "MATCH (p:Patient) MATCH (T1:Prescribes)-[]-(T2:Medication)\nWHERE T2.Name = 'Procrastin-X' AND NOT p.SSN in T1.Patient\nRETURN count(DISTINCT p.SSN)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ")-[",
                "]-("
            ],
            "Token_Name_Variable": [
                "p",
                "T1",
                "T2",
                "SSN",
                "Patient"
            ],
            "Token_Name_Label": [
                "Patient",
                "Prescribes",
                "Medication"
            ],
            "Token_Operator": [
                ".",
                "=",
                "AND",
                "NOT",
                "in",
                "DISTINCT"
            ],
            "Token_Literal_String": "'Procrastin-X'",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                3
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many appointments are there?",
        "cypher_query": "MATCH (a:Appointment)\nRETURN COUNT(\"*\")",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "a",
            "Token_Name_Label": "Appointment",
            "Token_Name_Function": "COUNT",
            "Token_Literal_String": "\"*\""
        },
        "answers": [
            [
                9
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Count how many appointments have been made in total.",
        "cypher_query": "MATCH (a:Appointment)\nRETURN COUNT(\"*\")",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "a",
            "Token_Name_Label": "Appointment",
            "Token_Name_Function": "COUNT",
            "Token_Literal_String": "\"*\""
        },
        "answers": [
            [
                9
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the names of nurses who are on call.",
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:On_Call)\nRETURN DISTINCT T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2"
            ],
            "Token_Name_Label": [
                "Nurse",
                "On_Call"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What are the distinct names of nurses on call?",
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:On_Call)\nRETURN DISTINCT T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2"
            ],
            "Token_Name_Label": [
                "Nurse",
                "On_Call"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    }
][][][
    {
        "db_id": "hospital_1",
        "question": "Which department has the largest number of employees?",
        "cypher_query": "MATCH (d:Department)\nWITH d.Name AS Name, count(d.DepartmentID) AS count\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "Name",
                "AS",
                "RETURN",
                "ORDER BY",
                "DESC",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "d",
                "DepartmentID",
                "count"
            ],
            "Token_Name_Label": "Department",
            "Token_Operator": ".",
            "Token_Name_Function": "count",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                "General Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the department with the most employees.",
        "cypher_query": "MATCH (d:Department)\nWITH d.Name AS Name, count(d.DepartmentID) AS count\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "Name",
                "AS",
                "RETURN",
                "ORDER BY",
                "DESC",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "d",
                "DepartmentID",
                "count"
            ],
            "Token_Name_Label": "Department",
            "Token_Operator": ".",
            "Token_Name_Function": "count",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                "General Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the employee id of the head whose department has the least number of employees?",
        "cypher_query": "MATCH (d:Department)\nWITH d.Head AS Head, count(d.DepartmentID) AS count\nRETURN Head\nORDER BY count\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "AS",
                "RETURN",
                "ORDER BY",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "d",
                "Head",
                "DepartmentID",
                "count"
            ],
            "Token_Name_Label": "Department",
            "Token_Operator": ".",
            "Token_Name_Function": "count",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                4
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "Which department has the largest number of employees?",
        "cypher_query": "MATCH (d:Department)\nWITH count(d.DepartmentID) AS count, d.Name AS Name\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "AS",
                "Name",
                "RETURN",
                "ORDER BY",
                "DESC",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "d",
                "DepartmentID",
                "count"
            ],
            "Token_Name_Label": "Department",
            "Token_Name_Function": "count",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                "General Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the department with the most employees.",
        "cypher_query": "MATCH (d:Department)\nWITH count(d.DepartmentID) AS count, d.Name AS Name\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "AS",
                "Name",
                "RETURN",
                "ORDER BY",
                "DESC",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "d",
                "DepartmentID",
                "count"
            ],
            "Token_Name_Label": "Department",
            "Token_Name_Function": "count",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                "General Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the employee id of the head whose department has the least number of employees?",
        "cypher_query": "MATCH (d:Department)\nWITH count(d.DepartmentID) AS count, d.Head AS Head\nRETURN Head\nORDER BY count\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "AS",
                "RETURN",
                "ORDER BY",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "d",
                "DepartmentID",
                "count",
                "Head"
            ],
            "Token_Name_Label": "Department",
            "Token_Name_Function": "count",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                4
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Tell me the employee id of the head of the department with the least employees.",
        "cypher_query": "MATCH (d:Department)\nWITH count(d.DepartmentID) AS count, d.Head AS Head\nRETURN Head\nORDER BY count\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "AS",
                "RETURN",
                "ORDER BY",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "d",
                "DepartmentID",
                "count",
                "Head"
            ],
            "Token_Name_Label": "Department",
            "Token_Name_Function": "count",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                4
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the id of the appointment with the most recent start date?",
        "cypher_query": "MATCH (a:Appointment)\nRETURN a.AppointmentID\nORDER BY a.Start DESC\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "ORDER BY",
                "Start",
                "DESC",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "a",
                "AppointmentID"
            ],
            "Token_Name_Label": "Appointment",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                86213939
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the id of the appointment that started most recently?",
        "cypher_query": "MATCH (a:Appointment)\nRETURN a.AppointmentID\nORDER BY a.Start DESC\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "ORDER BY",
                "Start",
                "DESC",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "a",
                "AppointmentID"
            ],
            "Token_Name_Label": "Appointment",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                86213939
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many patients' prescriptions are made by physician John Dorian?",
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Prescribes)-[]-(T3:Physician)\nWHERE T3.Name = \"John Dorian\"\nRETURN COUNT(T1.SSN)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3",
                "SSN"
            ],
            "Token_Name_Label": [
                "Patient",
                "Prescribes",
                "Physician"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "\"John Dorian\"",
            "Token_Name_Function": "COUNT"
        },
        "answers": [
            [
                1
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of patients' prescriptions physician John Dorian made.",
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Prescribes)-[]-(T3:Physician)\nWHERE T3.Name = \"John Dorian\"\nRETURN COUNT(T1.SSN)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3",
                "SSN"
            ],
            "Token_Name_Label": [
                "Patient",
                "Prescribes",
                "Physician"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "\"John Dorian\"",
            "Token_Name_Function": "COUNT"
        },
        "answers": [
            [
                1
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many different types of rooms are there?",
        "cypher_query": "MATCH (r:Room)\nWITH DISTINCT r.RoomType AS roomtype\nRETURN count(roomtype)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH DISTINCT",
                "AS",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "r",
                "RoomType",
                "roomtype"
            ],
            "Token_Name_Label": "Room",
            "Token_Operator": ".",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                1
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of distinct room types available.",
        "cypher_query": "MATCH (r:Room)\nWITH DISTINCT r.RoomType AS roomtype\nRETURN count(roomtype)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH DISTINCT",
                "AS",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "r",
                "RoomType",
                "roomtype"
            ],
            "Token_Name_Label": "Room",
            "Token_Operator": ".",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                1
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the patient who has the most recent undergoing treatment?",
        "cypher_query": "MATCH (u:Undergoes)\nRETURN u.Patient\nORDER BY u.DateUndergoes\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "ORDER BY",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "u",
                "Patient",
                "DateUndergoes"
            ],
            "Token_Name_Label": "Undergoes",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                100000001
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which patient is undergoing the most recent treatment?",
        "cypher_query": "MATCH (u:Undergoes)\nRETURN u.Patient\nORDER BY u.DateUndergoes\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "ORDER BY",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "u",
                "Patient",
                "DateUndergoes"
            ],
            "Token_Name_Label": "Undergoes",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                100000001
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "List the names of all distinct nurses ordered by alphabetical order?",
        "cypher_query": "MATCH (n:Nurse)\nRETURN DISTINCT n.Name\nORDER BY n.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "n",
            "Token_Name_Label": "Nurse",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the alphabetically ordered list of all the distinct names of nurses?",
        "cypher_query": "MATCH (n:Nurse)\nRETURN DISTINCT n.Name\nORDER BY n.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "n",
            "Token_Name_Label": "Nurse",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the names of nurses who are nursing an undergoing treatment.",
        "cypher_query": "MATCH (T1:Undergoes)-[]-(T2:Nurse)\nRETURN DISTINCT T2.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2"
            ],
            "Token_Name_Label": [
                "Undergoes",
                "Nurse"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which nurses are in charge of patients undergoing treatments?",
        "cypher_query": "MATCH (T1:Undergoes)-[]-(T2:Nurse)\nRETURN DISTINCT T2.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2"
            ],
            "Token_Name_Label": [
                "Undergoes",
                "Nurse"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "List the names of all distinct medications, ordered in an alphabetical order.",
        "cypher_query": "MATCH (m:Medication)\nRETURN DISTINCT m.Name\nORDER BY m.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "m",
            "Token_Name_Label": "Medication",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Awakin"
            ],
            [
                "Crescavitin"
            ],
            [
                "Melioraurin"
            ],
            [
                "Procrastin-X"
            ],
            [
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the alphabetically ordered list of all distinct medications?",
        "cypher_query": "MATCH (m:Medication)\nRETURN DISTINCT m.Name\nORDER BY m.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "m",
            "Token_Name_Label": "Medication",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Awakin"
            ],
            [
                "Crescavitin"
            ],
            [
                "Melioraurin"
            ],
            [
                "Procrastin-X"
            ],
            [
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What are the highest cost, lowest cost and average cost of procedures?",
        "cypher_query": "MATCH (p:Procedures)\nRETURN MAX(p.Cost),MIN(p.Cost),AVG(p.Cost)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Name_Function": [
                "MAX",
                "MIN",
                "AVG"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                10000.0,
                25.0,
                4324.857142857143
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Tell me the highest, lowest, and average cost of procedures.",
        "cypher_query": "MATCH (p:Procedures)\nRETURN MAX(p.Cost),MIN(p.Cost),AVG(p.Cost)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Name_Function": [
                "MAX",
                "MIN",
                "AVG"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                10000.0,
                25.0,
                4324.857142857143
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "List the name and cost of all procedures sorted by the cost from the highest to the lowest.",
        "cypher_query": "MATCH (p:Procedures)\nRETURN p.Name,p.Cost\nORDER BY p.Cost DESC",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name",
                "ORDER BY",
                "DESC"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Complete Walletectomy",
                10000.0
            ],
            [
                "Reversible Pancreomyoplasty",
                5600.0
            ],
            [
                "Obfuscated Dermogastrotomy",
                4899.0
            ],
            [
                "Folded Demiophtalmectomy",
                4500.0
            ],
            [
                "Obtuse Pyloric Recombobulation",
                3750.0
            ],
            [
                "Reverse Rhinopodoplasty",
                1500.0
            ],
            [
                "Follicular Demiectomy",
                25.0
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Sort the list of names and costs of all procedures in the descending order of cost.",
        "cypher_query": "MATCH (p:Procedures)\nRETURN p.Name,p.Cost\nORDER BY p.Cost DESC",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name",
                "ORDER BY",
                "DESC"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Complete Walletectomy",
                10000.0
            ],
            [
                "Reversible Pancreomyoplasty",
                5600.0
            ],
            [
                "Obfuscated Dermogastrotomy",
                4899.0
            ],
            [
                "Folded Demiophtalmectomy",
                4500.0
            ],
            [
                "Obtuse Pyloric Recombobulation",
                3750.0
            ],
            [
                "Reverse Rhinopodoplasty",
                1500.0
            ],
            [
                "Follicular Demiectomy",
                25.0
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the three most expensive procedures.",
        "cypher_query": "MATCH (p:Procedures)\nRETURN p.Name\nORDER BY p.Cost\nLIMIT 3",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name",
                "ORDER BY",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "3"
        },
        "answers": [
            [
                "Follicular Demiectomy"
            ],
            [
                "Reverse Rhinopodoplasty"
            ],
            [
                "Obtuse Pyloric Recombobulation"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What are the three most costly procedures?",
        "cypher_query": "MATCH (p:Procedures)\nRETURN p.Name\nORDER BY p.Cost\nLIMIT 3",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name",
                "ORDER BY",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "3"
        },
        "answers": [
            [
                "Follicular Demiectomy"
            ],
            [
                "Reverse Rhinopodoplasty"
            ],
            [
                "Obtuse Pyloric Recombobulation"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the physicians who are trained in a procedure that costs more than 5000.",
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T3.Cost > 5000\nRETURN T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3",
                "Cost"
            ],
            "Token_Name_Label": [
                "Physician",
                "Trained_In",
                "Procedures"
            ],
            "Token_Operator": [
                ".",
                ">"
            ],
            "Token_Literal_Number_Integer": "5000"
        },
        "answers": [
            [
                "John Wen"
            ],
            [
                "John Wen"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "Christopher Turk"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which physicians are trained in procedures that are more expensive than 5000?",
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T3.Cost > 5000\nRETURN T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3",
                "Cost"
            ],
            "Token_Name_Label": [
                "Physician",
                "Trained_In",
                "Procedures"
            ],
            "Token_Operator": [
                ".",
                ">"
            ],
            "Token_Literal_Number_Integer": "5000"
        },
        "answers": [
            [
                "John Wen"
            ],
            [
                "John Wen"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "Christopher Turk"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the average cost of procedures that physician John Wen was trained in?",
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T1.Name = \"John Wen\"\nRETURN AVG(T3.Cost)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3",
                "Cost"
            ],
            "Token_Name_Label": [
                "Physician",
                "Trained_In",
                "Procedures"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "\"John Wen\"",
            "Token_Name_Function": "AVG"
        },
        "answers": [
            [
                4324.857142857143
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Compute the mean price of procedures physician John Wen was trained in.",
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T1.Name = \"John Wen\"\nRETURN AVG(T3.Cost)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3",
                "Cost"
            ],
            "Token_Name_Label": [
                "Physician",
                "Trained_In",
                "Procedures"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "\"John Wen\"",
            "Token_Name_Function": "AVG"
        },
        "answers": [
            [
                4324.857142857143
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the names of procedures which physician John Wen was trained in.",
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T1.Name = \"John Wen\"\nRETURN T3.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3"
            ],
            "Token_Name_Label": [
                "Physician",
                "Trained_In",
                "Procedures"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "\"John Wen\""
        },
        "answers": [
            [
                "Obfuscated Dermogastrotomy"
            ],
            [
                "Reverse Rhinopodoplasty"
            ],
            [
                "Follicular Demiectomy"
            ],
            [
                "Folded Demiophtalmectomy"
            ],
            [
                "Reversible Pancreomyoplasty"
            ],
            [
                "Obtuse Pyloric Recombobulation"
            ],
            [
                "Complete Walletectomy"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of procedures physician John Wen was trained in?",
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T1.Name = \"John Wen\"\nRETURN T3.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3"
            ],
            "Token_Name_Label": [
                "Physician",
                "Trained_In",
                "Procedures"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "\"John Wen\""
        },
        "answers": [
            [
                "Obfuscated Dermogastrotomy"
            ],
            [
                "Reverse Rhinopodoplasty"
            ],
            [
                "Follicular Demiectomy"
            ],
            [
                "Folded Demiophtalmectomy"
            ],
            [
                "Reversible Pancreomyoplasty"
            ],
            [
                "Obtuse Pyloric Recombobulation"
            ],
            [
                "Complete Walletectomy"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians who are affiliated with Surgery or Psychiatry department.",
        "cypher_query": "MATCH (T1:Physician)-[T2:Affiliated_With]-(T3:Department)\nWHERE T3.Name = 'Surgery' OR T3.Name = 'Psychiatry'\nRETURN T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3"
            ],
            "Token_Name_Label": [
                "Physician",
                "Affiliated_With",
                "Department"
            ],
            "Token_Operator": [
                ".",
                "=",
                "OR"
            ],
            "Token_Literal_String": [
                "'Surgery'",
                "'Psychiatry'"
            ]
        },
        "answers": [
            [
                "Christopher Turk"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "John Wen"
            ],
            [
                "Molly Clock"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which physicians are affiliated with either Surgery or Psychiatry department? Give me their names.",
        "cypher_query": "MATCH (T1:Physician)-[T2:Affiliated_With]-(T3:Department)\nWHERE T3.Name = 'Surgery' OR T3.Name = 'Psychiatry'\nRETURN T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3"
            ],
            "Token_Name_Label": [
                "Physician",
                "Affiliated_With",
                "Department"
            ],
            "Token_Operator": [
                ".",
                "=",
                "OR"
            ],
            "Token_Literal_String": [
                "'Surgery'",
                "'Psychiatry'"
            ]
        },
        "answers": [
            [
                "Christopher Turk"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "John Wen"
            ],
            [
                "Molly Clock"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of patients who are not using the medication of Procrastin-X.",
        "cypher_query": "MATCH (p:Patient) MATCH (T1:Prescribes)-[]-(T2:Medication)\nWHERE T2.Name = 'Procrastin-X' AND NOT p.SSN in T1.Patient\nRETURN count(DISTINCT p.SSN)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ")-[",
                "]-("
            ],
            "Token_Name_Variable": [
                "p",
                "T1",
                "T2",
                "SSN",
                "Patient"
            ],
            "Token_Name_Label": [
                "Patient",
                "Prescribes",
                "Medication"
            ],
            "Token_Operator": [
                ".",
                "=",
                "AND",
                "NOT",
                "in",
                "DISTINCT"
            ],
            "Token_Literal_String": "'Procrastin-X'",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                3
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many patients are not using Procrastin-X as medication?",
        "cypher_query": "MATCH (p:Patient) MATCH (T1:Prescribes)-[]-(T2:Medication)\nWHERE T2.Name = 'Procrastin-X' AND NOT p.SSN in T1.Patient\nRETURN count(DISTINCT p.SSN)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ")-[",
                "]-("
            ],
            "Token_Name_Variable": [
                "p",
                "T1",
                "T2",
                "SSN",
                "Patient"
            ],
            "Token_Name_Label": [
                "Patient",
                "Prescribes",
                "Medication"
            ],
            "Token_Operator": [
                ".",
                "=",
                "AND",
                "NOT",
                "in",
                "DISTINCT"
            ],
            "Token_Literal_String": "'Procrastin-X'",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                3
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many appointments are there?",
        "cypher_query": "MATCH (a:Appointment)\nRETURN COUNT(\"*\")",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "a",
            "Token_Name_Label": "Appointment",
            "Token_Name_Function": "COUNT",
            "Token_Literal_String": "\"*\""
        },
        "answers": [
            [
                9
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Count how many appointments have been made in total.",
        "cypher_query": "MATCH (a:Appointment)\nRETURN COUNT(\"*\")",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "a",
            "Token_Name_Label": "Appointment",
            "Token_Name_Function": "COUNT",
            "Token_Literal_String": "\"*\""
        },
        "answers": [
            [
                9
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the names of nurses who are on call.",
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:On_Call)\nRETURN DISTINCT T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2"
            ],
            "Token_Name_Label": [
                "Nurse",
                "On_Call"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What are the distinct names of nurses on call?",
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:On_Call)\nRETURN DISTINCT T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2"
            ],
            "Token_Name_Label": [
                "Nurse",
                "On_Call"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "Which department has the largest number of employees?",
        "cypher_query": "MATCH (d:Department)\nWITH count(d.DepartmentID) AS count, d.Name AS Name\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "AS",
                "Name",
                "RETURN",
                "ORDER BY",
                "DESC",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "d",
                "DepartmentID",
                "count"
            ],
            "Token_Name_Label": "Department",
            "Token_Name_Function": "count",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                "General Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the department with the most employees.",
        "cypher_query": "MATCH (d:Department)\nWITH count(d.DepartmentID) AS count, d.Name AS Name\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "AS",
                "Name",
                "RETURN",
                "ORDER BY",
                "DESC",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "d",
                "DepartmentID",
                "count"
            ],
            "Token_Name_Label": "Department",
            "Token_Name_Function": "count",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                "General Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the employee id of the head whose department has the least number of employees?",
        "cypher_query": "MATCH (d:Department)\nWITH count(d.DepartmentID) AS count, d.Head AS Head\nRETURN Head\nORDER BY count\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "AS",
                "RETURN",
                "ORDER BY",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "d",
                "DepartmentID",
                "count",
                "Head"
            ],
            "Token_Name_Label": "Department",
            "Token_Name_Function": "count",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                4
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Tell me the employee id of the head of the department with the least employees.",
        "cypher_query": "MATCH (d:Department)\nWITH count(d.DepartmentID) AS count, d.Head AS Head\nRETURN Head\nORDER BY count\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "AS",
                "RETURN",
                "ORDER BY",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "d",
                "DepartmentID",
                "count",
                "Head"
            ],
            "Token_Name_Label": "Department",
            "Token_Name_Function": "count",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                4
            ]
        ]
    }
][][][][][][][][][][][][][][][][][][][][][][][][][][][][
    {
        "db_id": "hospital_1",
        "question": "How many patients' prescriptions are made by physician John Dorian?",
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Prescribes)-[]-(T3:Physician)\nWHERE T3.Name = \"John Dorian\"\nRETURN COUNT(T1.SSN)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3",
                "SSN"
            ],
            "Token_Name_Label": [
                "Patient",
                "Prescribes",
                "Physician"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "\"John Dorian\"",
            "Token_Name_Function": "COUNT"
        },
        "answers": [
            [
                1
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of patients' prescriptions physician John Dorian made.",
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Prescribes)-[]-(T3:Physician)\nWHERE T3.Name = \"John Dorian\"\nRETURN COUNT(T1.SSN)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3",
                "SSN"
            ],
            "Token_Name_Label": [
                "Patient",
                "Prescribes",
                "Physician"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "\"John Dorian\"",
            "Token_Name_Function": "COUNT"
        },
        "answers": [
            [
                1
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What are the highest cost, lowest cost and average cost of procedures?",
        "cypher_query": "MATCH (p:Procedures)\nRETURN MAX(p.Cost),MIN(p.Cost),AVG(p.Cost)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Name_Function": [
                "MAX",
                "MIN",
                "AVG"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                10000.0,
                25.0,
                4324.857142857143
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Tell me the highest, lowest, and average cost of procedures.",
        "cypher_query": "MATCH (p:Procedures)\nRETURN MAX(p.Cost),MIN(p.Cost),AVG(p.Cost)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Name_Function": [
                "MAX",
                "MIN",
                "AVG"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                10000.0,
                25.0,
                4324.857142857143
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the physicians who are trained in a procedure that costs more than 5000.",
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T3.Cost > 5000\nRETURN T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3",
                "Cost"
            ],
            "Token_Name_Label": [
                "Physician",
                "Trained_In",
                "Procedures"
            ],
            "Token_Operator": [
                ".",
                ">"
            ],
            "Token_Literal_Number_Integer": "5000"
        },
        "answers": [
            [
                "John Wen"
            ],
            [
                "John Wen"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "Christopher Turk"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which physicians are trained in procedures that are more expensive than 5000?",
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T3.Cost > 5000\nRETURN T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3",
                "Cost"
            ],
            "Token_Name_Label": [
                "Physician",
                "Trained_In",
                "Procedures"
            ],
            "Token_Operator": [
                ".",
                ">"
            ],
            "Token_Literal_Number_Integer": "5000"
        },
        "answers": [
            [
                "John Wen"
            ],
            [
                "John Wen"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "Christopher Turk"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the average cost of procedures that physician John Wen was trained in?",
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T1.Name = \"John Wen\"\nRETURN AVG(T3.Cost)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3",
                "Cost"
            ],
            "Token_Name_Label": [
                "Physician",
                "Trained_In",
                "Procedures"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "\"John Wen\"",
            "Token_Name_Function": "AVG"
        },
        "answers": [
            [
                4324.857142857143
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Compute the mean price of procedures physician John Wen was trained in.",
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T1.Name = \"John Wen\"\nRETURN AVG(T3.Cost)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3",
                "Cost"
            ],
            "Token_Name_Label": [
                "Physician",
                "Trained_In",
                "Procedures"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "\"John Wen\"",
            "Token_Name_Function": "AVG"
        },
        "answers": [
            [
                4324.857142857143
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the names of procedures which physician John Wen was trained in.",
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T1.Name = \"John Wen\"\nRETURN T3.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3"
            ],
            "Token_Name_Label": [
                "Physician",
                "Trained_In",
                "Procedures"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "\"John Wen\""
        },
        "answers": [
            [
                "Obfuscated Dermogastrotomy"
            ],
            [
                "Reverse Rhinopodoplasty"
            ],
            [
                "Follicular Demiectomy"
            ],
            [
                "Folded Demiophtalmectomy"
            ],
            [
                "Reversible Pancreomyoplasty"
            ],
            [
                "Obtuse Pyloric Recombobulation"
            ],
            [
                "Complete Walletectomy"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of procedures physician John Wen was trained in?",
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T1.Name = \"John Wen\"\nRETURN T3.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3"
            ],
            "Token_Name_Label": [
                "Physician",
                "Trained_In",
                "Procedures"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "\"John Wen\""
        },
        "answers": [
            [
                "Obfuscated Dermogastrotomy"
            ],
            [
                "Reverse Rhinopodoplasty"
            ],
            [
                "Follicular Demiectomy"
            ],
            [
                "Folded Demiophtalmectomy"
            ],
            [
                "Reversible Pancreomyoplasty"
            ],
            [
                "Obtuse Pyloric Recombobulation"
            ],
            [
                "Complete Walletectomy"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians who are affiliated with Surgery or Psychiatry department.",
        "cypher_query": "MATCH (T1:Physician)-[T2:Affiliated_With]-(T3:Department)\nWHERE T3.Name = 'Surgery' OR T3.Name = 'Psychiatry'\nRETURN T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3"
            ],
            "Token_Name_Label": [
                "Physician",
                "Affiliated_With",
                "Department"
            ],
            "Token_Operator": [
                ".",
                "=",
                "OR"
            ],
            "Token_Literal_String": [
                "'Surgery'",
                "'Psychiatry'"
            ]
        },
        "answers": [
            [
                "Christopher Turk"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "John Wen"
            ],
            [
                "Molly Clock"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which physicians are affiliated with either Surgery or Psychiatry department? Give me their names.",
        "cypher_query": "MATCH (T1:Physician)-[T2:Affiliated_With]-(T3:Department)\nWHERE T3.Name = 'Surgery' OR T3.Name = 'Psychiatry'\nRETURN T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3"
            ],
            "Token_Name_Label": [
                "Physician",
                "Affiliated_With",
                "Department"
            ],
            "Token_Operator": [
                ".",
                "=",
                "OR"
            ],
            "Token_Literal_String": [
                "'Surgery'",
                "'Psychiatry'"
            ]
        },
        "answers": [
            [
                "Christopher Turk"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "John Wen"
            ],
            [
                "Molly Clock"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of patients who are not using the medication of Procrastin-X.",
        "cypher_query": "MATCH (p:Patient) MATCH (T1:Prescribes)-[]-(T2:Medication)\nWHERE T2.Name = 'Procrastin-X' AND NOT p.SSN in T1.Patient\nRETURN count(DISTINCT p.SSN)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ")-[",
                "]-("
            ],
            "Token_Name_Variable": [
                "p",
                "T1",
                "T2",
                "SSN",
                "Patient"
            ],
            "Token_Name_Label": [
                "Patient",
                "Prescribes",
                "Medication"
            ],
            "Token_Operator": [
                ".",
                "=",
                "AND",
                "NOT",
                "in",
                "DISTINCT"
            ],
            "Token_Literal_String": "'Procrastin-X'",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                3
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many patients are not using Procrastin-X as medication?",
        "cypher_query": "MATCH (p:Patient) MATCH (T1:Prescribes)-[]-(T2:Medication)\nWHERE T2.Name = 'Procrastin-X' AND NOT p.SSN in T1.Patient\nRETURN count(DISTINCT p.SSN)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ")-[",
                "]-("
            ],
            "Token_Name_Variable": [
                "p",
                "T1",
                "T2",
                "SSN",
                "Patient"
            ],
            "Token_Name_Label": [
                "Patient",
                "Prescribes",
                "Medication"
            ],
            "Token_Operator": [
                ".",
                "=",
                "AND",
                "NOT",
                "in",
                "DISTINCT"
            ],
            "Token_Literal_String": "'Procrastin-X'",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                3
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many appointments are there?",
        "cypher_query": "MATCH (a:Appointment)\nRETURN COUNT(\"*\")",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "a",
            "Token_Name_Label": "Appointment",
            "Token_Name_Function": "COUNT",
            "Token_Literal_String": "\"*\""
        },
        "answers": [
            [
                9
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Count how many appointments have been made in total.",
        "cypher_query": "MATCH (a:Appointment)\nRETURN COUNT(\"*\")",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "a",
            "Token_Name_Label": "Appointment",
            "Token_Name_Function": "COUNT",
            "Token_Literal_String": "\"*\""
        },
        "answers": [
            [
                9
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "How many patients' prescriptions are made by physician John Dorian?",
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Prescribes)-[]-(T3:Physician)\nWHERE T3.Name = \"John Dorian\"\nRETURN COUNT(T1.SSN)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3",
                "SSN"
            ],
            "Token_Name_Label": [
                "Patient",
                "Prescribes",
                "Physician"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "\"John Dorian\"",
            "Token_Name_Function": "COUNT"
        },
        "answers": [
            [
                1
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of patients' prescriptions physician John Dorian made.",
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Prescribes)-[]-(T3:Physician)\nWHERE T3.Name = \"John Dorian\"\nRETURN COUNT(T1.SSN)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3",
                "SSN"
            ],
            "Token_Name_Label": [
                "Patient",
                "Prescribes",
                "Physician"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "\"John Dorian\"",
            "Token_Name_Function": "COUNT"
        },
        "answers": [
            [
                1
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What are the highest cost, lowest cost and average cost of procedures?",
        "cypher_query": "MATCH (p:Procedures)\nRETURN MAX(p.Cost),MIN(p.Cost),AVG(p.Cost)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Name_Function": [
                "MAX",
                "MIN",
                "AVG"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                10000.0,
                25.0,
                4324.857142857143
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Tell me the highest, lowest, and average cost of procedures.",
        "cypher_query": "MATCH (p:Procedures)\nRETURN MAX(p.Cost),MIN(p.Cost),AVG(p.Cost)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Name_Function": [
                "MAX",
                "MIN",
                "AVG"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                10000.0,
                25.0,
                4324.857142857143
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the physicians who are trained in a procedure that costs more than 5000.",
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T3.Cost > 5000\nRETURN T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3",
                "Cost"
            ],
            "Token_Name_Label": [
                "Physician",
                "Trained_In",
                "Procedures"
            ],
            "Token_Operator": [
                ".",
                ">"
            ],
            "Token_Literal_Number_Integer": "5000"
        },
        "answers": [
            [
                "John Wen"
            ],
            [
                "John Wen"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "Christopher Turk"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which physicians are trained in procedures that are more expensive than 5000?",
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T3.Cost > 5000\nRETURN T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3",
                "Cost"
            ],
            "Token_Name_Label": [
                "Physician",
                "Trained_In",
                "Procedures"
            ],
            "Token_Operator": [
                ".",
                ">"
            ],
            "Token_Literal_Number_Integer": "5000"
        },
        "answers": [
            [
                "John Wen"
            ],
            [
                "John Wen"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "Christopher Turk"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the average cost of procedures that physician John Wen was trained in?",
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T1.Name = \"John Wen\"\nRETURN AVG(T3.Cost)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3",
                "Cost"
            ],
            "Token_Name_Label": [
                "Physician",
                "Trained_In",
                "Procedures"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "\"John Wen\"",
            "Token_Name_Function": "AVG"
        },
        "answers": [
            [
                4324.857142857143
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Compute the mean price of procedures physician John Wen was trained in.",
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T1.Name = \"John Wen\"\nRETURN AVG(T3.Cost)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3",
                "Cost"
            ],
            "Token_Name_Label": [
                "Physician",
                "Trained_In",
                "Procedures"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "\"John Wen\"",
            "Token_Name_Function": "AVG"
        },
        "answers": [
            [
                4324.857142857143
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the names of procedures which physician John Wen was trained in.",
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T1.Name = \"John Wen\"\nRETURN T3.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3"
            ],
            "Token_Name_Label": [
                "Physician",
                "Trained_In",
                "Procedures"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "\"John Wen\""
        },
        "answers": [
            [
                "Obfuscated Dermogastrotomy"
            ],
            [
                "Reverse Rhinopodoplasty"
            ],
            [
                "Follicular Demiectomy"
            ],
            [
                "Folded Demiophtalmectomy"
            ],
            [
                "Reversible Pancreomyoplasty"
            ],
            [
                "Obtuse Pyloric Recombobulation"
            ],
            [
                "Complete Walletectomy"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of procedures physician John Wen was trained in?",
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T1.Name = \"John Wen\"\nRETURN T3.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3"
            ],
            "Token_Name_Label": [
                "Physician",
                "Trained_In",
                "Procedures"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "\"John Wen\""
        },
        "answers": [
            [
                "Obfuscated Dermogastrotomy"
            ],
            [
                "Reverse Rhinopodoplasty"
            ],
            [
                "Follicular Demiectomy"
            ],
            [
                "Folded Demiophtalmectomy"
            ],
            [
                "Reversible Pancreomyoplasty"
            ],
            [
                "Obtuse Pyloric Recombobulation"
            ],
            [
                "Complete Walletectomy"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians who are affiliated with Surgery or Psychiatry department.",
        "cypher_query": "MATCH (T1:Physician)-[T2:Affiliated_With]-(T3:Department)\nWHERE T3.Name = 'Surgery' OR T3.Name = 'Psychiatry'\nRETURN T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3"
            ],
            "Token_Name_Label": [
                "Physician",
                "Affiliated_With",
                "Department"
            ],
            "Token_Operator": [
                ".",
                "=",
                "OR"
            ],
            "Token_Literal_String": [
                "'Surgery'",
                "'Psychiatry'"
            ]
        },
        "answers": [
            [
                "Christopher Turk"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "John Wen"
            ],
            [
                "Molly Clock"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which physicians are affiliated with either Surgery or Psychiatry department? Give me their names.",
        "cypher_query": "MATCH (T1:Physician)-[T2:Affiliated_With]-(T3:Department)\nWHERE T3.Name = 'Surgery' OR T3.Name = 'Psychiatry'\nRETURN T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3"
            ],
            "Token_Name_Label": [
                "Physician",
                "Affiliated_With",
                "Department"
            ],
            "Token_Operator": [
                ".",
                "=",
                "OR"
            ],
            "Token_Literal_String": [
                "'Surgery'",
                "'Psychiatry'"
            ]
        },
        "answers": [
            [
                "Christopher Turk"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "John Wen"
            ],
            [
                "Molly Clock"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of patients who are not using the medication of Procrastin-X.",
        "cypher_query": "MATCH (p:Patient) MATCH (T1:Prescribes)-[]-(T2:Medication)\nWHERE T2.Name = 'Procrastin-X' AND NOT p.SSN in T1.Patient\nRETURN count(DISTINCT p.SSN)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ")-[",
                "]-("
            ],
            "Token_Name_Variable": [
                "p",
                "T1",
                "T2",
                "SSN",
                "Patient"
            ],
            "Token_Name_Label": [
                "Patient",
                "Prescribes",
                "Medication"
            ],
            "Token_Operator": [
                ".",
                "=",
                "AND",
                "NOT",
                "in",
                "DISTINCT"
            ],
            "Token_Literal_String": "'Procrastin-X'",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                3
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many patients are not using Procrastin-X as medication?",
        "cypher_query": "MATCH (p:Patient) MATCH (T1:Prescribes)-[]-(T2:Medication)\nWHERE T2.Name = 'Procrastin-X' AND NOT p.SSN in T1.Patient\nRETURN count(DISTINCT p.SSN)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ")-[",
                "]-("
            ],
            "Token_Name_Variable": [
                "p",
                "T1",
                "T2",
                "SSN",
                "Patient"
            ],
            "Token_Name_Label": [
                "Patient",
                "Prescribes",
                "Medication"
            ],
            "Token_Operator": [
                ".",
                "=",
                "AND",
                "NOT",
                "in",
                "DISTINCT"
            ],
            "Token_Literal_String": "'Procrastin-X'",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                3
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many appointments are there?",
        "cypher_query": "MATCH (a:Appointment)\nRETURN COUNT(\"*\")",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "a",
            "Token_Name_Label": "Appointment",
            "Token_Name_Function": "COUNT",
            "Token_Literal_String": "\"*\""
        },
        "answers": [
            [
                9
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Count how many appointments have been made in total.",
        "cypher_query": "MATCH (a:Appointment)\nRETURN COUNT(\"*\")",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "a",
            "Token_Name_Label": "Appointment",
            "Token_Name_Function": "COUNT",
            "Token_Literal_String": "\"*\""
        },
        "answers": [
            [
                9
            ]
        ]
    }
][][
    {
        "db_id": "hospital_1",
        "question": "How many patients' prescriptions are made by physician John Dorian?",
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Prescribes)-[]-(T3:Physician)\nWHERE T3.Name = \"John Dorian\"\nRETURN COUNT(T1.SSN)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3",
                "SSN"
            ],
            "Token_Name_Label": [
                "Patient",
                "Prescribes",
                "Physician"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "\"John Dorian\"",
            "Token_Name_Function": "COUNT"
        },
        "answers": [
            [
                1
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of patients' prescriptions physician John Dorian made.",
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Prescribes)-[]-(T3:Physician)\nWHERE T3.Name = \"John Dorian\"\nRETURN COUNT(T1.SSN)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3",
                "SSN"
            ],
            "Token_Name_Label": [
                "Patient",
                "Prescribes",
                "Physician"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "\"John Dorian\"",
            "Token_Name_Function": "COUNT"
        },
        "answers": [
            [
                1
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What are the highest cost, lowest cost and average cost of procedures?",
        "cypher_query": "MATCH (p:Procedures)\nRETURN MAX(p.Cost),MIN(p.Cost),AVG(p.Cost)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Name_Function": [
                "MAX",
                "MIN",
                "AVG"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                10000.0,
                25.0,
                4324.857142857143
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Tell me the highest, lowest, and average cost of procedures.",
        "cypher_query": "MATCH (p:Procedures)\nRETURN MAX(p.Cost),MIN(p.Cost),AVG(p.Cost)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Name_Function": [
                "MAX",
                "MIN",
                "AVG"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                10000.0,
                25.0,
                4324.857142857143
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the physicians who are trained in a procedure that costs more than 5000.",
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T3.Cost > 5000\nRETURN T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3",
                "Cost"
            ],
            "Token_Name_Label": [
                "Physician",
                "Trained_In",
                "Procedures"
            ],
            "Token_Operator": [
                ".",
                ">"
            ],
            "Token_Literal_Number_Integer": "5000"
        },
        "answers": [
            [
                "John Wen"
            ],
            [
                "John Wen"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "Christopher Turk"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which physicians are trained in procedures that are more expensive than 5000?",
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T3.Cost > 5000\nRETURN T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3",
                "Cost"
            ],
            "Token_Name_Label": [
                "Physician",
                "Trained_In",
                "Procedures"
            ],
            "Token_Operator": [
                ".",
                ">"
            ],
            "Token_Literal_Number_Integer": "5000"
        },
        "answers": [
            [
                "John Wen"
            ],
            [
                "John Wen"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "Christopher Turk"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the average cost of procedures that physician John Wen was trained in?",
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T1.Name = \"John Wen\"\nRETURN AVG(T3.Cost)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3",
                "Cost"
            ],
            "Token_Name_Label": [
                "Physician",
                "Trained_In",
                "Procedures"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "\"John Wen\"",
            "Token_Name_Function": "AVG"
        },
        "answers": [
            [
                4324.857142857143
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Compute the mean price of procedures physician John Wen was trained in.",
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T1.Name = \"John Wen\"\nRETURN AVG(T3.Cost)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3",
                "Cost"
            ],
            "Token_Name_Label": [
                "Physician",
                "Trained_In",
                "Procedures"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "\"John Wen\"",
            "Token_Name_Function": "AVG"
        },
        "answers": [
            [
                4324.857142857143
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the names of procedures which physician John Wen was trained in.",
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T1.Name = \"John Wen\"\nRETURN T3.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3"
            ],
            "Token_Name_Label": [
                "Physician",
                "Trained_In",
                "Procedures"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "\"John Wen\""
        },
        "answers": [
            [
                "Obfuscated Dermogastrotomy"
            ],
            [
                "Reverse Rhinopodoplasty"
            ],
            [
                "Follicular Demiectomy"
            ],
            [
                "Folded Demiophtalmectomy"
            ],
            [
                "Reversible Pancreomyoplasty"
            ],
            [
                "Obtuse Pyloric Recombobulation"
            ],
            [
                "Complete Walletectomy"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of procedures physician John Wen was trained in?",
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T1.Name = \"John Wen\"\nRETURN T3.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3"
            ],
            "Token_Name_Label": [
                "Physician",
                "Trained_In",
                "Procedures"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "\"John Wen\""
        },
        "answers": [
            [
                "Obfuscated Dermogastrotomy"
            ],
            [
                "Reverse Rhinopodoplasty"
            ],
            [
                "Follicular Demiectomy"
            ],
            [
                "Folded Demiophtalmectomy"
            ],
            [
                "Reversible Pancreomyoplasty"
            ],
            [
                "Obtuse Pyloric Recombobulation"
            ],
            [
                "Complete Walletectomy"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians who are affiliated with Surgery or Psychiatry department.",
        "cypher_query": "MATCH (T1:Physician)-[T2:Affiliated_With]-(T3:Department)\nWHERE T3.Name = 'Surgery' OR T3.Name = 'Psychiatry'\nRETURN T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3"
            ],
            "Token_Name_Label": [
                "Physician",
                "Affiliated_With",
                "Department"
            ],
            "Token_Operator": [
                ".",
                "=",
                "OR"
            ],
            "Token_Literal_String": [
                "'Surgery'",
                "'Psychiatry'"
            ]
        },
        "answers": [
            [
                "Christopher Turk"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "John Wen"
            ],
            [
                "Molly Clock"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which physicians are affiliated with either Surgery or Psychiatry department? Give me their names.",
        "cypher_query": "MATCH (T1:Physician)-[T2:Affiliated_With]-(T3:Department)\nWHERE T3.Name = 'Surgery' OR T3.Name = 'Psychiatry'\nRETURN T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3"
            ],
            "Token_Name_Label": [
                "Physician",
                "Affiliated_With",
                "Department"
            ],
            "Token_Operator": [
                ".",
                "=",
                "OR"
            ],
            "Token_Literal_String": [
                "'Surgery'",
                "'Psychiatry'"
            ]
        },
        "answers": [
            [
                "Christopher Turk"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "John Wen"
            ],
            [
                "Molly Clock"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of patients who are not using the medication of Procrastin-X.",
        "cypher_query": "MATCH (p:Patient) MATCH (T1:Prescribes)-[]-(T2:Medication)\nWHERE T2.Name = 'Procrastin-X' AND NOT p.SSN in T1.Patient\nRETURN count(DISTINCT p.SSN)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ")-[",
                "]-("
            ],
            "Token_Name_Variable": [
                "p",
                "T1",
                "T2",
                "SSN",
                "Patient"
            ],
            "Token_Name_Label": [
                "Patient",
                "Prescribes",
                "Medication"
            ],
            "Token_Operator": [
                ".",
                "=",
                "AND",
                "NOT",
                "in",
                "DISTINCT"
            ],
            "Token_Literal_String": "'Procrastin-X'",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                3
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many patients are not using Procrastin-X as medication?",
        "cypher_query": "MATCH (p:Patient) MATCH (T1:Prescribes)-[]-(T2:Medication)\nWHERE T2.Name = 'Procrastin-X' AND NOT p.SSN in T1.Patient\nRETURN count(DISTINCT p.SSN)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ")-[",
                "]-("
            ],
            "Token_Name_Variable": [
                "p",
                "T1",
                "T2",
                "SSN",
                "Patient"
            ],
            "Token_Name_Label": [
                "Patient",
                "Prescribes",
                "Medication"
            ],
            "Token_Operator": [
                ".",
                "=",
                "AND",
                "NOT",
                "in",
                "DISTINCT"
            ],
            "Token_Literal_String": "'Procrastin-X'",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                3
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many appointments are there?",
        "cypher_query": "MATCH (a:Appointment)\nRETURN COUNT(\"*\")",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "a",
            "Token_Name_Label": "Appointment",
            "Token_Name_Function": "COUNT",
            "Token_Literal_String": "\"*\""
        },
        "answers": [
            [
                9
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Count how many appointments have been made in total.",
        "cypher_query": "MATCH (a:Appointment)\nRETURN COUNT(\"*\")",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "a",
            "Token_Name_Label": "Appointment",
            "Token_Name_Function": "COUNT",
            "Token_Literal_String": "\"*\""
        },
        "answers": [
            [
                9
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "How many patients' prescriptions are made by physician John Dorian?",
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Prescribes)-[]-(T3:Physician)\nWHERE T3.Name = \"John Dorian\"\nRETURN COUNT(T1.SSN)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3",
                "SSN"
            ],
            "Token_Name_Label": [
                "Patient",
                "Prescribes",
                "Physician"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "\"John Dorian\"",
            "Token_Name_Function": "COUNT"
        },
        "answers": [
            [
                1
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of patients' prescriptions physician John Dorian made.",
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Prescribes)-[]-(T3:Physician)\nWHERE T3.Name = \"John Dorian\"\nRETURN COUNT(T1.SSN)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3",
                "SSN"
            ],
            "Token_Name_Label": [
                "Patient",
                "Prescribes",
                "Physician"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "\"John Dorian\"",
            "Token_Name_Function": "COUNT"
        },
        "answers": [
            [
                1
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What are the highest cost, lowest cost and average cost of procedures?",
        "cypher_query": "MATCH (p:Procedures)\nRETURN MAX(p.Cost),MIN(p.Cost),AVG(p.Cost)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Name_Function": [
                "MAX",
                "MIN",
                "AVG"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                10000.0,
                25.0,
                4324.857142857143
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Tell me the highest, lowest, and average cost of procedures.",
        "cypher_query": "MATCH (p:Procedures)\nRETURN MAX(p.Cost),MIN(p.Cost),AVG(p.Cost)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Name_Function": [
                "MAX",
                "MIN",
                "AVG"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                10000.0,
                25.0,
                4324.857142857143
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the physicians who are trained in a procedure that costs more than 5000.",
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T3.Cost > 5000\nRETURN T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3",
                "Cost"
            ],
            "Token_Name_Label": [
                "Physician",
                "Trained_In",
                "Procedures"
            ],
            "Token_Operator": [
                ".",
                ">"
            ],
            "Token_Literal_Number_Integer": "5000"
        },
        "answers": [
            [
                "John Wen"
            ],
            [
                "John Wen"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "Christopher Turk"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which physicians are trained in procedures that are more expensive than 5000?",
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T3.Cost > 5000\nRETURN T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3",
                "Cost"
            ],
            "Token_Name_Label": [
                "Physician",
                "Trained_In",
                "Procedures"
            ],
            "Token_Operator": [
                ".",
                ">"
            ],
            "Token_Literal_Number_Integer": "5000"
        },
        "answers": [
            [
                "John Wen"
            ],
            [
                "John Wen"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "Christopher Turk"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the average cost of procedures that physician John Wen was trained in?",
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T1.Name = \"John Wen\"\nRETURN AVG(T3.Cost)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3",
                "Cost"
            ],
            "Token_Name_Label": [
                "Physician",
                "Trained_In",
                "Procedures"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "\"John Wen\"",
            "Token_Name_Function": "AVG"
        },
        "answers": [
            [
                4324.857142857143
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Compute the mean price of procedures physician John Wen was trained in.",
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T1.Name = \"John Wen\"\nRETURN AVG(T3.Cost)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3",
                "Cost"
            ],
            "Token_Name_Label": [
                "Physician",
                "Trained_In",
                "Procedures"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "\"John Wen\"",
            "Token_Name_Function": "AVG"
        },
        "answers": [
            [
                4324.857142857143
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the names of procedures which physician John Wen was trained in.",
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T1.Name = \"John Wen\"\nRETURN T3.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3"
            ],
            "Token_Name_Label": [
                "Physician",
                "Trained_In",
                "Procedures"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "\"John Wen\""
        },
        "answers": [
            [
                "Obfuscated Dermogastrotomy"
            ],
            [
                "Reverse Rhinopodoplasty"
            ],
            [
                "Follicular Demiectomy"
            ],
            [
                "Folded Demiophtalmectomy"
            ],
            [
                "Reversible Pancreomyoplasty"
            ],
            [
                "Obtuse Pyloric Recombobulation"
            ],
            [
                "Complete Walletectomy"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of procedures physician John Wen was trained in?",
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T1.Name = \"John Wen\"\nRETURN T3.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3"
            ],
            "Token_Name_Label": [
                "Physician",
                "Trained_In",
                "Procedures"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "\"John Wen\""
        },
        "answers": [
            [
                "Obfuscated Dermogastrotomy"
            ],
            [
                "Reverse Rhinopodoplasty"
            ],
            [
                "Follicular Demiectomy"
            ],
            [
                "Folded Demiophtalmectomy"
            ],
            [
                "Reversible Pancreomyoplasty"
            ],
            [
                "Obtuse Pyloric Recombobulation"
            ],
            [
                "Complete Walletectomy"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians who are affiliated with Surgery or Psychiatry department.",
        "cypher_query": "MATCH (T1:Physician)-[T2:Affiliated_With]-(T3:Department)\nWHERE T3.Name = 'Surgery' OR T3.Name = 'Psychiatry'\nRETURN T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3"
            ],
            "Token_Name_Label": [
                "Physician",
                "Affiliated_With",
                "Department"
            ],
            "Token_Operator": [
                ".",
                "=",
                "OR"
            ],
            "Token_Literal_String": [
                "'Surgery'",
                "'Psychiatry'"
            ]
        },
        "answers": [
            [
                "Christopher Turk"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "John Wen"
            ],
            [
                "Molly Clock"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which physicians are affiliated with either Surgery or Psychiatry department? Give me their names.",
        "cypher_query": "MATCH (T1:Physician)-[T2:Affiliated_With]-(T3:Department)\nWHERE T3.Name = 'Surgery' OR T3.Name = 'Psychiatry'\nRETURN T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3"
            ],
            "Token_Name_Label": [
                "Physician",
                "Affiliated_With",
                "Department"
            ],
            "Token_Operator": [
                ".",
                "=",
                "OR"
            ],
            "Token_Literal_String": [
                "'Surgery'",
                "'Psychiatry'"
            ]
        },
        "answers": [
            [
                "Christopher Turk"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "John Wen"
            ],
            [
                "Molly Clock"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of patients who are not using the medication of Procrastin-X.",
        "cypher_query": "MATCH (p:Patient) MATCH (T1:Prescribes)-[]-(T2:Medication)\nWHERE T2.Name = 'Procrastin-X' AND NOT p.SSN in T1.Patient\nRETURN count(DISTINCT p.SSN)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ")-[",
                "]-("
            ],
            "Token_Name_Variable": [
                "p",
                "T1",
                "T2",
                "SSN",
                "Patient"
            ],
            "Token_Name_Label": [
                "Patient",
                "Prescribes",
                "Medication"
            ],
            "Token_Operator": [
                ".",
                "=",
                "AND",
                "NOT",
                "in",
                "DISTINCT"
            ],
            "Token_Literal_String": "'Procrastin-X'",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                3
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many patients are not using Procrastin-X as medication?",
        "cypher_query": "MATCH (p:Patient) MATCH (T1:Prescribes)-[]-(T2:Medication)\nWHERE T2.Name = 'Procrastin-X' AND NOT p.SSN in T1.Patient\nRETURN count(DISTINCT p.SSN)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ")-[",
                "]-("
            ],
            "Token_Name_Variable": [
                "p",
                "T1",
                "T2",
                "SSN",
                "Patient"
            ],
            "Token_Name_Label": [
                "Patient",
                "Prescribes",
                "Medication"
            ],
            "Token_Operator": [
                ".",
                "=",
                "AND",
                "NOT",
                "in",
                "DISTINCT"
            ],
            "Token_Literal_String": "'Procrastin-X'",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                3
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many appointments are there?",
        "cypher_query": "MATCH (a:Appointment)\nRETURN COUNT(\"*\")",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "a",
            "Token_Name_Label": "Appointment",
            "Token_Name_Function": "COUNT",
            "Token_Literal_String": "\"*\""
        },
        "answers": [
            [
                9
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Count how many appointments have been made in total.",
        "cypher_query": "MATCH (a:Appointment)\nRETURN COUNT(\"*\")",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "a",
            "Token_Name_Label": "Appointment",
            "Token_Name_Function": "COUNT",
            "Token_Literal_String": "\"*\""
        },
        "answers": [
            [
                9
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "How many patients' prescriptions are made by physician John Dorian?",
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Prescribes)-[]-(T3:Physician)\nWHERE T3.Name = \"John Dorian\"\nRETURN COUNT(T1.SSN)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3",
                "SSN"
            ],
            "Token_Name_Label": [
                "Patient",
                "Prescribes",
                "Physician"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "\"John Dorian\"",
            "Token_Name_Function": "COUNT"
        },
        "answers": [
            [
                1
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of patients' prescriptions physician John Dorian made.",
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Prescribes)-[]-(T3:Physician)\nWHERE T3.Name = \"John Dorian\"\nRETURN COUNT(T1.SSN)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3",
                "SSN"
            ],
            "Token_Name_Label": [
                "Patient",
                "Prescribes",
                "Physician"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "\"John Dorian\"",
            "Token_Name_Function": "COUNT"
        },
        "answers": [
            [
                1
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What are the highest cost, lowest cost and average cost of procedures?",
        "cypher_query": "MATCH (p:Procedures)\nRETURN MAX(p.Cost),MIN(p.Cost),AVG(p.Cost)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Name_Function": [
                "MAX",
                "MIN",
                "AVG"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                10000.0,
                25.0,
                4324.857142857143
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Tell me the highest, lowest, and average cost of procedures.",
        "cypher_query": "MATCH (p:Procedures)\nRETURN MAX(p.Cost),MIN(p.Cost),AVG(p.Cost)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Name_Function": [
                "MAX",
                "MIN",
                "AVG"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                10000.0,
                25.0,
                4324.857142857143
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the physicians who are trained in a procedure that costs more than 5000.",
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T3.Cost > 5000\nRETURN T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3",
                "Cost"
            ],
            "Token_Name_Label": [
                "Physician",
                "Trained_In",
                "Procedures"
            ],
            "Token_Operator": [
                ".",
                ">"
            ],
            "Token_Literal_Number_Integer": "5000"
        },
        "answers": [
            [
                "John Wen"
            ],
            [
                "John Wen"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "Christopher Turk"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which physicians are trained in procedures that are more expensive than 5000?",
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T3.Cost > 5000\nRETURN T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3",
                "Cost"
            ],
            "Token_Name_Label": [
                "Physician",
                "Trained_In",
                "Procedures"
            ],
            "Token_Operator": [
                ".",
                ">"
            ],
            "Token_Literal_Number_Integer": "5000"
        },
        "answers": [
            [
                "John Wen"
            ],
            [
                "John Wen"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "Christopher Turk"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the average cost of procedures that physician John Wen was trained in?",
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T1.Name = \"John Wen\"\nRETURN AVG(T3.Cost)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3",
                "Cost"
            ],
            "Token_Name_Label": [
                "Physician",
                "Trained_In",
                "Procedures"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "\"John Wen\"",
            "Token_Name_Function": "AVG"
        },
        "answers": [
            [
                4324.857142857143
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Compute the mean price of procedures physician John Wen was trained in.",
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T1.Name = \"John Wen\"\nRETURN AVG(T3.Cost)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3",
                "Cost"
            ],
            "Token_Name_Label": [
                "Physician",
                "Trained_In",
                "Procedures"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "\"John Wen\"",
            "Token_Name_Function": "AVG"
        },
        "answers": [
            [
                4324.857142857143
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the names of procedures which physician John Wen was trained in.",
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T1.Name = \"John Wen\"\nRETURN T3.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3"
            ],
            "Token_Name_Label": [
                "Physician",
                "Trained_In",
                "Procedures"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "\"John Wen\""
        },
        "answers": [
            [
                "Obfuscated Dermogastrotomy"
            ],
            [
                "Reverse Rhinopodoplasty"
            ],
            [
                "Follicular Demiectomy"
            ],
            [
                "Folded Demiophtalmectomy"
            ],
            [
                "Reversible Pancreomyoplasty"
            ],
            [
                "Obtuse Pyloric Recombobulation"
            ],
            [
                "Complete Walletectomy"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of procedures physician John Wen was trained in?",
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T1.Name = \"John Wen\"\nRETURN T3.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3"
            ],
            "Token_Name_Label": [
                "Physician",
                "Trained_In",
                "Procedures"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "\"John Wen\""
        },
        "answers": [
            [
                "Obfuscated Dermogastrotomy"
            ],
            [
                "Reverse Rhinopodoplasty"
            ],
            [
                "Follicular Demiectomy"
            ],
            [
                "Folded Demiophtalmectomy"
            ],
            [
                "Reversible Pancreomyoplasty"
            ],
            [
                "Obtuse Pyloric Recombobulation"
            ],
            [
                "Complete Walletectomy"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians who are affiliated with Surgery or Psychiatry department.",
        "cypher_query": "MATCH (T1:Physician)-[T2:Affiliated_With]-(T3:Department)\nWHERE T3.Name = 'Surgery' OR T3.Name = 'Psychiatry'\nRETURN T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3"
            ],
            "Token_Name_Label": [
                "Physician",
                "Affiliated_With",
                "Department"
            ],
            "Token_Operator": [
                ".",
                "=",
                "OR"
            ],
            "Token_Literal_String": [
                "'Surgery'",
                "'Psychiatry'"
            ]
        },
        "answers": [
            [
                "Christopher Turk"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "John Wen"
            ],
            [
                "Molly Clock"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which physicians are affiliated with either Surgery or Psychiatry department? Give me their names.",
        "cypher_query": "MATCH (T1:Physician)-[T2:Affiliated_With]-(T3:Department)\nWHERE T3.Name = 'Surgery' OR T3.Name = 'Psychiatry'\nRETURN T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3"
            ],
            "Token_Name_Label": [
                "Physician",
                "Affiliated_With",
                "Department"
            ],
            "Token_Operator": [
                ".",
                "=",
                "OR"
            ],
            "Token_Literal_String": [
                "'Surgery'",
                "'Psychiatry'"
            ]
        },
        "answers": [
            [
                "Christopher Turk"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "John Wen"
            ],
            [
                "Molly Clock"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of patients who are not using the medication of Procrastin-X.",
        "cypher_query": "MATCH (p:Patient) MATCH (T1:Prescribes)-[]-(T2:Medication)\nWHERE T2.Name = 'Procrastin-X' AND NOT p.SSN in T1.Patient\nRETURN count(DISTINCT p.SSN)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ")-[",
                "]-("
            ],
            "Token_Name_Variable": [
                "p",
                "T1",
                "T2",
                "SSN",
                "Patient"
            ],
            "Token_Name_Label": [
                "Patient",
                "Prescribes",
                "Medication"
            ],
            "Token_Operator": [
                ".",
                "=",
                "AND",
                "NOT",
                "in",
                "DISTINCT"
            ],
            "Token_Literal_String": "'Procrastin-X'",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                3
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many patients are not using Procrastin-X as medication?",
        "cypher_query": "MATCH (p:Patient) MATCH (T1:Prescribes)-[]-(T2:Medication)\nWHERE T2.Name = 'Procrastin-X' AND NOT p.SSN in T1.Patient\nRETURN count(DISTINCT p.SSN)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ")-[",
                "]-("
            ],
            "Token_Name_Variable": [
                "p",
                "T1",
                "T2",
                "SSN",
                "Patient"
            ],
            "Token_Name_Label": [
                "Patient",
                "Prescribes",
                "Medication"
            ],
            "Token_Operator": [
                ".",
                "=",
                "AND",
                "NOT",
                "in",
                "DISTINCT"
            ],
            "Token_Literal_String": "'Procrastin-X'",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                3
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many appointments are there?",
        "cypher_query": "MATCH (a:Appointment)\nRETURN COUNT(\"*\")",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "a",
            "Token_Name_Label": "Appointment",
            "Token_Name_Function": "COUNT",
            "Token_Literal_String": "\"*\""
        },
        "answers": [
            [
                9
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Count how many appointments have been made in total.",
        "cypher_query": "MATCH (a:Appointment)\nRETURN COUNT(\"*\")",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "a",
            "Token_Name_Label": "Appointment",
            "Token_Name_Function": "COUNT",
            "Token_Literal_String": "\"*\""
        },
        "answers": [
            [
                9
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "How many patients' prescriptions are made by physician John Dorian?",
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Prescribes)-[]-(T3:Physician)\nWHERE T3.Name = \"John Dorian\"\nRETURN COUNT(T1.SSN)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3",
                "SSN"
            ],
            "Token_Name_Label": [
                "Patient",
                "Prescribes",
                "Physician"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "\"John Dorian\"",
            "Token_Name_Function": "COUNT"
        },
        "answers": [
            [
                1
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of patients' prescriptions physician John Dorian made.",
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Prescribes)-[]-(T3:Physician)\nWHERE T3.Name = \"John Dorian\"\nRETURN COUNT(T1.SSN)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3",
                "SSN"
            ],
            "Token_Name_Label": [
                "Patient",
                "Prescribes",
                "Physician"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "\"John Dorian\"",
            "Token_Name_Function": "COUNT"
        },
        "answers": [
            [
                1
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the names of nurses who are nursing an undergoing treatment.",
        "cypher_query": "MATCH (T1:Undergoes)-[]-(T2:Nurse)\nRETURN DISTINCT T2.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2"
            ],
            "Token_Name_Label": [
                "Undergoes",
                "Nurse"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which nurses are in charge of patients undergoing treatments?",
        "cypher_query": "MATCH (T1:Undergoes)-[]-(T2:Nurse)\nRETURN DISTINCT T2.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2"
            ],
            "Token_Name_Label": [
                "Undergoes",
                "Nurse"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What are the highest cost, lowest cost and average cost of procedures?",
        "cypher_query": "MATCH (p:Procedures)\nRETURN MAX(p.Cost),MIN(p.Cost),AVG(p.Cost)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Name_Function": [
                "MAX",
                "MIN",
                "AVG"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                10000.0,
                25.0,
                4324.857142857143
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Tell me the highest, lowest, and average cost of procedures.",
        "cypher_query": "MATCH (p:Procedures)\nRETURN MAX(p.Cost),MIN(p.Cost),AVG(p.Cost)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Name_Function": [
                "MAX",
                "MIN",
                "AVG"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                10000.0,
                25.0,
                4324.857142857143
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the physicians who are trained in a procedure that costs more than 5000.",
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T3.Cost > 5000\nRETURN T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3",
                "Cost"
            ],
            "Token_Name_Label": [
                "Physician",
                "Trained_In",
                "Procedures"
            ],
            "Token_Operator": [
                ".",
                ">"
            ],
            "Token_Literal_Number_Integer": "5000"
        },
        "answers": [
            [
                "John Wen"
            ],
            [
                "John Wen"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "Christopher Turk"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which physicians are trained in procedures that are more expensive than 5000?",
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T3.Cost > 5000\nRETURN T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3",
                "Cost"
            ],
            "Token_Name_Label": [
                "Physician",
                "Trained_In",
                "Procedures"
            ],
            "Token_Operator": [
                ".",
                ">"
            ],
            "Token_Literal_Number_Integer": "5000"
        },
        "answers": [
            [
                "John Wen"
            ],
            [
                "John Wen"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "Christopher Turk"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the average cost of procedures that physician John Wen was trained in?",
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T1.Name = \"John Wen\"\nRETURN AVG(T3.Cost)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3",
                "Cost"
            ],
            "Token_Name_Label": [
                "Physician",
                "Trained_In",
                "Procedures"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "\"John Wen\"",
            "Token_Name_Function": "AVG"
        },
        "answers": [
            [
                4324.857142857143
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Compute the mean price of procedures physician John Wen was trained in.",
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T1.Name = \"John Wen\"\nRETURN AVG(T3.Cost)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3",
                "Cost"
            ],
            "Token_Name_Label": [
                "Physician",
                "Trained_In",
                "Procedures"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "\"John Wen\"",
            "Token_Name_Function": "AVG"
        },
        "answers": [
            [
                4324.857142857143
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the names of procedures which physician John Wen was trained in.",
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T1.Name = \"John Wen\"\nRETURN T3.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3"
            ],
            "Token_Name_Label": [
                "Physician",
                "Trained_In",
                "Procedures"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "\"John Wen\""
        },
        "answers": [
            [
                "Obfuscated Dermogastrotomy"
            ],
            [
                "Reverse Rhinopodoplasty"
            ],
            [
                "Follicular Demiectomy"
            ],
            [
                "Folded Demiophtalmectomy"
            ],
            [
                "Reversible Pancreomyoplasty"
            ],
            [
                "Obtuse Pyloric Recombobulation"
            ],
            [
                "Complete Walletectomy"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of procedures physician John Wen was trained in?",
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T1.Name = \"John Wen\"\nRETURN T3.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3"
            ],
            "Token_Name_Label": [
                "Physician",
                "Trained_In",
                "Procedures"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "\"John Wen\""
        },
        "answers": [
            [
                "Obfuscated Dermogastrotomy"
            ],
            [
                "Reverse Rhinopodoplasty"
            ],
            [
                "Follicular Demiectomy"
            ],
            [
                "Folded Demiophtalmectomy"
            ],
            [
                "Reversible Pancreomyoplasty"
            ],
            [
                "Obtuse Pyloric Recombobulation"
            ],
            [
                "Complete Walletectomy"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians who are affiliated with Surgery or Psychiatry department.",
        "cypher_query": "MATCH (T1:Physician)-[T2:Affiliated_With]-(T3:Department)\nWHERE T3.Name = 'Surgery' OR T3.Name = 'Psychiatry'\nRETURN T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3"
            ],
            "Token_Name_Label": [
                "Physician",
                "Affiliated_With",
                "Department"
            ],
            "Token_Operator": [
                ".",
                "=",
                "OR"
            ],
            "Token_Literal_String": [
                "'Surgery'",
                "'Psychiatry'"
            ]
        },
        "answers": [
            [
                "Christopher Turk"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "John Wen"
            ],
            [
                "Molly Clock"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which physicians are affiliated with either Surgery or Psychiatry department? Give me their names.",
        "cypher_query": "MATCH (T1:Physician)-[T2:Affiliated_With]-(T3:Department)\nWHERE T3.Name = 'Surgery' OR T3.Name = 'Psychiatry'\nRETURN T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3"
            ],
            "Token_Name_Label": [
                "Physician",
                "Affiliated_With",
                "Department"
            ],
            "Token_Operator": [
                ".",
                "=",
                "OR"
            ],
            "Token_Literal_String": [
                "'Surgery'",
                "'Psychiatry'"
            ]
        },
        "answers": [
            [
                "Christopher Turk"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "John Wen"
            ],
            [
                "Molly Clock"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of patients who are not using the medication of Procrastin-X.",
        "cypher_query": "MATCH (p:Patient) MATCH (T1:Prescribes)-[]-(T2:Medication)\nWHERE T2.Name = 'Procrastin-X' AND NOT p.SSN in T1.Patient\nRETURN count(DISTINCT p.SSN)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ")-[",
                "]-("
            ],
            "Token_Name_Variable": [
                "p",
                "T1",
                "T2",
                "SSN",
                "Patient"
            ],
            "Token_Name_Label": [
                "Patient",
                "Prescribes",
                "Medication"
            ],
            "Token_Operator": [
                ".",
                "=",
                "AND",
                "NOT",
                "in",
                "DISTINCT"
            ],
            "Token_Literal_String": "'Procrastin-X'",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                3
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many patients are not using Procrastin-X as medication?",
        "cypher_query": "MATCH (p:Patient) MATCH (T1:Prescribes)-[]-(T2:Medication)\nWHERE T2.Name = 'Procrastin-X' AND NOT p.SSN in T1.Patient\nRETURN count(DISTINCT p.SSN)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ")-[",
                "]-("
            ],
            "Token_Name_Variable": [
                "p",
                "T1",
                "T2",
                "SSN",
                "Patient"
            ],
            "Token_Name_Label": [
                "Patient",
                "Prescribes",
                "Medication"
            ],
            "Token_Operator": [
                ".",
                "=",
                "AND",
                "NOT",
                "in",
                "DISTINCT"
            ],
            "Token_Literal_String": "'Procrastin-X'",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                3
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many appointments are there?",
        "cypher_query": "MATCH (a:Appointment)\nRETURN COUNT(\"*\")",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "a",
            "Token_Name_Label": "Appointment",
            "Token_Name_Function": "COUNT",
            "Token_Literal_String": "\"*\""
        },
        "answers": [
            [
                9
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Count how many appointments have been made in total.",
        "cypher_query": "MATCH (a:Appointment)\nRETURN COUNT(\"*\")",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "a",
            "Token_Name_Label": "Appointment",
            "Token_Name_Function": "COUNT",
            "Token_Literal_String": "\"*\""
        },
        "answers": [
            [
                9
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the names of nurses who are on call.",
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:On_Call)\nRETURN DISTINCT T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2"
            ],
            "Token_Name_Label": [
                "Nurse",
                "On_Call"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What are the distinct names of nurses on call?",
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:On_Call)\nRETURN DISTINCT T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2"
            ],
            "Token_Name_Label": [
                "Nurse",
                "On_Call"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "How many patients' prescriptions are made by physician John Dorian?",
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Prescribes)-[]-(T3:Physician)\nWHERE T3.Name = \"John Dorian\"\nRETURN COUNT(T1.SSN)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3",
                "SSN"
            ],
            "Token_Name_Label": [
                "Patient",
                "Prescribes",
                "Physician"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "\"John Dorian\"",
            "Token_Name_Function": "COUNT"
        },
        "answers": [
            [
                1
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of patients' prescriptions physician John Dorian made.",
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Prescribes)-[]-(T3:Physician)\nWHERE T3.Name = \"John Dorian\"\nRETURN COUNT(T1.SSN)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3",
                "SSN"
            ],
            "Token_Name_Label": [
                "Patient",
                "Prescribes",
                "Physician"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "\"John Dorian\"",
            "Token_Name_Function": "COUNT"
        },
        "answers": [
            [
                1
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the names of nurses who are nursing an undergoing treatment.",
        "cypher_query": "MATCH (T1:Undergoes)-[]-(T2:Nurse)\nRETURN DISTINCT T2.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2"
            ],
            "Token_Name_Label": [
                "Undergoes",
                "Nurse"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which nurses are in charge of patients undergoing treatments?",
        "cypher_query": "MATCH (T1:Undergoes)-[]-(T2:Nurse)\nRETURN DISTINCT T2.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2"
            ],
            "Token_Name_Label": [
                "Undergoes",
                "Nurse"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What are the highest cost, lowest cost and average cost of procedures?",
        "cypher_query": "MATCH (p:Procedures)\nRETURN MAX(p.Cost),MIN(p.Cost),AVG(p.Cost)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Name_Function": [
                "MAX",
                "MIN",
                "AVG"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                10000.0,
                25.0,
                4324.857142857143
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Tell me the highest, lowest, and average cost of procedures.",
        "cypher_query": "MATCH (p:Procedures)\nRETURN MAX(p.Cost),MIN(p.Cost),AVG(p.Cost)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Name_Function": [
                "MAX",
                "MIN",
                "AVG"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                10000.0,
                25.0,
                4324.857142857143
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the physicians who are trained in a procedure that costs more than 5000.",
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T3.Cost > 5000\nRETURN T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3",
                "Cost"
            ],
            "Token_Name_Label": [
                "Physician",
                "Trained_In",
                "Procedures"
            ],
            "Token_Operator": [
                ".",
                ">"
            ],
            "Token_Literal_Number_Integer": "5000"
        },
        "answers": [
            [
                "John Wen"
            ],
            [
                "John Wen"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "Christopher Turk"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which physicians are trained in procedures that are more expensive than 5000?",
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T3.Cost > 5000\nRETURN T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3",
                "Cost"
            ],
            "Token_Name_Label": [
                "Physician",
                "Trained_In",
                "Procedures"
            ],
            "Token_Operator": [
                ".",
                ">"
            ],
            "Token_Literal_Number_Integer": "5000"
        },
        "answers": [
            [
                "John Wen"
            ],
            [
                "John Wen"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "Christopher Turk"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the average cost of procedures that physician John Wen was trained in?",
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T1.Name = \"John Wen\"\nRETURN AVG(T3.Cost)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3",
                "Cost"
            ],
            "Token_Name_Label": [
                "Physician",
                "Trained_In",
                "Procedures"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "\"John Wen\"",
            "Token_Name_Function": "AVG"
        },
        "answers": [
            [
                4324.857142857143
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Compute the mean price of procedures physician John Wen was trained in.",
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T1.Name = \"John Wen\"\nRETURN AVG(T3.Cost)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3",
                "Cost"
            ],
            "Token_Name_Label": [
                "Physician",
                "Trained_In",
                "Procedures"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "\"John Wen\"",
            "Token_Name_Function": "AVG"
        },
        "answers": [
            [
                4324.857142857143
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the names of procedures which physician John Wen was trained in.",
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T1.Name = \"John Wen\"\nRETURN T3.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3"
            ],
            "Token_Name_Label": [
                "Physician",
                "Trained_In",
                "Procedures"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "\"John Wen\""
        },
        "answers": [
            [
                "Obfuscated Dermogastrotomy"
            ],
            [
                "Reverse Rhinopodoplasty"
            ],
            [
                "Follicular Demiectomy"
            ],
            [
                "Folded Demiophtalmectomy"
            ],
            [
                "Reversible Pancreomyoplasty"
            ],
            [
                "Obtuse Pyloric Recombobulation"
            ],
            [
                "Complete Walletectomy"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of procedures physician John Wen was trained in?",
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T1.Name = \"John Wen\"\nRETURN T3.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3"
            ],
            "Token_Name_Label": [
                "Physician",
                "Trained_In",
                "Procedures"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "\"John Wen\""
        },
        "answers": [
            [
                "Obfuscated Dermogastrotomy"
            ],
            [
                "Reverse Rhinopodoplasty"
            ],
            [
                "Follicular Demiectomy"
            ],
            [
                "Folded Demiophtalmectomy"
            ],
            [
                "Reversible Pancreomyoplasty"
            ],
            [
                "Obtuse Pyloric Recombobulation"
            ],
            [
                "Complete Walletectomy"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians who are affiliated with Surgery or Psychiatry department.",
        "cypher_query": "MATCH (T1:Physician)-[T2:Affiliated_With]-(T3:Department)\nWHERE T3.Name = 'Surgery' OR T3.Name = 'Psychiatry'\nRETURN T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3"
            ],
            "Token_Name_Label": [
                "Physician",
                "Affiliated_With",
                "Department"
            ],
            "Token_Operator": [
                ".",
                "=",
                "OR"
            ],
            "Token_Literal_String": [
                "'Surgery'",
                "'Psychiatry'"
            ]
        },
        "answers": [
            [
                "Christopher Turk"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "John Wen"
            ],
            [
                "Molly Clock"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which physicians are affiliated with either Surgery or Psychiatry department? Give me their names.",
        "cypher_query": "MATCH (T1:Physician)-[T2:Affiliated_With]-(T3:Department)\nWHERE T3.Name = 'Surgery' OR T3.Name = 'Psychiatry'\nRETURN T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3"
            ],
            "Token_Name_Label": [
                "Physician",
                "Affiliated_With",
                "Department"
            ],
            "Token_Operator": [
                ".",
                "=",
                "OR"
            ],
            "Token_Literal_String": [
                "'Surgery'",
                "'Psychiatry'"
            ]
        },
        "answers": [
            [
                "Christopher Turk"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "John Wen"
            ],
            [
                "Molly Clock"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of patients who are not using the medication of Procrastin-X.",
        "cypher_query": "MATCH (p:Patient) MATCH (T1:Prescribes)-[]-(T2:Medication)\nWHERE T2.Name = 'Procrastin-X' AND NOT p.SSN in T1.Patient\nRETURN count(DISTINCT p.SSN)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ")-[",
                "]-("
            ],
            "Token_Name_Variable": [
                "p",
                "T1",
                "T2",
                "SSN",
                "Patient"
            ],
            "Token_Name_Label": [
                "Patient",
                "Prescribes",
                "Medication"
            ],
            "Token_Operator": [
                ".",
                "=",
                "AND",
                "NOT",
                "in",
                "DISTINCT"
            ],
            "Token_Literal_String": "'Procrastin-X'",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                3
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many patients are not using Procrastin-X as medication?",
        "cypher_query": "MATCH (p:Patient) MATCH (T1:Prescribes)-[]-(T2:Medication)\nWHERE T2.Name = 'Procrastin-X' AND NOT p.SSN in T1.Patient\nRETURN count(DISTINCT p.SSN)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ")-[",
                "]-("
            ],
            "Token_Name_Variable": [
                "p",
                "T1",
                "T2",
                "SSN",
                "Patient"
            ],
            "Token_Name_Label": [
                "Patient",
                "Prescribes",
                "Medication"
            ],
            "Token_Operator": [
                ".",
                "=",
                "AND",
                "NOT",
                "in",
                "DISTINCT"
            ],
            "Token_Literal_String": "'Procrastin-X'",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                3
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many appointments are there?",
        "cypher_query": "MATCH (a:Appointment)\nRETURN COUNT(\"*\")",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "a",
            "Token_Name_Label": "Appointment",
            "Token_Name_Function": "COUNT",
            "Token_Literal_String": "\"*\""
        },
        "answers": [
            [
                9
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Count how many appointments have been made in total.",
        "cypher_query": "MATCH (a:Appointment)\nRETURN COUNT(\"*\")",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "a",
            "Token_Name_Label": "Appointment",
            "Token_Name_Function": "COUNT",
            "Token_Literal_String": "\"*\""
        },
        "answers": [
            [
                9
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the names of nurses who are on call.",
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:On_Call)\nRETURN DISTINCT T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2"
            ],
            "Token_Name_Label": [
                "Nurse",
                "On_Call"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What are the distinct names of nurses on call?",
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:On_Call)\nRETURN DISTINCT T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2"
            ],
            "Token_Name_Label": [
                "Nurse",
                "On_Call"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    }
][][][][
    {
        "db_id": "hospital_1",
        "question": "Which department has the largest number of employees?",
        "cypher_query": "MATCH (d:Department)\nWITH d.Name AS Name, count(d.DepartmentID) AS count\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "Name",
                "AS",
                "RETURN",
                "ORDER BY",
                "DESC",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "d",
                "DepartmentID",
                "count"
            ],
            "Token_Name_Label": "Department",
            "Token_Operator": ".",
            "Token_Name_Function": "count",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                "General Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the department with the most employees.",
        "cypher_query": "MATCH (d:Department)\nWITH d.Name AS Name, count(d.DepartmentID) AS count\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "Name",
                "AS",
                "RETURN",
                "ORDER BY",
                "DESC",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "d",
                "DepartmentID",
                "count"
            ],
            "Token_Name_Label": "Department",
            "Token_Operator": ".",
            "Token_Name_Function": "count",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                "General Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the employee id of the head whose department has the least number of employees?",
        "cypher_query": "MATCH (d:Department)\nWITH d.Head AS Head, count(d.DepartmentID) AS count\nRETURN Head\nORDER BY count\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "AS",
                "RETURN",
                "ORDER BY",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "d",
                "Head",
                "DepartmentID",
                "count"
            ],
            "Token_Name_Label": "Department",
            "Token_Operator": ".",
            "Token_Name_Function": "count",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                4
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Tell me the employee id of the head of the department with the least employees.",
        "cypher_query": "MATCH (d:Department)\nWITH d.Head AS Head, count(d.DepartmentID) AS count\nRETURN Head\nORDER BY count\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "AS",
                "RETURN",
                "ORDER BY",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "d",
                "Head",
                "DepartmentID",
                "count"
            ],
            "Token_Name_Label": "Department",
            "Token_Operator": ".",
            "Token_Name_Function": "count",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                4
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the id of the appointment with the most recent start date?",
        "cypher_query": "MATCH (a:Appointment)\nRETURN a.AppointmentID\nORDER BY a.Start DESC\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "ORDER BY",
                "Start",
                "DESC",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "a",
                "AppointmentID"
            ],
            "Token_Name_Label": "Appointment",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                86213939
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the id of the appointment that started most recently?",
        "cypher_query": "MATCH (a:Appointment)\nRETURN a.AppointmentID\nORDER BY a.Start DESC\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "ORDER BY",
                "Start",
                "DESC",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "a",
                "AppointmentID"
            ],
            "Token_Name_Label": "Appointment",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                86213939
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many patients' prescriptions are made by physician John Dorian?",
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Prescribes)-[]-(T3:Physician)\nWHERE T3.Name = \"John Dorian\"\nRETURN COUNT(T1.SSN)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3",
                "SSN"
            ],
            "Token_Name_Label": [
                "Patient",
                "Prescribes",
                "Physician"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "\"John Dorian\"",
            "Token_Name_Function": "COUNT"
        },
        "answers": [
            [
                1
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of patients' prescriptions physician John Dorian made.",
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Prescribes)-[]-(T3:Physician)\nWHERE T3.Name = \"John Dorian\"\nRETURN COUNT(T1.SSN)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3",
                "SSN"
            ],
            "Token_Name_Label": [
                "Patient",
                "Prescribes",
                "Physician"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "\"John Dorian\"",
            "Token_Name_Function": "COUNT"
        },
        "answers": [
            [
                1
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many different types of rooms are there?",
        "cypher_query": "MATCH (r:Room)\nWITH DISTINCT r.RoomType AS roomtype\nRETURN count(roomtype)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH DISTINCT",
                "AS",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "r",
                "RoomType",
                "roomtype"
            ],
            "Token_Name_Label": "Room",
            "Token_Operator": ".",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                1
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of distinct room types available.",
        "cypher_query": "MATCH (r:Room)\nWITH DISTINCT r.RoomType AS roomtype\nRETURN count(roomtype)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH DISTINCT",
                "AS",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "r",
                "RoomType",
                "roomtype"
            ],
            "Token_Name_Label": "Room",
            "Token_Operator": ".",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                1
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the patient who has the most recent undergoing treatment?",
        "cypher_query": "MATCH (u:Undergoes)\nRETURN u.Patient\nORDER BY u.DateUndergoes\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "ORDER BY",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "u",
                "Patient",
                "DateUndergoes"
            ],
            "Token_Name_Label": "Undergoes",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                100000001
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which patient is undergoing the most recent treatment?",
        "cypher_query": "MATCH (u:Undergoes)\nRETURN u.Patient\nORDER BY u.DateUndergoes\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "ORDER BY",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "u",
                "Patient",
                "DateUndergoes"
            ],
            "Token_Name_Label": "Undergoes",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                100000001
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "List the names of all distinct nurses ordered by alphabetical order?",
        "cypher_query": "MATCH (n:Nurse)\nRETURN DISTINCT n.Name\nORDER BY n.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "n",
            "Token_Name_Label": "Nurse",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the alphabetically ordered list of all the distinct names of nurses?",
        "cypher_query": "MATCH (n:Nurse)\nRETURN DISTINCT n.Name\nORDER BY n.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "n",
            "Token_Name_Label": "Nurse",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the names of nurses who are nursing an undergoing treatment.",
        "cypher_query": "MATCH (T1:Undergoes)-[]-(T2:Nurse)\nRETURN DISTINCT T2.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2"
            ],
            "Token_Name_Label": [
                "Undergoes",
                "Nurse"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which nurses are in charge of patients undergoing treatments?",
        "cypher_query": "MATCH (T1:Undergoes)-[]-(T2:Nurse)\nRETURN DISTINCT T2.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2"
            ],
            "Token_Name_Label": [
                "Undergoes",
                "Nurse"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "List the names of all distinct medications, ordered in an alphabetical order.",
        "cypher_query": "MATCH (m:Medication)\nRETURN DISTINCT m.Name\nORDER BY m.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "m",
            "Token_Name_Label": "Medication",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Awakin"
            ],
            [
                "Crescavitin"
            ],
            [
                "Melioraurin"
            ],
            [
                "Procrastin-X"
            ],
            [
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the alphabetically ordered list of all distinct medications?",
        "cypher_query": "MATCH (m:Medication)\nRETURN DISTINCT m.Name\nORDER BY m.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "m",
            "Token_Name_Label": "Medication",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Awakin"
            ],
            [
                "Crescavitin"
            ],
            [
                "Melioraurin"
            ],
            [
                "Procrastin-X"
            ],
            [
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What are the highest cost, lowest cost and average cost of procedures?",
        "cypher_query": "MATCH (p:Procedures)\nRETURN MAX(p.Cost),MIN(p.Cost),AVG(p.Cost)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Name_Function": [
                "MAX",
                "MIN",
                "AVG"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                10000.0,
                25.0,
                4324.857142857143
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Tell me the highest, lowest, and average cost of procedures.",
        "cypher_query": "MATCH (p:Procedures)\nRETURN MAX(p.Cost),MIN(p.Cost),AVG(p.Cost)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Name_Function": [
                "MAX",
                "MIN",
                "AVG"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                10000.0,
                25.0,
                4324.857142857143
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "List the name and cost of all procedures sorted by the cost from the highest to the lowest.",
        "cypher_query": "MATCH (p:Procedures)\nRETURN p.Name,p.Cost\nORDER BY p.Cost DESC",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name",
                "ORDER BY",
                "DESC"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Complete Walletectomy",
                10000.0
            ],
            [
                "Reversible Pancreomyoplasty",
                5600.0
            ],
            [
                "Obfuscated Dermogastrotomy",
                4899.0
            ],
            [
                "Folded Demiophtalmectomy",
                4500.0
            ],
            [
                "Obtuse Pyloric Recombobulation",
                3750.0
            ],
            [
                "Reverse Rhinopodoplasty",
                1500.0
            ],
            [
                "Follicular Demiectomy",
                25.0
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Sort the list of names and costs of all procedures in the descending order of cost.",
        "cypher_query": "MATCH (p:Procedures)\nRETURN p.Name,p.Cost\nORDER BY p.Cost DESC",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name",
                "ORDER BY",
                "DESC"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Complete Walletectomy",
                10000.0
            ],
            [
                "Reversible Pancreomyoplasty",
                5600.0
            ],
            [
                "Obfuscated Dermogastrotomy",
                4899.0
            ],
            [
                "Folded Demiophtalmectomy",
                4500.0
            ],
            [
                "Obtuse Pyloric Recombobulation",
                3750.0
            ],
            [
                "Reverse Rhinopodoplasty",
                1500.0
            ],
            [
                "Follicular Demiectomy",
                25.0
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the three most expensive procedures.",
        "cypher_query": "MATCH (p:Procedures)\nRETURN p.Name\nORDER BY p.Cost\nLIMIT 3",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name",
                "ORDER BY",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "3"
        },
        "answers": [
            [
                "Follicular Demiectomy"
            ],
            [
                "Reverse Rhinopodoplasty"
            ],
            [
                "Obtuse Pyloric Recombobulation"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What are the three most costly procedures?",
        "cypher_query": "MATCH (p:Procedures)\nRETURN p.Name\nORDER BY p.Cost\nLIMIT 3",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name",
                "ORDER BY",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "3"
        },
        "answers": [
            [
                "Follicular Demiectomy"
            ],
            [
                "Reverse Rhinopodoplasty"
            ],
            [
                "Obtuse Pyloric Recombobulation"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the physicians who are trained in a procedure that costs more than 5000.",
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T3.Cost > 5000\nRETURN T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3",
                "Cost"
            ],
            "Token_Name_Label": [
                "Physician",
                "Trained_In",
                "Procedures"
            ],
            "Token_Operator": [
                ".",
                ">"
            ],
            "Token_Literal_Number_Integer": "5000"
        },
        "answers": [
            [
                "John Wen"
            ],
            [
                "John Wen"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "Christopher Turk"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which physicians are trained in procedures that are more expensive than 5000?",
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T3.Cost > 5000\nRETURN T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3",
                "Cost"
            ],
            "Token_Name_Label": [
                "Physician",
                "Trained_In",
                "Procedures"
            ],
            "Token_Operator": [
                ".",
                ">"
            ],
            "Token_Literal_Number_Integer": "5000"
        },
        "answers": [
            [
                "John Wen"
            ],
            [
                "John Wen"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "Christopher Turk"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the average cost of procedures that physician John Wen was trained in?",
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T1.Name = \"John Wen\"\nRETURN AVG(T3.Cost)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3",
                "Cost"
            ],
            "Token_Name_Label": [
                "Physician",
                "Trained_In",
                "Procedures"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "\"John Wen\"",
            "Token_Name_Function": "AVG"
        },
        "answers": [
            [
                4324.857142857143
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Compute the mean price of procedures physician John Wen was trained in.",
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T1.Name = \"John Wen\"\nRETURN AVG(T3.Cost)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3",
                "Cost"
            ],
            "Token_Name_Label": [
                "Physician",
                "Trained_In",
                "Procedures"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "\"John Wen\"",
            "Token_Name_Function": "AVG"
        },
        "answers": [
            [
                4324.857142857143
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the names of procedures which physician John Wen was trained in.",
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T1.Name = \"John Wen\"\nRETURN T3.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3"
            ],
            "Token_Name_Label": [
                "Physician",
                "Trained_In",
                "Procedures"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "\"John Wen\""
        },
        "answers": [
            [
                "Obfuscated Dermogastrotomy"
            ],
            [
                "Reverse Rhinopodoplasty"
            ],
            [
                "Follicular Demiectomy"
            ],
            [
                "Folded Demiophtalmectomy"
            ],
            [
                "Reversible Pancreomyoplasty"
            ],
            [
                "Obtuse Pyloric Recombobulation"
            ],
            [
                "Complete Walletectomy"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of procedures physician John Wen was trained in?",
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T1.Name = \"John Wen\"\nRETURN T3.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3"
            ],
            "Token_Name_Label": [
                "Physician",
                "Trained_In",
                "Procedures"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "\"John Wen\""
        },
        "answers": [
            [
                "Obfuscated Dermogastrotomy"
            ],
            [
                "Reverse Rhinopodoplasty"
            ],
            [
                "Follicular Demiectomy"
            ],
            [
                "Folded Demiophtalmectomy"
            ],
            [
                "Reversible Pancreomyoplasty"
            ],
            [
                "Obtuse Pyloric Recombobulation"
            ],
            [
                "Complete Walletectomy"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians who are affiliated with Surgery or Psychiatry department.",
        "cypher_query": "MATCH (T1:Physician)-[T2:Affiliated_With]-(T3:Department)\nWHERE T3.Name = 'Surgery' OR T3.Name = 'Psychiatry'\nRETURN T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3"
            ],
            "Token_Name_Label": [
                "Physician",
                "Affiliated_With",
                "Department"
            ],
            "Token_Operator": [
                ".",
                "=",
                "OR"
            ],
            "Token_Literal_String": [
                "'Surgery'",
                "'Psychiatry'"
            ]
        },
        "answers": [
            [
                "Christopher Turk"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "John Wen"
            ],
            [
                "Molly Clock"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which physicians are affiliated with either Surgery or Psychiatry department? Give me their names.",
        "cypher_query": "MATCH (T1:Physician)-[T2:Affiliated_With]-(T3:Department)\nWHERE T3.Name = 'Surgery' OR T3.Name = 'Psychiatry'\nRETURN T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3"
            ],
            "Token_Name_Label": [
                "Physician",
                "Affiliated_With",
                "Department"
            ],
            "Token_Operator": [
                ".",
                "=",
                "OR"
            ],
            "Token_Literal_String": [
                "'Surgery'",
                "'Psychiatry'"
            ]
        },
        "answers": [
            [
                "Christopher Turk"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "John Wen"
            ],
            [
                "Molly Clock"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of patients who are not using the medication of Procrastin-X.",
        "cypher_query": "MATCH (p:Patient) MATCH (T1:Prescribes)-[]-(T2:Medication)\nWHERE T2.Name = 'Procrastin-X' AND NOT p.SSN in T1.Patient\nRETURN count(DISTINCT p.SSN)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ")-[",
                "]-("
            ],
            "Token_Name_Variable": [
                "p",
                "T1",
                "T2",
                "SSN",
                "Patient"
            ],
            "Token_Name_Label": [
                "Patient",
                "Prescribes",
                "Medication"
            ],
            "Token_Operator": [
                ".",
                "=",
                "AND",
                "NOT",
                "in",
                "DISTINCT"
            ],
            "Token_Literal_String": "'Procrastin-X'",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                3
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many patients are not using Procrastin-X as medication?",
        "cypher_query": "MATCH (p:Patient) MATCH (T1:Prescribes)-[]-(T2:Medication)\nWHERE T2.Name = 'Procrastin-X' AND NOT p.SSN in T1.Patient\nRETURN count(DISTINCT p.SSN)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ")-[",
                "]-("
            ],
            "Token_Name_Variable": [
                "p",
                "T1",
                "T2",
                "SSN",
                "Patient"
            ],
            "Token_Name_Label": [
                "Patient",
                "Prescribes",
                "Medication"
            ],
            "Token_Operator": [
                ".",
                "=",
                "AND",
                "NOT",
                "in",
                "DISTINCT"
            ],
            "Token_Literal_String": "'Procrastin-X'",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                3
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many appointments are there?",
        "cypher_query": "MATCH (a:Appointment)\nRETURN COUNT(\"*\")",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "a",
            "Token_Name_Label": "Appointment",
            "Token_Name_Function": "COUNT",
            "Token_Literal_String": "\"*\""
        },
        "answers": [
            [
                9
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Count how many appointments have been made in total.",
        "cypher_query": "MATCH (a:Appointment)\nRETURN COUNT(\"*\")",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "a",
            "Token_Name_Label": "Appointment",
            "Token_Name_Function": "COUNT",
            "Token_Literal_String": "\"*\""
        },
        "answers": [
            [
                9
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the names of nurses who are on call.",
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:On_Call)\nRETURN DISTINCT T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2"
            ],
            "Token_Name_Label": [
                "Nurse",
                "On_Call"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What are the distinct names of nurses on call?",
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:On_Call)\nRETURN DISTINCT T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2"
            ],
            "Token_Name_Label": [
                "Nurse",
                "On_Call"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    }
][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][
    {
        "db_id": "hospital_1",
        "question": "What are names of patients who made an appointment?",
        "cypher_query": "MATCH (T1:Appointment) MATCH (T2:Patient)\nRETURN T2.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2"
            ],
            "Token_Name_Label": [
                "Appointment",
                "Patient"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                "Random J. Patient"
            ],
            [
                "John Smith"
            ],
            [
                "Dennis Doe"
            ],
            [
                "Grace Ritchie"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "List the names of patients who have made appointments.",
        "cypher_query": "MATCH (T1:Appointment) MATCH (T2:Patient)\nRETURN T2.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2"
            ],
            "Token_Name_Label": [
                "Appointment",
                "Patient"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                "Random J. Patient"
            ],
            [
                "John Smith"
            ],
            [
                "Dennis Doe"
            ],
            [
                "Grace Ritchie"
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "What are names of patients who made an appointment?",
        "cypher_query": "MATCH (T1:Appointment) MATCH (T2:Patient)\nRETURN T2.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2"
            ],
            "Token_Name_Label": [
                "Appointment",
                "Patient"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                "Random J. Patient"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "John Smith"
            ],
            [
                "Dennis Doe"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "List the names of patients who have made appointments.",
        "cypher_query": "MATCH (T1:Appointment) MATCH (T2:Patient)\nRETURN T2.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2"
            ],
            "Token_Name_Label": [
                "Appointment",
                "Patient"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                "Random J. Patient"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "John Smith"
            ],
            [
                "Dennis Doe"
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "What are names of patients who made an appointment?",
        "cypher_query": "MATCH (T1:Appointment) MATCH (T2:Patient)\nRETURN T2.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2"
            ],
            "Token_Name_Label": [
                "Appointment",
                "Patient"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                "Dennis Doe"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "List the names of patients who have made appointments.",
        "cypher_query": "MATCH (T1:Appointment) MATCH (T2:Patient)\nRETURN T2.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2"
            ],
            "Token_Name_Label": [
                "Appointment",
                "Patient"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                "Dennis Doe"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "John Smith"
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "What are names of patients who made an appointment?",
        "cypher_query": "MATCH (T1:Appointment) MATCH (T2:Patient)\nRETURN T2.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2"
            ],
            "Token_Name_Label": [
                "Appointment",
                "Patient"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                "John Smith"
            ],
            [
                "Dennis Doe"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "List the names of patients who have made appointments.",
        "cypher_query": "MATCH (T1:Appointment) MATCH (T2:Patient)\nRETURN T2.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2"
            ],
            "Token_Name_Label": [
                "Appointment",
                "Patient"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                "John Smith"
            ],
            [
                "Dennis Doe"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "what is the name and position of the head whose department has least number of employees?",
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH T2.Name AS Name, count(T2.departmentID) AS count, T2.Position AS Position\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "Name",
                "AS",
                "RETURN",
                "ORDER BY",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "departmentID",
                "count",
                "Position"
            ],
            "Token_Name_Label": [
                "Department",
                "Physician"
            ],
            "Token_Operator": ".",
            "Token_Name_Function": "count",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name and position of the head of the department with the least employees.",
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH T2.Name AS Name, count(T2.departmentID) AS count, T2.Position AS Position\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "Name",
                "AS",
                "RETURN",
                "ORDER BY",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "departmentID",
                "count",
                "Position"
            ],
            "Token_Name_Label": [
                "Department",
                "Physician"
            ],
            "Token_Operator": ".",
            "Token_Name_Function": "count",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What are names of patients who made an appointment?",
        "cypher_query": "MATCH (T1:Appointment) MATCH (T2:Patient)\nRETURN T2.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2"
            ],
            "Token_Name_Label": [
                "Appointment",
                "Patient"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                "John Smith"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "Grace Ritchie"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "List the names of patients who have made appointments.",
        "cypher_query": "MATCH (T1:Appointment) MATCH (T2:Patient)\nRETURN T2.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2"
            ],
            "Token_Name_Label": [
                "Appointment",
                "Patient"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                "John Smith"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "Grace Ritchie"
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "what is the name and position of the head whose department has least number of employees?",
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH count(T2.departmentID) AS count, T2.Position AS Position, T2.Name AS Name\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "AS",
                "Name",
                "RETURN",
                "ORDER BY",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "departmentID",
                "count",
                "Position"
            ],
            "Token_Name_Label": [
                "Department",
                "Physician"
            ],
            "Token_Name_Function": "count",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name and position of the head of the department with the least employees.",
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH count(T2.departmentID) AS count, T2.Position AS Position, T2.Name AS Name\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "AS",
                "Name",
                "RETURN",
                "ORDER BY",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "departmentID",
                "count",
                "Position"
            ],
            "Token_Name_Label": [
                "Department",
                "Physician"
            ],
            "Token_Name_Function": "count",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What are names of patients who made an appointment?",
        "cypher_query": "MATCH (T1:Appointment) MATCH (T2:Patient)\nRETURN T2.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2"
            ],
            "Token_Name_Label": [
                "Appointment",
                "Patient"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "List the names of patients who have made appointments.",
        "cypher_query": "MATCH (T1:Appointment) MATCH (T2:Patient)\nRETURN T2.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2"
            ],
            "Token_Name_Label": [
                "Appointment",
                "Patient"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the nurse has the most appointments?",
        "cypher_query": "MATCH (T1:Nurse) MATCH (T2:Appointment)\nWITH count(T1.EmployeeID) AS count, T1.Name AS Name\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "AS",
                "Name",
                "RETURN",
                "ORDER BY",
                "DESC",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "EmployeeID",
                "count"
            ],
            "Token_Name_Label": [
                "Nurse",
                "Appointment"
            ],
            "Token_Name_Function": "count",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                "Carla Espinosa"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the nurse who has the largest number of appointments.",
        "cypher_query": "MATCH (T1:Nurse) MATCH (T2:Appointment)\nWITH count(T1.EmployeeID) AS count, T1.Name AS Name\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "AS",
                "Name",
                "RETURN",
                "ORDER BY",
                "DESC",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "EmployeeID",
                "count"
            ],
            "Token_Name_Label": [
                "Nurse",
                "Appointment"
            ],
            "Token_Name_Function": "count",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                "Carla Espinosa"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the names of nurses who are nursing an undergoing treatment.",
        "cypher_query": "MATCH (T1:Undergoes)-[]-(T2:Nurse)\nRETURN DISTINCT T2.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2"
            ],
            "Token_Name_Label": [
                "Undergoes",
                "Nurse"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which nurses are in charge of patients undergoing treatments?",
        "cypher_query": "MATCH (T1:Undergoes)-[]-(T2:Nurse)\nRETURN DISTINCT T2.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2"
            ],
            "Token_Name_Label": [
                "Undergoes",
                "Nurse"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of the physician who prescribed the highest dose?",
        "cypher_query": "MATCH (T1:Physician)-[]-(T2:Prescribes)\nRETURN T1.Name\nORDER BY T2.dose DESC\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name",
                "ORDER BY",
                "DESC",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "dose"
            ],
            "Token_Name_Label": [
                "Physician",
                "Prescribes"
            ],
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                "John Dorian"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the physician who prescribed the highest dose. What is his or her name?",
        "cypher_query": "MATCH (T1:Physician)-[]-(T2:Prescribes)\nRETURN T1.Name\nORDER BY T2.dose DESC\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name",
                "ORDER BY",
                "DESC",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "dose"
            ],
            "Token_Name_Label": [
                "Physician",
                "Prescribes"
            ],
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                "John Dorian"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of patients who are not using the medication of Procrastin-X.",
        "cypher_query": "MATCH (p:Patient) MATCH (T1:Prescribes)-[]-(T2:Medication)\nWHERE T2.Name = 'Procrastin-X' AND NOT p.SSN in T1.Patient\nRETURN count(DISTINCT p.SSN)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ")-[",
                "]-("
            ],
            "Token_Name_Variable": [
                "p",
                "T1",
                "T2",
                "SSN",
                "Patient"
            ],
            "Token_Name_Label": [
                "Patient",
                "Prescribes",
                "Medication"
            ],
            "Token_Operator": [
                ".",
                "=",
                "AND",
                "NOT",
                "in",
                "DISTINCT"
            ],
            "Token_Literal_String": "'Procrastin-X'",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                3
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many patients are not using Procrastin-X as medication?",
        "cypher_query": "MATCH (p:Patient) MATCH (T1:Prescribes)-[]-(T2:Medication)\nWHERE T2.Name = 'Procrastin-X' AND NOT p.SSN in T1.Patient\nRETURN count(DISTINCT p.SSN)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ")-[",
                "]-("
            ],
            "Token_Name_Variable": [
                "p",
                "T1",
                "T2",
                "SSN",
                "Patient"
            ],
            "Token_Name_Label": [
                "Patient",
                "Prescribes",
                "Medication"
            ],
            "Token_Operator": [
                ".",
                "=",
                "AND",
                "NOT",
                "in",
                "DISTINCT"
            ],
            "Token_Literal_String": "'Procrastin-X'",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                3
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many appointments are there?",
        "cypher_query": "MATCH (a:Appointment)\nRETURN COUNT(\"*\")",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "a",
            "Token_Name_Label": "Appointment",
            "Token_Name_Function": "COUNT",
            "Token_Literal_String": "\"*\""
        },
        "answers": [
            [
                9
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Count how many appointments have been made in total.",
        "cypher_query": "MATCH (a:Appointment)\nRETURN COUNT(\"*\")",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "a",
            "Token_Name_Label": "Appointment",
            "Token_Name_Function": "COUNT",
            "Token_Literal_String": "\"*\""
        },
        "answers": [
            [
                9
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the names of nurses who are on call.",
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:On_Call)\nRETURN DISTINCT T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2"
            ],
            "Token_Name_Label": [
                "Nurse",
                "On_Call"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What are the distinct names of nurses on call?",
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:On_Call)\nRETURN DISTINCT T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2"
            ],
            "Token_Name_Label": [
                "Nurse",
                "On_Call"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "what is the name and position of the head whose department has least number of employees?",
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH count(T2.departmentID) AS count, T2.Position AS Position, T2.Name AS Name\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "AS",
                "Name",
                "RETURN",
                "ORDER BY",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "departmentID",
                "count",
                "Position"
            ],
            "Token_Name_Label": [
                "Department",
                "Physician"
            ],
            "Token_Name_Function": "count",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name and position of the head of the department with the least employees.",
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH count(T2.departmentID) AS count, T2.Position AS Position, T2.Name AS Name\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "AS",
                "Name",
                "RETURN",
                "ORDER BY",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "departmentID",
                "count",
                "Position"
            ],
            "Token_Name_Label": [
                "Department",
                "Physician"
            ],
            "Token_Name_Function": "count",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What are names of patients who made an appointment?",
        "cypher_query": "MATCH (T1:Appointment) MATCH (T2:Patient)\nRETURN T2.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2"
            ],
            "Token_Name_Label": [
                "Appointment",
                "Patient"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "List the names of patients who have made appointments.",
        "cypher_query": "MATCH (T1:Appointment) MATCH (T2:Patient)\nRETURN T2.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2"
            ],
            "Token_Name_Label": [
                "Appointment",
                "Patient"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the nurse has the most appointments?",
        "cypher_query": "MATCH (T1:Nurse) MATCH (T2:Appointment)\nWITH T1.Name AS Name, count(T1.EmployeeID) AS count\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "Name",
                "AS",
                "RETURN",
                "ORDER BY",
                "DESC",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "EmployeeID",
                "count"
            ],
            "Token_Name_Label": [
                "Nurse",
                "Appointment"
            ],
            "Token_Operator": ".",
            "Token_Name_Function": "count",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                "Carla Espinosa"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the nurse who has the largest number of appointments.",
        "cypher_query": "MATCH (T1:Nurse) MATCH (T2:Appointment)\nWITH T1.Name AS Name, count(T1.EmployeeID) AS count\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "Name",
                "AS",
                "RETURN",
                "ORDER BY",
                "DESC",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "EmployeeID",
                "count"
            ],
            "Token_Name_Label": [
                "Nurse",
                "Appointment"
            ],
            "Token_Operator": ".",
            "Token_Name_Function": "count",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                "Carla Espinosa"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the names of nurses who are nursing an undergoing treatment.",
        "cypher_query": "MATCH (T1:Undergoes)-[]-(T2:Nurse)\nRETURN DISTINCT T2.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2"
            ],
            "Token_Name_Label": [
                "Undergoes",
                "Nurse"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which nurses are in charge of patients undergoing treatments?",
        "cypher_query": "MATCH (T1:Undergoes)-[]-(T2:Nurse)\nRETURN DISTINCT T2.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2"
            ],
            "Token_Name_Label": [
                "Undergoes",
                "Nurse"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of the physician who prescribed the highest dose?",
        "cypher_query": "MATCH (T1:Physician)-[]-(T2:Prescribes)\nRETURN T1.Name\nORDER BY T2.dose DESC\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name",
                "ORDER BY",
                "DESC",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "dose"
            ],
            "Token_Name_Label": [
                "Physician",
                "Prescribes"
            ],
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                "John Dorian"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the physician who prescribed the highest dose. What is his or her name?",
        "cypher_query": "MATCH (T1:Physician)-[]-(T2:Prescribes)\nRETURN T1.Name\nORDER BY T2.dose DESC\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name",
                "ORDER BY",
                "DESC",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "dose"
            ],
            "Token_Name_Label": [
                "Physician",
                "Prescribes"
            ],
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                "John Dorian"
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "what is the name and position of the head whose department has least number of employees?",
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH T2.Position AS Position, count(T2.departmentID) AS count, T2.Name AS Name\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "AS",
                "Name",
                "RETURN",
                "ORDER BY",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "Position",
                "departmentID",
                "count"
            ],
            "Token_Name_Label": [
                "Department",
                "Physician"
            ],
            "Token_Operator": ".",
            "Token_Name_Function": "count",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name and position of the head of the department with the least employees.",
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH T2.Position AS Position, count(T2.departmentID) AS count, T2.Name AS Name\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "AS",
                "Name",
                "RETURN",
                "ORDER BY",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "Position",
                "departmentID",
                "count"
            ],
            "Token_Name_Label": [
                "Department",
                "Physician"
            ],
            "Token_Operator": ".",
            "Token_Name_Function": "count",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What are names of patients who made an appointment?",
        "cypher_query": "MATCH (T1:Appointment) MATCH (T2:Patient)\nRETURN T2.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2"
            ],
            "Token_Name_Label": [
                "Appointment",
                "Patient"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "List the names of patients who have made appointments.",
        "cypher_query": "MATCH (T1:Appointment) MATCH (T2:Patient)\nRETURN T2.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2"
            ],
            "Token_Name_Label": [
                "Appointment",
                "Patient"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the nurse has the most appointments?",
        "cypher_query": "MATCH (T1:Nurse) MATCH (T2:Appointment)\nWITH T1.Name AS Name, count(T1.EmployeeID) AS count\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "Name",
                "AS",
                "RETURN",
                "ORDER BY",
                "DESC",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "EmployeeID",
                "count"
            ],
            "Token_Name_Label": [
                "Nurse",
                "Appointment"
            ],
            "Token_Operator": ".",
            "Token_Name_Function": "count",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                "Carla Espinosa"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the nurse who has the largest number of appointments.",
        "cypher_query": "MATCH (T1:Nurse) MATCH (T2:Appointment)\nWITH T1.Name AS Name, count(T1.EmployeeID) AS count\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "Name",
                "AS",
                "RETURN",
                "ORDER BY",
                "DESC",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "EmployeeID",
                "count"
            ],
            "Token_Name_Label": [
                "Nurse",
                "Appointment"
            ],
            "Token_Operator": ".",
            "Token_Name_Function": "count",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                "Carla Espinosa"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the names of nurses who are nursing an undergoing treatment.",
        "cypher_query": "MATCH (T1:Undergoes)-[]-(T2:Nurse)\nRETURN DISTINCT T2.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2"
            ],
            "Token_Name_Label": [
                "Undergoes",
                "Nurse"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which nurses are in charge of patients undergoing treatments?",
        "cypher_query": "MATCH (T1:Undergoes)-[]-(T2:Nurse)\nRETURN DISTINCT T2.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2"
            ],
            "Token_Name_Label": [
                "Undergoes",
                "Nurse"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of the physician who prescribed the highest dose?",
        "cypher_query": "MATCH (T1:Physician)-[]-(T2:Prescribes)\nRETURN T1.Name\nORDER BY T2.dose DESC\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name",
                "ORDER BY",
                "DESC",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "dose"
            ],
            "Token_Name_Label": [
                "Physician",
                "Prescribes"
            ],
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                "John Dorian"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the physician who prescribed the highest dose. What is his or her name?",
        "cypher_query": "MATCH (T1:Physician)-[]-(T2:Prescribes)\nRETURN T1.Name\nORDER BY T2.dose DESC\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name",
                "ORDER BY",
                "DESC",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "dose"
            ],
            "Token_Name_Label": [
                "Physician",
                "Prescribes"
            ],
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                "John Dorian"
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "what is the name and position of the head whose department has least number of employees?",
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH T2.Name AS Name, T2.Position AS Position, count(T2.departmentID) AS count\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "Name",
                "AS",
                "RETURN",
                "ORDER BY",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "Position",
                "departmentID",
                "count"
            ],
            "Token_Name_Label": [
                "Department",
                "Physician"
            ],
            "Token_Operator": ".",
            "Token_Name_Function": "count",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name and position of the head of the department with the least employees.",
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH T2.Name AS Name, T2.Position AS Position, count(T2.departmentID) AS count\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "Name",
                "AS",
                "RETURN",
                "ORDER BY",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "Position",
                "departmentID",
                "count"
            ],
            "Token_Name_Label": [
                "Department",
                "Physician"
            ],
            "Token_Operator": ".",
            "Token_Name_Function": "count",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What are names of patients who made an appointment?",
        "cypher_query": "MATCH (T1:Appointment) MATCH (T2:Patient)\nRETURN T2.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2"
            ],
            "Token_Name_Label": [
                "Appointment",
                "Patient"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "List the names of patients who have made appointments.",
        "cypher_query": "MATCH (T1:Appointment) MATCH (T2:Patient)\nRETURN T2.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2"
            ],
            "Token_Name_Label": [
                "Appointment",
                "Patient"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the nurse has the most appointments?",
        "cypher_query": "MATCH (T1:Nurse) MATCH (T2:Appointment)\nWITH count(T1.EmployeeID) AS count, T1.Name AS Name\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "AS",
                "Name",
                "RETURN",
                "ORDER BY",
                "DESC",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "EmployeeID",
                "count"
            ],
            "Token_Name_Label": [
                "Nurse",
                "Appointment"
            ],
            "Token_Name_Function": "count",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                "Carla Espinosa"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the nurse who has the largest number of appointments.",
        "cypher_query": "MATCH (T1:Nurse) MATCH (T2:Appointment)\nWITH count(T1.EmployeeID) AS count, T1.Name AS Name\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "AS",
                "Name",
                "RETURN",
                "ORDER BY",
                "DESC",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "EmployeeID",
                "count"
            ],
            "Token_Name_Label": [
                "Nurse",
                "Appointment"
            ],
            "Token_Name_Function": "count",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                "Carla Espinosa"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the names of nurses who are nursing an undergoing treatment.",
        "cypher_query": "MATCH (T1:Undergoes)-[]-(T2:Nurse)\nRETURN DISTINCT T2.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2"
            ],
            "Token_Name_Label": [
                "Undergoes",
                "Nurse"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which nurses are in charge of patients undergoing treatments?",
        "cypher_query": "MATCH (T1:Undergoes)-[]-(T2:Nurse)\nRETURN DISTINCT T2.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2"
            ],
            "Token_Name_Label": [
                "Undergoes",
                "Nurse"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of the physician who prescribed the highest dose?",
        "cypher_query": "MATCH (T1:Physician)-[]-(T2:Prescribes)\nRETURN T1.Name\nORDER BY T2.dose DESC\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name",
                "ORDER BY",
                "DESC",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "dose"
            ],
            "Token_Name_Label": [
                "Physician",
                "Prescribes"
            ],
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                "John Dorian"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the physician who prescribed the highest dose. What is his or her name?",
        "cypher_query": "MATCH (T1:Physician)-[]-(T2:Prescribes)\nRETURN T1.Name\nORDER BY T2.dose DESC\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name",
                "ORDER BY",
                "DESC",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "dose"
            ],
            "Token_Name_Label": [
                "Physician",
                "Prescribes"
            ],
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                "John Dorian"
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "what is the name and position of the head whose department has least number of employees?",
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH T2.Position AS Position, T2.Name AS Name, count(T2.departmentID) AS count\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "AS",
                "Name",
                "RETURN",
                "ORDER BY",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "Position",
                "departmentID",
                "count"
            ],
            "Token_Name_Label": [
                "Department",
                "Physician"
            ],
            "Token_Operator": ".",
            "Token_Name_Function": "count",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name and position of the head of the department with the least employees.",
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH T2.Position AS Position, T2.Name AS Name, count(T2.departmentID) AS count\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "AS",
                "Name",
                "RETURN",
                "ORDER BY",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "Position",
                "departmentID",
                "count"
            ],
            "Token_Name_Label": [
                "Department",
                "Physician"
            ],
            "Token_Operator": ".",
            "Token_Name_Function": "count",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What are names of patients who made an appointment?",
        "cypher_query": "MATCH (T1:Appointment) MATCH (T2:Patient)\nRETURN T2.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2"
            ],
            "Token_Name_Label": [
                "Appointment",
                "Patient"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "List the names of patients who have made appointments.",
        "cypher_query": "MATCH (T1:Appointment) MATCH (T2:Patient)\nRETURN T2.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2"
            ],
            "Token_Name_Label": [
                "Appointment",
                "Patient"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the nurse has the most appointments?",
        "cypher_query": "MATCH (T1:Nurse) MATCH (T2:Appointment)\nWITH T1.Name AS Name, count(T1.EmployeeID) AS count\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "Name",
                "AS",
                "RETURN",
                "ORDER BY",
                "DESC",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "EmployeeID",
                "count"
            ],
            "Token_Name_Label": [
                "Nurse",
                "Appointment"
            ],
            "Token_Operator": ".",
            "Token_Name_Function": "count",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                "Carla Espinosa"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the nurse who has the largest number of appointments.",
        "cypher_query": "MATCH (T1:Nurse) MATCH (T2:Appointment)\nWITH T1.Name AS Name, count(T1.EmployeeID) AS count\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "Name",
                "AS",
                "RETURN",
                "ORDER BY",
                "DESC",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "EmployeeID",
                "count"
            ],
            "Token_Name_Label": [
                "Nurse",
                "Appointment"
            ],
            "Token_Operator": ".",
            "Token_Name_Function": "count",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                "Carla Espinosa"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the names of nurses who are nursing an undergoing treatment.",
        "cypher_query": "MATCH (T1:Undergoes)-[]-(T2:Nurse)\nRETURN DISTINCT T2.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2"
            ],
            "Token_Name_Label": [
                "Undergoes",
                "Nurse"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which nurses are in charge of patients undergoing treatments?",
        "cypher_query": "MATCH (T1:Undergoes)-[]-(T2:Nurse)\nRETURN DISTINCT T2.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2"
            ],
            "Token_Name_Label": [
                "Undergoes",
                "Nurse"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of the physician who prescribed the highest dose?",
        "cypher_query": "MATCH (T1:Physician)-[]-(T2:Prescribes)\nRETURN T1.Name\nORDER BY T2.dose DESC\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name",
                "ORDER BY",
                "DESC",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "dose"
            ],
            "Token_Name_Label": [
                "Physician",
                "Prescribes"
            ],
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                "John Dorian"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the physician who prescribed the highest dose. What is his or her name?",
        "cypher_query": "MATCH (T1:Physician)-[]-(T2:Prescribes)\nRETURN T1.Name\nORDER BY T2.dose DESC\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name",
                "ORDER BY",
                "DESC",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "dose"
            ],
            "Token_Name_Label": [
                "Physician",
                "Prescribes"
            ],
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                "John Dorian"
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "what is the name and position of the head whose department has least number of employees?",
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH T2.Name AS Name, count(T2.departmentID) AS count, T2.Position AS Position\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "Name",
                "AS",
                "RETURN",
                "ORDER BY",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "departmentID",
                "count",
                "Position"
            ],
            "Token_Name_Label": [
                "Department",
                "Physician"
            ],
            "Token_Operator": ".",
            "Token_Name_Function": "count",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name and position of the head of the department with the least employees.",
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH T2.Name AS Name, count(T2.departmentID) AS count, T2.Position AS Position\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "Name",
                "AS",
                "RETURN",
                "ORDER BY",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "departmentID",
                "count",
                "Position"
            ],
            "Token_Name_Label": [
                "Department",
                "Physician"
            ],
            "Token_Operator": ".",
            "Token_Name_Function": "count",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What are names of patients who made an appointment?",
        "cypher_query": "MATCH (T1:Appointment) MATCH (T2:Patient)\nRETURN T2.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2"
            ],
            "Token_Name_Label": [
                "Appointment",
                "Patient"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "List the names of patients who have made appointments.",
        "cypher_query": "MATCH (T1:Appointment) MATCH (T2:Patient)\nRETURN T2.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2"
            ],
            "Token_Name_Label": [
                "Appointment",
                "Patient"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the nurse has the most appointments?",
        "cypher_query": "MATCH (T1:Nurse) MATCH (T2:Appointment)\nWITH count(T1.EmployeeID) AS count, T1.Name AS Name\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "AS",
                "Name",
                "RETURN",
                "ORDER BY",
                "DESC",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "EmployeeID",
                "count"
            ],
            "Token_Name_Label": [
                "Nurse",
                "Appointment"
            ],
            "Token_Name_Function": "count",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                "Carla Espinosa"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the nurse who has the largest number of appointments.",
        "cypher_query": "MATCH (T1:Nurse) MATCH (T2:Appointment)\nWITH count(T1.EmployeeID) AS count, T1.Name AS Name\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "AS",
                "Name",
                "RETURN",
                "ORDER BY",
                "DESC",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "EmployeeID",
                "count"
            ],
            "Token_Name_Label": [
                "Nurse",
                "Appointment"
            ],
            "Token_Name_Function": "count",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                "Carla Espinosa"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the names of nurses who are nursing an undergoing treatment.",
        "cypher_query": "MATCH (T1:Undergoes)-[]-(T2:Nurse)\nRETURN DISTINCT T2.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2"
            ],
            "Token_Name_Label": [
                "Undergoes",
                "Nurse"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which nurses are in charge of patients undergoing treatments?",
        "cypher_query": "MATCH (T1:Undergoes)-[]-(T2:Nurse)\nRETURN DISTINCT T2.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2"
            ],
            "Token_Name_Label": [
                "Undergoes",
                "Nurse"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of the physician who prescribed the highest dose?",
        "cypher_query": "MATCH (T1:Physician)-[]-(T2:Prescribes)\nRETURN T1.Name\nORDER BY T2.dose DESC\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name",
                "ORDER BY",
                "DESC",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "dose"
            ],
            "Token_Name_Label": [
                "Physician",
                "Prescribes"
            ],
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                "John Dorian"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the physician who prescribed the highest dose. What is his or her name?",
        "cypher_query": "MATCH (T1:Physician)-[]-(T2:Prescribes)\nRETURN T1.Name\nORDER BY T2.dose DESC\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name",
                "ORDER BY",
                "DESC",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "dose"
            ],
            "Token_Name_Label": [
                "Physician",
                "Prescribes"
            ],
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                "John Dorian"
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "what is the name and position of the head whose department has least number of employees?",
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH T2.Position AS Position, count(T2.departmentID) AS count, T2.Name AS Name\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "AS",
                "Name",
                "RETURN",
                "ORDER BY",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "Position",
                "departmentID",
                "count"
            ],
            "Token_Name_Label": [
                "Department",
                "Physician"
            ],
            "Token_Operator": ".",
            "Token_Name_Function": "count",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name and position of the head of the department with the least employees.",
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH T2.Position AS Position, count(T2.departmentID) AS count, T2.Name AS Name\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "AS",
                "Name",
                "RETURN",
                "ORDER BY",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "Position",
                "departmentID",
                "count"
            ],
            "Token_Name_Label": [
                "Department",
                "Physician"
            ],
            "Token_Operator": ".",
            "Token_Name_Function": "count",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What are names of patients who made an appointment?",
        "cypher_query": "MATCH (T1:Appointment) MATCH (T2:Patient)\nRETURN T2.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2"
            ],
            "Token_Name_Label": [
                "Appointment",
                "Patient"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "List the names of patients who have made appointments.",
        "cypher_query": "MATCH (T1:Appointment) MATCH (T2:Patient)\nRETURN T2.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2"
            ],
            "Token_Name_Label": [
                "Appointment",
                "Patient"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the nurse has the most appointments?",
        "cypher_query": "MATCH (T1:Nurse) MATCH (T2:Appointment)\nWITH T1.Name AS Name, count(T1.EmployeeID) AS count\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "Name",
                "AS",
                "RETURN",
                "ORDER BY",
                "DESC",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "EmployeeID",
                "count"
            ],
            "Token_Name_Label": [
                "Nurse",
                "Appointment"
            ],
            "Token_Operator": ".",
            "Token_Name_Function": "count",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                "Carla Espinosa"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the nurse who has the largest number of appointments.",
        "cypher_query": "MATCH (T1:Nurse) MATCH (T2:Appointment)\nWITH T1.Name AS Name, count(T1.EmployeeID) AS count\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "Name",
                "AS",
                "RETURN",
                "ORDER BY",
                "DESC",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "EmployeeID",
                "count"
            ],
            "Token_Name_Label": [
                "Nurse",
                "Appointment"
            ],
            "Token_Operator": ".",
            "Token_Name_Function": "count",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                "Carla Espinosa"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the names of nurses who are nursing an undergoing treatment.",
        "cypher_query": "MATCH (T1:Undergoes)-[]-(T2:Nurse)\nRETURN DISTINCT T2.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2"
            ],
            "Token_Name_Label": [
                "Undergoes",
                "Nurse"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which nurses are in charge of patients undergoing treatments?",
        "cypher_query": "MATCH (T1:Undergoes)-[]-(T2:Nurse)\nRETURN DISTINCT T2.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2"
            ],
            "Token_Name_Label": [
                "Undergoes",
                "Nurse"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of the physician who prescribed the highest dose?",
        "cypher_query": "MATCH (T1:Physician)-[]-(T2:Prescribes)\nRETURN T1.Name\nORDER BY T2.dose DESC\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name",
                "ORDER BY",
                "DESC",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "dose"
            ],
            "Token_Name_Label": [
                "Physician",
                "Prescribes"
            ],
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                "John Dorian"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the physician who prescribed the highest dose. What is his or her name?",
        "cypher_query": "MATCH (T1:Physician)-[]-(T2:Prescribes)\nRETURN T1.Name\nORDER BY T2.dose DESC\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name",
                "ORDER BY",
                "DESC",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "dose"
            ],
            "Token_Name_Label": [
                "Physician",
                "Prescribes"
            ],
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                "John Dorian"
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "what is the name and position of the head whose department has least number of employees?",
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH T2.Position AS Position, count(T2.departmentID) AS count, T2.Name AS Name\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "AS",
                "Name",
                "RETURN",
                "ORDER BY",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "Position",
                "departmentID",
                "count"
            ],
            "Token_Name_Label": [
                "Department",
                "Physician"
            ],
            "Token_Operator": ".",
            "Token_Name_Function": "count",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name and position of the head of the department with the least employees.",
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH T2.Position AS Position, count(T2.departmentID) AS count, T2.Name AS Name\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "AS",
                "Name",
                "RETURN",
                "ORDER BY",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "Position",
                "departmentID",
                "count"
            ],
            "Token_Name_Label": [
                "Department",
                "Physician"
            ],
            "Token_Operator": ".",
            "Token_Name_Function": "count",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What are names of patients who made an appointment?",
        "cypher_query": "MATCH (T1:Appointment) MATCH (T2:Patient)\nRETURN T2.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2"
            ],
            "Token_Name_Label": [
                "Appointment",
                "Patient"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "List the names of patients who have made appointments.",
        "cypher_query": "MATCH (T1:Appointment) MATCH (T2:Patient)\nRETURN T2.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2"
            ],
            "Token_Name_Label": [
                "Appointment",
                "Patient"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the nurse has the most appointments?",
        "cypher_query": "MATCH (T1:Nurse) MATCH (T2:Appointment)\nWITH T1.Name AS Name, count(T1.EmployeeID) AS count\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "Name",
                "AS",
                "RETURN",
                "ORDER BY",
                "DESC",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "EmployeeID",
                "count"
            ],
            "Token_Name_Label": [
                "Nurse",
                "Appointment"
            ],
            "Token_Operator": ".",
            "Token_Name_Function": "count",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                "Carla Espinosa"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the nurse who has the largest number of appointments.",
        "cypher_query": "MATCH (T1:Nurse) MATCH (T2:Appointment)\nWITH T1.Name AS Name, count(T1.EmployeeID) AS count\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "Name",
                "AS",
                "RETURN",
                "ORDER BY",
                "DESC",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "EmployeeID",
                "count"
            ],
            "Token_Name_Label": [
                "Nurse",
                "Appointment"
            ],
            "Token_Operator": ".",
            "Token_Name_Function": "count",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                "Carla Espinosa"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the names of nurses who are nursing an undergoing treatment.",
        "cypher_query": "MATCH (T1:Undergoes)-[]-(T2:Nurse)\nRETURN DISTINCT T2.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2"
            ],
            "Token_Name_Label": [
                "Undergoes",
                "Nurse"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which nurses are in charge of patients undergoing treatments?",
        "cypher_query": "MATCH (T1:Undergoes)-[]-(T2:Nurse)\nRETURN DISTINCT T2.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2"
            ],
            "Token_Name_Label": [
                "Undergoes",
                "Nurse"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of the physician who prescribed the highest dose?",
        "cypher_query": "MATCH (T1:Physician)-[]-(T2:Prescribes)\nRETURN T1.Name\nORDER BY T2.dose DESC\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name",
                "ORDER BY",
                "DESC",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "dose"
            ],
            "Token_Name_Label": [
                "Physician",
                "Prescribes"
            ],
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                "John Dorian"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the physician who prescribed the highest dose. What is his or her name?",
        "cypher_query": "MATCH (T1:Physician)-[]-(T2:Prescribes)\nRETURN T1.Name\nORDER BY T2.dose DESC\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name",
                "ORDER BY",
                "DESC",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "dose"
            ],
            "Token_Name_Label": [
                "Physician",
                "Prescribes"
            ],
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                "John Dorian"
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "what is the name and position of the head whose department has least number of employees?",
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH count(T2.departmentID) AS count, T2.Position AS Position, T2.Name AS Name\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "AS",
                "Name",
                "RETURN",
                "ORDER BY",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "departmentID",
                "count",
                "Position"
            ],
            "Token_Name_Label": [
                "Department",
                "Physician"
            ],
            "Token_Name_Function": "count",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name and position of the head of the department with the least employees.",
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH count(T2.departmentID) AS count, T2.Position AS Position, T2.Name AS Name\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "AS",
                "Name",
                "RETURN",
                "ORDER BY",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "departmentID",
                "count",
                "Position"
            ],
            "Token_Name_Label": [
                "Department",
                "Physician"
            ],
            "Token_Name_Function": "count",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What are names of patients who made an appointment?",
        "cypher_query": "MATCH (T1:Appointment) MATCH (T2:Patient)\nRETURN T2.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2"
            ],
            "Token_Name_Label": [
                "Appointment",
                "Patient"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "List the names of patients who have made appointments.",
        "cypher_query": "MATCH (T1:Appointment) MATCH (T2:Patient)\nRETURN T2.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2"
            ],
            "Token_Name_Label": [
                "Appointment",
                "Patient"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the nurse has the most appointments?",
        "cypher_query": "MATCH (T1:Nurse) MATCH (T2:Appointment)\nWITH count(T1.EmployeeID) AS count, T1.Name AS Name\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "AS",
                "Name",
                "RETURN",
                "ORDER BY",
                "DESC",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "EmployeeID",
                "count"
            ],
            "Token_Name_Label": [
                "Nurse",
                "Appointment"
            ],
            "Token_Name_Function": "count",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                "Carla Espinosa"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the nurse who has the largest number of appointments.",
        "cypher_query": "MATCH (T1:Nurse) MATCH (T2:Appointment)\nWITH count(T1.EmployeeID) AS count, T1.Name AS Name\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "AS",
                "Name",
                "RETURN",
                "ORDER BY",
                "DESC",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "EmployeeID",
                "count"
            ],
            "Token_Name_Label": [
                "Nurse",
                "Appointment"
            ],
            "Token_Name_Function": "count",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                "Carla Espinosa"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the names of nurses who are nursing an undergoing treatment.",
        "cypher_query": "MATCH (T1:Undergoes)-[]-(T2:Nurse)\nRETURN DISTINCT T2.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2"
            ],
            "Token_Name_Label": [
                "Undergoes",
                "Nurse"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which nurses are in charge of patients undergoing treatments?",
        "cypher_query": "MATCH (T1:Undergoes)-[]-(T2:Nurse)\nRETURN DISTINCT T2.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2"
            ],
            "Token_Name_Label": [
                "Undergoes",
                "Nurse"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of the physician who prescribed the highest dose?",
        "cypher_query": "MATCH (T1:Physician)-[]-(T2:Prescribes)\nRETURN T1.Name\nORDER BY T2.dose DESC\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name",
                "ORDER BY",
                "DESC",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "dose"
            ],
            "Token_Name_Label": [
                "Physician",
                "Prescribes"
            ],
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                "John Dorian"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the physician who prescribed the highest dose. What is his or her name?",
        "cypher_query": "MATCH (T1:Physician)-[]-(T2:Prescribes)\nRETURN T1.Name\nORDER BY T2.dose DESC\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name",
                "ORDER BY",
                "DESC",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "dose"
            ],
            "Token_Name_Label": [
                "Physician",
                "Prescribes"
            ],
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                "John Dorian"
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "what is the name and position of the head whose department has least number of employees?",
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH T2.Position AS Position, count(T2.departmentID) AS count, T2.Name AS Name\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "AS",
                "Name",
                "RETURN",
                "ORDER BY",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "Position",
                "departmentID",
                "count"
            ],
            "Token_Name_Label": [
                "Department",
                "Physician"
            ],
            "Token_Operator": ".",
            "Token_Name_Function": "count",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name and position of the head of the department with the least employees.",
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH T2.Position AS Position, count(T2.departmentID) AS count, T2.Name AS Name\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "AS",
                "Name",
                "RETURN",
                "ORDER BY",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "Position",
                "departmentID",
                "count"
            ],
            "Token_Name_Label": [
                "Department",
                "Physician"
            ],
            "Token_Operator": ".",
            "Token_Name_Function": "count",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What are names of patients who made an appointment?",
        "cypher_query": "MATCH (T1:Appointment) MATCH (T2:Patient)\nRETURN T2.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2"
            ],
            "Token_Name_Label": [
                "Appointment",
                "Patient"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "List the names of patients who have made appointments.",
        "cypher_query": "MATCH (T1:Appointment) MATCH (T2:Patient)\nRETURN T2.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2"
            ],
            "Token_Name_Label": [
                "Appointment",
                "Patient"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the nurse has the most appointments?",
        "cypher_query": "MATCH (T1:Nurse) MATCH (T2:Appointment)\nWITH count(T1.EmployeeID) AS count, T1.Name AS Name\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "AS",
                "Name",
                "RETURN",
                "ORDER BY",
                "DESC",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "EmployeeID",
                "count"
            ],
            "Token_Name_Label": [
                "Nurse",
                "Appointment"
            ],
            "Token_Name_Function": "count",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                "Carla Espinosa"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the nurse who has the largest number of appointments.",
        "cypher_query": "MATCH (T1:Nurse) MATCH (T2:Appointment)\nWITH count(T1.EmployeeID) AS count, T1.Name AS Name\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "AS",
                "Name",
                "RETURN",
                "ORDER BY",
                "DESC",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "EmployeeID",
                "count"
            ],
            "Token_Name_Label": [
                "Nurse",
                "Appointment"
            ],
            "Token_Name_Function": "count",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                "Carla Espinosa"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the names of nurses who are nursing an undergoing treatment.",
        "cypher_query": "MATCH (T1:Undergoes)-[]-(T2:Nurse)\nRETURN DISTINCT T2.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2"
            ],
            "Token_Name_Label": [
                "Undergoes",
                "Nurse"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which nurses are in charge of patients undergoing treatments?",
        "cypher_query": "MATCH (T1:Undergoes)-[]-(T2:Nurse)\nRETURN DISTINCT T2.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2"
            ],
            "Token_Name_Label": [
                "Undergoes",
                "Nurse"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of the physician who prescribed the highest dose?",
        "cypher_query": "MATCH (T1:Physician)-[]-(T2:Prescribes)\nRETURN T1.Name\nORDER BY T2.dose DESC\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name",
                "ORDER BY",
                "DESC",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "dose"
            ],
            "Token_Name_Label": [
                "Physician",
                "Prescribes"
            ],
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                "John Dorian"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the physician who prescribed the highest dose. What is his or her name?",
        "cypher_query": "MATCH (T1:Physician)-[]-(T2:Prescribes)\nRETURN T1.Name\nORDER BY T2.dose DESC\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name",
                "ORDER BY",
                "DESC",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "dose"
            ],
            "Token_Name_Label": [
                "Physician",
                "Prescribes"
            ],
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                "John Dorian"
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "what is the name and position of the head whose department has least number of employees?",
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH T2.Name AS Name, T2.Position AS Position, count(T2.departmentID) AS count\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "Name",
                "AS",
                "RETURN",
                "ORDER BY",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "Position",
                "departmentID",
                "count"
            ],
            "Token_Name_Label": [
                "Department",
                "Physician"
            ],
            "Token_Operator": ".",
            "Token_Name_Function": "count",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name and position of the head of the department with the least employees.",
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH T2.Name AS Name, T2.Position AS Position, count(T2.departmentID) AS count\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "Name",
                "AS",
                "RETURN",
                "ORDER BY",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "Position",
                "departmentID",
                "count"
            ],
            "Token_Name_Label": [
                "Department",
                "Physician"
            ],
            "Token_Operator": ".",
            "Token_Name_Function": "count",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What are names of patients who made an appointment?",
        "cypher_query": "MATCH (T1:Appointment) MATCH (T2:Patient)\nRETURN T2.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2"
            ],
            "Token_Name_Label": [
                "Appointment",
                "Patient"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "List the names of patients who have made appointments.",
        "cypher_query": "MATCH (T1:Appointment) MATCH (T2:Patient)\nRETURN T2.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2"
            ],
            "Token_Name_Label": [
                "Appointment",
                "Patient"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the nurse has the most appointments?",
        "cypher_query": "MATCH (T1:Nurse) MATCH (T2:Appointment)\nWITH count(T1.EmployeeID) AS count, T1.Name AS Name\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "AS",
                "Name",
                "RETURN",
                "ORDER BY",
                "DESC",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "EmployeeID",
                "count"
            ],
            "Token_Name_Label": [
                "Nurse",
                "Appointment"
            ],
            "Token_Name_Function": "count",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                "Carla Espinosa"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the nurse who has the largest number of appointments.",
        "cypher_query": "MATCH (T1:Nurse) MATCH (T2:Appointment)\nWITH count(T1.EmployeeID) AS count, T1.Name AS Name\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "AS",
                "Name",
                "RETURN",
                "ORDER BY",
                "DESC",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "EmployeeID",
                "count"
            ],
            "Token_Name_Label": [
                "Nurse",
                "Appointment"
            ],
            "Token_Name_Function": "count",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                "Carla Espinosa"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the names of nurses who are nursing an undergoing treatment.",
        "cypher_query": "MATCH (T1:Undergoes)-[]-(T2:Nurse)\nRETURN DISTINCT T2.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2"
            ],
            "Token_Name_Label": [
                "Undergoes",
                "Nurse"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which nurses are in charge of patients undergoing treatments?",
        "cypher_query": "MATCH (T1:Undergoes)-[]-(T2:Nurse)\nRETURN DISTINCT T2.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2"
            ],
            "Token_Name_Label": [
                "Undergoes",
                "Nurse"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of the physician who prescribed the highest dose?",
        "cypher_query": "MATCH (T1:Physician)-[]-(T2:Prescribes)\nRETURN T1.Name\nORDER BY T2.dose DESC\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name",
                "ORDER BY",
                "DESC",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "dose"
            ],
            "Token_Name_Label": [
                "Physician",
                "Prescribes"
            ],
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                "John Dorian"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the physician who prescribed the highest dose. What is his or her name?",
        "cypher_query": "MATCH (T1:Physician)-[]-(T2:Prescribes)\nRETURN T1.Name\nORDER BY T2.dose DESC\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name",
                "ORDER BY",
                "DESC",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "dose"
            ],
            "Token_Name_Label": [
                "Physician",
                "Prescribes"
            ],
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                "John Dorian"
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "what is the name and position of the head whose department has least number of employees?",
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH T2.Position AS Position, T2.Name AS Name, count(T2.departmentID) AS count\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "AS",
                "Name",
                "RETURN",
                "ORDER BY",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "Position",
                "departmentID",
                "count"
            ],
            "Token_Name_Label": [
                "Department",
                "Physician"
            ],
            "Token_Operator": ".",
            "Token_Name_Function": "count",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name and position of the head of the department with the least employees.",
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH T2.Position AS Position, T2.Name AS Name, count(T2.departmentID) AS count\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "AS",
                "Name",
                "RETURN",
                "ORDER BY",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "Position",
                "departmentID",
                "count"
            ],
            "Token_Name_Label": [
                "Department",
                "Physician"
            ],
            "Token_Operator": ".",
            "Token_Name_Function": "count",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What are names of patients who made an appointment?",
        "cypher_query": "MATCH (T1:Appointment) MATCH (T2:Patient)\nRETURN T2.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2"
            ],
            "Token_Name_Label": [
                "Appointment",
                "Patient"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "List the names of patients who have made appointments.",
        "cypher_query": "MATCH (T1:Appointment) MATCH (T2:Patient)\nRETURN T2.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2"
            ],
            "Token_Name_Label": [
                "Appointment",
                "Patient"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the nurse has the most appointments?",
        "cypher_query": "MATCH (T1:Nurse) MATCH (T2:Appointment)\nWITH count(T1.EmployeeID) AS count, T1.Name AS Name\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "AS",
                "Name",
                "RETURN",
                "ORDER BY",
                "DESC",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "EmployeeID",
                "count"
            ],
            "Token_Name_Label": [
                "Nurse",
                "Appointment"
            ],
            "Token_Name_Function": "count",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                "Carla Espinosa"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the nurse who has the largest number of appointments.",
        "cypher_query": "MATCH (T1:Nurse) MATCH (T2:Appointment)\nWITH count(T1.EmployeeID) AS count, T1.Name AS Name\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "AS",
                "Name",
                "RETURN",
                "ORDER BY",
                "DESC",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "EmployeeID",
                "count"
            ],
            "Token_Name_Label": [
                "Nurse",
                "Appointment"
            ],
            "Token_Name_Function": "count",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                "Carla Espinosa"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the names of nurses who are nursing an undergoing treatment.",
        "cypher_query": "MATCH (T1:Undergoes)-[]-(T2:Nurse)\nRETURN DISTINCT T2.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2"
            ],
            "Token_Name_Label": [
                "Undergoes",
                "Nurse"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which nurses are in charge of patients undergoing treatments?",
        "cypher_query": "MATCH (T1:Undergoes)-[]-(T2:Nurse)\nRETURN DISTINCT T2.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2"
            ],
            "Token_Name_Label": [
                "Undergoes",
                "Nurse"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of the physician who prescribed the highest dose?",
        "cypher_query": "MATCH (T1:Physician)-[]-(T2:Prescribes)\nRETURN T1.Name\nORDER BY T2.dose DESC\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name",
                "ORDER BY",
                "DESC",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "dose"
            ],
            "Token_Name_Label": [
                "Physician",
                "Prescribes"
            ],
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                "John Dorian"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the physician who prescribed the highest dose. What is his or her name?",
        "cypher_query": "MATCH (T1:Physician)-[]-(T2:Prescribes)\nRETURN T1.Name\nORDER BY T2.dose DESC\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name",
                "ORDER BY",
                "DESC",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "dose"
            ],
            "Token_Name_Label": [
                "Physician",
                "Prescribes"
            ],
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                "John Dorian"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the physicians who are trained in a procedure that costs more than 5000.",
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T3.Cost > 5000\nRETURN T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3",
                "Cost"
            ],
            "Token_Name_Label": [
                "Physician",
                "Trained_In",
                "Procedures"
            ],
            "Token_Operator": [
                ".",
                ">"
            ],
            "Token_Literal_Number_Integer": "5000"
        },
        "answers": [
            [
                "John Wen"
            ],
            [
                "Christopher Turk"
            ],
            [
                "Todd Quinlan"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which physicians are trained in procedures that are more expensive than 5000?",
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T3.Cost > 5000\nRETURN T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3",
                "Cost"
            ],
            "Token_Name_Label": [
                "Physician",
                "Trained_In",
                "Procedures"
            ],
            "Token_Operator": [
                ".",
                ">"
            ],
            "Token_Literal_Number_Integer": "5000"
        },
        "answers": [
            [
                "John Wen"
            ],
            [
                "Christopher Turk"
            ],
            [
                "Todd Quinlan"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the average cost of procedures that physician John Wen was trained in?",
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T1.Name = \"John Wen\"\nRETURN AVG(T3.Cost)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3",
                "Cost"
            ],
            "Token_Name_Label": [
                "Physician",
                "Trained_In",
                "Procedures"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "\"John Wen\"",
            "Token_Name_Function": "AVG"
        },
        "answers": [
            [
                4324.857142857143
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Compute the mean price of procedures physician John Wen was trained in.",
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T1.Name = \"John Wen\"\nRETURN AVG(T3.Cost)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3",
                "Cost"
            ],
            "Token_Name_Label": [
                "Physician",
                "Trained_In",
                "Procedures"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "\"John Wen\"",
            "Token_Name_Function": "AVG"
        },
        "answers": [
            [
                4324.857142857143
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the names of procedures which physician John Wen was trained in.",
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T1.Name = \"John Wen\"\nRETURN T3.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3"
            ],
            "Token_Name_Label": [
                "Physician",
                "Trained_In",
                "Procedures"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "\"John Wen\""
        },
        "answers": [
            [
                "Reversible Pancreomyoplasty"
            ],
            [
                "Obtuse Pyloric Recombobulation"
            ],
            [
                "Obfuscated Dermogastrotomy"
            ],
            [
                "Complete Walletectomy"
            ],
            [
                "Reverse Rhinopodoplasty"
            ],
            [
                "Follicular Demiectomy"
            ],
            [
                "Folded Demiophtalmectomy"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of procedures physician John Wen was trained in?",
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T1.Name = \"John Wen\"\nRETURN T3.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3"
            ],
            "Token_Name_Label": [
                "Physician",
                "Trained_In",
                "Procedures"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "\"John Wen\""
        },
        "answers": [
            [
                "Reversible Pancreomyoplasty"
            ],
            [
                "Obtuse Pyloric Recombobulation"
            ],
            [
                "Obfuscated Dermogastrotomy"
            ],
            [
                "Complete Walletectomy"
            ],
            [
                "Reverse Rhinopodoplasty"
            ],
            [
                "Follicular Demiectomy"
            ],
            [
                "Folded Demiophtalmectomy"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians who are affiliated with Surgery or Psychiatry department.",
        "cypher_query": "MATCH (T1:Physician)-[T2:Affiliated_With]-(T3:Department)\nWHERE T3.Name = 'Surgery' OR T3.Name = 'Psychiatry'\nRETURN T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3"
            ],
            "Token_Name_Label": [
                "Physician",
                "Affiliated_With",
                "Department"
            ],
            "Token_Operator": [
                ".",
                "=",
                "OR"
            ],
            "Token_Literal_String": [
                "'Surgery'",
                "'Psychiatry'"
            ]
        },
        "answers": [
            [
                "John Wen"
            ],
            [
                "Christopher Turk"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "Molly Clock"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which physicians are affiliated with either Surgery or Psychiatry department? Give me their names.",
        "cypher_query": "MATCH (T1:Physician)-[T2:Affiliated_With]-(T3:Department)\nWHERE T3.Name = 'Surgery' OR T3.Name = 'Psychiatry'\nRETURN T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3"
            ],
            "Token_Name_Label": [
                "Physician",
                "Affiliated_With",
                "Department"
            ],
            "Token_Operator": [
                ".",
                "=",
                "OR"
            ],
            "Token_Literal_String": [
                "'Surgery'",
                "'Psychiatry'"
            ]
        },
        "answers": [
            [
                "John Wen"
            ],
            [
                "Christopher Turk"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "Molly Clock"
            ]
        ]
    }
][][][][
    {
        "db_id": "hospital_1",
        "question": "Which department has the largest number of employees?",
        "cypher_query": "MATCH (d:Department)\nWITH count(d.DepartmentID) AS count, d.Name AS Name\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "AS",
                "Name",
                "RETURN",
                "ORDER BY",
                "DESC",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "d",
                "DepartmentID",
                "count"
            ],
            "Token_Name_Label": "Department",
            "Token_Name_Function": "count",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                "General Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the department with the most employees.",
        "cypher_query": "MATCH (d:Department)\nWITH count(d.DepartmentID) AS count, d.Name AS Name\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "AS",
                "Name",
                "RETURN",
                "ORDER BY",
                "DESC",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "d",
                "DepartmentID",
                "count"
            ],
            "Token_Name_Label": "Department",
            "Token_Name_Function": "count",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                "General Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the employee id of the head whose department has the least number of employees?",
        "cypher_query": "MATCH (d:Department)\nWITH count(d.DepartmentID) AS count, d.Head AS Head\nRETURN Head\nORDER BY count\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "AS",
                "RETURN",
                "ORDER BY",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "d",
                "DepartmentID",
                "count",
                "Head"
            ],
            "Token_Name_Label": "Department",
            "Token_Name_Function": "count",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                4
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "Which department has the largest number of employees?",
        "cypher_query": "MATCH (d:Department)\nWITH count(d.DepartmentID) AS count, d.Name AS Name\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "AS",
                "Name",
                "RETURN",
                "ORDER BY",
                "DESC",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "d",
                "DepartmentID",
                "count"
            ],
            "Token_Name_Label": "Department",
            "Token_Name_Function": "count",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                "General Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the department with the most employees.",
        "cypher_query": "MATCH (d:Department)\nWITH count(d.DepartmentID) AS count, d.Name AS Name\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "AS",
                "Name",
                "RETURN",
                "ORDER BY",
                "DESC",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "d",
                "DepartmentID",
                "count"
            ],
            "Token_Name_Label": "Department",
            "Token_Name_Function": "count",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                "General Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the employee id of the head whose department has the least number of employees?",
        "cypher_query": "MATCH (d:Department)\nWITH d.Head AS Head, count(d.DepartmentID) AS count\nRETURN Head\nORDER BY count\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "AS",
                "RETURN",
                "ORDER BY",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "d",
                "Head",
                "DepartmentID",
                "count"
            ],
            "Token_Name_Label": "Department",
            "Token_Operator": ".",
            "Token_Name_Function": "count",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                4
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Tell me the employee id of the head of the department with the least employees.",
        "cypher_query": "MATCH (d:Department)\nWITH d.Head AS Head, count(d.DepartmentID) AS count\nRETURN Head\nORDER BY count\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "AS",
                "RETURN",
                "ORDER BY",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "d",
                "Head",
                "DepartmentID",
                "count"
            ],
            "Token_Name_Label": "Department",
            "Token_Operator": ".",
            "Token_Name_Function": "count",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                4
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "what is the name and position of the head whose department has least number of employees?",
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH T2.Name AS Name, T2.Position AS Position, count(T2.departmentID) AS count\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "Name",
                "AS",
                "RETURN",
                "ORDER BY",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "Position",
                "departmentID",
                "count"
            ],
            "Token_Name_Label": [
                "Department",
                "Physician"
            ],
            "Token_Operator": ".",
            "Token_Name_Function": "count",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name and position of the head of the department with the least employees.",
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH T2.Name AS Name, T2.Position AS Position, count(T2.departmentID) AS count\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "Name",
                "AS",
                "RETURN",
                "ORDER BY",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "Position",
                "departmentID",
                "count"
            ],
            "Token_Name_Label": [
                "Department",
                "Physician"
            ],
            "Token_Operator": ".",
            "Token_Name_Function": "count",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What are names of patients who made an appointment?",
        "cypher_query": "MATCH (T1:Appointment) MATCH (T2:Patient)\nRETURN T2.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2"
            ],
            "Token_Name_Label": [
                "Appointment",
                "Patient"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "List the names of patients who have made appointments.",
        "cypher_query": "MATCH (T1:Appointment) MATCH (T2:Patient)\nRETURN T2.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2"
            ],
            "Token_Name_Label": [
                "Appointment",
                "Patient"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the id of the appointment with the most recent start date?",
        "cypher_query": "MATCH (a:Appointment)\nRETURN a.AppointmentID\nORDER BY a.Start DESC\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "ORDER BY",
                "Start",
                "DESC",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "a",
                "AppointmentID"
            ],
            "Token_Name_Label": "Appointment",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                86213939
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the id of the appointment that started most recently?",
        "cypher_query": "MATCH (a:Appointment)\nRETURN a.AppointmentID\nORDER BY a.Start DESC\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "ORDER BY",
                "Start",
                "DESC",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "a",
                "AppointmentID"
            ],
            "Token_Name_Label": "Appointment",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                86213939
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the nurse has the most appointments?",
        "cypher_query": "MATCH (T1:Nurse) MATCH (T2:Appointment)\nWITH count(T1.EmployeeID) AS count, T1.Name AS Name\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "AS",
                "Name",
                "RETURN",
                "ORDER BY",
                "DESC",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "EmployeeID",
                "count"
            ],
            "Token_Name_Label": [
                "Nurse",
                "Appointment"
            ],
            "Token_Name_Function": "count",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                "Carla Espinosa"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the nurse who has the largest number of appointments.",
        "cypher_query": "MATCH (T1:Nurse) MATCH (T2:Appointment)\nWITH count(T1.EmployeeID) AS count, T1.Name AS Name\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH",
                "AS",
                "Name",
                "RETURN",
                "ORDER BY",
                "DESC",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "EmployeeID",
                "count"
            ],
            "Token_Name_Label": [
                "Nurse",
                "Appointment"
            ],
            "Token_Name_Function": "count",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                "Carla Espinosa"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many different types of rooms are there?",
        "cypher_query": "MATCH (r:Room)\nWITH DISTINCT r.RoomType AS roomtype\nRETURN count(roomtype)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH DISTINCT",
                "AS",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "r",
                "RoomType",
                "roomtype"
            ],
            "Token_Name_Label": "Room",
            "Token_Operator": ".",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                1
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of distinct room types available.",
        "cypher_query": "MATCH (r:Room)\nWITH DISTINCT r.RoomType AS roomtype\nRETURN count(roomtype)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WITH DISTINCT",
                "AS",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "r",
                "RoomType",
                "roomtype"
            ],
            "Token_Name_Label": "Room",
            "Token_Operator": ".",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                1
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the patient who has the most recent undergoing treatment?",
        "cypher_query": "MATCH (u:Undergoes)\nRETURN u.Patient\nORDER BY u.DateUndergoes\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "ORDER BY",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "u",
                "Patient",
                "DateUndergoes"
            ],
            "Token_Name_Label": "Undergoes",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                100000001
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which patient is undergoing the most recent treatment?",
        "cypher_query": "MATCH (u:Undergoes)\nRETURN u.Patient\nORDER BY u.DateUndergoes\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "ORDER BY",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "u",
                "Patient",
                "DateUndergoes"
            ],
            "Token_Name_Label": "Undergoes",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                100000001
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "List the names of all distinct nurses ordered by alphabetical order?",
        "cypher_query": "MATCH (n:Nurse)\nRETURN DISTINCT n.Name\nORDER BY n.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "n",
            "Token_Name_Label": "Nurse",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the alphabetically ordered list of all the distinct names of nurses?",
        "cypher_query": "MATCH (n:Nurse)\nRETURN DISTINCT n.Name\nORDER BY n.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "n",
            "Token_Name_Label": "Nurse",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the names of nurses who are nursing an undergoing treatment.",
        "cypher_query": "MATCH (T1:Undergoes)-[]-(T2:Nurse)\nRETURN DISTINCT T2.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2"
            ],
            "Token_Name_Label": [
                "Undergoes",
                "Nurse"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which nurses are in charge of patients undergoing treatments?",
        "cypher_query": "MATCH (T1:Undergoes)-[]-(T2:Nurse)\nRETURN DISTINCT T2.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2"
            ],
            "Token_Name_Label": [
                "Undergoes",
                "Nurse"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "List the names of all distinct medications, ordered in an alphabetical order.",
        "cypher_query": "MATCH (m:Medication)\nRETURN DISTINCT m.Name\nORDER BY m.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "m",
            "Token_Name_Label": "Medication",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Awakin"
            ],
            [
                "Crescavitin"
            ],
            [
                "Melioraurin"
            ],
            [
                "Procrastin-X"
            ],
            [
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the alphabetically ordered list of all distinct medications?",
        "cypher_query": "MATCH (m:Medication)\nRETURN DISTINCT m.Name\nORDER BY m.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name",
                "ORDER BY"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "m",
            "Token_Name_Label": "Medication",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Awakin"
            ],
            [
                "Crescavitin"
            ],
            [
                "Melioraurin"
            ],
            [
                "Procrastin-X"
            ],
            [
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of the physician who prescribed the highest dose?",
        "cypher_query": "MATCH (T1:Physician)-[]-(T2:Prescribes)\nRETURN T1.Name\nORDER BY T2.dose DESC\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name",
                "ORDER BY",
                "DESC",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "dose"
            ],
            "Token_Name_Label": [
                "Physician",
                "Prescribes"
            ],
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                "John Dorian"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the physician who prescribed the highest dose. What is his or her name?",
        "cypher_query": "MATCH (T1:Physician)-[]-(T2:Prescribes)\nRETURN T1.Name\nORDER BY T2.dose DESC\nLIMIT 1",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name",
                "ORDER BY",
                "DESC",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "dose"
            ],
            "Token_Name_Label": [
                "Physician",
                "Prescribes"
            ],
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "1"
        },
        "answers": [
            [
                "John Dorian"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What are the highest cost, lowest cost and average cost of procedures?",
        "cypher_query": "MATCH (p:Procedures)\nRETURN MAX(p.Cost),MIN(p.Cost),AVG(p.Cost)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Name_Function": [
                "MAX",
                "MIN",
                "AVG"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                10000.0,
                25.0,
                4324.857142857143
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Tell me the highest, lowest, and average cost of procedures.",
        "cypher_query": "MATCH (p:Procedures)\nRETURN MAX(p.Cost),MIN(p.Cost),AVG(p.Cost)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Name_Function": [
                "MAX",
                "MIN",
                "AVG"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                10000.0,
                25.0,
                4324.857142857143
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "List the name and cost of all procedures sorted by the cost from the highest to the lowest.",
        "cypher_query": "MATCH (p:Procedures)\nRETURN p.Name,p.Cost\nORDER BY p.Cost DESC",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name",
                "ORDER BY",
                "DESC"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Complete Walletectomy",
                10000.0
            ],
            [
                "Reversible Pancreomyoplasty",
                5600.0
            ],
            [
                "Obfuscated Dermogastrotomy",
                4899.0
            ],
            [
                "Folded Demiophtalmectomy",
                4500.0
            ],
            [
                "Obtuse Pyloric Recombobulation",
                3750.0
            ],
            [
                "Reverse Rhinopodoplasty",
                1500.0
            ],
            [
                "Follicular Demiectomy",
                25.0
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Sort the list of names and costs of all procedures in the descending order of cost.",
        "cypher_query": "MATCH (p:Procedures)\nRETURN p.Name,p.Cost\nORDER BY p.Cost DESC",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name",
                "ORDER BY",
                "DESC"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ","
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Operator": "."
        },
        "answers": [
            [
                "Complete Walletectomy",
                10000.0
            ],
            [
                "Reversible Pancreomyoplasty",
                5600.0
            ],
            [
                "Obfuscated Dermogastrotomy",
                4899.0
            ],
            [
                "Folded Demiophtalmectomy",
                4500.0
            ],
            [
                "Obtuse Pyloric Recombobulation",
                3750.0
            ],
            [
                "Reverse Rhinopodoplasty",
                1500.0
            ],
            [
                "Follicular Demiectomy",
                25.0
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the three most expensive procedures.",
        "cypher_query": "MATCH (p:Procedures)\nRETURN p.Name\nORDER BY p.Cost\nLIMIT 3",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name",
                "ORDER BY",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "3"
        },
        "answers": [
            [
                "Follicular Demiectomy"
            ],
            [
                "Reverse Rhinopodoplasty"
            ],
            [
                "Obtuse Pyloric Recombobulation"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What are the three most costly procedures?",
        "cypher_query": "MATCH (p:Procedures)\nRETURN p.Name\nORDER BY p.Cost\nLIMIT 3",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN",
                "Name",
                "ORDER BY",
                "LIMIT"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": [
                "p",
                "Cost"
            ],
            "Token_Name_Label": "Procedures",
            "Token_Operator": ".",
            "Token_Literal_Number_Integer": "3"
        },
        "answers": [
            [
                "Follicular Demiectomy"
            ],
            [
                "Reverse Rhinopodoplasty"
            ],
            [
                "Obtuse Pyloric Recombobulation"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the physicians who are trained in a procedure that costs more than 5000.",
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T3.Cost > 5000\nRETURN T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3",
                "Cost"
            ],
            "Token_Name_Label": [
                "Physician",
                "Trained_In",
                "Procedures"
            ],
            "Token_Operator": [
                ".",
                ">"
            ],
            "Token_Literal_Number_Integer": "5000"
        },
        "answers": [
            [
                "John Wen"
            ],
            [
                "Christopher Turk"
            ],
            [
                "Todd Quinlan"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which physicians are trained in procedures that are more expensive than 5000?",
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T3.Cost > 5000\nRETURN T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "RETURN",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3",
                "Cost"
            ],
            "Token_Name_Label": [
                "Physician",
                "Trained_In",
                "Procedures"
            ],
            "Token_Operator": [
                ".",
                ">"
            ],
            "Token_Literal_Number_Integer": "5000"
        },
        "answers": [
            [
                "John Wen"
            ],
            [
                "Christopher Turk"
            ],
            [
                "Todd Quinlan"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the average cost of procedures that physician John Wen was trained in?",
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T1.Name = \"John Wen\"\nRETURN AVG(T3.Cost)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3",
                "Cost"
            ],
            "Token_Name_Label": [
                "Physician",
                "Trained_In",
                "Procedures"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "\"John Wen\"",
            "Token_Name_Function": "AVG"
        },
        "answers": [
            [
                4324.857142857143
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Compute the mean price of procedures physician John Wen was trained in.",
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T1.Name = \"John Wen\"\nRETURN AVG(T3.Cost)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3",
                "Cost"
            ],
            "Token_Name_Label": [
                "Physician",
                "Trained_In",
                "Procedures"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "\"John Wen\"",
            "Token_Name_Function": "AVG"
        },
        "answers": [
            [
                4324.857142857143
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the names of procedures which physician John Wen was trained in.",
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T1.Name = \"John Wen\"\nRETURN T3.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3"
            ],
            "Token_Name_Label": [
                "Physician",
                "Trained_In",
                "Procedures"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "\"John Wen\""
        },
        "answers": [
            [
                "Reversible Pancreomyoplasty"
            ],
            [
                "Obtuse Pyloric Recombobulation"
            ],
            [
                "Obfuscated Dermogastrotomy"
            ],
            [
                "Complete Walletectomy"
            ],
            [
                "Reverse Rhinopodoplasty"
            ],
            [
                "Follicular Demiectomy"
            ],
            [
                "Folded Demiophtalmectomy"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of procedures physician John Wen was trained in?",
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T1.Name = \"John Wen\"\nRETURN T3.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3"
            ],
            "Token_Name_Label": [
                "Physician",
                "Trained_In",
                "Procedures"
            ],
            "Token_Operator": [
                ".",
                "="
            ],
            "Token_Literal_String": "\"John Wen\""
        },
        "answers": [
            [
                "Reversible Pancreomyoplasty"
            ],
            [
                "Obtuse Pyloric Recombobulation"
            ],
            [
                "Obfuscated Dermogastrotomy"
            ],
            [
                "Complete Walletectomy"
            ],
            [
                "Reverse Rhinopodoplasty"
            ],
            [
                "Follicular Demiectomy"
            ],
            [
                "Folded Demiophtalmectomy"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians who are affiliated with Surgery or Psychiatry department.",
        "cypher_query": "MATCH (T1:Physician)-[T2:Affiliated_With]-(T3:Department)\nWHERE T3.Name = 'Surgery' OR T3.Name = 'Psychiatry'\nRETURN T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3"
            ],
            "Token_Name_Label": [
                "Physician",
                "Affiliated_With",
                "Department"
            ],
            "Token_Operator": [
                ".",
                "=",
                "OR"
            ],
            "Token_Literal_String": [
                "'Surgery'",
                "'Psychiatry'"
            ]
        },
        "answers": [
            [
                "John Wen"
            ],
            [
                "Christopher Turk"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "Molly Clock"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which physicians are affiliated with either Surgery or Psychiatry department? Give me their names.",
        "cypher_query": "MATCH (T1:Physician)-[T2:Affiliated_With]-(T3:Department)\nWHERE T3.Name = 'Surgery' OR T3.Name = 'Psychiatry'\nRETURN T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2",
                "T3"
            ],
            "Token_Name_Label": [
                "Physician",
                "Affiliated_With",
                "Department"
            ],
            "Token_Operator": [
                ".",
                "=",
                "OR"
            ],
            "Token_Literal_String": [
                "'Surgery'",
                "'Psychiatry'"
            ]
        },
        "answers": [
            [
                "John Wen"
            ],
            [
                "Christopher Turk"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "Molly Clock"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of patients who are not using the medication of Procrastin-X.",
        "cypher_query": "MATCH (p:Patient) MATCH (T1:Prescribes)-[]-(T2:Medication)\nWHERE T2.Name = 'Procrastin-X' AND NOT p.SSN in T1.Patient\nRETURN count(DISTINCT p.SSN)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ")-[",
                "]-("
            ],
            "Token_Name_Variable": [
                "p",
                "T1",
                "T2",
                "SSN",
                "Patient"
            ],
            "Token_Name_Label": [
                "Patient",
                "Prescribes",
                "Medication"
            ],
            "Token_Operator": [
                ".",
                "=",
                "AND",
                "NOT",
                "in",
                "DISTINCT"
            ],
            "Token_Literal_String": "'Procrastin-X'",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                3
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many patients are not using Procrastin-X as medication?",
        "cypher_query": "MATCH (p:Patient) MATCH (T1:Prescribes)-[]-(T2:Medication)\nWHERE T2.Name = 'Procrastin-X' AND NOT p.SSN in T1.Patient\nRETURN count(DISTINCT p.SSN)",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "WHERE",
                "Name",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")",
                ")-[",
                "]-("
            ],
            "Token_Name_Variable": [
                "p",
                "T1",
                "T2",
                "SSN",
                "Patient"
            ],
            "Token_Name_Label": [
                "Patient",
                "Prescribes",
                "Medication"
            ],
            "Token_Operator": [
                ".",
                "=",
                "AND",
                "NOT",
                "in",
                "DISTINCT"
            ],
            "Token_Literal_String": "'Procrastin-X'",
            "Token_Name_Function": "count"
        },
        "answers": [
            [
                3
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many appointments are there?",
        "cypher_query": "MATCH (a:Appointment)\nRETURN COUNT(\"*\")",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "a",
            "Token_Name_Label": "Appointment",
            "Token_Name_Function": "COUNT",
            "Token_Literal_String": "\"*\""
        },
        "answers": [
            [
                9
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Count how many appointments have been made in total.",
        "cypher_query": "MATCH (a:Appointment)\nRETURN COUNT(\"*\")",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")"
            ],
            "Token_Name_Variable": "a",
            "Token_Name_Label": "Appointment",
            "Token_Name_Function": "COUNT",
            "Token_Literal_String": "\"*\""
        },
        "answers": [
            [
                9
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the names of nurses who are on call.",
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:On_Call)\nRETURN DISTINCT T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2"
            ],
            "Token_Name_Label": [
                "Nurse",
                "On_Call"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What are the distinct names of nurses on call?",
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:On_Call)\nRETURN DISTINCT T1.Name",
        "parsed_cpypher": {
            "Token_Keyword": [
                "MATCH",
                "RETURN DISTINCT",
                "Name"
            ],
            "Token_Text_Whitespace": [
                " ",
                "\n"
            ],
            "Token_Punctuation": [
                "(",
                ":",
                ")-[",
                "]-(",
                ")"
            ],
            "Token_Name_Variable": [
                "T1",
                "T2"
            ],
            "Token_Name_Label": [
                "Nurse",
                "On_Call"
            ],
            "Token_Operator": "."
        },
        "answers": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ]
    }
]
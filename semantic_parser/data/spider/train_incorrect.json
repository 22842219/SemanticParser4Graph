[][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][
    {
        "db_id": "department_management",
        "question": "How many acting statuses are there?",
        "sql_query": "SELECT count(DISTINCT temporary_acting) FROM management",
        "parsed_sql": {
            "select": {
                "value": {
                    "count": {
                        "distinct": {
                            "value": "temporary_acting"
                        }
                    }
                }
            },
            "from": "management"
        },
        "sql_ans": [
            [
                2
            ]
        ],
        "cypher_query": "MATCH (m:management)\nWITH DISTINCT m.temporary_acting AS temporary_acting\nRETURN count(temporary_acting)",
        "cypher_ans": [
            [
                0
            ]
        ]
    }
][
    {
        "db_id": "department_management",
        "question": "How many acting statuses are there?",
        "sql_query": "SELECT count(DISTINCT temporary_acting) FROM management",
        "parsed_sql": {
            "select": {
                "value": {
                    "count": {
                        "distinct": {
                            "value": "temporary_acting"
                        }
                    }
                }
            },
            "from": "management"
        },
        "sql_ans": [
            [
                2
            ]
        ],
        "cypher_query": "MATCH (m:management)\nWITH DISTINCT m.temporary_acting AS temporary_acting\nRETURN count(temporary_acting)",
        "cypher_ans": [
            [
                0
            ]
        ]
    }
][][][][][
    {
        "db_id": "department_management",
        "question": "How many acting statuses are there?",
        "sql_query": "SELECT count(DISTINCT temporary_acting) FROM management",
        "parsed_sql": {
            "select": {
                "value": {
                    "count": {
                        "distinct": {
                            "value": "temporary_acting"
                        }
                    }
                }
            },
            "from": "management"
        },
        "sql_ans": [
            [
                2
            ]
        ],
        "cypher_query": "MATCH (m:management)\nWITH DISTINCT m.temporary_acting AS temporary_acting\nRETURN count(temporary_acting)",
        "cypher_ans": [
            [
                0
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "Which head's name has the substring 'Ha'? List the id and name.",
        "sql_query": "SELECT head_id ,  name FROM head WHERE name LIKE '%Ha%'",
        "parsed_sql": {
            "select": [
                {
                    "value": "head_id"
                },
                {
                    "value": "name"
                }
            ],
            "from": "head",
            "where": {
                "like": [
                    "name",
                    {
                        "literal": "%Ha%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                4,
                "Dudley Hart"
            ],
            [
                9,
                "P\u00e1draig Harrington"
            ],
            [
                10,
                "Franklin Langham"
            ]
        ],
        "cypher_query": "MATCH (h:head)\nWHERE h.name =~'.*Ha.*'\nRETURN h.head_ID,h.name",
        "cypher_ans": [
            [
                4,
                "Dudley Hart"
            ],
            [
                9,
                "P\u00e1draig Harrington"
            ]
        ]
    }
][
    {
        "db_id": "department_management",
        "question": "How many acting statuses are there?",
        "sql_query": "SELECT count(DISTINCT temporary_acting) FROM management",
        "parsed_sql": {
            "select": {
                "value": {
                    "count": {
                        "distinct": {
                            "value": "temporary_acting"
                        }
                    }
                }
            },
            "from": "management"
        },
        "sql_ans": [
            [
                2
            ]
        ],
        "cypher_query": "MATCH (m:management)\nWITH DISTINCT m.temporary_acting AS temporary_acting\nRETURN count(temporary_acting)",
        "cypher_ans": [
            [
                0
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "Which head's name has the substring 'Ha'? List the id and name.",
        "sql_query": "SELECT head_id ,  name FROM head WHERE name LIKE '%Ha%'",
        "parsed_sql": {
            "select": [
                {
                    "value": "head_id"
                },
                {
                    "value": "name"
                }
            ],
            "from": "head",
            "where": {
                "like": [
                    "name",
                    {
                        "literal": "%Ha%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                4,
                "Dudley Hart"
            ],
            [
                9,
                "P\u00e1draig Harrington"
            ],
            [
                10,
                "Franklin Langham"
            ]
        ],
        "cypher_query": "MATCH (h:head)\nWHERE h.name =~'.*Ha.*'\nRETURN h.head_ID,h.name",
        "cypher_ans": [
            [
                4,
                "Dudley Hart"
            ],
            [
                9,
                "P\u00e1draig Harrington"
            ]
        ]
    }
][
    {
        "db_id": "department_management",
        "question": "How many acting statuses are there?",
        "sql_query": "SELECT count(DISTINCT temporary_acting) FROM management",
        "parsed_sql": {
            "select": {
                "value": {
                    "count": {
                        "distinct": {
                            "value": "temporary_acting"
                        }
                    }
                }
            },
            "from": "management"
        },
        "sql_ans": [
            [
                2
            ]
        ],
        "cypher_query": "MATCH (m:management)\nWITH DISTINCT m.temporary_acting AS temporary_acting\nRETURN count(temporary_acting)",
        "cypher_ans": [
            [
                0
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "Which head's name has the substring 'Ha'? List the id and name.",
        "sql_query": "SELECT head_id ,  name FROM head WHERE name LIKE '%Ha%'",
        "parsed_sql": {
            "select": [
                {
                    "value": "head_id"
                },
                {
                    "value": "name"
                }
            ],
            "from": "head",
            "where": {
                "like": [
                    "name",
                    {
                        "literal": "%Ha%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                4,
                "Dudley Hart"
            ],
            [
                9,
                "P\u00e1draig Harrington"
            ],
            [
                10,
                "Franklin Langham"
            ]
        ],
        "cypher_query": "MATCH (h:head)\nWHERE h.name =~'.*Ha.*'\nRETURN h.head_ID,h.name",
        "cypher_ans": [
            [
                4,
                "Dudley Hart"
            ],
            [
                9,
                "P\u00e1draig Harrington"
            ]
        ]
    }
][
    {
        "db_id": "department_management",
        "question": "How many acting statuses are there?",
        "sql_query": "SELECT count(DISTINCT temporary_acting) FROM management",
        "parsed_sql": {
            "select": {
                "value": {
                    "count": {
                        "distinct": {
                            "value": "temporary_acting"
                        }
                    }
                }
            },
            "from": "management"
        },
        "sql_ans": [
            [
                2
            ]
        ],
        "cypher_query": "MATCH (m:management)\nWITH DISTINCT m.temporary_acting AS temporary_acting\nRETURN count(temporary_acting)",
        "cypher_ans": [
            [
                0
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "Which head's name has the substring 'Ha'? List the id and name.",
        "sql_query": "SELECT head_id ,  name FROM head WHERE name LIKE '%Ha%'",
        "parsed_sql": {
            "select": [
                {
                    "value": "head_id"
                },
                {
                    "value": "name"
                }
            ],
            "from": "head",
            "where": {
                "like": [
                    "name",
                    {
                        "literal": "%Ha%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                4,
                "Dudley Hart"
            ],
            [
                9,
                "P\u00e1draig Harrington"
            ],
            [
                10,
                "Franklin Langham"
            ]
        ],
        "cypher_query": "MATCH (h:head)\nWHERE h.name =~'.*Ha.*'\nRETURN h.head_ID,h.name",
        "cypher_ans": [
            [
                4,
                "Dudley Hart"
            ],
            [
                9,
                "P\u00e1draig Harrington"
            ]
        ]
    }
][
    {
        "db_id": "department_management",
        "question": "List the name, born state and age of the heads of departments ordered by age.",
        "sql_query": "SELECT name ,  born_state ,  age FROM head ORDER BY age",
        "parsed_sql": {
            "select": [
                {
                    "value": "name"
                },
                {
                    "value": "born_state"
                },
                {
                    "value": "age"
                }
            ],
            "from": "head",
            "orderby": {
                "value": "age"
            }
        },
        "sql_ans": [
            "P\u00e1draig Harrington",
            "Stewart Cink",
            "Dudley Hart",
            "Jeff Maggert",
            "Nick Faldo",
            "Tiger Woods",
            "Franklin Langham",
            "Sergio Garc\u00eda",
            "K. J. Choi",
            "Billy Mayfair"
        ],
        "cypher_query": "MATCH (h:head)\nRETURN h.name,h.born_state,h.age\nORDER BY h.age",
        "cypher_ans": [
            [
                "P\u00e1draig Harrington",
                "Connecticut",
                43.0
            ],
            [
                "Stewart Cink",
                "Florida",
                50.0
            ],
            [
                "Dudley Hart",
                "California",
                52.0
            ],
            [
                "Jeff Maggert",
                "Delaware",
                53.0
            ],
            [
                "Nick Faldo",
                "California",
                56.0
            ],
            [
                "Tiger Woods",
                "Alabama",
                67.0
            ],
            [
                "Franklin Langham",
                "Connecticut",
                67.0
            ],
            [
                "Sergio Garc\u00eda",
                "California",
                68.0
            ],
            [
                "K. J. Choi",
                "Alabama",
                69.0
            ],
            [
                "Billy Mayfair",
                "California",
                69.0
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "List the creation year, name and budget of each department.",
        "sql_query": "SELECT creation ,  name ,  budget_in_billions FROM department",
        "parsed_sql": {
            "select": [
                {
                    "value": "creation"
                },
                {
                    "value": "name"
                },
                {
                    "value": "budget_in_billions"
                }
            ],
            "from": "department"
        },
        "sql_ans": [
            "1789",
            "1789",
            "1947",
            "1870",
            "1849",
            "1889",
            "1903",
            "1913",
            "1953",
            "1965",
            "1966",
            "1977",
            "1979",
            "1989",
            "2002"
        ],
        "cypher_query": "MATCH (d:department)\nRETURN d.Creation,d.Name,d.Budget_in_Billions",
        "cypher_ans": [
            [
                "1789",
                "State",
                9.96
            ],
            [
                "1789",
                "Treasury",
                11.1
            ],
            [
                "1947",
                "Defense",
                439.3
            ],
            [
                "1870",
                "Justice",
                23.4
            ],
            [
                "1849",
                "Interior",
                10.7
            ],
            [
                "1889",
                "Agriculture",
                77.6
            ],
            [
                "1903",
                "Commerce",
                6.2
            ],
            [
                "1913",
                "Labor",
                59.7
            ],
            [
                "1953",
                "Health and Human Services",
                543.2
            ],
            [
                "1965",
                "Housing and Urban Development",
                46.2
            ],
            [
                "1966",
                "Transportation",
                58.0
            ],
            [
                "1977",
                "Energy",
                21.5
            ],
            [
                "1979",
                "Education",
                62.8
            ],
            [
                "1989",
                "Veterans Affairs",
                73.2
            ],
            [
                "2002",
                "Homeland Security",
                44.6
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What are the names of the heads who are born outside the California state?",
        "sql_query": "SELECT name FROM head WHERE born_state != 'California'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "head",
            "where": {
                "neq": [
                    "born_state",
                    {
                        "literal": "California"
                    }
                ]
            }
        },
        "sql_ans": [
            "Tiger Woods",
            "K. J. Choi",
            "Jeff Maggert",
            "Stewart Cink",
            "P\u00e1draig Harrington",
            "Franklin Langham"
        ],
        "cypher_query": "MATCH (h:head)\nWHERE h.born_state<>'California'\nRETURN h.name",
        "cypher_ans": [
            [
                "Tiger Woods"
            ],
            [
                "K. J. Choi"
            ],
            [
                "Jeff Maggert"
            ],
            [
                "Stewart Cink"
            ],
            [
                "P\u00e1draig Harrington"
            ],
            [
                "Franklin Langham"
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What are the names of the states where at least 3 heads were born?",
        "sql_query": "SELECT born_state FROM head GROUP BY born_state HAVING count(*)  >=  3",
        "parsed_sql": {
            "select": {
                "value": "born_state"
            },
            "from": "head",
            "groupby": {
                "value": "born_state"
            },
            "having": {
                "gte": [
                    {
                        "count": "*"
                    },
                    3
                ]
            }
        },
        "sql_ans": [
            "California"
        ],
        "cypher_query": "MATCH (h:head)\nWITH count(*) AS count, h.born_state AS born_state\nWHERE count >=3\nRETURN born_state",
        "cypher_ans": [
            [
                "California"
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "In which year were most departments established?",
        "sql_query": "SELECT creation FROM department GROUP BY creation ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "creation"
            },
            "from": "department",
            "groupby": {
                "value": "creation"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            "1789"
        ],
        "cypher_query": "MATCH (d:department)\nWITH d.Creation AS Creation, count(d.Creation) AS count\nRETURN Creation\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "1789"
            ]
        ]
    }
][
    {
        "db_id": "department_management",
        "question": "List the name, born state and age of the heads of departments ordered by age.",
        "sql_query": "SELECT name ,  born_state ,  age FROM head ORDER BY age",
        "parsed_sql": {
            "select": [
                {
                    "value": "name"
                },
                {
                    "value": "born_state"
                },
                {
                    "value": "age"
                }
            ],
            "from": "head",
            "orderby": {
                "value": "age"
            }
        },
        "sql_ans": [
            [
                "P\u00e1draig Harrington"
            ],
            [
                "Stewart Cink"
            ],
            [
                "Dudley Hart"
            ],
            [
                "Jeff Maggert"
            ],
            [
                "Nick Faldo"
            ],
            [
                "Tiger Woods"
            ],
            [
                "Franklin Langham"
            ],
            [
                "Sergio Garc\u00eda"
            ],
            [
                "K. J. Choi"
            ],
            [
                "Billy Mayfair"
            ]
        ],
        "cypher_query": "MATCH (h:head)\nRETURN h.name,h.born_state,h.age\nORDER BY h.age",
        "cypher_ans": [
            [
                "P\u00e1draig Harrington",
                "Connecticut",
                43.0
            ],
            [
                "Stewart Cink",
                "Florida",
                50.0
            ],
            [
                "Dudley Hart",
                "California",
                52.0
            ],
            [
                "Jeff Maggert",
                "Delaware",
                53.0
            ],
            [
                "Nick Faldo",
                "California",
                56.0
            ],
            [
                "Tiger Woods",
                "Alabama",
                67.0
            ],
            [
                "Franklin Langham",
                "Connecticut",
                67.0
            ],
            [
                "Sergio Garc\u00eda",
                "California",
                68.0
            ],
            [
                "K. J. Choi",
                "Alabama",
                69.0
            ],
            [
                "Billy Mayfair",
                "California",
                69.0
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "List the creation year, name and budget of each department.",
        "sql_query": "SELECT creation ,  name ,  budget_in_billions FROM department",
        "parsed_sql": {
            "select": [
                {
                    "value": "creation"
                },
                {
                    "value": "name"
                },
                {
                    "value": "budget_in_billions"
                }
            ],
            "from": "department"
        },
        "sql_ans": [
            [
                "1789"
            ],
            [
                "1789"
            ],
            [
                "1947"
            ],
            [
                "1870"
            ],
            [
                "1849"
            ],
            [
                "1889"
            ],
            [
                "1903"
            ],
            [
                "1913"
            ],
            [
                "1953"
            ],
            [
                "1965"
            ],
            [
                "1966"
            ],
            [
                "1977"
            ],
            [
                "1979"
            ],
            [
                "1989"
            ],
            [
                "2002"
            ]
        ],
        "cypher_query": "MATCH (d:department)\nRETURN d.Creation,d.Name,d.Budget_in_Billions",
        "cypher_ans": [
            [
                "1789",
                "State",
                9.96
            ],
            [
                "1789",
                "Treasury",
                11.1
            ],
            [
                "1947",
                "Defense",
                439.3
            ],
            [
                "1870",
                "Justice",
                23.4
            ],
            [
                "1849",
                "Interior",
                10.7
            ],
            [
                "1889",
                "Agriculture",
                77.6
            ],
            [
                "1903",
                "Commerce",
                6.2
            ],
            [
                "1913",
                "Labor",
                59.7
            ],
            [
                "1953",
                "Health and Human Services",
                543.2
            ],
            [
                "1965",
                "Housing and Urban Development",
                46.2
            ],
            [
                "1966",
                "Transportation",
                58.0
            ],
            [
                "1977",
                "Energy",
                21.5
            ],
            [
                "1979",
                "Education",
                62.8
            ],
            [
                "1989",
                "Veterans Affairs",
                73.2
            ],
            [
                "2002",
                "Homeland Security",
                44.6
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What are the maximum and minimum budget of the departments?",
        "sql_query": "SELECT max(budget_in_billions) ,  min(budget_in_billions) FROM department",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "max": "budget_in_billions"
                    }
                },
                {
                    "value": {
                        "min": "budget_in_billions"
                    }
                }
            ],
            "from": "department"
        },
        "sql_ans": [
            [
                543.2
            ]
        ],
        "cypher_query": "MATCH (d:department)\nRETURN max(d.Budget_in_Billions),min(d.Budget_in_Billions)",
        "cypher_ans": [
            [
                543.2,
                6.2
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "How many acting statuses are there?",
        "sql_query": "SELECT count(DISTINCT temporary_acting) FROM management",
        "parsed_sql": {
            "select": {
                "value": {
                    "count": {
                        "distinct": {
                            "value": "temporary_acting"
                        }
                    }
                }
            },
            "from": "management"
        },
        "sql_ans": [
            [
                2
            ]
        ],
        "cypher_query": "MATCH (m:management)\nWITH DISTINCT m.temporary_acting AS temporary_acting\nRETURN count(temporary_acting)",
        "cypher_ans": [
            [
                0
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "Which head's name has the substring 'Ha'? List the id and name.",
        "sql_query": "SELECT head_id ,  name FROM head WHERE name LIKE '%Ha%'",
        "parsed_sql": {
            "select": [
                {
                    "value": "head_id"
                },
                {
                    "value": "name"
                }
            ],
            "from": "head",
            "where": {
                "like": [
                    "name",
                    {
                        "literal": "%Ha%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                4
            ],
            [
                9
            ],
            [
                10
            ]
        ],
        "cypher_query": "MATCH (h:head)\nWHERE h.name =~'.*Ha.*'\nRETURN h.head_ID,h.name",
        "cypher_ans": [
            [
                4,
                "Dudley Hart"
            ],
            [
                9,
                "P\u00e1draig Harrington"
            ]
        ]
    }
][
    {
        "db_id": "department_management",
        "question": "List the name, born state and age of the heads of departments ordered by age.",
        "sql_query": "SELECT name ,  born_state ,  age FROM head ORDER BY age",
        "parsed_sql": {
            "select": [
                {
                    "value": "name"
                },
                {
                    "value": "born_state"
                },
                {
                    "value": "age"
                }
            ],
            "from": "head",
            "orderby": {
                "value": "age"
            }
        },
        "sql_ans": [
            [
                "P\u00e1draig Harrington"
            ],
            [
                "Stewart Cink"
            ],
            [
                "Dudley Hart"
            ],
            [
                "Jeff Maggert"
            ],
            [
                "Nick Faldo"
            ],
            [
                "Tiger Woods"
            ],
            [
                "Franklin Langham"
            ],
            [
                "Sergio Garc\u00eda"
            ],
            [
                "K. J. Choi"
            ],
            [
                "Billy Mayfair"
            ]
        ],
        "cypher_query": "MATCH (h:head)\nRETURN h.name,h.born_state,h.age\nORDER BY h.age",
        "cypher_ans": [
            [
                "P\u00e1draig Harrington",
                "Connecticut",
                43.0
            ],
            [
                "Stewart Cink",
                "Florida",
                50.0
            ],
            [
                "Dudley Hart",
                "California",
                52.0
            ],
            [
                "Jeff Maggert",
                "Delaware",
                53.0
            ],
            [
                "Nick Faldo",
                "California",
                56.0
            ],
            [
                "Tiger Woods",
                "Alabama",
                67.0
            ],
            [
                "Franklin Langham",
                "Connecticut",
                67.0
            ],
            [
                "Sergio Garc\u00eda",
                "California",
                68.0
            ],
            [
                "K. J. Choi",
                "Alabama",
                69.0
            ],
            [
                "Billy Mayfair",
                "California",
                69.0
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "List the creation year, name and budget of each department.",
        "sql_query": "SELECT creation ,  name ,  budget_in_billions FROM department",
        "parsed_sql": {
            "select": [
                {
                    "value": "creation"
                },
                {
                    "value": "name"
                },
                {
                    "value": "budget_in_billions"
                }
            ],
            "from": "department"
        },
        "sql_ans": [
            [
                "1789"
            ],
            [
                "1789"
            ],
            [
                "1947"
            ],
            [
                "1870"
            ],
            [
                "1849"
            ],
            [
                "1889"
            ],
            [
                "1903"
            ],
            [
                "1913"
            ],
            [
                "1953"
            ],
            [
                "1965"
            ],
            [
                "1966"
            ],
            [
                "1977"
            ],
            [
                "1979"
            ],
            [
                "1989"
            ],
            [
                "2002"
            ]
        ],
        "cypher_query": "MATCH (d:department)\nRETURN d.Creation,d.Name,d.Budget_in_Billions",
        "cypher_ans": [
            [
                "1789",
                "State",
                9.96
            ],
            [
                "1789",
                "Treasury",
                11.1
            ],
            [
                "1947",
                "Defense",
                439.3
            ],
            [
                "1870",
                "Justice",
                23.4
            ],
            [
                "1849",
                "Interior",
                10.7
            ],
            [
                "1889",
                "Agriculture",
                77.6
            ],
            [
                "1903",
                "Commerce",
                6.2
            ],
            [
                "1913",
                "Labor",
                59.7
            ],
            [
                "1953",
                "Health and Human Services",
                543.2
            ],
            [
                "1965",
                "Housing and Urban Development",
                46.2
            ],
            [
                "1966",
                "Transportation",
                58.0
            ],
            [
                "1977",
                "Energy",
                21.5
            ],
            [
                "1979",
                "Education",
                62.8
            ],
            [
                "1989",
                "Veterans Affairs",
                73.2
            ],
            [
                "2002",
                "Homeland Security",
                44.6
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What are the maximum and minimum budget of the departments?",
        "sql_query": "SELECT max(budget_in_billions) ,  min(budget_in_billions) FROM department",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "max": "budget_in_billions"
                    }
                },
                {
                    "value": {
                        "min": "budget_in_billions"
                    }
                }
            ],
            "from": "department"
        },
        "sql_ans": [
            [
                543.2
            ]
        ],
        "cypher_query": "MATCH (d:department)\nRETURN max(d.Budget_in_Billions),min(d.Budget_in_Billions)",
        "cypher_ans": [
            [
                543.2,
                6.2
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "How many acting statuses are there?",
        "sql_query": "SELECT count(DISTINCT temporary_acting) FROM management",
        "parsed_sql": {
            "select": {
                "value": {
                    "count": {
                        "distinct": {
                            "value": "temporary_acting"
                        }
                    }
                }
            },
            "from": "management"
        },
        "sql_ans": [
            [
                2
            ]
        ],
        "cypher_query": "MATCH (m:management)\nWITH DISTINCT m.temporary_acting AS temporary_acting\nRETURN count(temporary_acting)",
        "cypher_ans": [
            [
                0
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "Which head's name has the substring 'Ha'? List the id and name.",
        "sql_query": "SELECT head_id ,  name FROM head WHERE name LIKE '%Ha%'",
        "parsed_sql": {
            "select": [
                {
                    "value": "head_id"
                },
                {
                    "value": "name"
                }
            ],
            "from": "head",
            "where": {
                "like": [
                    "name",
                    {
                        "literal": "%Ha%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                4
            ],
            [
                9
            ],
            [
                10
            ]
        ],
        "cypher_query": "MATCH (h:head)\nWHERE h.name =~'.*Ha.*'\nRETURN h.head_ID,h.name",
        "cypher_ans": [
            [
                4,
                "Dudley Hart"
            ],
            [
                9,
                "P\u00e1draig Harrington"
            ]
        ]
    }
][
    {
        "db_id": "department_management",
        "question": "How many heads of the departments are older than 56 ?",
        "sql_query": "SELECT count(*) FROM head WHERE age  >  56",
        "parsed_sql": {
            "select": {
                "value": {
                    "count": "*"
                }
            },
            "from": "head",
            "where": {
                "gt": [
                    "age",
                    56
                ]
            }
        },
        "sql_ans": [
            [
                [
                    5
                ]
            ]
        ],
        "cypher_query": "MATCH (h:head)\nWHERE h.age>56\nRETURN count(*)",
        "cypher_ans": [
            [
                5
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "List the name, born state and age of the heads of departments ordered by age.",
        "sql_query": "SELECT name ,  born_state ,  age FROM head ORDER BY age",
        "parsed_sql": {
            "select": [
                {
                    "value": "name"
                },
                {
                    "value": "born_state"
                },
                {
                    "value": "age"
                }
            ],
            "from": "head",
            "orderby": {
                "value": "age"
            }
        },
        "sql_ans": [
            [
                [
                    "P\u00e1draig Harrington",
                    "Connecticut",
                    43.0
                ]
            ],
            [
                [
                    "Stewart Cink",
                    "Florida",
                    50.0
                ]
            ],
            [
                [
                    "Dudley Hart",
                    "California",
                    52.0
                ]
            ],
            [
                [
                    "Jeff Maggert",
                    "Delaware",
                    53.0
                ]
            ],
            [
                [
                    "Nick Faldo",
                    "California",
                    56.0
                ]
            ],
            [
                [
                    "Tiger Woods",
                    "Alabama",
                    67.0
                ]
            ],
            [
                [
                    "Franklin Langham",
                    "Connecticut",
                    67.0
                ]
            ],
            [
                [
                    "Sergio Garc\u00eda",
                    "California",
                    68.0
                ]
            ],
            [
                [
                    "K. J. Choi",
                    "Alabama",
                    69.0
                ]
            ],
            [
                [
                    "Billy Mayfair",
                    "California",
                    69.0
                ]
            ]
        ],
        "cypher_query": "MATCH (h:head)\nRETURN h.name,h.born_state,h.age\nORDER BY h.age",
        "cypher_ans": [
            [
                "P\u00e1draig Harrington",
                "Connecticut",
                43.0
            ],
            [
                "Stewart Cink",
                "Florida",
                50.0
            ],
            [
                "Dudley Hart",
                "California",
                52.0
            ],
            [
                "Jeff Maggert",
                "Delaware",
                53.0
            ],
            [
                "Nick Faldo",
                "California",
                56.0
            ],
            [
                "Tiger Woods",
                "Alabama",
                67.0
            ],
            [
                "Franklin Langham",
                "Connecticut",
                67.0
            ],
            [
                "Sergio Garc\u00eda",
                "California",
                68.0
            ],
            [
                "K. J. Choi",
                "Alabama",
                69.0
            ],
            [
                "Billy Mayfair",
                "California",
                69.0
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "List the creation year, name and budget of each department.",
        "sql_query": "SELECT creation ,  name ,  budget_in_billions FROM department",
        "parsed_sql": {
            "select": [
                {
                    "value": "creation"
                },
                {
                    "value": "name"
                },
                {
                    "value": "budget_in_billions"
                }
            ],
            "from": "department"
        },
        "sql_ans": [
            [
                [
                    "1789",
                    "State",
                    9.96
                ]
            ],
            [
                [
                    "1789",
                    "Treasury",
                    11.1
                ]
            ],
            [
                [
                    "1947",
                    "Defense",
                    439.3
                ]
            ],
            [
                [
                    "1870",
                    "Justice",
                    23.4
                ]
            ],
            [
                [
                    "1849",
                    "Interior",
                    10.7
                ]
            ],
            [
                [
                    "1889",
                    "Agriculture",
                    77.6
                ]
            ],
            [
                [
                    "1903",
                    "Commerce",
                    6.2
                ]
            ],
            [
                [
                    "1913",
                    "Labor",
                    59.7
                ]
            ],
            [
                [
                    "1953",
                    "Health and Human Services",
                    543.2
                ]
            ],
            [
                [
                    "1965",
                    "Housing and Urban Development",
                    46.2
                ]
            ],
            [
                [
                    "1966",
                    "Transportation",
                    58.0
                ]
            ],
            [
                [
                    "1977",
                    "Energy",
                    21.5
                ]
            ],
            [
                [
                    "1979",
                    "Education",
                    62.8
                ]
            ],
            [
                [
                    "1989",
                    "Veterans Affairs",
                    73.2
                ]
            ],
            [
                [
                    "2002",
                    "Homeland Security",
                    44.6
                ]
            ]
        ],
        "cypher_query": "MATCH (d:department)\nRETURN d.Creation,d.Name,d.Budget_in_Billions",
        "cypher_ans": [
            [
                "1789",
                "State",
                9.96
            ],
            [
                "1789",
                "Treasury",
                11.1
            ],
            [
                "1947",
                "Defense",
                439.3
            ],
            [
                "1870",
                "Justice",
                23.4
            ],
            [
                "1849",
                "Interior",
                10.7
            ],
            [
                "1889",
                "Agriculture",
                77.6
            ],
            [
                "1903",
                "Commerce",
                6.2
            ],
            [
                "1913",
                "Labor",
                59.7
            ],
            [
                "1953",
                "Health and Human Services",
                543.2
            ],
            [
                "1965",
                "Housing and Urban Development",
                46.2
            ],
            [
                "1966",
                "Transportation",
                58.0
            ],
            [
                "1977",
                "Energy",
                21.5
            ],
            [
                "1979",
                "Education",
                62.8
            ],
            [
                "1989",
                "Veterans Affairs",
                73.2
            ],
            [
                "2002",
                "Homeland Security",
                44.6
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What are the maximum and minimum budget of the departments?",
        "sql_query": "SELECT max(budget_in_billions) ,  min(budget_in_billions) FROM department",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "max": "budget_in_billions"
                    }
                },
                {
                    "value": {
                        "min": "budget_in_billions"
                    }
                }
            ],
            "from": "department"
        },
        "sql_ans": [
            [
                [
                    543.2,
                    6.2
                ]
            ]
        ],
        "cypher_query": "MATCH (d:department)\nRETURN max(d.Budget_in_Billions),min(d.Budget_in_Billions)",
        "cypher_ans": [
            [
                543.2,
                6.2
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What is the average number of employees of the departments whose rank is between 10 and 15?",
        "sql_query": "SELECT avg(num_employees) FROM department WHERE ranking BETWEEN 10 AND 15",
        "parsed_sql": {
            "select": {
                "value": {
                    "avg": "num_employees"
                }
            },
            "from": "department",
            "where": {
                "between": [
                    "ranking",
                    10,
                    15
                ]
            }
        },
        "sql_ans": [
            [
                [
                    105468.16666666667
                ]
            ]
        ],
        "cypher_query": "MATCH (d:department)\nWHERE 10<=d.Ranking<=15\nRETURN avg(d.Num_Employees)",
        "cypher_ans": [
            [
                105468.16666666667
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What are the names of the heads who are born outside the California state?",
        "sql_query": "SELECT name FROM head WHERE born_state != 'California'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "head",
            "where": {
                "neq": [
                    "born_state",
                    {
                        "literal": "California"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                [
                    "Tiger Woods"
                ]
            ],
            [
                [
                    "K. J. Choi"
                ]
            ],
            [
                [
                    "Jeff Maggert"
                ]
            ],
            [
                [
                    "Stewart Cink"
                ]
            ],
            [
                [
                    "P\u00e1draig Harrington"
                ]
            ],
            [
                [
                    "Franklin Langham"
                ]
            ]
        ],
        "cypher_query": "MATCH (h:head)\nWHERE h.born_state<>'California'\nRETURN h.name",
        "cypher_ans": [
            [
                "Tiger Woods"
            ],
            [
                "K. J. Choi"
            ],
            [
                "Jeff Maggert"
            ],
            [
                "Stewart Cink"
            ],
            [
                "P\u00e1draig Harrington"
            ],
            [
                "Franklin Langham"
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What are the names of the states where at least 3 heads were born?",
        "sql_query": "SELECT born_state FROM head GROUP BY born_state HAVING count(*)  >=  3",
        "parsed_sql": {
            "select": {
                "value": "born_state"
            },
            "from": "head",
            "groupby": {
                "value": "born_state"
            },
            "having": {
                "gte": [
                    {
                        "count": "*"
                    },
                    3
                ]
            }
        },
        "sql_ans": [
            [
                [
                    "California"
                ]
            ]
        ],
        "cypher_query": "MATCH (h:head)\nWITH count(*) AS count, h.born_state AS born_state\nWHERE count >=3\nRETURN born_state",
        "cypher_ans": [
            [
                "California"
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "In which year were most departments established?",
        "sql_query": "SELECT creation FROM department GROUP BY creation ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "creation"
            },
            "from": "department",
            "groupby": {
                "value": "creation"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                [
                    "1789"
                ]
            ]
        ],
        "cypher_query": "MATCH (d:department)\nWITH count(d.Creation) AS count, d.Creation AS Creation\nRETURN Creation\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "1789"
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "How many acting statuses are there?",
        "sql_query": "SELECT count(DISTINCT temporary_acting) FROM management",
        "parsed_sql": {
            "select": {
                "value": {
                    "count": {
                        "distinct": {
                            "value": "temporary_acting"
                        }
                    }
                }
            },
            "from": "management"
        },
        "sql_ans": [
            [
                [
                    2
                ]
            ]
        ],
        "cypher_query": "MATCH (m:management)\nWITH DISTINCT m.temporary_acting AS temporary_acting\nRETURN count(temporary_acting)",
        "cypher_ans": [
            [
                0
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "Which head's name has the substring 'Ha'? List the id and name.",
        "sql_query": "SELECT head_id ,  name FROM head WHERE name LIKE '%Ha%'",
        "parsed_sql": {
            "select": [
                {
                    "value": "head_id"
                },
                {
                    "value": "name"
                }
            ],
            "from": "head",
            "where": {
                "like": [
                    "name",
                    {
                        "literal": "%Ha%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                [
                    4,
                    "Dudley Hart"
                ]
            ],
            [
                [
                    9,
                    "P\u00e1draig Harrington"
                ]
            ],
            [
                [
                    10,
                    "Franklin Langham"
                ]
            ]
        ],
        "cypher_query": "MATCH (h:head)\nWHERE h.name =~'.*Ha.*'\nRETURN h.head_ID,h.name",
        "cypher_ans": [
            [
                4,
                "Dudley Hart"
            ],
            [
                9,
                "P\u00e1draig Harrington"
            ]
        ]
    }
][
    {
        "db_id": "department_management",
        "question": "How many acting statuses are there?",
        "sql_query": "SELECT count(DISTINCT temporary_acting) FROM management",
        "parsed_sql": {
            "select": {
                "value": {
                    "count": {
                        "distinct": {
                            "value": "temporary_acting"
                        }
                    }
                }
            },
            "from": "management"
        },
        "sql_ans": [
            [
                2
            ]
        ],
        "cypher_query": "MATCH (m:management)\nWITH DISTINCT m.temporary_acting AS temporary_acting\nRETURN count(temporary_acting)",
        "cypher_ans": [
            [
                0
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "Which head's name has the substring 'Ha'? List the id and name.",
        "sql_query": "SELECT head_id ,  name FROM head WHERE name LIKE '%Ha%'",
        "parsed_sql": {
            "select": [
                {
                    "value": "head_id"
                },
                {
                    "value": "name"
                }
            ],
            "from": "head",
            "where": {
                "like": [
                    "name",
                    {
                        "literal": "%Ha%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                4,
                "Dudley Hart"
            ],
            [
                9,
                "P\u00e1draig Harrington"
            ],
            [
                10,
                "Franklin Langham"
            ]
        ],
        "cypher_query": "MATCH (h:head)\nWHERE h.name =~'.*Ha.*'\nRETURN h.head_ID,h.name",
        "cypher_ans": [
            [
                4,
                "Dudley Hart"
            ],
            [
                9,
                "P\u00e1draig Harrington"
            ]
        ]
    }
][
    {
        "db_id": "department_management",
        "question": "How many acting statuses are there?",
        "sql_query": "SELECT count(DISTINCT temporary_acting) FROM management",
        "parsed_sql": {
            "select": {
                "value": {
                    "count": {
                        "distinct": {
                            "value": "temporary_acting"
                        }
                    }
                }
            },
            "from": "management"
        },
        "sql_ans": [
            [
                2
            ]
        ],
        "cypher_query": "MATCH (m:management)\nWITH DISTINCT m.temporary_acting AS temporary_acting\nRETURN count(temporary_acting)",
        "cypher_ans": [
            [
                0
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "Which head's name has the substring 'Ha'? List the id and name.",
        "sql_query": "SELECT head_id ,  name FROM head WHERE name LIKE '%Ha%'",
        "parsed_sql": {
            "select": [
                {
                    "value": "head_id"
                },
                {
                    "value": "name"
                }
            ],
            "from": "head",
            "where": {
                "like": [
                    "name",
                    {
                        "literal": "%Ha%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                4,
                "Dudley Hart"
            ],
            [
                9,
                "P\u00e1draig Harrington"
            ],
            [
                10,
                "Franklin Langham"
            ]
        ],
        "cypher_query": "MATCH (h:head)\nWHERE h.name =~'.*Ha.*'\nRETURN h.head_ID,h.name",
        "cypher_ans": [
            [
                4,
                "Dudley Hart"
            ],
            [
                9,
                "P\u00e1draig Harrington"
            ]
        ]
    }
][
    {
        "db_id": "department_management",
        "question": "How many acting statuses are there?",
        "sql_query": "SELECT count(DISTINCT temporary_acting) FROM management",
        "parsed_sql": {
            "select": {
                "value": {
                    "count": {
                        "distinct": {
                            "value": "temporary_acting"
                        }
                    }
                }
            },
            "from": "management"
        },
        "sql_ans": [
            [
                2
            ]
        ],
        "cypher_query": "MATCH (m:management)\nWITH DISTINCT m.temporary_acting AS temporary_acting\nRETURN count(temporary_acting)",
        "cypher_ans": [
            [
                0
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "Which head's name has the substring 'Ha'? List the id and name.",
        "sql_query": "SELECT head_id ,  name FROM head WHERE name LIKE '%Ha%'",
        "parsed_sql": {
            "select": [
                {
                    "value": "head_id"
                },
                {
                    "value": "name"
                }
            ],
            "from": "head",
            "where": {
                "like": [
                    "name",
                    {
                        "literal": "%Ha%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                4,
                "Dudley Hart"
            ],
            [
                9,
                "P\u00e1draig Harrington"
            ],
            [
                10,
                "Franklin Langham"
            ]
        ],
        "cypher_query": "MATCH (h:head)\nWHERE h.name =~'.*Ha.*'\nRETURN h.head_ID,h.name",
        "cypher_ans": [
            [
                4,
                "Dudley Hart"
            ],
            [
                9,
                "P\u00e1draig Harrington"
            ]
        ]
    }
][][][][][][][][][][][][][][][][][][][][][][][][][][][][][
    {
        "db_id": "department_management",
        "question": "Which head's name has the substring 'Ha'? List the id and name.",
        "sql_query": "SELECT head_id ,  name FROM head WHERE name LIKE '%Ha%'",
        "parsed_sql": {
            "select": [
                {
                    "value": "head_id"
                },
                {
                    "value": "name"
                }
            ],
            "from": "head",
            "where": {
                "like": [
                    "name",
                    {
                        "literal": "%Ha%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                4,
                "Dudley Hart"
            ],
            [
                9,
                "P\u00e1draig Harrington"
            ],
            [
                10,
                "Franklin Langham"
            ]
        ],
        "cypher_query": "MATCH (h:head)\nWHERE h.name =~'.*Ha.*'\nRETURN h.head_ID,h.name",
        "cypher_ans": [
            [
                4,
                "Dudley Hart"
            ],
            [
                9,
                "P\u00e1draig Harrington"
            ]
        ]
    }
][
    {
        "db_id": "department_management",
        "question": "Which head's name has the substring 'Ha'? List the id and name.",
        "sql_query": "SELECT head_id ,  name FROM head WHERE name LIKE '%Ha%'",
        "parsed_sql": {
            "select": [
                {
                    "value": "head_id"
                },
                {
                    "value": "name"
                }
            ],
            "from": "head",
            "where": {
                "like": [
                    "name",
                    {
                        "literal": "%Ha%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                4,
                "Dudley Hart"
            ],
            [
                9,
                "P\u00e1draig Harrington"
            ],
            [
                10,
                "Franklin Langham"
            ]
        ],
        "cypher_query": "MATCH (h:head)\nWHERE h.name =~'.*Ha.*'\nRETURN h.head_ID,h.name",
        "cypher_ans": [
            [
                4,
                "Dudley Hart"
            ],
            [
                9,
                "P\u00e1draig Harrington"
            ]
        ]
    }
][][][][][][][][][][][][][][][][][][][][][
    {
        "db_id": "department_management",
        "question": "Which head's name has the substring 'Ha'? List the id and name.",
        "sql_query": "SELECT head_id ,  name FROM head WHERE name LIKE '%Ha%'",
        "parsed_sql": {
            "select": [
                {
                    "value": "head_id"
                },
                {
                    "value": "name"
                }
            ],
            "from": "head",
            "where": {
                "like": [
                    "name",
                    {
                        "literal": "%Ha%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                4,
                "Dudley Hart"
            ],
            [
                9,
                "P\u00e1draig Harrington"
            ],
            [
                10,
                "Franklin Langham"
            ]
        ],
        "cypher_query": "MATCH (h:head)\nWHERE h.name =~'.*Ha.*'\nRETURN h.head_ID,h.name",
        "cypher_ans": [
            [
                4,
                "Dudley Hart"
            ],
            [
                9,
                "P\u00e1draig Harrington"
            ]
        ]
    }
][][][][][][][][][][][][][][][][][
    {
        "db_id": "department_management",
        "question": "How many departments are led by heads who are not mentioned?",
        "sql_query": "SELECT count(*) FROM department WHERE department_id NOT IN (SELECT department_id FROM management);",
        "parsed_sql": {
            "select": {
                "value": {
                    "count": "*"
                }
            },
            "from": "department",
            "where": {
                "nin": [
                    "department_id",
                    {
                        "select": {
                            "value": "department_id"
                        },
                        "from": "management"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                11
            ]
        ],
        "cypher_query": "MATCH (d:department)\nRETURN count(*)",
        "cypher_ans": [
            [
                15
            ]
        ]
    }
][
    {
        "db_id": "department_management",
        "question": "How many departments are led by heads who are not mentioned?",
        "sql_query": "SELECT count(*) FROM department WHERE department_id NOT IN (SELECT department_id FROM management);",
        "parsed_sql": {
            "select": {
                "value": {
                    "count": "*"
                }
            },
            "from": "department",
            "where": {
                "nin": [
                    "department_id",
                    {
                        "select": {
                            "value": "department_id"
                        },
                        "from": "management"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                11
            ]
        ],
        "cypher_query": "MATCH (d:department)\nRETURN count(*)",
        "cypher_ans": [
            [
                15
            ]
        ]
    }
][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][
    {
        "db_id": "department_management",
        "question": "How many departments are led by heads who are not mentioned?",
        "sql_query": "SELECT count(*) FROM department WHERE department_id NOT IN (SELECT department_id FROM management);",
        "parsed_sql": {
            "select": {
                "value": {
                    "count": "*"
                }
            },
            "from": "department",
            "where": {
                "nin": [
                    "department_id",
                    {
                        "select": {
                            "value": "department_id"
                        },
                        "from": "management"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                11
            ]
        ],
        "cypher_query": "MATCH (d:department)\nWHERE NOT (d:department)\nRETURN count(*)",
        "cypher_ans": [
            [
                0
            ]
        ]
    }
][][][][][][][][][][][][][][
    {
        "db_id": "department_management",
        "question": "Which head's name has the substring 'Ha'? List the id and name.",
        "sql_query": "SELECT head_id ,  name FROM head WHERE name LIKE '%Ha%'",
        "parsed_sql": {
            "select": [
                {
                    "value": "head_id"
                },
                {
                    "value": "name"
                }
            ],
            "from": "head",
            "where": {
                "like": [
                    "name",
                    {
                        "literal": "%Ha%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                4,
                "Dudley Hart"
            ],
            [
                9,
                "P\u00e1draig Harrington"
            ],
            [
                10,
                "Franklin Langham"
            ]
        ],
        "cypher_query": "MATCH (h:head)\nWHERE h.name =~'.*Ha.*'\nRETURN h.head_ID,h.name",
        "cypher_ans": [
            [
                4,
                "Dudley Hart"
            ],
            [
                9,
                "P\u00e1draig Harrington"
            ]
        ]
    }
][
    {
        "db_id": "department_management",
        "question": "Which head's name has the substring 'Ha'? List the id and name.",
        "sql_query": "SELECT head_id ,  name FROM head WHERE name LIKE '%Ha%'",
        "parsed_sql": {
            "select": [
                {
                    "value": "head_id"
                },
                {
                    "value": "name"
                }
            ],
            "from": "head",
            "where": {
                "like": [
                    "name",
                    {
                        "literal": "%Ha%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                4,
                "Dudley Hart"
            ],
            [
                9,
                "P\u00e1draig Harrington"
            ],
            [
                10,
                "Franklin Langham"
            ]
        ],
        "cypher_query": "MATCH (h:head)\nWHERE h.name =~'.*Ha.*'\nRETURN h.head_ID,h.name",
        "cypher_ans": [
            [
                4,
                "Dudley Hart"
            ],
            [
                9,
                "P\u00e1draig Harrington"
            ]
        ]
    }
][
    {
        "db_id": "department_management",
        "question": "Which head's name has the substring 'Ha'? List the id and name.",
        "sql_query": "SELECT head_id ,  name FROM head WHERE name LIKE '%Ha%'",
        "parsed_sql": {
            "select": [
                {
                    "value": "head_id"
                },
                {
                    "value": "name"
                }
            ],
            "from": "head",
            "where": {
                "like": [
                    "name",
                    {
                        "literal": "%Ha%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                4,
                "Dudley Hart"
            ],
            [
                9,
                "P\u00e1draig Harrington"
            ],
            [
                10,
                "Franklin Langham"
            ]
        ],
        "cypher_query": "MATCH (h:head)\nWHERE h.name =~'.*Ha|ha.*'\nRETURN h.head_ID,h.name",
        "cypher_ans": []
    }
][
    {
        "db_id": "department_management",
        "question": "Which head's name has the substring 'Ha'? List the id and name.",
        "sql_query": "SELECT head_id ,  name FROM head WHERE name LIKE '%Ha%'",
        "parsed_sql": {
            "select": [
                {
                    "value": "head_id"
                },
                {
                    "value": "name"
                }
            ],
            "from": "head",
            "where": {
                "like": [
                    "name",
                    {
                        "literal": "%Ha%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                4,
                "Dudley Hart"
            ],
            [
                9,
                "P\u00e1draig Harrington"
            ],
            [
                10,
                "Franklin Langham"
            ]
        ],
        "cypher_query": "MATCH (h:head)\nWHERE h.name =~'.*[Ha|ha].*'\nRETURN h.head_ID,h.name",
        "cypher_ans": [
            [
                2,
                "Sergio Garc\u00eda"
            ],
            [
                3,
                "K. J. Choi"
            ],
            [
                4,
                "Dudley Hart"
            ],
            [
                5,
                "Jeff Maggert"
            ],
            [
                6,
                "Billy Mayfair"
            ],
            [
                7,
                "Stewart Cink"
            ],
            [
                8,
                "Nick Faldo"
            ],
            [
                9,
                "P\u00e1draig Harrington"
            ],
            [
                10,
                "Franklin Langham"
            ]
        ]
    }
][][][
    {
        "db_id": "hospital_1",
        "question": "What are the highest cost, lowest cost and average cost of procedures?",
        "sql_query": "SELECT MAX(cost) ,  MIN(cost) ,  AVG(cost) FROM procedures",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "max": "cost"
                    }
                },
                {
                    "value": {
                        "min": "cost"
                    }
                },
                {
                    "value": {
                        "avg": "cost"
                    }
                }
            ],
            "from": "procedures"
        },
        "sql_ans": [
            [
                10000.0,
                25.0,
                4324.857142857143
            ]
        ],
        "cypher_query": "MATCH (p:procedures)\nRETURN max(p.Cost),min(p.Cost),avg(p.Cost)",
        "cypher_ans": [
            [
                null,
                null,
                null
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Tell me the highest, lowest, and average cost of procedures.",
        "sql_query": "SELECT MAX(cost) ,  MIN(cost) ,  AVG(cost) FROM procedures",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "max": "cost"
                    }
                },
                {
                    "value": {
                        "min": "cost"
                    }
                },
                {
                    "value": {
                        "avg": "cost"
                    }
                }
            ],
            "from": "procedures"
        },
        "sql_ans": [
            [
                10000.0,
                25.0,
                4324.857142857143
            ]
        ],
        "cypher_query": "MATCH (p:procedures)\nRETURN max(p.Cost),min(p.Cost),avg(p.Cost)",
        "cypher_ans": [
            [
                null,
                null,
                null
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many appointments are there?",
        "sql_query": "SELECT count(*) FROM appointment",
        "parsed_sql": {
            "select": {
                "value": {
                    "count": "*"
                }
            },
            "from": "appointment"
        },
        "sql_ans": [
            [
                9
            ]
        ],
        "cypher_query": "MATCH (a:appointment)\nRETURN count(*)",
        "cypher_ans": [
            [
                0
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Count how many appointments have been made in total.",
        "sql_query": "SELECT count(*) FROM appointment",
        "parsed_sql": {
            "select": {
                "value": {
                    "count": "*"
                }
            },
            "from": "appointment"
        },
        "sql_ans": [
            [
                9
            ]
        ],
        "cypher_query": "MATCH (a:appointment)\nRETURN count(*)",
        "cypher_ans": [
            [
                0
            ]
        ]
    }
][][][][][
    {
        "db_id": "hospital_1",
        "question": "What are the highest cost, lowest cost and average cost of procedures?",
        "sql_query": "SELECT MAX(cost) ,  MIN(cost) ,  AVG(cost) FROM procedures",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "max": "cost"
                    }
                },
                {
                    "value": {
                        "min": "cost"
                    }
                },
                {
                    "value": {
                        "avg": "cost"
                    }
                }
            ],
            "from": "procedures"
        },
        "sql_ans": [
            [
                10000.0,
                25.0,
                4324.857142857143
            ]
        ],
        "cypher_query": "MATCH (p:procedures)\nRETURN max(p.Cost),min(p.Cost),avg(p.Cost)",
        "cypher_ans": [
            [
                null,
                null,
                null
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Tell me the highest, lowest, and average cost of procedures.",
        "sql_query": "SELECT MAX(cost) ,  MIN(cost) ,  AVG(cost) FROM procedures",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "max": "cost"
                    }
                },
                {
                    "value": {
                        "min": "cost"
                    }
                },
                {
                    "value": {
                        "avg": "cost"
                    }
                }
            ],
            "from": "procedures"
        },
        "sql_ans": [
            [
                10000.0,
                25.0,
                4324.857142857143
            ]
        ],
        "cypher_query": "MATCH (p:procedures)\nRETURN max(p.Cost),min(p.Cost),avg(p.Cost)",
        "cypher_ans": [
            [
                null,
                null,
                null
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many appointments are there?",
        "sql_query": "SELECT count(*) FROM appointment",
        "parsed_sql": {
            "select": {
                "value": {
                    "count": "*"
                }
            },
            "from": "appointment"
        },
        "sql_ans": [
            [
                9
            ]
        ],
        "cypher_query": "MATCH (a:appointment)\nRETURN count(*)",
        "cypher_ans": [
            [
                0
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Count how many appointments have been made in total.",
        "sql_query": "SELECT count(*) FROM appointment",
        "parsed_sql": {
            "select": {
                "value": {
                    "count": "*"
                }
            },
            "from": "appointment"
        },
        "sql_ans": [
            [
                9
            ]
        ],
        "cypher_query": "MATCH (a:appointment)\nRETURN count(*)",
        "cypher_ans": [
            [
                0
            ]
        ]
    }
][
    {
        "db_id": "department_management",
        "question": "How many heads of the departments are older than 56 ?",
        "sql_query": "SELECT count(*) FROM head WHERE age  >  56",
        "parsed_sql": {
            "select": {
                "value": {
                    "count": "*"
                }
            },
            "from": "head",
            "where": {
                "gt": [
                    "age",
                    56
                ]
            }
        },
        "sql_ans": [
            [
                5
            ]
        ],
        "cypher_query": "MATCH (h:head)\nWHERE h.age>56\nRETURN count(*)",
        "cypher_ans": [
            [
                0
            ]
        ]
    }
][
    {
        "db_id": "department_management",
        "question": "How many heads of the departments are older than 56 ?",
        "sql_query": "SELECT count(*) FROM head WHERE age  >  56",
        "parsed_sql": {
            "select": {
                "value": {
                    "count": "*"
                }
            },
            "from": "head",
            "where": {
                "gt": [
                    "age",
                    56
                ]
            }
        },
        "sql_ans": [
            [
                5
            ]
        ],
        "cypher_query": "MATCH (h:head)\nWHERE h.age>56\nRETURN count(*)",
        "cypher_ans": [
            [
                0
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "List the name, born state and age of the heads of departments ordered by age.",
        "sql_query": "SELECT name ,  born_state ,  age FROM head ORDER BY age",
        "parsed_sql": {
            "select": [
                {
                    "value": "name"
                },
                {
                    "value": "born_state"
                },
                {
                    "value": "age"
                }
            ],
            "from": "head",
            "orderby": {
                "value": "age"
            }
        },
        "sql_ans": [
            [
                "P\u00e1draig Harrington",
                "Connecticut",
                43.0
            ],
            [
                "Stewart Cink",
                "Florida",
                50.0
            ],
            [
                "Dudley Hart",
                "California",
                52.0
            ],
            [
                "Jeff Maggert",
                "Delaware",
                53.0
            ],
            [
                "Nick Faldo",
                "California",
                56.0
            ],
            [
                "Tiger Woods",
                "Alabama",
                67.0
            ],
            [
                "Franklin Langham",
                "Connecticut",
                67.0
            ],
            [
                "Sergio Garc\u00eda",
                "California",
                68.0
            ],
            [
                "K. J. Choi",
                "Alabama",
                69.0
            ],
            [
                "Billy Mayfair",
                "California",
                69.0
            ]
        ],
        "cypher_query": "MATCH (h:head)\nRETURN h.name,h.born_state,h.age\nORDER BY h.age",
        "cypher_ans": []
    },
    {
        "db_id": "department_management",
        "question": "List the creation year, name and budget of each department.",
        "sql_query": "SELECT creation ,  name ,  budget_in_billions FROM department",
        "parsed_sql": {
            "select": [
                {
                    "value": "creation"
                },
                {
                    "value": "name"
                },
                {
                    "value": "budget_in_billions"
                }
            ],
            "from": "department"
        },
        "sql_ans": [
            [
                "1789",
                "State",
                9.96
            ],
            [
                "1789",
                "Treasury",
                11.1
            ],
            [
                "1947",
                "Defense",
                439.3
            ],
            [
                "1870",
                "Justice",
                23.4
            ],
            [
                "1849",
                "Interior",
                10.7
            ],
            [
                "1889",
                "Agriculture",
                77.6
            ],
            [
                "1903",
                "Commerce",
                6.2
            ],
            [
                "1913",
                "Labor",
                59.7
            ],
            [
                "1953",
                "Health and Human Services",
                543.2
            ],
            [
                "1965",
                "Housing and Urban Development",
                46.2
            ],
            [
                "1966",
                "Transportation",
                58.0
            ],
            [
                "1977",
                "Energy",
                21.5
            ],
            [
                "1979",
                "Education",
                62.8
            ],
            [
                "1989",
                "Veterans Affairs",
                73.2
            ],
            [
                "2002",
                "Homeland Security",
                44.6
            ]
        ],
        "cypher_query": "MATCH (d:department)\nRETURN d.Creation,d.Name,d.Budget_in_Billions",
        "cypher_ans": []
    },
    {
        "db_id": "department_management",
        "question": "What are the maximum and minimum budget of the departments?",
        "sql_query": "SELECT max(budget_in_billions) ,  min(budget_in_billions) FROM department",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "max": "budget_in_billions"
                    }
                },
                {
                    "value": {
                        "min": "budget_in_billions"
                    }
                }
            ],
            "from": "department"
        },
        "sql_ans": [
            [
                543.2,
                6.2
            ]
        ],
        "cypher_query": "MATCH (d:department)\nRETURN max(d.Budget_in_Billions),min(d.Budget_in_Billions)",
        "cypher_ans": [
            [
                null,
                null
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What is the average number of employees of the departments whose rank is between 10 and 15?",
        "sql_query": "SELECT avg(num_employees) FROM department WHERE ranking BETWEEN 10 AND 15",
        "parsed_sql": {
            "select": {
                "value": {
                    "avg": "num_employees"
                }
            },
            "from": "department",
            "where": {
                "between": [
                    "ranking",
                    10,
                    15
                ]
            }
        },
        "sql_ans": [
            [
                105468.16666666667
            ]
        ],
        "cypher_query": "MATCH (d:department)\nWHERE 10<=d.Ranking<=15\nRETURN avg(d.Num_Employees)",
        "cypher_ans": [
            [
                null
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What are the names of the heads who are born outside the California state?",
        "sql_query": "SELECT name FROM head WHERE born_state != 'California'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "head",
            "where": {
                "neq": [
                    "born_state",
                    {
                        "literal": "California"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Tiger Woods"
            ],
            [
                "K. J. Choi"
            ],
            [
                "Jeff Maggert"
            ],
            [
                "Stewart Cink"
            ],
            [
                "P\u00e1draig Harrington"
            ],
            [
                "Franklin Langham"
            ]
        ],
        "cypher_query": "MATCH (h:head)\nWHERE h.born_state<>'California'\nRETURN h.name",
        "cypher_ans": []
    },
    {
        "db_id": "department_management",
        "question": "What are the distinct creation years of the departments managed by a secretary born in state 'Alabama'?",
        "sql_query": "SELECT DISTINCT T1.creation FROM department AS T1 JOIN management AS T2 ON T1.department_id  =  T2.department_id JOIN head AS T3 ON T2.head_id  =  T3.head_id WHERE T3.born_state  =  'Alabama'",
        "parsed_sql": {
            "select": {
                "value": {
                    "distinct": {
                        "value": "T1.creation"
                    }
                }
            },
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "management",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.department_id",
                            "T2.department_id"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "head",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T2.head_id",
                            "T3.head_id"
                        ]
                    }
                }
            ],
            "where": {
                "eq": [
                    "T3.born_state",
                    {
                        "literal": "Alabama"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "1903"
            ]
        ],
        "cypher_query": "MATCH (T1:department)-[T2:management]-(T3:head)\nWHERE T3.born_state='Alabama'\nRETURN DISTINCT T1.Creation",
        "cypher_ans": []
    },
    {
        "db_id": "department_management",
        "question": "What are the names of the states where at least 3 heads were born?",
        "sql_query": "SELECT born_state FROM head GROUP BY born_state HAVING count(*)  >=  3",
        "parsed_sql": {
            "select": {
                "value": "born_state"
            },
            "from": "head",
            "groupby": {
                "value": "born_state"
            },
            "having": {
                "gte": [
                    {
                        "count": "*"
                    },
                    3
                ]
            }
        },
        "sql_ans": [
            [
                "California"
            ]
        ],
        "cypher_query": "MATCH (h:head)\nWITH h.born_state AS born_state, count(*) AS count\nWHERE count >=3\nRETURN born_state",
        "cypher_ans": []
    },
    {
        "db_id": "department_management",
        "question": "In which year were most departments established?",
        "sql_query": "SELECT creation FROM department GROUP BY creation ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "creation"
            },
            "from": "department",
            "groupby": {
                "value": "creation"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "1789"
            ]
        ],
        "cypher_query": "MATCH (d:department)\nWITH count(d.Creation) AS count, d.Creation AS Creation\nRETURN Creation\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "department_management",
        "question": "Show the name and number of employees for the departments managed by heads whose temporary acting value is 'Yes'?",
        "sql_query": "SELECT T1.name ,  T1.num_employees FROM department AS T1 JOIN management AS T2 ON T1.department_id  =  T2.department_id WHERE T2.temporary_acting  =  'Yes'",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.name"
                },
                {
                    "value": "T1.num_employees"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "management",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.department_id",
                            "T2.department_id"
                        ]
                    }
                }
            ],
            "where": {
                "eq": [
                    "T2.temporary_acting",
                    {
                        "literal": "Yes"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Treasury",
                115897.0
            ],
            [
                "Homeland Security",
                208000.0
            ],
            [
                "Treasury",
                115897.0
            ]
        ],
        "cypher_query": "MATCH (T1:department)-[T2:management]-()\nWHERE T2.temporary_acting='Yes'\nRETURN T1.Name,T1.Num_Employees",
        "cypher_ans": []
    },
    {
        "db_id": "department_management",
        "question": "How many acting statuses are there?",
        "sql_query": "SELECT count(DISTINCT temporary_acting) FROM management",
        "parsed_sql": {
            "select": {
                "value": {
                    "count": {
                        "distinct": {
                            "value": "temporary_acting"
                        }
                    }
                }
            },
            "from": "management"
        },
        "sql_ans": [
            [
                2
            ]
        ],
        "cypher_query": "MATCH ()-[m:management]-()\nWITH DISTINCT m.temporary_acting AS temporary_acting\nRETURN count(temporary_acting)",
        "cypher_ans": [
            [
                0
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "How many departments are led by heads who are not mentioned?",
        "sql_query": "SELECT count(*) FROM department WHERE department_id NOT IN (SELECT department_id FROM management);",
        "parsed_sql": {
            "select": {
                "value": {
                    "count": "*"
                }
            },
            "from": "department",
            "where": {
                "nin": [
                    "department_id",
                    {
                        "select": {
                            "value": "department_id"
                        },
                        "from": "management"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                11
            ]
        ],
        "cypher_query": "MATCH (d:department)\nWHERE NOT (d:department)-[:management]-()\nRETURN count(*)",
        "cypher_ans": [
            [
                0
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What are the distinct ages of the heads who are acting?",
        "sql_query": "SELECT DISTINCT T1.age FROM management AS T2 JOIN head AS T1 ON T1.head_id  =  T2.head_id WHERE T2.temporary_acting  =  'Yes'",
        "parsed_sql": {
            "select": {
                "value": {
                    "distinct": {
                        "value": "T1.age"
                    }
                }
            },
            "from": [
                {
                    "value": "management",
                    "name": "T2",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T1",
                        "value": "head",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head_id",
                            "T2.head_id"
                        ]
                    }
                }
            ],
            "where": {
                "eq": [
                    "T2.temporary_acting",
                    {
                        "literal": "Yes"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                53.0
            ],
            [
                52.0
            ],
            [
                69.0
            ]
        ],
        "cypher_query": "MATCH ()-[T2:management]-(T1:head)\nWHERE T2.temporary_acting='Yes'\nRETURN DISTINCT T1.age",
        "cypher_ans": []
    },
    {
        "db_id": "department_management",
        "question": "Which department has more than 1 head at a time? List the id, name and the number of heads.",
        "sql_query": "SELECT T1.department_id ,  T1.name ,  count(*) FROM management AS T2 JOIN department AS T1 ON T1.department_id  =  T2.department_id GROUP BY T1.department_id HAVING count(*)  >  1",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.department_id"
                },
                {
                    "value": "T1.name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "management",
                    "name": "T2",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T1",
                        "value": "department",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.department_id",
                            "T2.department_id"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.department_id"
            },
            "having": {
                "gt": [
                    {
                        "count": "*"
                    },
                    1
                ]
            }
        },
        "sql_ans": [
            [
                2,
                "Treasury",
                2
            ]
        ],
        "cypher_query": "MATCH ()-[T2:management]-(T1:department)\nWITH T1.Department_ID AS Department_ID, T1.Name AS Name, count(*) AS count\nWHERE count >1\nRETURN Department_ID,Name,count",
        "cypher_ans": []
    },
    {
        "db_id": "department_management",
        "question": "Which head's name has the substring 'Ha'? List the id and name.",
        "sql_query": "SELECT head_id ,  name FROM head WHERE name LIKE '%Ha%'",
        "parsed_sql": {
            "select": [
                {
                    "value": "head_id"
                },
                {
                    "value": "name"
                }
            ],
            "from": "head",
            "where": {
                "like": [
                    "name",
                    {
                        "literal": "%Ha%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                4,
                "Dudley Hart"
            ],
            [
                9,
                "P\u00e1draig Harrington"
            ],
            [
                10,
                "Franklin Langham"
            ]
        ],
        "cypher_query": "MATCH (h:head)\nWHERE h.name =~'.*[H|h]a.*'\nRETURN h.head_ID,h.name",
        "cypher_ans": []
    }
][
    {
        "db_id": "hospital_1",
        "question": "What are the highest cost, lowest cost and average cost of procedures?",
        "sql_query": "SELECT MAX(cost) ,  MIN(cost) ,  AVG(cost) FROM procedures",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "max": "cost"
                    }
                },
                {
                    "value": {
                        "min": "cost"
                    }
                },
                {
                    "value": {
                        "avg": "cost"
                    }
                }
            ],
            "from": "procedures"
        },
        "sql_ans": [
            [
                10000.0,
                25.0,
                4324.857142857143
            ]
        ],
        "cypher_query": "MATCH (p:procedures)\nRETURN max(p.Cost),min(p.Cost),avg(p.Cost)",
        "cypher_ans": [
            [
                null,
                null,
                null
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Tell me the highest, lowest, and average cost of procedures.",
        "sql_query": "SELECT MAX(cost) ,  MIN(cost) ,  AVG(cost) FROM procedures",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "max": "cost"
                    }
                },
                {
                    "value": {
                        "min": "cost"
                    }
                },
                {
                    "value": {
                        "avg": "cost"
                    }
                }
            ],
            "from": "procedures"
        },
        "sql_ans": [
            [
                10000.0,
                25.0,
                4324.857142857143
            ]
        ],
        "cypher_query": "MATCH (p:procedures)\nRETURN max(p.Cost),min(p.Cost),avg(p.Cost)",
        "cypher_ans": [
            [
                null,
                null,
                null
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many appointments are there?",
        "sql_query": "SELECT count(*) FROM appointment",
        "parsed_sql": {
            "select": {
                "value": {
                    "count": "*"
                }
            },
            "from": "appointment"
        },
        "sql_ans": [
            [
                9
            ]
        ],
        "cypher_query": "MATCH (a:appointment)\nRETURN count(*)",
        "cypher_ans": [
            [
                0
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Count how many appointments have been made in total.",
        "sql_query": "SELECT count(*) FROM appointment",
        "parsed_sql": {
            "select": {
                "value": {
                    "count": "*"
                }
            },
            "from": "appointment"
        },
        "sql_ans": [
            [
                9
            ]
        ],
        "cypher_query": "MATCH (a:appointment)\nRETURN count(*)",
        "cypher_ans": [
            [
                0
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "Count how many appointments have been made in total.",
        "sql_query": "SELECT count(*) FROM appointment",
        "parsed_sql": {
            "select": {
                "value": {
                    "count": "*"
                }
            },
            "from": "appointment"
        },
        "sql_ans": [
            [
                9
            ]
        ],
        "cypher_query": "MATCH (a:appointment)\nRETURN count(*)",
        "cypher_ans": [
            [
                0
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "Count how many appointments have been made in total.",
        "sql_query": "SELECT count(*) FROM appointment",
        "parsed_sql": {
            "select": {
                "value": {
                    "count": "*"
                }
            },
            "from": "appointment"
        },
        "sql_ans": [
            [
                9
            ]
        ],
        "cypher_query": "MATCH (a:appointment)\nRETURN count(*)",
        "cypher_ans": [
            [
                0
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "Count how many appointments have been made in total.",
        "sql_query": "SELECT count(*) FROM appointment",
        "parsed_sql": {
            "select": {
                "value": {
                    "count": "*"
                }
            },
            "from": "appointment"
        },
        "sql_ans": [
            [
                9
            ]
        ],
        "cypher_query": "MATCH (a:appointment)\nRETURN count(*)",
        "cypher_ans": [
            [
                0
            ]
        ]
    }
][][][
    {
        "db_id": "hospital_1",
        "question": "Count how many appointments have been made in total.",
        "sql_query": "SELECT count(*) FROM appointment",
        "parsed_sql": {
            "select": {
                "value": {
                    "count": "*"
                }
            },
            "from": "appointment"
        },
        "sql_ans": [
            [
                9
            ]
        ],
        "cypher_query": "MATCH (a:appointment)\nRETURN count(*)",
        "cypher_ans": [
            [
                0
            ]
        ]
    }
][][][
    {
        "db_id": "hospital_1",
        "question": "Count how many appointments have been made in total.",
        "sql_query": "SELECT count(*) FROM appointment",
        "parsed_sql": {
            "select": {
                "value": {
                    "count": "*"
                }
            },
            "from": "appointment"
        },
        "sql_ans": [
            [
                9
            ]
        ],
        "cypher_query": "MATCH (a:appointment)\nRETURN count(*)",
        "cypher_ans": [
            [
                0
            ]
        ]
    }
][][][][][][][][][][
    {
        "db_id": "hospital_1",
        "question": "Find the names of nurses who are on call.",
        "sql_query": "SELECT DISTINCT T1.name FROM nurse AS T1 JOIN on_call AS T2 ON T1.EmployeeID  =  T2.nurse",
        "parsed_sql": {
            "select": {
                "value": {
                    "distinct": {
                        "value": "T1.name"
                    }
                }
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "on_call",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.EmployeeID",
                            "T2.nurse"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:on_call)\nRETURN DISTINCT T1.Name",
        "cypher_ans": []
    }
][
    {
        "db_id": "hospital_1",
        "question": "Find the names of nurses who are on call.",
        "sql_query": "SELECT DISTINCT T1.name FROM nurse AS T1 JOIN on_call AS T2 ON T1.EmployeeID  =  T2.nurse",
        "parsed_sql": {
            "select": {
                "value": {
                    "distinct": {
                        "value": "T1.name"
                    }
                }
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "on_call",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.EmployeeID",
                            "T2.nurse"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:on_call)\nRETURN DISTINCT T1.Name",
        "cypher_ans": []
    }
][
    {
        "db_id": "hospital_1",
        "question": "Find the names of nurses who are on call.",
        "sql_query": "SELECT DISTINCT T1.name FROM nurse AS T1 JOIN on_call AS T2 ON T1.EmployeeID  =  T2.nurse",
        "parsed_sql": {
            "select": {
                "value": {
                    "distinct": {
                        "value": "T1.name"
                    }
                }
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "on_call",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.EmployeeID",
                            "T2.nurse"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:on_call)\nRETURN DISTINCT T1.Name",
        "cypher_ans": []
    }
][
    {
        "db_id": "hospital_1",
        "question": "Find the names of nurses who are on call.",
        "sql_query": "SELECT DISTINCT T1.name FROM nurse AS T1 JOIN on_call AS T2 ON T1.EmployeeID  =  T2.nurse",
        "parsed_sql": {
            "select": {
                "value": {
                    "distinct": {
                        "value": "T1.name"
                    }
                }
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "on_call",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.EmployeeID",
                            "T2.nurse"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:on_call)\nRETURN DISTINCT T1.Name",
        "cypher_ans": []
    }
][
    {
        "db_id": "hospital_1",
        "question": "Find the names of nurses who are on call.",
        "sql_query": "SELECT DISTINCT T1.name FROM nurse AS T1 JOIN on_call AS T2 ON T1.EmployeeID  =  T2.nurse",
        "parsed_sql": {
            "select": {
                "value": {
                    "distinct": {
                        "value": "T1.name"
                    }
                }
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "on_call",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.EmployeeID",
                            "T2.nurse"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:on_call)\nRETURN DISTINCT T1.Name",
        "cypher_ans": []
    }
][
    {
        "db_id": "hospital_1",
        "question": "Find the names of nurses who are on call.",
        "sql_query": "SELECT DISTINCT T1.name FROM nurse AS T1 JOIN on_call AS T2 ON T1.EmployeeID  =  T2.nurse",
        "parsed_sql": {
            "select": {
                "value": {
                    "distinct": {
                        "value": "T1.name"
                    }
                }
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "on_call",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.EmployeeID",
                            "T2.nurse"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:on_call)\nRETURN DISTINCT T1.Name",
        "cypher_ans": []
    }
][
    {
        "db_id": "hospital_1",
        "question": "Find the names of nurses who are on call.",
        "sql_query": "SELECT DISTINCT T1.name FROM nurse AS T1 JOIN on_call AS T2 ON T1.EmployeeID  =  T2.nurse",
        "parsed_sql": {
            "select": {
                "value": {
                    "distinct": {
                        "value": "T1.name"
                    }
                }
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "on_call",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.EmployeeID",
                            "T2.nurse"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:on_call)\nRETURN DISTINCT T1.Name",
        "cypher_ans": []
    }
][
    {
        "db_id": "hospital_1",
        "question": "Find the names of nurses who are on call.",
        "sql_query": "SELECT DISTINCT T1.name FROM nurse AS T1 JOIN on_call AS T2 ON T1.EmployeeID  =  T2.nurse",
        "parsed_sql": {
            "select": {
                "value": {
                    "distinct": {
                        "value": "T1.name"
                    }
                }
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "on_call",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.EmployeeID",
                            "T2.nurse"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:on_call)\nRETURN DISTINCT T1.Name",
        "cypher_ans": []
    }
][
    {
        "db_id": "hospital_1",
        "question": "Find the names of nurses who are on call.",
        "sql_query": "SELECT DISTINCT T1.name FROM nurse AS T1 JOIN on_call AS T2 ON T1.EmployeeID  =  T2.nurse",
        "parsed_sql": {
            "select": {
                "value": {
                    "distinct": {
                        "value": "T1.name"
                    }
                }
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "on_call",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.EmployeeID",
                            "T2.nurse"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:on_call)\nRETURN DISTINCT T1.Name",
        "cypher_ans": []
    }
][
    {
        "db_id": "hospital_1",
        "question": "Find the names of nurses who are on call.",
        "sql_query": "SELECT DISTINCT T1.name FROM nurse AS T1 JOIN on_call AS T2 ON T1.EmployeeID  =  T2.nurse",
        "parsed_sql": {
            "select": {
                "value": {
                    "distinct": {
                        "value": "T1.name"
                    }
                }
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "on_call",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.EmployeeID",
                            "T2.nurse"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:on_call)\nRETURN DISTINCT T1.Name",
        "cypher_ans": []
    }
][
    {
        "db_id": "hospital_1",
        "question": "Find the names of nurses who are on call.",
        "sql_query": "SELECT DISTINCT T1.name FROM nurse AS T1 JOIN on_call AS T2 ON T1.EmployeeID  =  T2.nurse",
        "parsed_sql": {
            "select": {
                "value": {
                    "distinct": {
                        "value": "T1.name"
                    }
                }
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "on_call",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.EmployeeID",
                            "T2.nurse"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:on_call)\nRETURN DISTINCT T1.Name",
        "cypher_ans": []
    }
][][][
    {
        "db_id": "hospital_1",
        "question": "List the name of physicians who took some appointment.",
        "sql_query": "SELECT T2.name FROM appointment AS T1 JOIN physician AS T2 ON T1.Physician  =  T2.EmployeeID",
        "parsed_sql": {
            "select": {
                "value": "T2.name"
            },
            "from": [
                {
                    "value": "appointment",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Physician",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "John Dorian"
            ],
            [
                "Elliot Reid"
            ],
            [
                "John Dorian"
            ],
            [
                "Percival Cox"
            ],
            [
                "Percival Cox"
            ],
            [
                "Elliot Reid"
            ],
            [
                "Christopher Turk"
            ],
            [
                "Molly Clock"
            ],
            [
                "Elliot Reid"
            ]
        ],
        "cypher_query": "MATCH (T1:Appointment)-[]-(T2:Physician)\nRETURN T2.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of all the physicians who took appointments.",
        "sql_query": "SELECT T2.name FROM appointment AS T1 JOIN physician AS T2 ON T1.Physician  =  T2.EmployeeID",
        "parsed_sql": {
            "select": {
                "value": "T2.name"
            },
            "from": [
                {
                    "value": "appointment",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Physician",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "John Dorian"
            ],
            [
                "Elliot Reid"
            ],
            [
                "John Dorian"
            ],
            [
                "Percival Cox"
            ],
            [
                "Percival Cox"
            ],
            [
                "Elliot Reid"
            ],
            [
                "Christopher Turk"
            ],
            [
                "Molly Clock"
            ],
            [
                "Elliot Reid"
            ]
        ],
        "cypher_query": "MATCH (T1:Appointment)-[]-(T2:Physician)\nRETURN T2.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many patients do each physician take care of? List their names and number of patients they take care of.",
        "sql_query": "SELECT T1.name ,  count(*) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.PCP"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            }
        },
        "sql_ans": [
            [
                "John Dorian",
                1
            ],
            [
                "Elliot Reid",
                2
            ],
            [
                "Christopher Turk",
                1
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[]-(T2:Patient)\nWITH count(T1.EmployeeID) AS count, T1.Name AS Name\nRETURN Name,count(*)",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Return the name of each physician and the number of patients he or she treats.",
        "sql_query": "SELECT T1.name ,  count(*) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.PCP"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            }
        },
        "sql_ans": [
            [
                "John Dorian",
                1
            ],
            [
                "Elliot Reid",
                2
            ],
            [
                "Christopher Turk",
                1
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[]-(T2:Patient)\nWITH count(T1.EmployeeID) AS count, T1.Name AS Name\nRETURN Name,count(*)",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians who are in charge of more than one patient.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid HAVING count(*)  >  1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.PCP"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "having": {
                "gt": [
                    {
                        "count": "*"
                    },
                    1
                ]
            }
        },
        "sql_ans": [
            [
                "Elliot Reid"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[]-(T2:Patient)\nWITH count(*) AS count, T1.Name AS Name\nWHERE count >1\nRETURN Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Which physicians are in charge of more than one patient? Give me their names.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid HAVING count(*)  >  1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.PCP"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "having": {
                "gt": [
                    {
                        "count": "*"
                    },
                    1
                ]
            }
        },
        "sql_ans": [
            [
                "Elliot Reid"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[]-(T2:Patient)\nWITH count(*) AS count, T1.Name AS Name\nWHERE count >1\nRETURN Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms located on each block floor.",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockFloor AS BlockFloor, count(T1.BlockFloor) AS count\nRETURN count(*),BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms does each block floor have?",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockFloor AS BlockFloor, count(T1.BlockFloor) AS count\nRETURN count(*),BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms for different block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockCode) AS count, T1.BlockCode AS BlockCode\nRETURN count(*),BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms are located for each block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockCode) AS count, T1.BlockCode AS BlockCode\nRETURN count(*),BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of medications prescribed for each brand.",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH T1.Name AS Name, count(T1.Brand) AS count\nRETURN count(*),Name",
        "cypher_ans": [
            [
                1,
                "Procrastin-X"
            ],
            [
                1,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many medications are prescribed for each brand?",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH T1.Name AS Name, count(T1.Brand) AS count\nRETURN count(*),Name",
        "cypher_ans": [
            [
                1,
                "Procrastin-X"
            ],
            [
                1,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians whose position title contains the word 'senior'.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of the physicians who have 'senior' in their titles.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the names of all patients who have an undergoing treatment and are staying in room 111.",
        "sql_query": "SELECT DISTINCT T2.name FROM undergoes AS T1 JOIN patient AS T2 ON T1.patient = T2.SSN JOIN stay AS T3 ON T1.Stay  =  T3.StayID WHERE T3.room  =  111",
        "parsed_sql": {
            "select": {
                "value": {
                    "distinct": {
                        "value": "T2.name"
                    }
                }
            },
            "from": [
                {
                    "value": "undergoes",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.patient",
                            "T2.SSN"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "stay",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Stay",
                            "T3.StayID"
                        ]
                    }
                }
            ],
            "where": {
                "eq": [
                    "T3.room",
                    111
                ]
            }
        },
        "sql_ans": [
            [
                "John Smith"
            ]
        ],
        "cypher_query": "MATCH (T1:Undergoes)-[]-(T2:Patient)-[]-(T3:Stay)\nWHERE T3.Room=111\nRETURN DISTINCT T2.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of patients who are staying in room 111 and have an undergoing treatment?",
        "sql_query": "SELECT DISTINCT T2.name FROM undergoes AS T1 JOIN patient AS T2 ON T1.patient = T2.SSN JOIN stay AS T3 ON T1.Stay  =  T3.StayID WHERE T3.room  =  111",
        "parsed_sql": {
            "select": {
                "value": {
                    "distinct": {
                        "value": "T2.name"
                    }
                }
            },
            "from": [
                {
                    "value": "undergoes",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.patient",
                            "T2.SSN"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "stay",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Stay",
                            "T3.StayID"
                        ]
                    }
                }
            ],
            "where": {
                "eq": [
                    "T3.room",
                    111
                ]
            }
        },
        "sql_ans": [
            [
                "John Smith"
            ]
        ],
        "cypher_query": "MATCH (T1:Undergoes)-[]-(T2:Patient)-[]-(T3:Stay)\nWHERE T3.Room=111\nRETURN DISTINCT T2.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the physicians who are trained in a procedure that costs more than 5000.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment WHERE T3.cost  >  5000",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "where": {
                "gt": [
                    "T3.cost",
                    5000
                ]
            }
        },
        "sql_ans": [
            [
                "Christopher Turk"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "John Wen"
            ],
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[]-(T2:trained_in)-[]-(T3:Procedures)\nWHERE T3.Cost>5000\nRETURN T1.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Which physicians are trained in procedures that are more expensive than 5000?",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment WHERE T3.cost  >  5000",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "where": {
                "gt": [
                    "T3.cost",
                    5000
                ]
            }
        },
        "sql_ans": [
            [
                "Christopher Turk"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "John Wen"
            ],
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[]-(T2:trained_in)-[]-(T3:Procedures)\nWHERE T3.Cost>5000\nRETURN T1.Name",
        "cypher_ans": []
    }
][][][][][][][][
    {
        "db_id": "hospital_1",
        "question": "How many patients are not using Procrastin-X as medication?",
        "sql_query": "SELECT count(*) FROM patient WHERE SSN NOT IN ( SELECT T1.patient FROM Prescribes AS T1 JOIN Medication AS T2 ON T1.Medication  =  T2.Code WHERE T2.name  =  'Procrastin-X' )",
        "parsed_sql": {
            "select": {
                "value": {
                    "count": "*"
                }
            },
            "from": "patient",
            "where": {
                "nin": [
                    "SSN",
                    {
                        "select": {
                            "value": "T1.patient"
                        },
                        "from": [
                            {
                                "value": "Prescribes",
                                "name": "T1",
                                "is_table": true
                            },
                            {
                                "join": {
                                    "name": "T2",
                                    "value": "Medication",
                                    "is_table": true
                                },
                                "on": {
                                    "eq": [
                                        "T1.Medication",
                                        "T2.Code"
                                    ]
                                }
                            }
                        ],
                        "where": {
                            "eq": [
                                "T2.name",
                                {
                                    "literal": "Procrastin-X"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "sql_ans": [
            [
                3
            ]
        ],
        "cypher_query": "MATCH (p:Patient)\nRETURN count(*)",
        "cypher_ans": [
            [
                4
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "How many patients are not using Procrastin-X as medication?",
        "sql_query": "SELECT count(*) FROM patient WHERE SSN NOT IN ( SELECT T1.patient FROM Prescribes AS T1 JOIN Medication AS T2 ON T1.Medication  =  T2.Code WHERE T2.name  =  'Procrastin-X' )",
        "parsed_sql": {
            "select": {
                "value": {
                    "count": "*"
                }
            },
            "from": "patient",
            "where": {
                "nin": [
                    "SSN",
                    {
                        "select": {
                            "value": "T1.patient"
                        },
                        "from": [
                            {
                                "value": "Prescribes",
                                "name": "T1",
                                "is_table": true
                            },
                            {
                                "join": {
                                    "name": "T2",
                                    "value": "Medication",
                                    "is_table": true
                                },
                                "on": {
                                    "eq": [
                                        "T1.Medication",
                                        "T2.Code"
                                    ]
                                }
                            }
                        ],
                        "where": {
                            "eq": [
                                "T2.name",
                                {
                                    "literal": "Procrastin-X"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "sql_ans": [
            [
                3
            ]
        ],
        "cypher_query": "MATCH (p:Patient)\nRETURN count(*)",
        "cypher_ans": [
            [
                4
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "How many patients are not using Procrastin-X as medication?",
        "sql_query": "SELECT count(*) FROM patient WHERE SSN NOT IN ( SELECT T1.patient FROM Prescribes AS T1 JOIN Medication AS T2 ON T1.Medication  =  T2.Code WHERE T2.name  =  'Procrastin-X' )",
        "parsed_sql": {
            "select": {
                "value": {
                    "count": "*"
                }
            },
            "from": "patient",
            "where": {
                "nin": [
                    "SSN",
                    {
                        "select": {
                            "value": "T1.patient"
                        },
                        "from": [
                            {
                                "value": "Prescribes",
                                "name": "T1",
                                "is_table": true
                            },
                            {
                                "join": {
                                    "name": "T2",
                                    "value": "Medication",
                                    "is_table": true
                                },
                                "on": {
                                    "eq": [
                                        "T1.Medication",
                                        "T2.Code"
                                    ]
                                }
                            }
                        ],
                        "where": {
                            "eq": [
                                "T2.name",
                                {
                                    "literal": "Procrastin-X"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "sql_ans": [
            [
                3
            ]
        ],
        "cypher_query": "MATCH (p:Patient)\nRETURN count(*)",
        "cypher_ans": [
            [
                4
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "How many patients are not using Procrastin-X as medication?",
        "sql_query": "SELECT count(*) FROM patient WHERE SSN NOT IN ( SELECT T1.patient FROM Prescribes AS T1 JOIN Medication AS T2 ON T1.Medication  =  T2.Code WHERE T2.name  =  'Procrastin-X' )",
        "parsed_sql": {
            "select": {
                "value": {
                    "count": "*"
                }
            },
            "from": "patient",
            "where": {
                "nin": [
                    "SSN",
                    {
                        "select": {
                            "value": "T1.patient"
                        },
                        "from": [
                            {
                                "value": "Prescribes",
                                "name": "T1",
                                "is_table": true
                            },
                            {
                                "join": {
                                    "name": "T2",
                                    "value": "Medication",
                                    "is_table": true
                                },
                                "on": {
                                    "eq": [
                                        "T1.Medication",
                                        "T2.Code"
                                    ]
                                }
                            }
                        ],
                        "where": {
                            "eq": [
                                "T2.name",
                                {
                                    "literal": "Procrastin-X"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "sql_ans": [
            [
                3
            ]
        ],
        "cypher_query": "MATCH (p:Patient)\nRETURN count(*)",
        "cypher_ans": [
            [
                4
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "How many patients are not using Procrastin-X as medication?",
        "sql_query": "SELECT count(*) FROM patient WHERE SSN NOT IN ( SELECT T1.patient FROM Prescribes AS T1 JOIN Medication AS T2 ON T1.Medication  =  T2.Code WHERE T2.name  =  'Procrastin-X' )",
        "parsed_sql": {
            "select": {
                "value": {
                    "count": "*"
                }
            },
            "from": "patient",
            "where": {
                "nin": [
                    "SSN",
                    {
                        "select": {
                            "value": "T1.patient"
                        },
                        "from": [
                            {
                                "value": "Prescribes",
                                "name": "T1",
                                "is_table": true
                            },
                            {
                                "join": {
                                    "name": "T2",
                                    "value": "Medication",
                                    "is_table": true
                                },
                                "on": {
                                    "eq": [
                                        "T1.Medication",
                                        "T2.Code"
                                    ]
                                }
                            }
                        ],
                        "where": {
                            "eq": [
                                "T2.name",
                                {
                                    "literal": "Procrastin-X"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "sql_ans": [
            [
                3
            ]
        ],
        "cypher_query": "MATCH (p:Patient)\nRETURN count(*)",
        "cypher_ans": [
            [
                4
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "How many patients are not using Procrastin-X as medication?",
        "sql_query": "SELECT count(*) FROM patient WHERE SSN NOT IN ( SELECT T1.patient FROM Prescribes AS T1 JOIN Medication AS T2 ON T1.Medication  =  T2.Code WHERE T2.name  =  'Procrastin-X' )",
        "parsed_sql": {
            "select": {
                "value": {
                    "count": "*"
                }
            },
            "from": "patient",
            "where": {
                "nin": [
                    "SSN",
                    {
                        "select": {
                            "value": "T1.patient"
                        },
                        "from": [
                            {
                                "value": "Prescribes",
                                "name": "T1",
                                "is_table": true
                            },
                            {
                                "join": {
                                    "name": "T2",
                                    "value": "Medication",
                                    "is_table": true
                                },
                                "on": {
                                    "eq": [
                                        "T1.Medication",
                                        "T2.Code"
                                    ]
                                }
                            }
                        ],
                        "where": {
                            "eq": [
                                "T2.name",
                                {
                                    "literal": "Procrastin-X"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "sql_ans": [
            [
                3
            ]
        ],
        "cypher_query": "MATCH (p:Patient)\nRETURN count(*)",
        "cypher_ans": [
            [
                4
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "How many patients are not using Procrastin-X as medication?",
        "sql_query": "SELECT count(*) FROM patient WHERE SSN NOT IN ( SELECT T1.patient FROM Prescribes AS T1 JOIN Medication AS T2 ON T1.Medication  =  T2.Code WHERE T2.name  =  'Procrastin-X' )",
        "parsed_sql": {
            "select": {
                "value": {
                    "count": "*"
                }
            },
            "from": "patient",
            "where": {
                "nin": [
                    "SSN",
                    {
                        "select": {
                            "value": "T1.patient"
                        },
                        "from": [
                            {
                                "value": "Prescribes",
                                "name": "T1",
                                "is_table": true
                            },
                            {
                                "join": {
                                    "name": "T2",
                                    "value": "Medication",
                                    "is_table": true
                                },
                                "on": {
                                    "eq": [
                                        "T1.Medication",
                                        "T2.Code"
                                    ]
                                }
                            }
                        ],
                        "where": {
                            "eq": [
                                "T2.name",
                                {
                                    "literal": "Procrastin-X"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "sql_ans": [
            [
                3
            ]
        ],
        "cypher_query": "MATCH (p:Patient)\nRETURN count(*)",
        "cypher_ans": [
            [
                4
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "How many patients are not using Procrastin-X as medication?",
        "sql_query": "SELECT count(*) FROM patient WHERE SSN NOT IN ( SELECT T1.patient FROM Prescribes AS T1 JOIN Medication AS T2 ON T1.Medication  =  T2.Code WHERE T2.name  =  'Procrastin-X' )",
        "parsed_sql": {
            "select": {
                "value": {
                    "count": "*"
                }
            },
            "from": "patient",
            "where": {
                "nin": [
                    "SSN",
                    {
                        "select": {
                            "value": "T1.patient"
                        },
                        "from": [
                            {
                                "value": "Prescribes",
                                "name": "T1",
                                "is_table": true
                            },
                            {
                                "join": {
                                    "name": "T2",
                                    "value": "Medication",
                                    "is_table": true
                                },
                                "on": {
                                    "eq": [
                                        "T1.Medication",
                                        "T2.Code"
                                    ]
                                }
                            }
                        ],
                        "where": {
                            "eq": [
                                "T2.name",
                                {
                                    "literal": "Procrastin-X"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "sql_ans": [
            [
                3
            ]
        ],
        "cypher_query": "MATCH (p:Patient)\nRETURN count(*)",
        "cypher_ans": [
            [
                4
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "How many patients are not using Procrastin-X as medication?",
        "sql_query": "SELECT count(*) FROM patient WHERE SSN NOT IN ( SELECT T1.patient FROM Prescribes AS T1 JOIN Medication AS T2 ON T1.Medication  =  T2.Code WHERE T2.name  =  'Procrastin-X' )",
        "parsed_sql": {
            "select": {
                "value": {
                    "count": "*"
                }
            },
            "from": "patient",
            "where": {
                "nin": [
                    "SSN",
                    {
                        "select": {
                            "value": "T1.patient"
                        },
                        "from": [
                            {
                                "value": "Prescribes",
                                "name": "T1",
                                "is_table": true
                            },
                            {
                                "join": {
                                    "name": "T2",
                                    "value": "Medication",
                                    "is_table": true
                                },
                                "on": {
                                    "eq": [
                                        "T1.Medication",
                                        "T2.Code"
                                    ]
                                }
                            }
                        ],
                        "where": {
                            "eq": [
                                "T2.name",
                                {
                                    "literal": "Procrastin-X"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "sql_ans": [
            [
                3
            ]
        ],
        "cypher_query": "MATCH (p:Patient)\nRETURN count(*)",
        "cypher_ans": [
            [
                4
            ]
        ]
    }
][][][
    {
        "db_id": "hospital_1",
        "question": "How many patients are not using Procrastin-X as medication?",
        "sql_query": "SELECT count(*) FROM patient WHERE SSN NOT IN ( SELECT T1.patient FROM Prescribes AS T1 JOIN Medication AS T2 ON T1.Medication  =  T2.Code WHERE T2.name  =  'Procrastin-X' )",
        "parsed_sql": {
            "select": {
                "value": {
                    "count": "*"
                }
            },
            "from": "patient",
            "where": {
                "nin": [
                    "SSN",
                    {
                        "select": {
                            "value": "T1.patient"
                        },
                        "from": [
                            {
                                "value": "Prescribes",
                                "name": "T1",
                                "is_table": true
                            },
                            {
                                "join": {
                                    "name": "T2",
                                    "value": "Medication",
                                    "is_table": true
                                },
                                "on": {
                                    "eq": [
                                        "T1.Medication",
                                        "T2.Code"
                                    ]
                                }
                            }
                        ],
                        "where": {
                            "eq": [
                                "T2.name",
                                {
                                    "literal": "Procrastin-X"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "sql_ans": [
            [
                3
            ]
        ],
        "cypher_query": "MATCH (p:Patient)\nRETURN count(*)",
        "cypher_ans": [
            [
                4
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "How many patients are not using Procrastin-X as medication?",
        "sql_query": "SELECT count(*) FROM patient WHERE SSN NOT IN ( SELECT T1.patient FROM Prescribes AS T1 JOIN Medication AS T2 ON T1.Medication  =  T2.Code WHERE T2.name  =  'Procrastin-X' )",
        "parsed_sql": {
            "select": {
                "value": {
                    "count": "*"
                }
            },
            "from": "patient",
            "where": {
                "nin": [
                    "SSN",
                    {
                        "select": {
                            "value": "T1.patient"
                        },
                        "from": [
                            {
                                "value": "Prescribes",
                                "name": "T1",
                                "is_table": true
                            },
                            {
                                "join": {
                                    "name": "T2",
                                    "value": "Medication",
                                    "is_table": true
                                },
                                "on": {
                                    "eq": [
                                        "T1.Medication",
                                        "T2.Code"
                                    ]
                                }
                            }
                        ],
                        "where": {
                            "eq": [
                                "T2.name",
                                {
                                    "literal": "Procrastin-X"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "sql_ans": [
            [
                3
            ]
        ],
        "cypher_query": "MATCH (p:Patient)\nRETURN count(*)",
        "cypher_ans": [
            [
                4
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "How many patients are not using Procrastin-X as medication?",
        "sql_query": "SELECT count(*) FROM patient WHERE SSN NOT IN ( SELECT T1.patient FROM Prescribes AS T1 JOIN Medication AS T2 ON T1.Medication  =  T2.Code WHERE T2.name  =  'Procrastin-X' )",
        "parsed_sql": {
            "select": {
                "value": {
                    "count": "*"
                }
            },
            "from": "patient",
            "where": {
                "nin": [
                    "SSN",
                    {
                        "select": {
                            "value": "T1.patient"
                        },
                        "from": [
                            {
                                "value": "Prescribes",
                                "name": "T1",
                                "is_table": true
                            },
                            {
                                "join": {
                                    "name": "T2",
                                    "value": "Medication",
                                    "is_table": true
                                },
                                "on": {
                                    "eq": [
                                        "T1.Medication",
                                        "T2.Code"
                                    ]
                                }
                            }
                        ],
                        "where": {
                            "eq": [
                                "T2.name",
                                {
                                    "literal": "Procrastin-X"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "sql_ans": [
            [
                3
            ]
        ],
        "cypher_query": "MATCH (p:Patient)\nRETURN count(*)",
        "cypher_ans": [
            [
                4
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "How many patients are not using Procrastin-X as medication?",
        "sql_query": "SELECT count(*) FROM patient WHERE SSN NOT IN ( SELECT T1.patient FROM Prescribes AS T1 JOIN Medication AS T2 ON T1.Medication  =  T2.Code WHERE T2.name  =  'Procrastin-X' )",
        "parsed_sql": {
            "select": {
                "value": {
                    "count": "*"
                }
            },
            "from": "patient",
            "where": {
                "nin": [
                    "SSN",
                    {
                        "select": {
                            "value": "T1.patient"
                        },
                        "from": [
                            {
                                "value": "Prescribes",
                                "name": "T1",
                                "is_table": true
                            },
                            {
                                "join": {
                                    "name": "T2",
                                    "value": "Medication",
                                    "is_table": true
                                },
                                "on": {
                                    "eq": [
                                        "T1.Medication",
                                        "T2.Code"
                                    ]
                                }
                            }
                        ],
                        "where": {
                            "eq": [
                                "T2.name",
                                {
                                    "literal": "Procrastin-X"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "sql_ans": [
            [
                3
            ]
        ],
        "cypher_query": "MATCH (p:Patient)\nRETURN count(*)",
        "cypher_ans": [
            [
                4
            ]
        ]
    }
][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][
    {
        "db_id": "hospital_1",
        "question": "How many patients are not using Procrastin-X as medication?",
        "sql_query": "SELECT count(*) FROM patient WHERE SSN NOT IN ( SELECT T1.patient FROM Prescribes AS T1 JOIN Medication AS T2 ON T1.Medication  =  T2.Code WHERE T2.name  =  'Procrastin-X' )",
        "parsed_sql": {
            "select": {
                "value": {
                    "count": "*"
                }
            },
            "from": "patient",
            "where": {
                "nin": [
                    "SSN",
                    {
                        "select": {
                            "value": "T1.patient"
                        },
                        "from": [
                            {
                                "value": "Prescribes",
                                "name": "T1",
                                "is_table": true
                            },
                            {
                                "join": {
                                    "name": "T2",
                                    "value": "Medication",
                                    "is_table": true
                                },
                                "on": {
                                    "eq": [
                                        "T1.Medication",
                                        "T2.Code"
                                    ]
                                }
                            }
                        ],
                        "where": {
                            "eq": [
                                "T2.name",
                                {
                                    "literal": "Procrastin-X"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "sql_ans": [
            [
                3
            ]
        ],
        "cypher_query": "MATCH (p:Patient)\nRETURN count(*)",
        "cypher_ans": [
            [
                4
            ]
        ]
    }
][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][
    {
        "db_id": "hospital_1",
        "question": "How many patients are not using Procrastin-X as medication?",
        "sql_query": "SELECT count(*) FROM patient WHERE SSN NOT IN ( SELECT T1.patient FROM Prescribes AS T1 JOIN Medication AS T2 ON T1.Medication  =  T2.Code WHERE T2.name  =  'Procrastin-X' )",
        "parsed_sql": {
            "select": {
                "value": {
                    "count": "*"
                }
            },
            "from": "patient",
            "where": {
                "nin": [
                    "SSN",
                    {
                        "select": {
                            "value": "T1.patient"
                        },
                        "from": [
                            {
                                "value": "Prescribes",
                                "name": "T1",
                                "is_table": true
                            },
                            {
                                "join": {
                                    "name": "T2",
                                    "value": "Medication",
                                    "is_table": true
                                },
                                "on": {
                                    "eq": [
                                        "T1.Medication",
                                        "T2.Code"
                                    ]
                                }
                            }
                        ],
                        "where": {
                            "eq": [
                                "T2.name",
                                {
                                    "literal": "Procrastin-X"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "sql_ans": [
            [
                3
            ]
        ],
        "cypher_query": "MATCH (p:Patient) MATCH (T1:Prescribes)-[]-(T2:Medication)\nWHERE T2.Name='Procrastin-X' AND NOT p.SSN in T1.Patient\nRETURN count(*)",
        "cypher_ans": [
            [
                9
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "How many patients are not using Procrastin-X as medication?",
        "sql_query": "SELECT count(*) FROM patient WHERE SSN NOT IN ( SELECT T1.patient FROM Prescribes AS T1 JOIN Medication AS T2 ON T1.Medication  =  T2.Code WHERE T2.name  =  'Procrastin-X' )",
        "parsed_sql": {
            "select": {
                "value": {
                    "count": "*"
                }
            },
            "from": "patient",
            "where": {
                "nin": [
                    "SSN",
                    {
                        "select": {
                            "value": "T1.patient"
                        },
                        "from": [
                            {
                                "value": "Prescribes",
                                "name": "T1",
                                "is_table": true
                            },
                            {
                                "join": {
                                    "name": "T2",
                                    "value": "Medication",
                                    "is_table": true
                                },
                                "on": {
                                    "eq": [
                                        "T1.Medication",
                                        "T2.Code"
                                    ]
                                }
                            }
                        ],
                        "where": {
                            "eq": [
                                "T2.name",
                                {
                                    "literal": "Procrastin-X"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "sql_ans": [
            [
                3
            ]
        ],
        "cypher_query": "MATCH (p:Patient) MATCH (T1:Prescribes)-[]-(T2:Medication)\nWHERE T2.Name='Procrastin-X' AND NOT p.SSN in T1.Patient\nRETURN count(*)",
        "cypher_ans": [
            [
                9
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "How many patients are not using Procrastin-X as medication?",
        "sql_query": "SELECT count(*) FROM patient WHERE SSN NOT IN ( SELECT T1.patient FROM Prescribes AS T1 JOIN Medication AS T2 ON T1.Medication  =  T2.Code WHERE T2.name  =  'Procrastin-X' )",
        "parsed_sql": {
            "select": {
                "value": {
                    "count": "*"
                }
            },
            "from": "patient",
            "where": {
                "nin": [
                    "SSN",
                    {
                        "select": {
                            "value": "T1.patient"
                        },
                        "from": [
                            {
                                "value": "Prescribes",
                                "name": "T1",
                                "is_table": true
                            },
                            {
                                "join": {
                                    "name": "T2",
                                    "value": "Medication",
                                    "is_table": true
                                },
                                "on": {
                                    "eq": [
                                        "T1.Medication",
                                        "T2.Code"
                                    ]
                                }
                            }
                        ],
                        "where": {
                            "eq": [
                                "T2.name",
                                {
                                    "literal": "Procrastin-X"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "sql_ans": [
            [
                3
            ]
        ],
        "cypher_query": "MATCH (p:Patient) MATCH (T1:Prescribes)-[]-(T2:Medication)\nWHERE T2.Name='Procrastin-X' AND NOT p.SSN in T1.Patient\nRETURN count(*)",
        "cypher_ans": [
            [
                9
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "How many patients are not using Procrastin-X as medication?",
        "sql_query": "SELECT count(*) FROM patient WHERE SSN NOT IN ( SELECT T1.patient FROM Prescribes AS T1 JOIN Medication AS T2 ON T1.Medication  =  T2.Code WHERE T2.name  =  'Procrastin-X' )",
        "parsed_sql": {
            "select": {
                "value": {
                    "count": "*"
                }
            },
            "from": "patient",
            "where": {
                "nin": [
                    "SSN",
                    {
                        "select": {
                            "value": "T1.patient"
                        },
                        "from": [
                            {
                                "value": "Prescribes",
                                "name": "T1",
                                "is_table": true
                            },
                            {
                                "join": {
                                    "name": "T2",
                                    "value": "Medication",
                                    "is_table": true
                                },
                                "on": {
                                    "eq": [
                                        "T1.Medication",
                                        "T2.Code"
                                    ]
                                }
                            }
                        ],
                        "where": {
                            "eq": [
                                "T2.name",
                                {
                                    "literal": "Procrastin-X"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "sql_ans": [
            [
                3
            ]
        ],
        "cypher_query": "MATCH (p:Patient) MATCH (T1:Prescribes)-[]-(T2:Medication)\nWHERE T2.Name='Procrastin-X' AND NOT p.SSN in T1.Patient\nRETURN count(*)",
        "cypher_ans": [
            [
                9
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "How many patients are not using Procrastin-X as medication?",
        "sql_query": "SELECT count(*) FROM patient WHERE SSN NOT IN ( SELECT T1.patient FROM Prescribes AS T1 JOIN Medication AS T2 ON T1.Medication  =  T2.Code WHERE T2.name  =  'Procrastin-X' )",
        "parsed_sql": {
            "select": {
                "value": {
                    "count": "*"
                }
            },
            "from": "patient",
            "where": {
                "nin": [
                    "SSN",
                    {
                        "select": {
                            "value": "T1.patient"
                        },
                        "from": [
                            {
                                "value": "Prescribes",
                                "name": "T1",
                                "is_table": true
                            },
                            {
                                "join": {
                                    "name": "T2",
                                    "value": "Medication",
                                    "is_table": true
                                },
                                "on": {
                                    "eq": [
                                        "T1.Medication",
                                        "T2.Code"
                                    ]
                                }
                            }
                        ],
                        "where": {
                            "eq": [
                                "T2.name",
                                {
                                    "literal": "Procrastin-X"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "sql_ans": [
            [
                3
            ]
        ],
        "cypher_query": "MATCH (p:Patient) MATCH (T1:Prescribes)-[]-(T2:Medication)\nWHERE T2.Name='Procrastin-X' AND NOT p.SSN in T1.Patient\nRETURN count(*)",
        "cypher_ans": [
            [
                9
            ]
        ]
    }
][][
    {
        "db_id": "hospital_1",
        "question": "How many patients are not using Procrastin-X as medication?",
        "sql_query": "SELECT count(*) FROM patient WHERE SSN NOT IN ( SELECT T1.patient FROM Prescribes AS T1 JOIN Medication AS T2 ON T1.Medication  =  T2.Code WHERE T2.name  =  'Procrastin-X' )",
        "parsed_sql": {
            "select": {
                "value": {
                    "count": "*"
                }
            },
            "from": "patient",
            "where": {
                "nin": [
                    "SSN",
                    {
                        "select": {
                            "value": "T1.patient"
                        },
                        "from": [
                            {
                                "value": "Prescribes",
                                "name": "T1",
                                "is_table": true
                            },
                            {
                                "join": {
                                    "name": "T2",
                                    "value": "Medication",
                                    "is_table": true
                                },
                                "on": {
                                    "eq": [
                                        "T1.Medication",
                                        "T2.Code"
                                    ]
                                }
                            }
                        ],
                        "where": {
                            "eq": [
                                "T2.name",
                                {
                                    "literal": "Procrastin-X"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "sql_ans": [
            [
                3
            ]
        ],
        "cypher_query": "MATCH (p:Patient) MATCH (T1:Prescribes)-[]-(T2:Medication)\nWHERE T2.Name='Procrastin-X' AND NOT p.SSN in T1.Patient\nRETURN count(*)",
        "cypher_ans": [
            [
                9
            ]
        ]
    }
][][
    {
        "db_id": "hospital_1",
        "question": "How many patients are not using Procrastin-X as medication?",
        "sql_query": "SELECT count(*) FROM patient WHERE SSN NOT IN ( SELECT T1.patient FROM Prescribes AS T1 JOIN Medication AS T2 ON T1.Medication  =  T2.Code WHERE T2.name  =  'Procrastin-X' )",
        "parsed_sql": {
            "select": {
                "value": {
                    "count": "*"
                }
            },
            "from": "patient",
            "where": {
                "nin": [
                    "SSN",
                    {
                        "select": {
                            "value": "T1.patient"
                        },
                        "from": [
                            {
                                "value": "Prescribes",
                                "name": "T1",
                                "is_table": true
                            },
                            {
                                "join": {
                                    "name": "T2",
                                    "value": "Medication",
                                    "is_table": true
                                },
                                "on": {
                                    "eq": [
                                        "T1.Medication",
                                        "T2.Code"
                                    ]
                                }
                            }
                        ],
                        "where": {
                            "eq": [
                                "T2.name",
                                {
                                    "literal": "Procrastin-X"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "sql_ans": [
            [
                3
            ]
        ],
        "cypher_query": "MATCH (p:Patient) MATCH (T1:Prescribes)-[]-(T2:Medication)\nWHERE T2.Name='Procrastin-X' AND NOT p.SSN in T1.Patient\nRETURN count(*)",
        "cypher_ans": [
            [
                9
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "How many patients are not using Procrastin-X as medication?",
        "sql_query": "SELECT count(*) FROM patient WHERE SSN NOT IN ( SELECT T1.patient FROM Prescribes AS T1 JOIN Medication AS T2 ON T1.Medication  =  T2.Code WHERE T2.name  =  'Procrastin-X' )",
        "parsed_sql": {
            "select": {
                "value": {
                    "count": "*"
                }
            },
            "from": "patient",
            "where": {
                "nin": [
                    "SSN",
                    {
                        "select": {
                            "value": "T1.patient"
                        },
                        "from": [
                            {
                                "value": "Prescribes",
                                "name": "T1",
                                "is_table": true
                            },
                            {
                                "join": {
                                    "name": "T2",
                                    "value": "Medication",
                                    "is_table": true
                                },
                                "on": {
                                    "eq": [
                                        "T1.Medication",
                                        "T2.Code"
                                    ]
                                }
                            }
                        ],
                        "where": {
                            "eq": [
                                "T2.name",
                                {
                                    "literal": "Procrastin-X"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "sql_ans": [
            [
                3
            ]
        ],
        "cypher_query": "MATCH (p:Patient) MATCH (T1:Prescribes)-[]-(T2:Medication)\nWHERE T2.Name='Procrastin-X' AND NOT p.SSN in T1.Patient\nRETURN count(*)",
        "cypher_ans": [
            [
                9
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "How many patients are not using Procrastin-X as medication?",
        "sql_query": "SELECT count(*) FROM patient WHERE SSN NOT IN ( SELECT T1.patient FROM Prescribes AS T1 JOIN Medication AS T2 ON T1.Medication  =  T2.Code WHERE T2.name  =  'Procrastin-X' )",
        "parsed_sql": {
            "select": {
                "value": {
                    "count": "*"
                }
            },
            "from": "patient",
            "where": {
                "nin": [
                    "SSN",
                    {
                        "select": {
                            "value": "T1.patient"
                        },
                        "from": [
                            {
                                "value": "Prescribes",
                                "name": "T1",
                                "is_table": true
                            },
                            {
                                "join": {
                                    "name": "T2",
                                    "value": "Medication",
                                    "is_table": true
                                },
                                "on": {
                                    "eq": [
                                        "T1.Medication",
                                        "T2.Code"
                                    ]
                                }
                            }
                        ],
                        "where": {
                            "eq": [
                                "T2.name",
                                {
                                    "literal": "Procrastin-X"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "sql_ans": [
            [
                3
            ]
        ],
        "cypher_query": "MATCH (p:Patient) MATCH (T1:Prescribes)-[]-(T2:Medication)\nWHERE T2.Name='Procrastin-X' AND NOT p.SSN in T1.Patient\nRETURN count(*)",
        "cypher_ans": [
            [
                9
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "How many patients are not using Procrastin-X as medication?",
        "sql_query": "SELECT count(*) FROM patient WHERE SSN NOT IN ( SELECT T1.patient FROM Prescribes AS T1 JOIN Medication AS T2 ON T1.Medication  =  T2.Code WHERE T2.name  =  'Procrastin-X' )",
        "parsed_sql": {
            "select": {
                "value": {
                    "count": "*"
                }
            },
            "from": "patient",
            "where": {
                "nin": [
                    "SSN",
                    {
                        "select": {
                            "value": "T1.patient"
                        },
                        "from": [
                            {
                                "value": "Prescribes",
                                "name": "T1",
                                "is_table": true
                            },
                            {
                                "join": {
                                    "name": "T2",
                                    "value": "Medication",
                                    "is_table": true
                                },
                                "on": {
                                    "eq": [
                                        "T1.Medication",
                                        "T2.Code"
                                    ]
                                }
                            }
                        ],
                        "where": {
                            "eq": [
                                "T2.name",
                                {
                                    "literal": "Procrastin-X"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "sql_ans": [
            [
                3
            ]
        ],
        "cypher_query": "MATCH (p:Patient) MATCH (T1:Prescribes)-[]-(T2:Medication)\nWHERE T2.Name='Procrastin-X' AND NOT p.SSN in T1.Patient\nRETURN count(*)",
        "cypher_ans": [
            [
                9
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "How many patients are not using Procrastin-X as medication?",
        "sql_query": "SELECT count(*) FROM patient WHERE SSN NOT IN ( SELECT T1.patient FROM Prescribes AS T1 JOIN Medication AS T2 ON T1.Medication  =  T2.Code WHERE T2.name  =  'Procrastin-X' )",
        "parsed_sql": {
            "select": {
                "value": {
                    "count": "*"
                }
            },
            "from": "patient",
            "where": {
                "nin": [
                    "SSN",
                    {
                        "select": {
                            "value": "T1.patient"
                        },
                        "from": [
                            {
                                "value": "Prescribes",
                                "name": "T1",
                                "is_table": true
                            },
                            {
                                "join": {
                                    "name": "T2",
                                    "value": "Medication",
                                    "is_table": true
                                },
                                "on": {
                                    "eq": [
                                        "T1.Medication",
                                        "T2.Code"
                                    ]
                                }
                            }
                        ],
                        "where": {
                            "eq": [
                                "T2.name",
                                {
                                    "literal": "Procrastin-X"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "sql_ans": [
            [
                3
            ]
        ],
        "cypher_query": "MATCH (p:Patient) MATCH (T1:Prescribes)-[]-(T2:Medication)\nWHERE T2.Name='Procrastin-X' AND NOT p.SSN in T1.Patient\nRETURN count(*)",
        "cypher_ans": [
            [
                9
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "How many patients are not using Procrastin-X as medication?",
        "sql_query": "SELECT count(*) FROM patient WHERE SSN NOT IN ( SELECT T1.patient FROM Prescribes AS T1 JOIN Medication AS T2 ON T1.Medication  =  T2.Code WHERE T2.name  =  'Procrastin-X' )",
        "parsed_sql": {
            "select": {
                "value": {
                    "count": "*"
                }
            },
            "from": "patient",
            "where": {
                "nin": [
                    "SSN",
                    {
                        "select": {
                            "value": "T1.patient"
                        },
                        "from": [
                            {
                                "value": "Prescribes",
                                "name": "T1",
                                "is_table": true
                            },
                            {
                                "join": {
                                    "name": "T2",
                                    "value": "Medication",
                                    "is_table": true
                                },
                                "on": {
                                    "eq": [
                                        "T1.Medication",
                                        "T2.Code"
                                    ]
                                }
                            }
                        ],
                        "where": {
                            "eq": [
                                "T2.name",
                                {
                                    "literal": "Procrastin-X"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "sql_ans": [
            [
                3
            ]
        ],
        "cypher_query": "MATCH (p:Patient) MATCH (T1:Prescribes)-[]-(T2:Medication)\nWHERE T2.Name='Procrastin-X' AND NOT p.SSN in T1.Patient\nRETURN count(*)",
        "cypher_ans": [
            [
                9
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "How many patients are not using Procrastin-X as medication?",
        "sql_query": "SELECT count(*) FROM patient WHERE SSN NOT IN ( SELECT T1.patient FROM Prescribes AS T1 JOIN Medication AS T2 ON T1.Medication  =  T2.Code WHERE T2.name  =  'Procrastin-X' )",
        "parsed_sql": {
            "select": {
                "value": {
                    "count": "*"
                }
            },
            "from": "patient",
            "where": {
                "nin": [
                    "SSN",
                    {
                        "select": {
                            "value": "T1.patient"
                        },
                        "from": [
                            {
                                "value": "Prescribes",
                                "name": "T1",
                                "is_table": true
                            },
                            {
                                "join": {
                                    "name": "T2",
                                    "value": "Medication",
                                    "is_table": true
                                },
                                "on": {
                                    "eq": [
                                        "T1.Medication",
                                        "T2.Code"
                                    ]
                                }
                            }
                        ],
                        "where": {
                            "eq": [
                                "T2.name",
                                {
                                    "literal": "Procrastin-X"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "sql_ans": [
            [
                3
            ]
        ],
        "cypher_query": "MATCH (p:Patient) MATCH (T1:Prescribes)-[]-(T2:Medication)\nWHERE T2.Name='Procrastin-X' AND NOT p.SSN in T1.Patient\nRETURN count(*)",
        "cypher_ans": [
            [
                9
            ]
        ]
    }
][][][][][
    {
        "db_id": "hospital_1",
        "question": "List the name of physicians who took some appointment.",
        "sql_query": "SELECT T2.name FROM appointment AS T1 JOIN physician AS T2 ON T1.Physician  =  T2.EmployeeID",
        "parsed_sql": {
            "select": {
                "value": "T2.name"
            },
            "from": [
                {
                    "value": "appointment",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Physician",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "John Dorian"
            ],
            [
                "Elliot Reid"
            ],
            [
                "John Dorian"
            ],
            [
                "Percival Cox"
            ],
            [
                "Percival Cox"
            ],
            [
                "Elliot Reid"
            ],
            [
                "Christopher Turk"
            ],
            [
                "Molly Clock"
            ],
            [
                "Elliot Reid"
            ]
        ],
        "cypher_query": "MATCH (T1:Appointment)-[]-(T2:Physician)\nRETURN T2.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of all the physicians who took appointments.",
        "sql_query": "SELECT T2.name FROM appointment AS T1 JOIN physician AS T2 ON T1.Physician  =  T2.EmployeeID",
        "parsed_sql": {
            "select": {
                "value": "T2.name"
            },
            "from": [
                {
                    "value": "appointment",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Physician",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "John Dorian"
            ],
            [
                "Elliot Reid"
            ],
            [
                "John Dorian"
            ],
            [
                "Percival Cox"
            ],
            [
                "Percival Cox"
            ],
            [
                "Elliot Reid"
            ],
            [
                "Christopher Turk"
            ],
            [
                "Molly Clock"
            ],
            [
                "Elliot Reid"
            ]
        ],
        "cypher_query": "MATCH (T1:Appointment)-[]-(T2:Physician)\nRETURN T2.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many patients do each physician take care of? List their names and number of patients they take care of.",
        "sql_query": "SELECT T1.name ,  count(*) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.PCP"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            }
        },
        "sql_ans": [
            [
                "John Dorian",
                1
            ],
            [
                "Elliot Reid",
                2
            ],
            [
                "Christopher Turk",
                1
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[]-(T2:Patient)\nWITH count(T1.EmployeeID) AS count, T1.Name AS Name\nRETURN Name,count(*)",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Return the name of each physician and the number of patients he or she treats.",
        "sql_query": "SELECT T1.name ,  count(*) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.PCP"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            }
        },
        "sql_ans": [
            [
                "John Dorian",
                1
            ],
            [
                "Elliot Reid",
                2
            ],
            [
                "Christopher Turk",
                1
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[]-(T2:Patient)\nWITH count(T1.EmployeeID) AS count, T1.Name AS Name\nRETURN Name,count(*)",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians who are in charge of more than one patient.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid HAVING count(*)  >  1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.PCP"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "having": {
                "gt": [
                    {
                        "count": "*"
                    },
                    1
                ]
            }
        },
        "sql_ans": [
            [
                "Elliot Reid"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[]-(T2:Patient)\nWITH count(*) AS count, T1.Name AS Name\nWHERE count >1\nRETURN Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Which physicians are in charge of more than one patient? Give me their names.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid HAVING count(*)  >  1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.PCP"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "having": {
                "gt": [
                    {
                        "count": "*"
                    },
                    1
                ]
            }
        },
        "sql_ans": [
            [
                "Elliot Reid"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[]-(T2:Patient)\nWITH count(*) AS count, T1.Name AS Name\nWHERE count >1\nRETURN Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms located on each block floor.",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockFloor AS BlockFloor, count(T1.BlockFloor) AS count\nRETURN count(*),BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms does each block floor have?",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockFloor AS BlockFloor, count(T1.BlockFloor) AS count\nRETURN count(*),BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms for different block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockCode) AS count, T1.BlockCode AS BlockCode\nRETURN count(*),BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms are located for each block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockCode) AS count, T1.BlockCode AS BlockCode\nRETURN count(*),BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of medications prescribed for each brand.",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH count(T1.Brand) AS count, T1.Name AS Name\nRETURN count(*),Name",
        "cypher_ans": [
            [
                1,
                "Procrastin-X"
            ],
            [
                1,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many medications are prescribed for each brand?",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH count(T1.Brand) AS count, T1.Name AS Name\nRETURN count(*),Name",
        "cypher_ans": [
            [
                1,
                "Procrastin-X"
            ],
            [
                1,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians whose position title contains the word 'senior'.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of the physicians who have 'senior' in their titles.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the names of all patients who have an undergoing treatment and are staying in room 111.",
        "sql_query": "SELECT DISTINCT T2.name FROM undergoes AS T1 JOIN patient AS T2 ON T1.patient = T2.SSN JOIN stay AS T3 ON T1.Stay  =  T3.StayID WHERE T3.room  =  111",
        "parsed_sql": {
            "select": {
                "value": {
                    "distinct": {
                        "value": "T2.name"
                    }
                }
            },
            "from": [
                {
                    "value": "undergoes",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.patient",
                            "T2.SSN"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "stay",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Stay",
                            "T3.StayID"
                        ]
                    }
                }
            ],
            "where": {
                "eq": [
                    "T3.room",
                    111
                ]
            }
        },
        "sql_ans": [
            [
                "John Smith"
            ]
        ],
        "cypher_query": "MATCH (T1:Undergoes)-[]-(T2:Patient)-[]-(T3:Stay)\nWHERE T3.Room=111\nRETURN DISTINCT T2.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of patients who are staying in room 111 and have an undergoing treatment?",
        "sql_query": "SELECT DISTINCT T2.name FROM undergoes AS T1 JOIN patient AS T2 ON T1.patient = T2.SSN JOIN stay AS T3 ON T1.Stay  =  T3.StayID WHERE T3.room  =  111",
        "parsed_sql": {
            "select": {
                "value": {
                    "distinct": {
                        "value": "T2.name"
                    }
                }
            },
            "from": [
                {
                    "value": "undergoes",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.patient",
                            "T2.SSN"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "stay",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Stay",
                            "T3.StayID"
                        ]
                    }
                }
            ],
            "where": {
                "eq": [
                    "T3.room",
                    111
                ]
            }
        },
        "sql_ans": [
            [
                "John Smith"
            ]
        ],
        "cypher_query": "MATCH (T1:Undergoes)-[]-(T2:Patient)-[]-(T3:Stay)\nWHERE T3.Room=111\nRETURN DISTINCT T2.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the physicians who are trained in a procedure that costs more than 5000.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment WHERE T3.cost  >  5000",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "where": {
                "gt": [
                    "T3.cost",
                    5000
                ]
            }
        },
        "sql_ans": [
            [
                "Christopher Turk"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "John Wen"
            ],
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[]-(T2:trained_in)-[]-(T3:Procedures)\nWHERE T3.Cost>5000\nRETURN T1.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Which physicians are trained in procedures that are more expensive than 5000?",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment WHERE T3.cost  >  5000",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "where": {
                "gt": [
                    "T3.cost",
                    5000
                ]
            }
        },
        "sql_ans": [
            [
                "Christopher Turk"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "John Wen"
            ],
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[]-(T2:trained_in)-[]-(T3:Procedures)\nWHERE T3.Cost>5000\nRETURN T1.Name",
        "cypher_ans": []
    }
][
    {
        "db_id": "hospital_1",
        "question": "List the name of physicians who took some appointment.",
        "sql_query": "SELECT T2.name FROM appointment AS T1 JOIN physician AS T2 ON T1.Physician  =  T2.EmployeeID",
        "parsed_sql": {
            "select": {
                "value": "T2.name"
            },
            "from": [
                {
                    "value": "appointment",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Physician",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "John Dorian"
            ],
            [
                "Elliot Reid"
            ],
            [
                "John Dorian"
            ],
            [
                "Percival Cox"
            ],
            [
                "Percival Cox"
            ],
            [
                "Elliot Reid"
            ],
            [
                "Christopher Turk"
            ],
            [
                "Molly Clock"
            ],
            [
                "Elliot Reid"
            ]
        ],
        "cypher_query": "MATCH (T1:Appointment)-[]-(T2:Physician)\nRETURN T2.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of all the physicians who took appointments.",
        "sql_query": "SELECT T2.name FROM appointment AS T1 JOIN physician AS T2 ON T1.Physician  =  T2.EmployeeID",
        "parsed_sql": {
            "select": {
                "value": "T2.name"
            },
            "from": [
                {
                    "value": "appointment",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Physician",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "John Dorian"
            ],
            [
                "Elliot Reid"
            ],
            [
                "John Dorian"
            ],
            [
                "Percival Cox"
            ],
            [
                "Percival Cox"
            ],
            [
                "Elliot Reid"
            ],
            [
                "Christopher Turk"
            ],
            [
                "Molly Clock"
            ],
            [
                "Elliot Reid"
            ]
        ],
        "cypher_query": "MATCH (T1:Appointment)-[]-(T2:Physician)\nRETURN T2.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many patients do each physician take care of? List their names and number of patients they take care of.",
        "sql_query": "SELECT T1.name ,  count(*) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.PCP"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            }
        },
        "sql_ans": [
            [
                "John Dorian",
                1
            ],
            [
                "Elliot Reid",
                2
            ],
            [
                "Christopher Turk",
                1
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[]-(T2:Patient)\nWITH count(T1.EmployeeID) AS count, T1.Name AS Name\nRETURN Name,count(*)",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Return the name of each physician and the number of patients he or she treats.",
        "sql_query": "SELECT T1.name ,  count(*) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.PCP"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            }
        },
        "sql_ans": [
            [
                "John Dorian",
                1
            ],
            [
                "Elliot Reid",
                2
            ],
            [
                "Christopher Turk",
                1
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[]-(T2:Patient)\nWITH count(T1.EmployeeID) AS count, T1.Name AS Name\nRETURN Name,count(*)",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians who are in charge of more than one patient.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid HAVING count(*)  >  1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.PCP"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "having": {
                "gt": [
                    {
                        "count": "*"
                    },
                    1
                ]
            }
        },
        "sql_ans": [
            [
                "Elliot Reid"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[]-(T2:Patient)\nWITH count(*) AS count, T1.Name AS Name\nWHERE count  > 1\nRETURN Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Which physicians are in charge of more than one patient? Give me their names.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid HAVING count(*)  >  1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.PCP"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "having": {
                "gt": [
                    {
                        "count": "*"
                    },
                    1
                ]
            }
        },
        "sql_ans": [
            [
                "Elliot Reid"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[]-(T2:Patient)\nWITH count(*) AS count, T1.Name AS Name\nWHERE count  > 1\nRETURN Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms located on each block floor.",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockFloor AS BlockFloor, count(T1.BlockFloor) AS count\nRETURN count(*),BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms does each block floor have?",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockFloor AS BlockFloor, count(T1.BlockFloor) AS count\nRETURN count(*),BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms for different block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockCode) AS count, T1.BlockCode AS BlockCode\nRETURN count(*),BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms are located for each block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockCode) AS count, T1.BlockCode AS BlockCode\nRETURN count(*),BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of medications prescribed for each brand.",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH count(T1.Brand) AS count, T1.Name AS Name\nRETURN count(*),Name",
        "cypher_ans": [
            [
                1,
                "Procrastin-X"
            ],
            [
                1,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many medications are prescribed for each brand?",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH count(T1.Brand) AS count, T1.Name AS Name\nRETURN count(*),Name",
        "cypher_ans": [
            [
                1,
                "Procrastin-X"
            ],
            [
                1,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians whose position title contains the word 'senior'.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of the physicians who have 'senior' in their titles.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the names of all patients who have an undergoing treatment and are staying in room 111.",
        "sql_query": "SELECT DISTINCT T2.name FROM undergoes AS T1 JOIN patient AS T2 ON T1.patient = T2.SSN JOIN stay AS T3 ON T1.Stay  =  T3.StayID WHERE T3.room  =  111",
        "parsed_sql": {
            "select": {
                "value": {
                    "distinct": {
                        "value": "T2.name"
                    }
                }
            },
            "from": [
                {
                    "value": "undergoes",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.patient",
                            "T2.SSN"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "stay",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Stay",
                            "T3.StayID"
                        ]
                    }
                }
            ],
            "where": {
                "eq": [
                    "T3.room",
                    111
                ]
            }
        },
        "sql_ans": [
            [
                "John Smith"
            ]
        ],
        "cypher_query": "MATCH (T1:Undergoes)-[]-(T2:Patient)-[]-(T3:Stay)\nWHERE T3.Room = 111\nRETURN DISTINCT T2.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of patients who are staying in room 111 and have an undergoing treatment?",
        "sql_query": "SELECT DISTINCT T2.name FROM undergoes AS T1 JOIN patient AS T2 ON T1.patient = T2.SSN JOIN stay AS T3 ON T1.Stay  =  T3.StayID WHERE T3.room  =  111",
        "parsed_sql": {
            "select": {
                "value": {
                    "distinct": {
                        "value": "T2.name"
                    }
                }
            },
            "from": [
                {
                    "value": "undergoes",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.patient",
                            "T2.SSN"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "stay",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Stay",
                            "T3.StayID"
                        ]
                    }
                }
            ],
            "where": {
                "eq": [
                    "T3.room",
                    111
                ]
            }
        },
        "sql_ans": [
            [
                "John Smith"
            ]
        ],
        "cypher_query": "MATCH (T1:Undergoes)-[]-(T2:Patient)-[]-(T3:Stay)\nWHERE T3.Room = 111\nRETURN DISTINCT T2.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the physicians who are trained in a procedure that costs more than 5000.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment WHERE T3.cost  >  5000",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "where": {
                "gt": [
                    "T3.cost",
                    5000
                ]
            }
        },
        "sql_ans": [
            [
                "Christopher Turk"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "John Wen"
            ],
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[]-(T2:trained_in)-[]-(T3:Procedures)\nWHERE T3.Cost > 5000\nRETURN T1.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Which physicians are trained in procedures that are more expensive than 5000?",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment WHERE T3.cost  >  5000",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "where": {
                "gt": [
                    "T3.cost",
                    5000
                ]
            }
        },
        "sql_ans": [
            [
                "Christopher Turk"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "John Wen"
            ],
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[]-(T2:trained_in)-[]-(T3:Procedures)\nWHERE T3.Cost > 5000\nRETURN T1.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians who are affiliated with Surgery or Psychiatry department.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN affiliated_with AS T2 ON T1.EmployeeID  =  T2.physician JOIN department AS T3 ON T2.department  =  T3.DepartmentID WHERE T3.name  =  'Surgery' OR T3.name  =  'Psychiatry'",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "affiliated_with",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.EmployeeID",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "department",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T2.department",
                            "T3.DepartmentID"
                        ]
                    }
                }
            ],
            "where": {
                "or": [
                    {
                        "eq": [
                            "T3.name",
                            {
                                "literal": "Surgery"
                            }
                        ]
                    },
                    {
                        "eq": [
                            "T3.name",
                            {
                                "literal": "Psychiatry"
                            }
                        ]
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Christopher Turk"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "John Wen"
            ],
            [
                "Molly Clock"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[]-(T2:affiliated_with)-[]-(T3:Department)\nWHERE T3.Name = 'Surgery' OR T3.Name = 'Psychiatry'\nRETURN T1.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Which physicians are affiliated with either Surgery or Psychiatry department? Give me their names.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN affiliated_with AS T2 ON T1.EmployeeID  =  T2.physician JOIN department AS T3 ON T2.department  =  T3.DepartmentID WHERE T3.name  =  'Surgery' OR T3.name  =  'Psychiatry'",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "affiliated_with",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.EmployeeID",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "department",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T2.department",
                            "T3.DepartmentID"
                        ]
                    }
                }
            ],
            "where": {
                "or": [
                    {
                        "eq": [
                            "T3.name",
                            {
                                "literal": "Surgery"
                            }
                        ]
                    },
                    {
                        "eq": [
                            "T3.name",
                            {
                                "literal": "Psychiatry"
                            }
                        ]
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Christopher Turk"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "John Wen"
            ],
            [
                "Molly Clock"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[]-(T2:affiliated_with)-[]-(T3:Department)\nWHERE T3.Name = 'Surgery' OR T3.Name = 'Psychiatry'\nRETURN T1.Name",
        "cypher_ans": []
    }
][
    {
        "db_id": "hospital_1",
        "question": "List the name of physicians who took some appointment.",
        "sql_query": "SELECT T2.name FROM appointment AS T1 JOIN physician AS T2 ON T1.Physician  =  T2.EmployeeID",
        "parsed_sql": {
            "select": {
                "value": "T2.name"
            },
            "from": [
                {
                    "value": "appointment",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Physician",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "John Dorian"
            ],
            [
                "Elliot Reid"
            ],
            [
                "John Dorian"
            ],
            [
                "Percival Cox"
            ],
            [
                "Percival Cox"
            ],
            [
                "Elliot Reid"
            ],
            [
                "Christopher Turk"
            ],
            [
                "Molly Clock"
            ],
            [
                "Elliot Reid"
            ]
        ],
        "cypher_query": "MATCH (T1:Appointment)-[]-(T2:Physician)\nRETURN T2.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of all the physicians who took appointments.",
        "sql_query": "SELECT T2.name FROM appointment AS T1 JOIN physician AS T2 ON T1.Physician  =  T2.EmployeeID",
        "parsed_sql": {
            "select": {
                "value": "T2.name"
            },
            "from": [
                {
                    "value": "appointment",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Physician",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "John Dorian"
            ],
            [
                "Elliot Reid"
            ],
            [
                "John Dorian"
            ],
            [
                "Percival Cox"
            ],
            [
                "Percival Cox"
            ],
            [
                "Elliot Reid"
            ],
            [
                "Christopher Turk"
            ],
            [
                "Molly Clock"
            ],
            [
                "Elliot Reid"
            ]
        ],
        "cypher_query": "MATCH (T1:Appointment)-[]-(T2:Physician)\nRETURN T2.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many patients do each physician take care of? List their names and number of patients they take care of.",
        "sql_query": "SELECT T1.name ,  count(*) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.PCP"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            }
        },
        "sql_ans": [
            [
                "John Dorian",
                1
            ],
            [
                "Elliot Reid",
                2
            ],
            [
                "Christopher Turk",
                1
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[]-(T2:Patient)\nWITH T1.Name AS Name, count(T1.EmployeeID) AS count\nRETURN Name,count(*)",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Return the name of each physician and the number of patients he or she treats.",
        "sql_query": "SELECT T1.name ,  count(*) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.PCP"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            }
        },
        "sql_ans": [
            [
                "John Dorian",
                1
            ],
            [
                "Elliot Reid",
                2
            ],
            [
                "Christopher Turk",
                1
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[]-(T2:Patient)\nWITH T1.Name AS Name, count(T1.EmployeeID) AS count\nRETURN Name,count(*)",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians who are in charge of more than one patient.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid HAVING count(*)  >  1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.PCP"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "having": {
                "gt": [
                    {
                        "count": "*"
                    },
                    1
                ]
            }
        },
        "sql_ans": [
            [
                "Elliot Reid"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[]-(T2:Patient)\nWITH T1.Name AS Name, count(*) AS count\nWHERE count  > 1\nRETURN Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Which physicians are in charge of more than one patient? Give me their names.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid HAVING count(*)  >  1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.PCP"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "having": {
                "gt": [
                    {
                        "count": "*"
                    },
                    1
                ]
            }
        },
        "sql_ans": [
            [
                "Elliot Reid"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[]-(T2:Patient)\nWITH T1.Name AS Name, count(*) AS count\nWHERE count  > 1\nRETURN Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms located on each block floor.",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockFloor) AS count, T1.BlockFloor AS BlockFloor\nRETURN count(*),BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms does each block floor have?",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockFloor) AS count, T1.BlockFloor AS BlockFloor\nRETURN count(*),BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms for different block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockCode) AS count, T1.BlockCode AS BlockCode\nRETURN count(*),BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms are located for each block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockCode) AS count, T1.BlockCode AS BlockCode\nRETURN count(*),BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of medications prescribed for each brand.",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH count(T1.Brand) AS count, T1.Name AS Name\nRETURN count(*),Name",
        "cypher_ans": [
            [
                1,
                "Procrastin-X"
            ],
            [
                1,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many medications are prescribed for each brand?",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH count(T1.Brand) AS count, T1.Name AS Name\nRETURN count(*),Name",
        "cypher_ans": [
            [
                1,
                "Procrastin-X"
            ],
            [
                1,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians whose position title contains the word 'senior'.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of the physicians who have 'senior' in their titles.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the names of all patients who have an undergoing treatment and are staying in room 111.",
        "sql_query": "SELECT DISTINCT T2.name FROM undergoes AS T1 JOIN patient AS T2 ON T1.patient = T2.SSN JOIN stay AS T3 ON T1.Stay  =  T3.StayID WHERE T3.room  =  111",
        "parsed_sql": {
            "select": {
                "value": {
                    "distinct": {
                        "value": "T2.name"
                    }
                }
            },
            "from": [
                {
                    "value": "undergoes",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.patient",
                            "T2.SSN"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "stay",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Stay",
                            "T3.StayID"
                        ]
                    }
                }
            ],
            "where": {
                "eq": [
                    "T3.room",
                    111
                ]
            }
        },
        "sql_ans": [
            [
                "John Smith"
            ]
        ],
        "cypher_query": "MATCH (T1:Undergoes)-[]-(T2:Patient)-[]-(T3:Stay)\nWHERE T3.Room = 111\nRETURN DISTINCT T2.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of patients who are staying in room 111 and have an undergoing treatment?",
        "sql_query": "SELECT DISTINCT T2.name FROM undergoes AS T1 JOIN patient AS T2 ON T1.patient = T2.SSN JOIN stay AS T3 ON T1.Stay  =  T3.StayID WHERE T3.room  =  111",
        "parsed_sql": {
            "select": {
                "value": {
                    "distinct": {
                        "value": "T2.name"
                    }
                }
            },
            "from": [
                {
                    "value": "undergoes",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.patient",
                            "T2.SSN"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "stay",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Stay",
                            "T3.StayID"
                        ]
                    }
                }
            ],
            "where": {
                "eq": [
                    "T3.room",
                    111
                ]
            }
        },
        "sql_ans": [
            [
                "John Smith"
            ]
        ],
        "cypher_query": "MATCH (T1:Undergoes)-[]-(T2:Patient)-[]-(T3:Stay)\nWHERE T3.Room = 111\nRETURN DISTINCT T2.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the physicians who are trained in a procedure that costs more than 5000.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment WHERE T3.cost  >  5000",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "where": {
                "gt": [
                    "T3.cost",
                    5000
                ]
            }
        },
        "sql_ans": [
            [
                "Christopher Turk"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "John Wen"
            ],
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[]-(T2:trained_in)-[]-(T3:Procedures)\nWHERE T3.Cost > 5000\nRETURN T1.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Which physicians are trained in procedures that are more expensive than 5000?",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment WHERE T3.cost  >  5000",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "where": {
                "gt": [
                    "T3.cost",
                    5000
                ]
            }
        },
        "sql_ans": [
            [
                "Christopher Turk"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "John Wen"
            ],
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[]-(T2:trained_in)-[]-(T3:Procedures)\nWHERE T3.Cost > 5000\nRETURN T1.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians who are affiliated with Surgery or Psychiatry department.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN affiliated_with AS T2 ON T1.EmployeeID  =  T2.physician JOIN department AS T3 ON T2.department  =  T3.DepartmentID WHERE T3.name  =  'Surgery' OR T3.name  =  'Psychiatry'",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "affiliated_with",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.EmployeeID",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "department",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T2.department",
                            "T3.DepartmentID"
                        ]
                    }
                }
            ],
            "where": {
                "or": [
                    {
                        "eq": [
                            "T3.name",
                            {
                                "literal": "Surgery"
                            }
                        ]
                    },
                    {
                        "eq": [
                            "T3.name",
                            {
                                "literal": "Psychiatry"
                            }
                        ]
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Christopher Turk"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "John Wen"
            ],
            [
                "Molly Clock"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[]-(T2:affiliated_with)-[]-(T3:Department)\nWHERE T3.Name = 'Surgery' OR T3.Name = 'Psychiatry'\nRETURN T1.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Which physicians are affiliated with either Surgery or Psychiatry department? Give me their names.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN affiliated_with AS T2 ON T1.EmployeeID  =  T2.physician JOIN department AS T3 ON T2.department  =  T3.DepartmentID WHERE T3.name  =  'Surgery' OR T3.name  =  'Psychiatry'",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "affiliated_with",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.EmployeeID",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "department",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T2.department",
                            "T3.DepartmentID"
                        ]
                    }
                }
            ],
            "where": {
                "or": [
                    {
                        "eq": [
                            "T3.name",
                            {
                                "literal": "Surgery"
                            }
                        ]
                    },
                    {
                        "eq": [
                            "T3.name",
                            {
                                "literal": "Psychiatry"
                            }
                        ]
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Christopher Turk"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "John Wen"
            ],
            [
                "Molly Clock"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[]-(T2:affiliated_with)-[]-(T3:Department)\nWHERE T3.Name = 'Surgery' OR T3.Name = 'Psychiatry'\nRETURN T1.Name",
        "cypher_ans": []
    }
][
    {
        "db_id": "hospital_1",
        "question": "Which physicians are affiliated with either Surgery or Psychiatry department? Give me their names.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN affiliated_with AS T2 ON T1.EmployeeID  =  T2.physician JOIN department AS T3 ON T2.department  =  T3.DepartmentID WHERE T3.name  =  'Surgery' OR T3.name  =  'Psychiatry'",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "affiliated_with",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.EmployeeID",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "department",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T2.department",
                            "T3.DepartmentID"
                        ]
                    }
                }
            ],
            "where": {
                "or": [
                    {
                        "eq": [
                            "T3.name",
                            {
                                "literal": "Surgery"
                            }
                        ]
                    },
                    {
                        "eq": [
                            "T3.name",
                            {
                                "literal": "Psychiatry"
                            }
                        ]
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Christopher Turk"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "John Wen"
            ],
            [
                "Molly Clock"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[]-(T2:affiliated_with)-[]-(T3:Department)\nWHERE T3.Name = 'Surgery' OR T3.Name = 'Psychiatry'\nRETURN T1.Name",
        "cypher_ans": []
    }
][
    {
        "db_id": "hospital_1",
        "question": "Which physicians are affiliated with either Surgery or Psychiatry department? Give me their names.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN affiliated_with AS T2 ON T1.EmployeeID  =  T2.physician JOIN department AS T3 ON T2.department  =  T3.DepartmentID WHERE T3.name  =  'Surgery' OR T3.name  =  'Psychiatry'",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "affiliated_with",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.EmployeeID",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "department",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T2.department",
                            "T3.DepartmentID"
                        ]
                    }
                }
            ],
            "where": {
                "or": [
                    {
                        "eq": [
                            "T3.name",
                            {
                                "literal": "Surgery"
                            }
                        ]
                    },
                    {
                        "eq": [
                            "T3.name",
                            {
                                "literal": "Psychiatry"
                            }
                        ]
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Christopher Turk"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "John Wen"
            ],
            [
                "Molly Clock"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[]-(T2:affiliated_with)-[]-(T3:Department)\nWHERE T3.Name = 'Surgery' OR T3.Name = 'Psychiatry'\nRETURN T1.Name",
        "cypher_ans": []
    }
][
    {
        "db_id": "hospital_1",
        "question": "Which physicians are affiliated with either Surgery or Psychiatry department? Give me their names.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN affiliated_with AS T2 ON T1.EmployeeID  =  T2.physician JOIN department AS T3 ON T2.department  =  T3.DepartmentID WHERE T3.name  =  'Surgery' OR T3.name  =  'Psychiatry'",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "affiliated_with",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.EmployeeID",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "department",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T2.department",
                            "T3.DepartmentID"
                        ]
                    }
                }
            ],
            "where": {
                "or": [
                    {
                        "eq": [
                            "T3.name",
                            {
                                "literal": "Surgery"
                            }
                        ]
                    },
                    {
                        "eq": [
                            "T3.name",
                            {
                                "literal": "Psychiatry"
                            }
                        ]
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Christopher Turk"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "John Wen"
            ],
            [
                "Molly Clock"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[]-(T2:affiliated_with)-[]-(T3:Department)\nWHERE T3.Name = 'Surgery' OR T3.Name = 'Psychiatry'\nRETURN T1.Name",
        "cypher_ans": []
    }
][
    {
        "db_id": "hospital_1",
        "question": "Which physicians are affiliated with either Surgery or Psychiatry department? Give me their names.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN affiliated_with AS T2 ON T1.EmployeeID  =  T2.physician JOIN department AS T3 ON T2.department  =  T3.DepartmentID WHERE T3.name  =  'Surgery' OR T3.name  =  'Psychiatry'",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "affiliated_with",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.EmployeeID",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "department",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T2.department",
                            "T3.DepartmentID"
                        ]
                    }
                }
            ],
            "where": {
                "or": [
                    {
                        "eq": [
                            "T3.name",
                            {
                                "literal": "Surgery"
                            }
                        ]
                    },
                    {
                        "eq": [
                            "T3.name",
                            {
                                "literal": "Psychiatry"
                            }
                        ]
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Christopher Turk"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "John Wen"
            ],
            [
                "Molly Clock"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[]-(T2:affiliated_with)-[]-(T3:Department)\nWHERE T3.Name = 'Surgery' OR T3.Name = 'Psychiatry'\nRETURN T1.Name",
        "cypher_ans": []
    }
][
    {
        "db_id": "hospital_1",
        "question": "Which physicians are affiliated with either Surgery or Psychiatry department? Give me their names.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN affiliated_with AS T2 ON T1.EmployeeID  =  T2.physician JOIN department AS T3 ON T2.department  =  T3.DepartmentID WHERE T3.name  =  'Surgery' OR T3.name  =  'Psychiatry'",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "affiliated_with",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.EmployeeID",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "department",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T2.department",
                            "T3.DepartmentID"
                        ]
                    }
                }
            ],
            "where": {
                "or": [
                    {
                        "eq": [
                            "T3.name",
                            {
                                "literal": "Surgery"
                            }
                        ]
                    },
                    {
                        "eq": [
                            "T3.name",
                            {
                                "literal": "Psychiatry"
                            }
                        ]
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Christopher Turk"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "John Wen"
            ],
            [
                "Molly Clock"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[]-(T2:affiliated_with)-[]-(T3:Department)\nWHERE T3.Name = 'Surgery' OR T3.Name = 'Psychiatry'\nRETURN T1.Name",
        "cypher_ans": []
    }
][
    {
        "db_id": "hospital_1",
        "question": "Which physicians are affiliated with either Surgery or Psychiatry department? Give me their names.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN affiliated_with AS T2 ON T1.EmployeeID  =  T2.physician JOIN department AS T3 ON T2.department  =  T3.DepartmentID WHERE T3.name  =  'Surgery' OR T3.name  =  'Psychiatry'",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "affiliated_with",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.EmployeeID",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "department",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T2.department",
                            "T3.DepartmentID"
                        ]
                    }
                }
            ],
            "where": {
                "or": [
                    {
                        "eq": [
                            "T3.name",
                            {
                                "literal": "Surgery"
                            }
                        ]
                    },
                    {
                        "eq": [
                            "T3.name",
                            {
                                "literal": "Psychiatry"
                            }
                        ]
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Christopher Turk"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "John Wen"
            ],
            [
                "Molly Clock"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[]-(T2:affiliated_with)-[]-(T3:Department)\nWHERE T3.Name = 'Surgery' OR T3.Name = 'Psychiatry'\nRETURN T1.Name",
        "cypher_ans": []
    }
][][][][][
    {
        "db_id": "hospital_1",
        "question": "List the name of physicians who took some appointment.",
        "sql_query": "SELECT T2.name FROM appointment AS T1 JOIN physician AS T2 ON T1.Physician  =  T2.EmployeeID",
        "parsed_sql": {
            "select": {
                "value": "T2.name"
            },
            "from": [
                {
                    "value": "appointment",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Physician",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "John Dorian"
            ],
            [
                "Elliot Reid"
            ],
            [
                "John Dorian"
            ],
            [
                "Percival Cox"
            ],
            [
                "Percival Cox"
            ],
            [
                "Elliot Reid"
            ],
            [
                "Christopher Turk"
            ],
            [
                "Molly Clock"
            ],
            [
                "Elliot Reid"
            ]
        ],
        "cypher_query": "MATCH (T1:Appointment)-[]-(T2:Physician)\nRETURN T2.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of all the physicians who took appointments.",
        "sql_query": "SELECT T2.name FROM appointment AS T1 JOIN physician AS T2 ON T1.Physician  =  T2.EmployeeID",
        "parsed_sql": {
            "select": {
                "value": "T2.name"
            },
            "from": [
                {
                    "value": "appointment",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Physician",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "John Dorian"
            ],
            [
                "Elliot Reid"
            ],
            [
                "John Dorian"
            ],
            [
                "Percival Cox"
            ],
            [
                "Percival Cox"
            ],
            [
                "Elliot Reid"
            ],
            [
                "Christopher Turk"
            ],
            [
                "Molly Clock"
            ],
            [
                "Elliot Reid"
            ]
        ],
        "cypher_query": "MATCH (T1:Appointment)-[]-(T2:Physician)\nRETURN T2.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many patients do each physician take care of? List their names and number of patients they take care of.",
        "sql_query": "SELECT T1.name ,  count(*) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.PCP"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            }
        },
        "sql_ans": [
            [
                "John Dorian",
                1
            ],
            [
                "Elliot Reid",
                2
            ],
            [
                "Christopher Turk",
                1
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[]-(T2:Patient)\nWITH T1.Name AS Name, count(T1.EmployeeID) AS count\nRETURN Name,count(*)",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Return the name of each physician and the number of patients he or she treats.",
        "sql_query": "SELECT T1.name ,  count(*) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.PCP"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            }
        },
        "sql_ans": [
            [
                "John Dorian",
                1
            ],
            [
                "Elliot Reid",
                2
            ],
            [
                "Christopher Turk",
                1
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[]-(T2:Patient)\nWITH T1.Name AS Name, count(T1.EmployeeID) AS count\nRETURN Name,count(*)",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians who are in charge of more than one patient.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid HAVING count(*)  >  1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.PCP"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "having": {
                "gt": [
                    {
                        "count": "*"
                    },
                    1
                ]
            }
        },
        "sql_ans": [
            [
                "Elliot Reid"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[]-(T2:Patient)\nWITH T1.Name AS Name, count(*) AS count\nWHERE count  > 1\nRETURN Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Which physicians are in charge of more than one patient? Give me their names.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid HAVING count(*)  >  1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.PCP"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "having": {
                "gt": [
                    {
                        "count": "*"
                    },
                    1
                ]
            }
        },
        "sql_ans": [
            [
                "Elliot Reid"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[]-(T2:Patient)\nWITH T1.Name AS Name, count(*) AS count\nWHERE count  > 1\nRETURN Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms located on each block floor.",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockFloor) AS count, T1.BlockFloor AS BlockFloor\nRETURN count(*),BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms does each block floor have?",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockFloor) AS count, T1.BlockFloor AS BlockFloor\nRETURN count(*),BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms for different block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockCode) AS count, T1.BlockCode AS BlockCode\nRETURN count(*),BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms are located for each block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockCode) AS count, T1.BlockCode AS BlockCode\nRETURN count(*),BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of medications prescribed for each brand.",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH T1.Name AS Name, count(T1.Brand) AS count\nRETURN count(*),Name",
        "cypher_ans": [
            [
                1,
                "Procrastin-X"
            ],
            [
                1,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many medications are prescribed for each brand?",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH T1.Name AS Name, count(T1.Brand) AS count\nRETURN count(*),Name",
        "cypher_ans": [
            [
                1,
                "Procrastin-X"
            ],
            [
                1,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians whose position title contains the word 'senior'.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of the physicians who have 'senior' in their titles.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the names of all patients who have an undergoing treatment and are staying in room 111.",
        "sql_query": "SELECT DISTINCT T2.name FROM undergoes AS T1 JOIN patient AS T2 ON T1.patient = T2.SSN JOIN stay AS T3 ON T1.Stay  =  T3.StayID WHERE T3.room  =  111",
        "parsed_sql": {
            "select": {
                "value": {
                    "distinct": {
                        "value": "T2.name"
                    }
                }
            },
            "from": [
                {
                    "value": "undergoes",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.patient",
                            "T2.SSN"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "stay",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Stay",
                            "T3.StayID"
                        ]
                    }
                }
            ],
            "where": {
                "eq": [
                    "T3.room",
                    111
                ]
            }
        },
        "sql_ans": [
            [
                "John Smith"
            ]
        ],
        "cypher_query": "MATCH (T1:Undergoes)-[]-(T2:Patient)-[]-(T3:Stay)\nWHERE T3.Room = 111\nRETURN DISTINCT T2.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of patients who are staying in room 111 and have an undergoing treatment?",
        "sql_query": "SELECT DISTINCT T2.name FROM undergoes AS T1 JOIN patient AS T2 ON T1.patient = T2.SSN JOIN stay AS T3 ON T1.Stay  =  T3.StayID WHERE T3.room  =  111",
        "parsed_sql": {
            "select": {
                "value": {
                    "distinct": {
                        "value": "T2.name"
                    }
                }
            },
            "from": [
                {
                    "value": "undergoes",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.patient",
                            "T2.SSN"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "stay",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Stay",
                            "T3.StayID"
                        ]
                    }
                }
            ],
            "where": {
                "eq": [
                    "T3.room",
                    111
                ]
            }
        },
        "sql_ans": [
            [
                "John Smith"
            ]
        ],
        "cypher_query": "MATCH (T1:Undergoes)-[]-(T2:Patient)-[]-(T3:Stay)\nWHERE T3.Room = 111\nRETURN DISTINCT T2.Name",
        "cypher_ans": []
    }
][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][
    {
        "db_id": "hospital_1",
        "question": "List the name of physicians who took some appointment.",
        "sql_query": "SELECT T2.name FROM appointment AS T1 JOIN physician AS T2 ON T1.Physician  =  T2.EmployeeID",
        "parsed_sql": {
            "select": {
                "value": "T2.name"
            },
            "from": [
                {
                    "value": "appointment",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Physician",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "John Dorian"
            ],
            [
                "Elliot Reid"
            ],
            [
                "John Dorian"
            ],
            [
                "Percival Cox"
            ],
            [
                "Percival Cox"
            ],
            [
                "Elliot Reid"
            ],
            [
                "Christopher Turk"
            ],
            [
                "Molly Clock"
            ],
            [
                "Elliot Reid"
            ]
        ],
        "cypher_query": "MATCH (T1:Appointment)-[]-(T2:Physician)\nRETURN T2.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of all the physicians who took appointments.",
        "sql_query": "SELECT T2.name FROM appointment AS T1 JOIN physician AS T2 ON T1.Physician  =  T2.EmployeeID",
        "parsed_sql": {
            "select": {
                "value": "T2.name"
            },
            "from": [
                {
                    "value": "appointment",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Physician",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "John Dorian"
            ],
            [
                "Elliot Reid"
            ],
            [
                "John Dorian"
            ],
            [
                "Percival Cox"
            ],
            [
                "Percival Cox"
            ],
            [
                "Elliot Reid"
            ],
            [
                "Christopher Turk"
            ],
            [
                "Molly Clock"
            ],
            [
                "Elliot Reid"
            ]
        ],
        "cypher_query": "MATCH (T1:Appointment)-[]-(T2:Physician)\nRETURN T2.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many patients do each physician take care of? List their names and number of patients they take care of.",
        "sql_query": "SELECT T1.name ,  count(*) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.PCP"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            }
        },
        "sql_ans": [
            [
                "John Dorian",
                1
            ],
            [
                "Elliot Reid",
                2
            ],
            [
                "Christopher Turk",
                1
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[]-(T2:Patient)\nWITH T1.Name AS Name, count(T1.EmployeeID) AS count\nRETURN Name,count(\"*\")",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Return the name of each physician and the number of patients he or she treats.",
        "sql_query": "SELECT T1.name ,  count(*) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.PCP"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            }
        },
        "sql_ans": [
            [
                "John Dorian",
                1
            ],
            [
                "Elliot Reid",
                2
            ],
            [
                "Christopher Turk",
                1
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[]-(T2:Patient)\nWITH T1.Name AS Name, count(T1.EmployeeID) AS count\nRETURN Name,count(\"*\")",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians who are in charge of more than one patient.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid HAVING count(*)  >  1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.PCP"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "having": {
                "gt": [
                    {
                        "count": "*"
                    },
                    1
                ]
            }
        },
        "sql_ans": [
            [
                "Elliot Reid"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[]-(T2:Patient)\nWITH T1.Name AS Name, count(\"*\") AS count\nWHERE count > 1\nRETURN Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Which physicians are in charge of more than one patient? Give me their names.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid HAVING count(*)  >  1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.PCP"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "having": {
                "gt": [
                    {
                        "count": "*"
                    },
                    1
                ]
            }
        },
        "sql_ans": [
            [
                "Elliot Reid"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[]-(T2:Patient)\nWITH T1.Name AS Name, count(\"*\") AS count\nWHERE count > 1\nRETURN Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms located on each block floor.",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockFloor AS BlockFloor, count(T1.BlockFloor) AS count\nRETURN count(\"*\"),BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms does each block floor have?",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockFloor AS BlockFloor, count(T1.BlockFloor) AS count\nRETURN count(\"*\"),BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms for different block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockCode AS BlockCode, count(T1.BlockCode) AS count\nRETURN count(\"*\"),BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms are located for each block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockCode AS BlockCode, count(T1.BlockCode) AS count\nRETURN count(\"*\"),BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of medications prescribed for each brand.",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH T1.Name AS Name, count(T1.Brand) AS count\nRETURN count(\"*\"),Name",
        "cypher_ans": [
            [
                1,
                "Procrastin-X"
            ],
            [
                1,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many medications are prescribed for each brand?",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH T1.Name AS Name, count(T1.Brand) AS count\nRETURN count(\"*\"),Name",
        "cypher_ans": [
            [
                1,
                "Procrastin-X"
            ],
            [
                1,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians whose position title contains the word 'senior'.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of the physicians who have 'senior' in their titles.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the names of all patients who have an undergoing treatment and are staying in room 111.",
        "sql_query": "SELECT DISTINCT T2.name FROM undergoes AS T1 JOIN patient AS T2 ON T1.patient = T2.SSN JOIN stay AS T3 ON T1.Stay  =  T3.StayID WHERE T3.room  =  111",
        "parsed_sql": {
            "select": {
                "value": {
                    "distinct": {
                        "value": "T2.name"
                    }
                }
            },
            "from": [
                {
                    "value": "undergoes",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.patient",
                            "T2.SSN"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "stay",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Stay",
                            "T3.StayID"
                        ]
                    }
                }
            ],
            "where": {
                "eq": [
                    "T3.room",
                    111
                ]
            }
        },
        "sql_ans": [
            [
                "John Smith"
            ]
        ],
        "cypher_query": "MATCH (T1:Undergoes)-[]-(T2:Patient)-[]-(T3:Stay)\nWHERE T3.Room = 111\nRETURN DISTINCT T2.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of patients who are staying in room 111 and have an undergoing treatment?",
        "sql_query": "SELECT DISTINCT T2.name FROM undergoes AS T1 JOIN patient AS T2 ON T1.patient = T2.SSN JOIN stay AS T3 ON T1.Stay  =  T3.StayID WHERE T3.room  =  111",
        "parsed_sql": {
            "select": {
                "value": {
                    "distinct": {
                        "value": "T2.name"
                    }
                }
            },
            "from": [
                {
                    "value": "undergoes",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.patient",
                            "T2.SSN"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "stay",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Stay",
                            "T3.StayID"
                        ]
                    }
                }
            ],
            "where": {
                "eq": [
                    "T3.room",
                    111
                ]
            }
        },
        "sql_ans": [
            [
                "John Smith"
            ]
        ],
        "cypher_query": "MATCH (T1:Undergoes)-[]-(T2:Patient)-[]-(T3:Stay)\nWHERE T3.Room = 111\nRETURN DISTINCT T2.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What is the average cost of procedures that physician John Wen was trained in?",
        "sql_query": "SELECT avg(T3.cost) FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment WHERE T1.name  =  \"John Wen\"",
        "parsed_sql": {
            "select": {
                "value": {
                    "avg": "T3.cost"
                }
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "where": {
                "eq": [
                    "T1.name",
                    "John Wen"
                ]
            }
        },
        "sql_ans": [
            [
                4324.857142857143
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T1.Name = \"John Wen\"\nRETURN T3.Cost",
        "cypher_ans": [
            [
                4899.0
            ],
            [
                1500.0
            ],
            [
                25.0
            ],
            [
                4500.0
            ],
            [
                5600.0
            ],
            [
                3750.0
            ],
            [
                10000.0
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Compute the mean price of procedures physician John Wen was trained in.",
        "sql_query": "SELECT avg(T3.cost) FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment WHERE T1.name  =  \"John Wen\"",
        "parsed_sql": {
            "select": {
                "value": {
                    "avg": "T3.cost"
                }
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "where": {
                "eq": [
                    "T1.name",
                    "John Wen"
                ]
            }
        },
        "sql_ans": [
            [
                4324.857142857143
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T1.Name = \"John Wen\"\nRETURN T3.Cost",
        "cypher_ans": [
            [
                4899.0
            ],
            [
                1500.0
            ],
            [
                25.0
            ],
            [
                4500.0
            ],
            [
                5600.0
            ],
            [
                3750.0
            ],
            [
                10000.0
            ]
        ]
    }
][][][][][][][][][][][][][][][][][][][][][][][][
    {
        "db_id": "hospital_1",
        "question": "Which physicians are affiliated with either Surgery or Psychiatry department? Give me their names.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN affiliated_with AS T2 ON T1.EmployeeID  =  T2.physician JOIN department AS T3 ON T2.department  =  T3.DepartmentID WHERE T3.name  =  'Surgery' OR T3.name  =  'Psychiatry'",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "affiliated_with",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.EmployeeID",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "department",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T2.department",
                            "T3.DepartmentID"
                        ]
                    }
                }
            ],
            "where": {
                "or": [
                    {
                        "eq": [
                            "T3.name",
                            {
                                "literal": "Surgery"
                            }
                        ]
                    },
                    {
                        "eq": [
                            "T3.name",
                            {
                                "literal": "Psychiatry"
                            }
                        ]
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Christopher Turk"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "John Wen"
            ],
            [
                "Molly Clock"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Affiliated_With]-(T3:Department)\nWHERE T3.name = 'Surgery' OR T3.name = 'Psychiatry'\nRETURN T1.Name",
        "cypher_ans": []
    }
][][][][][
    {
        "db_id": "hospital_1",
        "question": "Which physicians are affiliated with either Surgery or Psychiatry department? Give me their names.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN affiliated_with AS T2 ON T1.EmployeeID  =  T2.physician JOIN department AS T3 ON T2.department  =  T3.DepartmentID WHERE T3.name  =  'Surgery' OR T3.name  =  'Psychiatry'",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "affiliated_with",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.EmployeeID",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "department",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T2.department",
                            "T3.DepartmentID"
                        ]
                    }
                }
            ],
            "where": {
                "or": [
                    {
                        "eq": [
                            "T3.name",
                            {
                                "literal": "Surgery"
                            }
                        ]
                    },
                    {
                        "eq": [
                            "T3.name",
                            {
                                "literal": "Psychiatry"
                            }
                        ]
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Christopher Turk"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "John Wen"
            ],
            [
                "Molly Clock"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Affiliated_With]-(T3:Department)\nWHERE T3.name = 'Surgery' OR T3.name = 'Psychiatry'\nRETURN T1.Name",
        "cypher_ans": []
    }
][
    {
        "db_id": "hospital_1",
        "question": "Which physicians are affiliated with either Surgery or Psychiatry department? Give me their names.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN affiliated_with AS T2 ON T1.EmployeeID  =  T2.physician JOIN department AS T3 ON T2.department  =  T3.DepartmentID WHERE T3.name  =  'Surgery' OR T3.name  =  'Psychiatry'",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "affiliated_with",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.EmployeeID",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "department",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T2.department",
                            "T3.DepartmentID"
                        ]
                    }
                }
            ],
            "where": {
                "or": [
                    {
                        "eq": [
                            "T3.name",
                            {
                                "literal": "Surgery"
                            }
                        ]
                    },
                    {
                        "eq": [
                            "T3.name",
                            {
                                "literal": "Psychiatry"
                            }
                        ]
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Christopher Turk"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "John Wen"
            ],
            [
                "Molly Clock"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Affiliated_With]-(T3:Department)\nWHERE T3.name = 'Surgery' OR T3.name = 'Psychiatry'\nRETURN T1.Name",
        "cypher_ans": []
    }
][][][][][][][][
    {
        "db_id": "hospital_1",
        "question": "List the name of physicians who took some appointment.",
        "sql_query": "SELECT T2.name FROM appointment AS T1 JOIN physician AS T2 ON T1.Physician  =  T2.EmployeeID",
        "parsed_sql": {
            "select": {
                "value": "T2.name"
            },
            "from": [
                {
                    "value": "appointment",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Physician",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "John Dorian"
            ],
            [
                "Elliot Reid"
            ],
            [
                "John Dorian"
            ],
            [
                "Percival Cox"
            ],
            [
                "Percival Cox"
            ],
            [
                "Elliot Reid"
            ],
            [
                "Christopher Turk"
            ],
            [
                "Molly Clock"
            ],
            [
                "Elliot Reid"
            ]
        ],
        "cypher_query": "MATCH (T1:Appointment)-[]-(T2:Physician)\nRETURN T2.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of all the physicians who took appointments.",
        "sql_query": "SELECT T2.name FROM appointment AS T1 JOIN physician AS T2 ON T1.Physician  =  T2.EmployeeID",
        "parsed_sql": {
            "select": {
                "value": "T2.name"
            },
            "from": [
                {
                    "value": "appointment",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Physician",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "John Dorian"
            ],
            [
                "Elliot Reid"
            ],
            [
                "John Dorian"
            ],
            [
                "Percival Cox"
            ],
            [
                "Percival Cox"
            ],
            [
                "Elliot Reid"
            ],
            [
                "Christopher Turk"
            ],
            [
                "Molly Clock"
            ],
            [
                "Elliot Reid"
            ]
        ],
        "cypher_query": "MATCH (T1:Appointment)-[]-(T2:Physician)\nRETURN T2.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians who are in charge of more than one patient.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid HAVING count(*)  >  1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.PCP"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "having": {
                "gt": [
                    {
                        "count": "*"
                    },
                    1
                ]
            }
        },
        "sql_ans": [
            [
                "Elliot Reid"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[]-(T2:Patient)\nWITH COUNT(\"*\") AS COUNT, T1.Name AS Name\nWHERE COUNT > 1\nRETURN Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Which physicians are in charge of more than one patient? Give me their names.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid HAVING count(*)  >  1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.PCP"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "having": {
                "gt": [
                    {
                        "count": "*"
                    },
                    1
                ]
            }
        },
        "sql_ans": [
            [
                "Elliot Reid"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[]-(T2:Patient)\nWITH COUNT(\"*\") AS COUNT, T1.Name AS Name\nWHERE COUNT > 1\nRETURN Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians whose position title contains the word 'senior'.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of the physicians who have 'senior' in their titles.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the names of all patients who have an undergoing treatment and are staying in room 111.",
        "sql_query": "SELECT DISTINCT T2.name FROM undergoes AS T1 JOIN patient AS T2 ON T1.patient = T2.SSN JOIN stay AS T3 ON T1.Stay  =  T3.StayID WHERE T3.room  =  111",
        "parsed_sql": {
            "select": {
                "value": {
                    "distinct": {
                        "value": "T2.name"
                    }
                }
            },
            "from": [
                {
                    "value": "undergoes",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.patient",
                            "T2.SSN"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "stay",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Stay",
                            "T3.StayID"
                        ]
                    }
                }
            ],
            "where": {
                "eq": [
                    "T3.room",
                    111
                ]
            }
        },
        "sql_ans": [
            [
                "John Smith"
            ]
        ],
        "cypher_query": "MATCH (T1:Undergoes)-[]-(T2:Patient)-[]-(T3:Stay)\nWHERE T3.Room = 111\nRETURN DISTINCT T2.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of patients who are staying in room 111 and have an undergoing treatment?",
        "sql_query": "SELECT DISTINCT T2.name FROM undergoes AS T1 JOIN patient AS T2 ON T1.patient = T2.SSN JOIN stay AS T3 ON T1.Stay  =  T3.StayID WHERE T3.room  =  111",
        "parsed_sql": {
            "select": {
                "value": {
                    "distinct": {
                        "value": "T2.name"
                    }
                }
            },
            "from": [
                {
                    "value": "undergoes",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.patient",
                            "T2.SSN"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "stay",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Stay",
                            "T3.StayID"
                        ]
                    }
                }
            ],
            "where": {
                "eq": [
                    "T3.room",
                    111
                ]
            }
        },
        "sql_ans": [
            [
                "John Smith"
            ]
        ],
        "cypher_query": "MATCH (T1:Undergoes)-[]-(T2:Patient)-[]-(T3:Stay)\nWHERE T3.Room = 111\nRETURN DISTINCT T2.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What is the average cost of procedures that physician John Wen was trained in?",
        "sql_query": "SELECT avg(T3.cost) FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment WHERE T1.name  =  \"John Wen\"",
        "parsed_sql": {
            "select": {
                "value": {
                    "avg": "T3.cost"
                }
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "where": {
                "eq": [
                    "T1.name",
                    "John Wen"
                ]
            }
        },
        "sql_ans": [
            [
                4324.857142857143
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T1.Name = \"John Wen\"\nRETURN T3.Cost",
        "cypher_ans": [
            [
                4899.0
            ],
            [
                1500.0
            ],
            [
                25.0
            ],
            [
                4500.0
            ],
            [
                5600.0
            ],
            [
                3750.0
            ],
            [
                10000.0
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Compute the mean price of procedures physician John Wen was trained in.",
        "sql_query": "SELECT avg(T3.cost) FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment WHERE T1.name  =  \"John Wen\"",
        "parsed_sql": {
            "select": {
                "value": {
                    "avg": "T3.cost"
                }
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "where": {
                "eq": [
                    "T1.name",
                    "John Wen"
                ]
            }
        },
        "sql_ans": [
            [
                4324.857142857143
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T1.Name = \"John Wen\"\nRETURN T3.Cost",
        "cypher_ans": [
            [
                4899.0
            ],
            [
                1500.0
            ],
            [
                25.0
            ],
            [
                4500.0
            ],
            [
                5600.0
            ],
            [
                3750.0
            ],
            [
                10000.0
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "List the name of physicians who took some appointment.",
        "sql_query": "SELECT T2.name FROM appointment AS T1 JOIN physician AS T2 ON T1.Physician  =  T2.EmployeeID",
        "parsed_sql": {
            "select": {
                "value": "T2.name"
            },
            "from": [
                {
                    "value": "appointment",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Physician",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "John Dorian"
            ],
            [
                "Elliot Reid"
            ],
            [
                "John Dorian"
            ],
            [
                "Percival Cox"
            ],
            [
                "Percival Cox"
            ],
            [
                "Elliot Reid"
            ],
            [
                "Christopher Turk"
            ],
            [
                "Molly Clock"
            ],
            [
                "Elliot Reid"
            ]
        ],
        "cypher_query": "MATCH (T1:Appointment)-[]-(T2:Physician)\nRETURN T2.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of all the physicians who took appointments.",
        "sql_query": "SELECT T2.name FROM appointment AS T1 JOIN physician AS T2 ON T1.Physician  =  T2.EmployeeID",
        "parsed_sql": {
            "select": {
                "value": "T2.name"
            },
            "from": [
                {
                    "value": "appointment",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Physician",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "John Dorian"
            ],
            [
                "Elliot Reid"
            ],
            [
                "John Dorian"
            ],
            [
                "Percival Cox"
            ],
            [
                "Percival Cox"
            ],
            [
                "Elliot Reid"
            ],
            [
                "Christopher Turk"
            ],
            [
                "Molly Clock"
            ],
            [
                "Elliot Reid"
            ]
        ],
        "cypher_query": "MATCH (T1:Appointment)-[]-(T2:Physician)\nRETURN T2.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians who are in charge of more than one patient.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid HAVING count(*)  >  1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.PCP"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "having": {
                "gt": [
                    {
                        "count": "*"
                    },
                    1
                ]
            }
        },
        "sql_ans": [
            [
                "Elliot Reid"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[]-(T2:Patient)\nWITH COUNT(\"*\") AS COUNT, T1.Name AS Name\nWHERE COUNT > 1\nRETURN Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Which physicians are in charge of more than one patient? Give me their names.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid HAVING count(*)  >  1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.PCP"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "having": {
                "gt": [
                    {
                        "count": "*"
                    },
                    1
                ]
            }
        },
        "sql_ans": [
            [
                "Elliot Reid"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[]-(T2:Patient)\nWITH COUNT(\"*\") AS COUNT, T1.Name AS Name\nWHERE COUNT > 1\nRETURN Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians whose position title contains the word 'senior'.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of the physicians who have 'senior' in their titles.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the names of all patients who have an undergoing treatment and are staying in room 111.",
        "sql_query": "SELECT DISTINCT T2.name FROM undergoes AS T1 JOIN patient AS T2 ON T1.patient = T2.SSN JOIN stay AS T3 ON T1.Stay  =  T3.StayID WHERE T3.room  =  111",
        "parsed_sql": {
            "select": {
                "value": {
                    "distinct": {
                        "value": "T2.name"
                    }
                }
            },
            "from": [
                {
                    "value": "undergoes",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.patient",
                            "T2.SSN"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "stay",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Stay",
                            "T3.StayID"
                        ]
                    }
                }
            ],
            "where": {
                "eq": [
                    "T3.room",
                    111
                ]
            }
        },
        "sql_ans": [
            [
                "John Smith"
            ]
        ],
        "cypher_query": "MATCH (T1:Undergoes)-[]-(T2:Patient)-[]-(T3:Stay)\nWHERE T3.Room = 111\nRETURN DISTINCT T2.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of patients who are staying in room 111 and have an undergoing treatment?",
        "sql_query": "SELECT DISTINCT T2.name FROM undergoes AS T1 JOIN patient AS T2 ON T1.patient = T2.SSN JOIN stay AS T3 ON T1.Stay  =  T3.StayID WHERE T3.room  =  111",
        "parsed_sql": {
            "select": {
                "value": {
                    "distinct": {
                        "value": "T2.name"
                    }
                }
            },
            "from": [
                {
                    "value": "undergoes",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.patient",
                            "T2.SSN"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "stay",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Stay",
                            "T3.StayID"
                        ]
                    }
                }
            ],
            "where": {
                "eq": [
                    "T3.room",
                    111
                ]
            }
        },
        "sql_ans": [
            [
                "John Smith"
            ]
        ],
        "cypher_query": "MATCH (T1:Undergoes)-[]-(T2:Patient)-[]-(T3:Stay)\nWHERE T3.Room = 111\nRETURN DISTINCT T2.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What is the average cost of procedures that physician John Wen was trained in?",
        "sql_query": "SELECT avg(T3.cost) FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment WHERE T1.name  =  \"John Wen\"",
        "parsed_sql": {
            "select": {
                "value": {
                    "avg": "T3.cost"
                }
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "where": {
                "eq": [
                    "T1.name",
                    "John Wen"
                ]
            }
        },
        "sql_ans": [
            [
                4324.857142857143
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T1.Name = \"John Wen\"\nRETURN T3.Cost",
        "cypher_ans": [
            [
                4899.0
            ],
            [
                1500.0
            ],
            [
                25.0
            ],
            [
                4500.0
            ],
            [
                5600.0
            ],
            [
                3750.0
            ],
            [
                10000.0
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Compute the mean price of procedures physician John Wen was trained in.",
        "sql_query": "SELECT avg(T3.cost) FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment WHERE T1.name  =  \"John Wen\"",
        "parsed_sql": {
            "select": {
                "value": {
                    "avg": "T3.cost"
                }
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "where": {
                "eq": [
                    "T1.name",
                    "John Wen"
                ]
            }
        },
        "sql_ans": [
            [
                4324.857142857143
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T1.Name = \"John Wen\"\nRETURN T3.Cost",
        "cypher_ans": [
            [
                4899.0
            ],
            [
                1500.0
            ],
            [
                25.0
            ],
            [
                4500.0
            ],
            [
                5600.0
            ],
            [
                3750.0
            ],
            [
                10000.0
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "List the name of physicians who took some appointment.",
        "sql_query": "SELECT T2.name FROM appointment AS T1 JOIN physician AS T2 ON T1.Physician  =  T2.EmployeeID",
        "parsed_sql": {
            "select": {
                "value": "T2.name"
            },
            "from": [
                {
                    "value": "appointment",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Physician",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "John Dorian"
            ],
            [
                "Elliot Reid"
            ],
            [
                "John Dorian"
            ],
            [
                "Percival Cox"
            ],
            [
                "Percival Cox"
            ],
            [
                "Elliot Reid"
            ],
            [
                "Christopher Turk"
            ],
            [
                "Molly Clock"
            ],
            [
                "Elliot Reid"
            ]
        ],
        "cypher_query": "MATCH (T1:Appointment)-[]-(T2:Physician)\nRETURN T2.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of all the physicians who took appointments.",
        "sql_query": "SELECT T2.name FROM appointment AS T1 JOIN physician AS T2 ON T1.Physician  =  T2.EmployeeID",
        "parsed_sql": {
            "select": {
                "value": "T2.name"
            },
            "from": [
                {
                    "value": "appointment",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Physician",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "John Dorian"
            ],
            [
                "Elliot Reid"
            ],
            [
                "John Dorian"
            ],
            [
                "Percival Cox"
            ],
            [
                "Percival Cox"
            ],
            [
                "Elliot Reid"
            ],
            [
                "Christopher Turk"
            ],
            [
                "Molly Clock"
            ],
            [
                "Elliot Reid"
            ]
        ],
        "cypher_query": "MATCH (T1:Appointment)-[]-(T2:Physician)\nRETURN T2.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians who are in charge of more than one patient.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid HAVING count(*)  >  1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.PCP"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "having": {
                "gt": [
                    {
                        "count": "*"
                    },
                    1
                ]
            }
        },
        "sql_ans": [
            [
                "Elliot Reid"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[]-(T2:Patient)\nWITH T1.Name AS Name, COUNT(\"*\") AS COUNT\nWHERE COUNT > 1\nRETURN Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Which physicians are in charge of more than one patient? Give me their names.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid HAVING count(*)  >  1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.PCP"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "having": {
                "gt": [
                    {
                        "count": "*"
                    },
                    1
                ]
            }
        },
        "sql_ans": [
            [
                "Elliot Reid"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[]-(T2:Patient)\nWITH T1.Name AS Name, COUNT(\"*\") AS COUNT\nWHERE COUNT > 1\nRETURN Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians whose position title contains the word 'senior'.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of the physicians who have 'senior' in their titles.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the names of all patients who have an undergoing treatment and are staying in room 111.",
        "sql_query": "SELECT DISTINCT T2.name FROM undergoes AS T1 JOIN patient AS T2 ON T1.patient = T2.SSN JOIN stay AS T3 ON T1.Stay  =  T3.StayID WHERE T3.room  =  111",
        "parsed_sql": {
            "select": {
                "value": {
                    "distinct": {
                        "value": "T2.name"
                    }
                }
            },
            "from": [
                {
                    "value": "undergoes",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.patient",
                            "T2.SSN"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "stay",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Stay",
                            "T3.StayID"
                        ]
                    }
                }
            ],
            "where": {
                "eq": [
                    "T3.room",
                    111
                ]
            }
        },
        "sql_ans": [
            [
                "John Smith"
            ]
        ],
        "cypher_query": "MATCH (T1:Undergoes)-[]-(T2:Patient)-[]-(T3:Stay)\nWHERE T3.Room = 111\nRETURN DISTINCT T2.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of patients who are staying in room 111 and have an undergoing treatment?",
        "sql_query": "SELECT DISTINCT T2.name FROM undergoes AS T1 JOIN patient AS T2 ON T1.patient = T2.SSN JOIN stay AS T3 ON T1.Stay  =  T3.StayID WHERE T3.room  =  111",
        "parsed_sql": {
            "select": {
                "value": {
                    "distinct": {
                        "value": "T2.name"
                    }
                }
            },
            "from": [
                {
                    "value": "undergoes",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.patient",
                            "T2.SSN"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "stay",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Stay",
                            "T3.StayID"
                        ]
                    }
                }
            ],
            "where": {
                "eq": [
                    "T3.room",
                    111
                ]
            }
        },
        "sql_ans": [
            [
                "John Smith"
            ]
        ],
        "cypher_query": "MATCH (T1:Undergoes)-[]-(T2:Patient)-[]-(T3:Stay)\nWHERE T3.Room = 111\nRETURN DISTINCT T2.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What is the average cost of procedures that physician John Wen was trained in?",
        "sql_query": "SELECT avg(T3.cost) FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment WHERE T1.name  =  \"John Wen\"",
        "parsed_sql": {
            "select": {
                "value": {
                    "avg": "T3.cost"
                }
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "where": {
                "eq": [
                    "T1.name",
                    "John Wen"
                ]
            }
        },
        "sql_ans": [
            [
                4324.857142857143
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T1.Name = \"John Wen\"\nRETURN T3.Cost",
        "cypher_ans": [
            [
                4899.0
            ],
            [
                1500.0
            ],
            [
                25.0
            ],
            [
                4500.0
            ],
            [
                5600.0
            ],
            [
                3750.0
            ],
            [
                10000.0
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Compute the mean price of procedures physician John Wen was trained in.",
        "sql_query": "SELECT avg(T3.cost) FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment WHERE T1.name  =  \"John Wen\"",
        "parsed_sql": {
            "select": {
                "value": {
                    "avg": "T3.cost"
                }
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "where": {
                "eq": [
                    "T1.name",
                    "John Wen"
                ]
            }
        },
        "sql_ans": [
            [
                4324.857142857143
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T1.Name = \"John Wen\"\nRETURN T3.Cost",
        "cypher_ans": [
            [
                4899.0
            ],
            [
                1500.0
            ],
            [
                25.0
            ],
            [
                4500.0
            ],
            [
                5600.0
            ],
            [
                3750.0
            ],
            [
                10000.0
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "List the name of physicians who took some appointment.",
        "sql_query": "SELECT T2.name FROM appointment AS T1 JOIN physician AS T2 ON T1.Physician  =  T2.EmployeeID",
        "parsed_sql": {
            "select": {
                "value": "T2.name"
            },
            "from": [
                {
                    "value": "appointment",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Physician",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "John Dorian"
            ],
            [
                "Elliot Reid"
            ],
            [
                "John Dorian"
            ],
            [
                "Percival Cox"
            ],
            [
                "Percival Cox"
            ],
            [
                "Elliot Reid"
            ],
            [
                "Christopher Turk"
            ],
            [
                "Molly Clock"
            ],
            [
                "Elliot Reid"
            ]
        ],
        "cypher_query": "MATCH (T1:Appointment)-[]-(T2:Physician)\nRETURN T2.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of all the physicians who took appointments.",
        "sql_query": "SELECT T2.name FROM appointment AS T1 JOIN physician AS T2 ON T1.Physician  =  T2.EmployeeID",
        "parsed_sql": {
            "select": {
                "value": "T2.name"
            },
            "from": [
                {
                    "value": "appointment",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Physician",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "John Dorian"
            ],
            [
                "Elliot Reid"
            ],
            [
                "John Dorian"
            ],
            [
                "Percival Cox"
            ],
            [
                "Percival Cox"
            ],
            [
                "Elliot Reid"
            ],
            [
                "Christopher Turk"
            ],
            [
                "Molly Clock"
            ],
            [
                "Elliot Reid"
            ]
        ],
        "cypher_query": "MATCH (T1:Appointment)-[]-(T2:Physician)\nRETURN T2.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians who are in charge of more than one patient.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid HAVING count(*)  >  1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.PCP"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "having": {
                "gt": [
                    {
                        "count": "*"
                    },
                    1
                ]
            }
        },
        "sql_ans": [
            [
                "Elliot Reid"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[]-(T2:Patient)\nWITH T1.Name AS Name, COUNT(\"*\") AS COUNT\nWHERE COUNT > 1\nRETURN Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Which physicians are in charge of more than one patient? Give me their names.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid HAVING count(*)  >  1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.PCP"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "having": {
                "gt": [
                    {
                        "count": "*"
                    },
                    1
                ]
            }
        },
        "sql_ans": [
            [
                "Elliot Reid"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[]-(T2:Patient)\nWITH T1.Name AS Name, COUNT(\"*\") AS COUNT\nWHERE COUNT > 1\nRETURN Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians whose position title contains the word 'senior'.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of the physicians who have 'senior' in their titles.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the names of all patients who have an undergoing treatment and are staying in room 111.",
        "sql_query": "SELECT DISTINCT T2.name FROM undergoes AS T1 JOIN patient AS T2 ON T1.patient = T2.SSN JOIN stay AS T3 ON T1.Stay  =  T3.StayID WHERE T3.room  =  111",
        "parsed_sql": {
            "select": {
                "value": {
                    "distinct": {
                        "value": "T2.name"
                    }
                }
            },
            "from": [
                {
                    "value": "undergoes",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.patient",
                            "T2.SSN"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "stay",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Stay",
                            "T3.StayID"
                        ]
                    }
                }
            ],
            "where": {
                "eq": [
                    "T3.room",
                    111
                ]
            }
        },
        "sql_ans": [
            [
                "John Smith"
            ]
        ],
        "cypher_query": "MATCH (T1:Undergoes)-[]-(T2:Patient)-[]-(T3:Stay)\nWHERE T3.Room = 111\nRETURN DISTINCT T2.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of patients who are staying in room 111 and have an undergoing treatment?",
        "sql_query": "SELECT DISTINCT T2.name FROM undergoes AS T1 JOIN patient AS T2 ON T1.patient = T2.SSN JOIN stay AS T3 ON T1.Stay  =  T3.StayID WHERE T3.room  =  111",
        "parsed_sql": {
            "select": {
                "value": {
                    "distinct": {
                        "value": "T2.name"
                    }
                }
            },
            "from": [
                {
                    "value": "undergoes",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.patient",
                            "T2.SSN"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "stay",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Stay",
                            "T3.StayID"
                        ]
                    }
                }
            ],
            "where": {
                "eq": [
                    "T3.room",
                    111
                ]
            }
        },
        "sql_ans": [
            [
                "John Smith"
            ]
        ],
        "cypher_query": "MATCH (T1:Undergoes)-[]-(T2:Patient)-[]-(T3:Stay)\nWHERE T3.Room = 111\nRETURN DISTINCT T2.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What is the average cost of procedures that physician John Wen was trained in?",
        "sql_query": "SELECT avg(T3.cost) FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment WHERE T1.name  =  \"John Wen\"",
        "parsed_sql": {
            "select": {
                "value": {
                    "avg": "T3.cost"
                }
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "where": {
                "eq": [
                    "T1.name",
                    "John Wen"
                ]
            }
        },
        "sql_ans": [
            [
                4324.857142857143
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T1.Name = \"John Wen\"\nRETURN T3.Cost",
        "cypher_ans": [
            [
                4899.0
            ],
            [
                1500.0
            ],
            [
                25.0
            ],
            [
                4500.0
            ],
            [
                5600.0
            ],
            [
                3750.0
            ],
            [
                10000.0
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Compute the mean price of procedures physician John Wen was trained in.",
        "sql_query": "SELECT avg(T3.cost) FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment WHERE T1.name  =  \"John Wen\"",
        "parsed_sql": {
            "select": {
                "value": {
                    "avg": "T3.cost"
                }
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "where": {
                "eq": [
                    "T1.name",
                    "John Wen"
                ]
            }
        },
        "sql_ans": [
            [
                4324.857142857143
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T1.Name = \"John Wen\"\nRETURN T3.Cost",
        "cypher_ans": [
            [
                4899.0
            ],
            [
                1500.0
            ],
            [
                25.0
            ],
            [
                4500.0
            ],
            [
                5600.0
            ],
            [
                3750.0
            ],
            [
                10000.0
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "List the name of physicians who took some appointment.",
        "sql_query": "SELECT T2.name FROM appointment AS T1 JOIN physician AS T2 ON T1.Physician  =  T2.EmployeeID",
        "parsed_sql": {
            "select": {
                "value": "T2.name"
            },
            "from": [
                {
                    "value": "appointment",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Physician",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "John Dorian"
            ],
            [
                "Elliot Reid"
            ],
            [
                "John Dorian"
            ],
            [
                "Percival Cox"
            ],
            [
                "Percival Cox"
            ],
            [
                "Elliot Reid"
            ],
            [
                "Christopher Turk"
            ],
            [
                "Molly Clock"
            ],
            [
                "Elliot Reid"
            ]
        ],
        "cypher_query": "MATCH (T1:Appointment)-[]-(T2:Physician)\nRETURN T2.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of all the physicians who took appointments.",
        "sql_query": "SELECT T2.name FROM appointment AS T1 JOIN physician AS T2 ON T1.Physician  =  T2.EmployeeID",
        "parsed_sql": {
            "select": {
                "value": "T2.name"
            },
            "from": [
                {
                    "value": "appointment",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Physician",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "John Dorian"
            ],
            [
                "Elliot Reid"
            ],
            [
                "John Dorian"
            ],
            [
                "Percival Cox"
            ],
            [
                "Percival Cox"
            ],
            [
                "Elliot Reid"
            ],
            [
                "Christopher Turk"
            ],
            [
                "Molly Clock"
            ],
            [
                "Elliot Reid"
            ]
        ],
        "cypher_query": "MATCH (T1:Appointment)-[]-(T2:Physician)\nRETURN T2.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians who are in charge of more than one patient.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid HAVING count(*)  >  1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.PCP"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "having": {
                "gt": [
                    {
                        "count": "*"
                    },
                    1
                ]
            }
        },
        "sql_ans": [
            [
                "Elliot Reid"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[]-(T2:Patient)\nWITH COUNT(\"*\") AS COUNT, T1.Name AS Name\nWHERE COUNT > 1\nRETURN Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Which physicians are in charge of more than one patient? Give me their names.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid HAVING count(*)  >  1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.PCP"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "having": {
                "gt": [
                    {
                        "count": "*"
                    },
                    1
                ]
            }
        },
        "sql_ans": [
            [
                "Elliot Reid"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[]-(T2:Patient)\nWITH COUNT(\"*\") AS COUNT, T1.Name AS Name\nWHERE COUNT > 1\nRETURN Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians whose position title contains the word 'senior'.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of the physicians who have 'senior' in their titles.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the names of all patients who have an undergoing treatment and are staying in room 111.",
        "sql_query": "SELECT DISTINCT T2.name FROM undergoes AS T1 JOIN patient AS T2 ON T1.patient = T2.SSN JOIN stay AS T3 ON T1.Stay  =  T3.StayID WHERE T3.room  =  111",
        "parsed_sql": {
            "select": {
                "value": {
                    "distinct": {
                        "value": "T2.name"
                    }
                }
            },
            "from": [
                {
                    "value": "undergoes",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.patient",
                            "T2.SSN"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "stay",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Stay",
                            "T3.StayID"
                        ]
                    }
                }
            ],
            "where": {
                "eq": [
                    "T3.room",
                    111
                ]
            }
        },
        "sql_ans": [
            [
                "John Smith"
            ]
        ],
        "cypher_query": "MATCH (T1:Undergoes)-[]-(T2:Patient)-[]-(T3:Stay)\nWHERE T3.Room = 111\nRETURN DISTINCT T2.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of patients who are staying in room 111 and have an undergoing treatment?",
        "sql_query": "SELECT DISTINCT T2.name FROM undergoes AS T1 JOIN patient AS T2 ON T1.patient = T2.SSN JOIN stay AS T3 ON T1.Stay  =  T3.StayID WHERE T3.room  =  111",
        "parsed_sql": {
            "select": {
                "value": {
                    "distinct": {
                        "value": "T2.name"
                    }
                }
            },
            "from": [
                {
                    "value": "undergoes",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.patient",
                            "T2.SSN"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "stay",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Stay",
                            "T3.StayID"
                        ]
                    }
                }
            ],
            "where": {
                "eq": [
                    "T3.room",
                    111
                ]
            }
        },
        "sql_ans": [
            [
                "John Smith"
            ]
        ],
        "cypher_query": "MATCH (T1:Undergoes)-[]-(T2:Patient)-[]-(T3:Stay)\nWHERE T3.Room = 111\nRETURN DISTINCT T2.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What is the average cost of procedures that physician John Wen was trained in?",
        "sql_query": "SELECT avg(T3.cost) FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment WHERE T1.name  =  \"John Wen\"",
        "parsed_sql": {
            "select": {
                "value": {
                    "avg": "T3.cost"
                }
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "where": {
                "eq": [
                    "T1.name",
                    "John Wen"
                ]
            }
        },
        "sql_ans": [
            [
                4324.857142857143
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T1.Name = \"John Wen\"\nRETURN T3.Cost",
        "cypher_ans": [
            [
                4899.0
            ],
            [
                1500.0
            ],
            [
                25.0
            ],
            [
                4500.0
            ],
            [
                5600.0
            ],
            [
                3750.0
            ],
            [
                10000.0
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Compute the mean price of procedures physician John Wen was trained in.",
        "sql_query": "SELECT avg(T3.cost) FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment WHERE T1.name  =  \"John Wen\"",
        "parsed_sql": {
            "select": {
                "value": {
                    "avg": "T3.cost"
                }
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "where": {
                "eq": [
                    "T1.name",
                    "John Wen"
                ]
            }
        },
        "sql_ans": [
            [
                4324.857142857143
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T1.Name = \"John Wen\"\nRETURN T3.Cost",
        "cypher_ans": [
            [
                4899.0
            ],
            [
                1500.0
            ],
            [
                25.0
            ],
            [
                4500.0
            ],
            [
                5600.0
            ],
            [
                3750.0
            ],
            [
                10000.0
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "List the name of physicians who took some appointment.",
        "sql_query": "SELECT T2.name FROM appointment AS T1 JOIN physician AS T2 ON T1.Physician  =  T2.EmployeeID",
        "parsed_sql": {
            "select": {
                "value": "T2.name"
            },
            "from": [
                {
                    "value": "appointment",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Physician",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "John Dorian"
            ],
            [
                "Elliot Reid"
            ],
            [
                "John Dorian"
            ],
            [
                "Percival Cox"
            ],
            [
                "Percival Cox"
            ],
            [
                "Elliot Reid"
            ],
            [
                "Christopher Turk"
            ],
            [
                "Molly Clock"
            ],
            [
                "Elliot Reid"
            ]
        ],
        "cypher_query": "MATCH (T1:Appointment)-[]-(T2:Physician)\nRETURN T2.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of all the physicians who took appointments.",
        "sql_query": "SELECT T2.name FROM appointment AS T1 JOIN physician AS T2 ON T1.Physician  =  T2.EmployeeID",
        "parsed_sql": {
            "select": {
                "value": "T2.name"
            },
            "from": [
                {
                    "value": "appointment",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Physician",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "John Dorian"
            ],
            [
                "Elliot Reid"
            ],
            [
                "John Dorian"
            ],
            [
                "Percival Cox"
            ],
            [
                "Percival Cox"
            ],
            [
                "Elliot Reid"
            ],
            [
                "Christopher Turk"
            ],
            [
                "Molly Clock"
            ],
            [
                "Elliot Reid"
            ]
        ],
        "cypher_query": "MATCH (T1:Appointment)-[]-(T2:Physician)\nRETURN T2.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians who are in charge of more than one patient.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid HAVING count(*)  >  1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.PCP"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "having": {
                "gt": [
                    {
                        "count": "*"
                    },
                    1
                ]
            }
        },
        "sql_ans": [
            [
                "Elliot Reid"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[]-(T2:Patient)\nWITH COUNT(\"*\") AS COUNT, T1.Name AS Name\nWHERE COUNT > 1\nRETURN Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Which physicians are in charge of more than one patient? Give me their names.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid HAVING count(*)  >  1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.PCP"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "having": {
                "gt": [
                    {
                        "count": "*"
                    },
                    1
                ]
            }
        },
        "sql_ans": [
            [
                "Elliot Reid"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[]-(T2:Patient)\nWITH COUNT(\"*\") AS COUNT, T1.Name AS Name\nWHERE COUNT > 1\nRETURN Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians whose position title contains the word 'senior'.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of the physicians who have 'senior' in their titles.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the names of all patients who have an undergoing treatment and are staying in room 111.",
        "sql_query": "SELECT DISTINCT T2.name FROM undergoes AS T1 JOIN patient AS T2 ON T1.patient = T2.SSN JOIN stay AS T3 ON T1.Stay  =  T3.StayID WHERE T3.room  =  111",
        "parsed_sql": {
            "select": {
                "value": {
                    "distinct": {
                        "value": "T2.name"
                    }
                }
            },
            "from": [
                {
                    "value": "undergoes",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.patient",
                            "T2.SSN"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "stay",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Stay",
                            "T3.StayID"
                        ]
                    }
                }
            ],
            "where": {
                "eq": [
                    "T3.room",
                    111
                ]
            }
        },
        "sql_ans": [
            [
                "John Smith"
            ]
        ],
        "cypher_query": "MATCH (T1:Undergoes)-[]-(T2:Patient)-[]-(T3:Stay)\nWHERE T3.Room = 111\nRETURN DISTINCT T2.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of patients who are staying in room 111 and have an undergoing treatment?",
        "sql_query": "SELECT DISTINCT T2.name FROM undergoes AS T1 JOIN patient AS T2 ON T1.patient = T2.SSN JOIN stay AS T3 ON T1.Stay  =  T3.StayID WHERE T3.room  =  111",
        "parsed_sql": {
            "select": {
                "value": {
                    "distinct": {
                        "value": "T2.name"
                    }
                }
            },
            "from": [
                {
                    "value": "undergoes",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.patient",
                            "T2.SSN"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "stay",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Stay",
                            "T3.StayID"
                        ]
                    }
                }
            ],
            "where": {
                "eq": [
                    "T3.room",
                    111
                ]
            }
        },
        "sql_ans": [
            [
                "John Smith"
            ]
        ],
        "cypher_query": "MATCH (T1:Undergoes)-[]-(T2:Patient)-[]-(T3:Stay)\nWHERE T3.Room = 111\nRETURN DISTINCT T2.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What is the average cost of procedures that physician John Wen was trained in?",
        "sql_query": "SELECT avg(T3.cost) FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment WHERE T1.name  =  \"John Wen\"",
        "parsed_sql": {
            "select": {
                "value": {
                    "avg": "T3.cost"
                }
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "where": {
                "eq": [
                    "T1.name",
                    "John Wen"
                ]
            }
        },
        "sql_ans": [
            [
                4324.857142857143
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T1.Name = \"John Wen\"\nRETURN T3.Cost",
        "cypher_ans": [
            [
                4899.0
            ],
            [
                1500.0
            ],
            [
                25.0
            ],
            [
                4500.0
            ],
            [
                5600.0
            ],
            [
                3750.0
            ],
            [
                10000.0
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Compute the mean price of procedures physician John Wen was trained in.",
        "sql_query": "SELECT avg(T3.cost) FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment WHERE T1.name  =  \"John Wen\"",
        "parsed_sql": {
            "select": {
                "value": {
                    "avg": "T3.cost"
                }
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "where": {
                "eq": [
                    "T1.name",
                    "John Wen"
                ]
            }
        },
        "sql_ans": [
            [
                4324.857142857143
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T1.Name = \"John Wen\"\nRETURN T3.Cost",
        "cypher_ans": [
            [
                4899.0
            ],
            [
                1500.0
            ],
            [
                25.0
            ],
            [
                4500.0
            ],
            [
                5600.0
            ],
            [
                3750.0
            ],
            [
                10000.0
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "List the name of physicians who took some appointment.",
        "sql_query": "SELECT T2.name FROM appointment AS T1 JOIN physician AS T2 ON T1.Physician  =  T2.EmployeeID",
        "parsed_sql": {
            "select": {
                "value": "T2.name"
            },
            "from": [
                {
                    "value": "appointment",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Physician",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "John Dorian"
            ],
            [
                "Elliot Reid"
            ],
            [
                "John Dorian"
            ],
            [
                "Percival Cox"
            ],
            [
                "Percival Cox"
            ],
            [
                "Elliot Reid"
            ],
            [
                "Christopher Turk"
            ],
            [
                "Molly Clock"
            ],
            [
                "Elliot Reid"
            ]
        ],
        "cypher_query": "MATCH (T1:Appointment)-[]-(T2:Physician)\nRETURN T2.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of all the physicians who took appointments.",
        "sql_query": "SELECT T2.name FROM appointment AS T1 JOIN physician AS T2 ON T1.Physician  =  T2.EmployeeID",
        "parsed_sql": {
            "select": {
                "value": "T2.name"
            },
            "from": [
                {
                    "value": "appointment",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Physician",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "John Dorian"
            ],
            [
                "Elliot Reid"
            ],
            [
                "John Dorian"
            ],
            [
                "Percival Cox"
            ],
            [
                "Percival Cox"
            ],
            [
                "Elliot Reid"
            ],
            [
                "Christopher Turk"
            ],
            [
                "Molly Clock"
            ],
            [
                "Elliot Reid"
            ]
        ],
        "cypher_query": "MATCH (T1:Appointment)-[]-(T2:Physician)\nRETURN T2.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many patients do each physician take care of? List their names and number of patients they take care of.",
        "sql_query": "SELECT T1.name ,  count(*) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.PCP"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            }
        },
        "sql_ans": [
            [
                "John Dorian",
                1
            ],
            [
                "Elliot Reid",
                2
            ],
            [
                "Christopher Turk",
                1
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[]-(T2:Patient)\nWITH count(T1.EmployeeID) AS count, T1.Name AS Name\nRETURN Name,COUNT(\"*\")",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Return the name of each physician and the number of patients he or she treats.",
        "sql_query": "SELECT T1.name ,  count(*) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.PCP"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            }
        },
        "sql_ans": [
            [
                "John Dorian",
                1
            ],
            [
                "Elliot Reid",
                2
            ],
            [
                "Christopher Turk",
                1
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[]-(T2:Patient)\nWITH count(T1.EmployeeID) AS count, T1.Name AS Name\nRETURN Name,COUNT(\"*\")",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians who are in charge of more than one patient.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid HAVING count(*)  >  1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.PCP"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "having": {
                "gt": [
                    {
                        "count": "*"
                    },
                    1
                ]
            }
        },
        "sql_ans": [
            [
                "Elliot Reid"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[]-(T2:Patient)\nWITH COUNT(\"*\") AS COUNT, T1.Name AS Name\nWHERE COUNT > 1\nRETURN Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Which physicians are in charge of more than one patient? Give me their names.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid HAVING count(*)  >  1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.PCP"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "having": {
                "gt": [
                    {
                        "count": "*"
                    },
                    1
                ]
            }
        },
        "sql_ans": [
            [
                "Elliot Reid"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[]-(T2:Patient)\nWITH COUNT(\"*\") AS COUNT, T1.Name AS Name\nWHERE COUNT > 1\nRETURN Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms located on each block floor.",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockFloor) AS count, T1.BlockFloor AS BlockFloor\nRETURN COUNT(\"*\"),BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms does each block floor have?",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockFloor) AS count, T1.BlockFloor AS BlockFloor\nRETURN COUNT(\"*\"),BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms for different block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockCode AS BlockCode, count(T1.BlockCode) AS count\nRETURN COUNT(\"*\"),BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms are located for each block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockCode AS BlockCode, count(T1.BlockCode) AS count\nRETURN COUNT(\"*\"),BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of medications prescribed for each brand.",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH count(T1.Brand) AS count, T1.Name AS Name\nRETURN COUNT(\"*\"),Name",
        "cypher_ans": [
            [
                1,
                "Procrastin-X"
            ],
            [
                1,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many medications are prescribed for each brand?",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH count(T1.Brand) AS count, T1.Name AS Name\nRETURN COUNT(\"*\"),Name",
        "cypher_ans": [
            [
                1,
                "Procrastin-X"
            ],
            [
                1,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians whose position title contains the word 'senior'.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of the physicians who have 'senior' in their titles.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the names of all patients who have an undergoing treatment and are staying in room 111.",
        "sql_query": "SELECT DISTINCT T2.name FROM undergoes AS T1 JOIN patient AS T2 ON T1.patient = T2.SSN JOIN stay AS T3 ON T1.Stay  =  T3.StayID WHERE T3.room  =  111",
        "parsed_sql": {
            "select": {
                "value": {
                    "distinct": {
                        "value": "T2.name"
                    }
                }
            },
            "from": [
                {
                    "value": "undergoes",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.patient",
                            "T2.SSN"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "stay",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Stay",
                            "T3.StayID"
                        ]
                    }
                }
            ],
            "where": {
                "eq": [
                    "T3.room",
                    111
                ]
            }
        },
        "sql_ans": [
            [
                "John Smith"
            ]
        ],
        "cypher_query": "MATCH (T1:Undergoes)-[]-(T2:Patient)-[]-(T3:Stay)\nWHERE T3.Room = 111\nRETURN DISTINCT T2.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of patients who are staying in room 111 and have an undergoing treatment?",
        "sql_query": "SELECT DISTINCT T2.name FROM undergoes AS T1 JOIN patient AS T2 ON T1.patient = T2.SSN JOIN stay AS T3 ON T1.Stay  =  T3.StayID WHERE T3.room  =  111",
        "parsed_sql": {
            "select": {
                "value": {
                    "distinct": {
                        "value": "T2.name"
                    }
                }
            },
            "from": [
                {
                    "value": "undergoes",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.patient",
                            "T2.SSN"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "stay",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Stay",
                            "T3.StayID"
                        ]
                    }
                }
            ],
            "where": {
                "eq": [
                    "T3.room",
                    111
                ]
            }
        },
        "sql_ans": [
            [
                "John Smith"
            ]
        ],
        "cypher_query": "MATCH (T1:Undergoes)-[]-(T2:Patient)-[]-(T3:Stay)\nWHERE T3.Room = 111\nRETURN DISTINCT T2.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What is the average cost of procedures that physician John Wen was trained in?",
        "sql_query": "SELECT avg(T3.cost) FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment WHERE T1.name  =  \"John Wen\"",
        "parsed_sql": {
            "select": {
                "value": {
                    "avg": "T3.cost"
                }
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "where": {
                "eq": [
                    "T1.name",
                    "John Wen"
                ]
            }
        },
        "sql_ans": [
            [
                4324.857142857143
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T1.Name = \"John Wen\"\nRETURN T3.Cost",
        "cypher_ans": [
            [
                4899.0
            ],
            [
                1500.0
            ],
            [
                25.0
            ],
            [
                4500.0
            ],
            [
                5600.0
            ],
            [
                3750.0
            ],
            [
                10000.0
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Compute the mean price of procedures physician John Wen was trained in.",
        "sql_query": "SELECT avg(T3.cost) FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment WHERE T1.name  =  \"John Wen\"",
        "parsed_sql": {
            "select": {
                "value": {
                    "avg": "T3.cost"
                }
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "where": {
                "eq": [
                    "T1.name",
                    "John Wen"
                ]
            }
        },
        "sql_ans": [
            [
                4324.857142857143
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T1.Name = \"John Wen\"\nRETURN T3.Cost",
        "cypher_ans": [
            [
                4899.0
            ],
            [
                1500.0
            ],
            [
                25.0
            ],
            [
                4500.0
            ],
            [
                5600.0
            ],
            [
                3750.0
            ],
            [
                10000.0
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "List the name of physicians who took some appointment.",
        "sql_query": "SELECT T2.name FROM appointment AS T1 JOIN physician AS T2 ON T1.Physician  =  T2.EmployeeID",
        "parsed_sql": {
            "select": {
                "value": "T2.name"
            },
            "from": [
                {
                    "value": "appointment",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Physician",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "John Dorian"
            ],
            [
                "Elliot Reid"
            ],
            [
                "John Dorian"
            ],
            [
                "Percival Cox"
            ],
            [
                "Percival Cox"
            ],
            [
                "Elliot Reid"
            ],
            [
                "Christopher Turk"
            ],
            [
                "Molly Clock"
            ],
            [
                "Elliot Reid"
            ]
        ],
        "cypher_query": "MATCH (T1:Appointment)-[]-(T2:Physician)\nRETURN T2.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of all the physicians who took appointments.",
        "sql_query": "SELECT T2.name FROM appointment AS T1 JOIN physician AS T2 ON T1.Physician  =  T2.EmployeeID",
        "parsed_sql": {
            "select": {
                "value": "T2.name"
            },
            "from": [
                {
                    "value": "appointment",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Physician",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "John Dorian"
            ],
            [
                "Elliot Reid"
            ],
            [
                "John Dorian"
            ],
            [
                "Percival Cox"
            ],
            [
                "Percival Cox"
            ],
            [
                "Elliot Reid"
            ],
            [
                "Christopher Turk"
            ],
            [
                "Molly Clock"
            ],
            [
                "Elliot Reid"
            ]
        ],
        "cypher_query": "MATCH (T1:Appointment)-[]-(T2:Physician)\nRETURN T2.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many patients do each physician take care of? List their names and number of patients they take care of.",
        "sql_query": "SELECT T1.name ,  count(*) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.PCP"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            }
        },
        "sql_ans": [
            [
                "John Dorian",
                1
            ],
            [
                "Elliot Reid",
                2
            ],
            [
                "Christopher Turk",
                1
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[]-(T2:Patient)\nWITH T1.Name AS Name, count(T1.EmployeeID) AS count\nRETURN Name,COUNT(\"*\")",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Return the name of each physician and the number of patients he or she treats.",
        "sql_query": "SELECT T1.name ,  count(*) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.PCP"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            }
        },
        "sql_ans": [
            [
                "John Dorian",
                1
            ],
            [
                "Elliot Reid",
                2
            ],
            [
                "Christopher Turk",
                1
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[]-(T2:Patient)\nWITH T1.Name AS Name, count(T1.EmployeeID) AS count\nRETURN Name,COUNT(\"*\")",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians who are in charge of more than one patient.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid HAVING count(*)  >  1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.PCP"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "having": {
                "gt": [
                    {
                        "count": "*"
                    },
                    1
                ]
            }
        },
        "sql_ans": [
            [
                "Elliot Reid"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[]-(T2:Patient)\nWITH T1.Name AS Name, COUNT(\"*\") AS COUNT\nWHERE COUNT > 1\nRETURN Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Which physicians are in charge of more than one patient? Give me their names.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid HAVING count(*)  >  1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.PCP"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "having": {
                "gt": [
                    {
                        "count": "*"
                    },
                    1
                ]
            }
        },
        "sql_ans": [
            [
                "Elliot Reid"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[]-(T2:Patient)\nWITH T1.Name AS Name, COUNT(\"*\") AS COUNT\nWHERE COUNT > 1\nRETURN Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms located on each block floor.",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockFloor AS BlockFloor, count(T1.BlockFloor) AS count\nRETURN COUNT(\"*\"),BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms does each block floor have?",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockFloor AS BlockFloor, count(T1.BlockFloor) AS count\nRETURN COUNT(\"*\"),BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms for different block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockCode AS BlockCode, count(T1.BlockCode) AS count\nRETURN COUNT(\"*\"),BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms are located for each block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockCode AS BlockCode, count(T1.BlockCode) AS count\nRETURN COUNT(\"*\"),BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of medications prescribed for each brand.",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH count(T1.Brand) AS count, T1.Name AS Name\nRETURN COUNT(\"*\"),Name",
        "cypher_ans": [
            [
                1,
                "Procrastin-X"
            ],
            [
                1,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many medications are prescribed for each brand?",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH count(T1.Brand) AS count, T1.Name AS Name\nRETURN COUNT(\"*\"),Name",
        "cypher_ans": [
            [
                1,
                "Procrastin-X"
            ],
            [
                1,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians whose position title contains the word 'senior'.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of the physicians who have 'senior' in their titles.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the names of all patients who have an undergoing treatment and are staying in room 111.",
        "sql_query": "SELECT DISTINCT T2.name FROM undergoes AS T1 JOIN patient AS T2 ON T1.patient = T2.SSN JOIN stay AS T3 ON T1.Stay  =  T3.StayID WHERE T3.room  =  111",
        "parsed_sql": {
            "select": {
                "value": {
                    "distinct": {
                        "value": "T2.name"
                    }
                }
            },
            "from": [
                {
                    "value": "undergoes",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.patient",
                            "T2.SSN"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "stay",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Stay",
                            "T3.StayID"
                        ]
                    }
                }
            ],
            "where": {
                "eq": [
                    "T3.room",
                    111
                ]
            }
        },
        "sql_ans": [
            [
                "John Smith"
            ]
        ],
        "cypher_query": "MATCH (T1:Undergoes)-[]-(T2:Patient)-[]-(T3:Stay)\nWHERE T3.Room = 111\nRETURN DISTINCT T2.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of patients who are staying in room 111 and have an undergoing treatment?",
        "sql_query": "SELECT DISTINCT T2.name FROM undergoes AS T1 JOIN patient AS T2 ON T1.patient = T2.SSN JOIN stay AS T3 ON T1.Stay  =  T3.StayID WHERE T3.room  =  111",
        "parsed_sql": {
            "select": {
                "value": {
                    "distinct": {
                        "value": "T2.name"
                    }
                }
            },
            "from": [
                {
                    "value": "undergoes",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.patient",
                            "T2.SSN"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "stay",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Stay",
                            "T3.StayID"
                        ]
                    }
                }
            ],
            "where": {
                "eq": [
                    "T3.room",
                    111
                ]
            }
        },
        "sql_ans": [
            [
                "John Smith"
            ]
        ],
        "cypher_query": "MATCH (T1:Undergoes)-[]-(T2:Patient)-[]-(T3:Stay)\nWHERE T3.Room = 111\nRETURN DISTINCT T2.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What is the average cost of procedures that physician John Wen was trained in?",
        "sql_query": "SELECT avg(T3.cost) FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment WHERE T1.name  =  \"John Wen\"",
        "parsed_sql": {
            "select": {
                "value": {
                    "avg": "T3.cost"
                }
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "where": {
                "eq": [
                    "T1.name",
                    "John Wen"
                ]
            }
        },
        "sql_ans": [
            [
                4324.857142857143
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T1.Name = \"John Wen\"\nRETURN T3.Cost",
        "cypher_ans": [
            [
                4899.0
            ],
            [
                1500.0
            ],
            [
                25.0
            ],
            [
                4500.0
            ],
            [
                5600.0
            ],
            [
                3750.0
            ],
            [
                10000.0
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Compute the mean price of procedures physician John Wen was trained in.",
        "sql_query": "SELECT avg(T3.cost) FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment WHERE T1.name  =  \"John Wen\"",
        "parsed_sql": {
            "select": {
                "value": {
                    "avg": "T3.cost"
                }
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "where": {
                "eq": [
                    "T1.name",
                    "John Wen"
                ]
            }
        },
        "sql_ans": [
            [
                4324.857142857143
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T1.Name = \"John Wen\"\nRETURN T3.Cost",
        "cypher_ans": [
            [
                4899.0
            ],
            [
                1500.0
            ],
            [
                25.0
            ],
            [
                4500.0
            ],
            [
                5600.0
            ],
            [
                3750.0
            ],
            [
                10000.0
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "List the name of physicians who took some appointment.",
        "sql_query": "SELECT T2.name FROM appointment AS T1 JOIN physician AS T2 ON T1.Physician  =  T2.EmployeeID",
        "parsed_sql": {
            "select": {
                "value": "T2.name"
            },
            "from": [
                {
                    "value": "appointment",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Physician",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "John Dorian"
            ],
            [
                "Elliot Reid"
            ],
            [
                "John Dorian"
            ],
            [
                "Percival Cox"
            ],
            [
                "Percival Cox"
            ],
            [
                "Elliot Reid"
            ],
            [
                "Christopher Turk"
            ],
            [
                "Molly Clock"
            ],
            [
                "Elliot Reid"
            ]
        ],
        "cypher_query": "MATCH (T1:Appointment)-[]-(T2:Physician)\nRETURN T2.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of all the physicians who took appointments.",
        "sql_query": "SELECT T2.name FROM appointment AS T1 JOIN physician AS T2 ON T1.Physician  =  T2.EmployeeID",
        "parsed_sql": {
            "select": {
                "value": "T2.name"
            },
            "from": [
                {
                    "value": "appointment",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Physician",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "John Dorian"
            ],
            [
                "Elliot Reid"
            ],
            [
                "John Dorian"
            ],
            [
                "Percival Cox"
            ],
            [
                "Percival Cox"
            ],
            [
                "Elliot Reid"
            ],
            [
                "Christopher Turk"
            ],
            [
                "Molly Clock"
            ],
            [
                "Elliot Reid"
            ]
        ],
        "cypher_query": "MATCH (T1:Appointment)-[]-(T2:Physician)\nRETURN T2.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many patients do each physician take care of? List their names and number of patients they take care of.",
        "sql_query": "SELECT T1.name ,  count(*) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.PCP"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            }
        },
        "sql_ans": [
            [
                "John Dorian",
                1
            ],
            [
                "Elliot Reid",
                2
            ],
            [
                "Christopher Turk",
                1
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[]-(T2:Patient)\nWITH count(T1.EmployeeID) AS count, T1.Name AS Name\nRETURN Name,COUNT(\"*\")",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Return the name of each physician and the number of patients he or she treats.",
        "sql_query": "SELECT T1.name ,  count(*) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.PCP"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            }
        },
        "sql_ans": [
            [
                "John Dorian",
                1
            ],
            [
                "Elliot Reid",
                2
            ],
            [
                "Christopher Turk",
                1
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[]-(T2:Patient)\nWITH count(T1.EmployeeID) AS count, T1.Name AS Name\nRETURN Name,COUNT(\"*\")",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians who are in charge of more than one patient.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid HAVING count(*)  >  1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.PCP"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "having": {
                "gt": [
                    {
                        "count": "*"
                    },
                    1
                ]
            }
        },
        "sql_ans": [
            [
                "Elliot Reid"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[]-(T2:Patient)\nWITH COUNT(\"*\") AS COUNT, T1.Name AS Name\nWHERE COUNT > 1\nRETURN Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Which physicians are in charge of more than one patient? Give me their names.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid HAVING count(*)  >  1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.PCP"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "having": {
                "gt": [
                    {
                        "count": "*"
                    },
                    1
                ]
            }
        },
        "sql_ans": [
            [
                "Elliot Reid"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[]-(T2:Patient)\nWITH COUNT(\"*\") AS COUNT, T1.Name AS Name\nWHERE COUNT > 1\nRETURN Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms located on each block floor.",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockFloor) AS count, T1.BlockFloor AS BlockFloor\nRETURN COUNT(\"*\"),BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms does each block floor have?",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockFloor) AS count, T1.BlockFloor AS BlockFloor\nRETURN COUNT(\"*\"),BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms for different block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockCode AS BlockCode, count(T1.BlockCode) AS count\nRETURN COUNT(\"*\"),BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms are located for each block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockCode AS BlockCode, count(T1.BlockCode) AS count\nRETURN COUNT(\"*\"),BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of medications prescribed for each brand.",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH count(T1.Brand) AS count, T1.Name AS Name\nRETURN COUNT(\"*\"),Name",
        "cypher_ans": [
            [
                1,
                "Procrastin-X"
            ],
            [
                1,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many medications are prescribed for each brand?",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH count(T1.Brand) AS count, T1.Name AS Name\nRETURN COUNT(\"*\"),Name",
        "cypher_ans": [
            [
                1,
                "Procrastin-X"
            ],
            [
                1,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians whose position title contains the word 'senior'.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of the physicians who have 'senior' in their titles.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the names of all patients who have an undergoing treatment and are staying in room 111.",
        "sql_query": "SELECT DISTINCT T2.name FROM undergoes AS T1 JOIN patient AS T2 ON T1.patient = T2.SSN JOIN stay AS T3 ON T1.Stay  =  T3.StayID WHERE T3.room  =  111",
        "parsed_sql": {
            "select": {
                "value": {
                    "distinct": {
                        "value": "T2.name"
                    }
                }
            },
            "from": [
                {
                    "value": "undergoes",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.patient",
                            "T2.SSN"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "stay",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Stay",
                            "T3.StayID"
                        ]
                    }
                }
            ],
            "where": {
                "eq": [
                    "T3.room",
                    111
                ]
            }
        },
        "sql_ans": [
            [
                "John Smith"
            ]
        ],
        "cypher_query": "MATCH (T1:Undergoes)-[]-(T2:Patient)-[]-(T3:Stay)\nWHERE T3.Room = 111\nRETURN DISTINCT T2.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of patients who are staying in room 111 and have an undergoing treatment?",
        "sql_query": "SELECT DISTINCT T2.name FROM undergoes AS T1 JOIN patient AS T2 ON T1.patient = T2.SSN JOIN stay AS T3 ON T1.Stay  =  T3.StayID WHERE T3.room  =  111",
        "parsed_sql": {
            "select": {
                "value": {
                    "distinct": {
                        "value": "T2.name"
                    }
                }
            },
            "from": [
                {
                    "value": "undergoes",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.patient",
                            "T2.SSN"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "stay",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Stay",
                            "T3.StayID"
                        ]
                    }
                }
            ],
            "where": {
                "eq": [
                    "T3.room",
                    111
                ]
            }
        },
        "sql_ans": [
            [
                "John Smith"
            ]
        ],
        "cypher_query": "MATCH (T1:Undergoes)-[]-(T2:Patient)-[]-(T3:Stay)\nWHERE T3.Room = 111\nRETURN DISTINCT T2.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What is the average cost of procedures that physician John Wen was trained in?",
        "sql_query": "SELECT avg(T3.cost) FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment WHERE T1.name  =  \"John Wen\"",
        "parsed_sql": {
            "select": {
                "value": {
                    "avg": "T3.cost"
                }
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "where": {
                "eq": [
                    "T1.name",
                    "John Wen"
                ]
            }
        },
        "sql_ans": [
            [
                4324.857142857143
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T1.Name = \"John Wen\"\nRETURN T3.Cost",
        "cypher_ans": [
            [
                4899.0
            ],
            [
                1500.0
            ],
            [
                25.0
            ],
            [
                4500.0
            ],
            [
                5600.0
            ],
            [
                3750.0
            ],
            [
                10000.0
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Compute the mean price of procedures physician John Wen was trained in.",
        "sql_query": "SELECT avg(T3.cost) FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment WHERE T1.name  =  \"John Wen\"",
        "parsed_sql": {
            "select": {
                "value": {
                    "avg": "T3.cost"
                }
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "where": {
                "eq": [
                    "T1.name",
                    "John Wen"
                ]
            }
        },
        "sql_ans": [
            [
                4324.857142857143
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T1.Name = \"John Wen\"\nRETURN T3.Cost",
        "cypher_ans": [
            [
                4899.0
            ],
            [
                1500.0
            ],
            [
                25.0
            ],
            [
                4500.0
            ],
            [
                5600.0
            ],
            [
                3750.0
            ],
            [
                10000.0
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "List the name of physicians who took some appointment.",
        "sql_query": "SELECT T2.name FROM appointment AS T1 JOIN physician AS T2 ON T1.Physician  =  T2.EmployeeID",
        "parsed_sql": {
            "select": {
                "value": "T2.name"
            },
            "from": [
                {
                    "value": "appointment",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Physician",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "John Dorian"
            ],
            [
                "Elliot Reid"
            ],
            [
                "John Dorian"
            ],
            [
                "Percival Cox"
            ],
            [
                "Percival Cox"
            ],
            [
                "Elliot Reid"
            ],
            [
                "Christopher Turk"
            ],
            [
                "Molly Clock"
            ],
            [
                "Elliot Reid"
            ]
        ],
        "cypher_query": "MATCH (T1:Appointment)-[]-(T2:Physician)\nRETURN T2.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of all the physicians who took appointments.",
        "sql_query": "SELECT T2.name FROM appointment AS T1 JOIN physician AS T2 ON T1.Physician  =  T2.EmployeeID",
        "parsed_sql": {
            "select": {
                "value": "T2.name"
            },
            "from": [
                {
                    "value": "appointment",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Physician",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "John Dorian"
            ],
            [
                "Elliot Reid"
            ],
            [
                "John Dorian"
            ],
            [
                "Percival Cox"
            ],
            [
                "Percival Cox"
            ],
            [
                "Elliot Reid"
            ],
            [
                "Christopher Turk"
            ],
            [
                "Molly Clock"
            ],
            [
                "Elliot Reid"
            ]
        ],
        "cypher_query": "MATCH (T1:Appointment)-[]-(T2:Physician)\nRETURN T2.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many patients do each physician take care of? List their names and number of patients they take care of.",
        "sql_query": "SELECT T1.name ,  count(*) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.PCP"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            }
        },
        "sql_ans": [
            [
                "John Dorian",
                1
            ],
            [
                "Elliot Reid",
                2
            ],
            [
                "Christopher Turk",
                1
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[]-(T2:Patient)\nWITH T1.Name AS Name, count(T1.EmployeeID) AS count\nRETURN Name,COUNT(\"*\")",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Return the name of each physician and the number of patients he or she treats.",
        "sql_query": "SELECT T1.name ,  count(*) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.PCP"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            }
        },
        "sql_ans": [
            [
                "John Dorian",
                1
            ],
            [
                "Elliot Reid",
                2
            ],
            [
                "Christopher Turk",
                1
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[]-(T2:Patient)\nWITH T1.Name AS Name, count(T1.EmployeeID) AS count\nRETURN Name,COUNT(\"*\")",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians who are in charge of more than one patient.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid HAVING count(*)  >  1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.PCP"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "having": {
                "gt": [
                    {
                        "count": "*"
                    },
                    1
                ]
            }
        },
        "sql_ans": [
            [
                "Elliot Reid"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[]-(T2:Patient)\nWITH T1.Name AS Name, COUNT(\"*\") AS COUNT\nWHERE COUNT > 1\nRETURN Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Which physicians are in charge of more than one patient? Give me their names.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid HAVING count(*)  >  1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.PCP"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "having": {
                "gt": [
                    {
                        "count": "*"
                    },
                    1
                ]
            }
        },
        "sql_ans": [
            [
                "Elliot Reid"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[]-(T2:Patient)\nWITH T1.Name AS Name, COUNT(\"*\") AS COUNT\nWHERE COUNT > 1\nRETURN Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms located on each block floor.",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockFloor AS BlockFloor, count(T1.BlockFloor) AS count\nRETURN COUNT(\"*\"),BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms does each block floor have?",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockFloor AS BlockFloor, count(T1.BlockFloor) AS count\nRETURN COUNT(\"*\"),BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms for different block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockCode) AS count, T1.BlockCode AS BlockCode\nRETURN COUNT(\"*\"),BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms are located for each block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockCode) AS count, T1.BlockCode AS BlockCode\nRETURN COUNT(\"*\"),BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of medications prescribed for each brand.",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH count(T1.Brand) AS count, T1.Name AS Name\nRETURN COUNT(\"*\"),Name",
        "cypher_ans": [
            [
                1,
                "Procrastin-X"
            ],
            [
                1,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many medications are prescribed for each brand?",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH count(T1.Brand) AS count, T1.Name AS Name\nRETURN COUNT(\"*\"),Name",
        "cypher_ans": [
            [
                1,
                "Procrastin-X"
            ],
            [
                1,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians whose position title contains the word 'senior'.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of the physicians who have 'senior' in their titles.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the names of all patients who have an undergoing treatment and are staying in room 111.",
        "sql_query": "SELECT DISTINCT T2.name FROM undergoes AS T1 JOIN patient AS T2 ON T1.patient = T2.SSN JOIN stay AS T3 ON T1.Stay  =  T3.StayID WHERE T3.room  =  111",
        "parsed_sql": {
            "select": {
                "value": {
                    "distinct": {
                        "value": "T2.name"
                    }
                }
            },
            "from": [
                {
                    "value": "undergoes",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.patient",
                            "T2.SSN"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "stay",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Stay",
                            "T3.StayID"
                        ]
                    }
                }
            ],
            "where": {
                "eq": [
                    "T3.room",
                    111
                ]
            }
        },
        "sql_ans": [
            [
                "John Smith"
            ]
        ],
        "cypher_query": "MATCH (T1:Undergoes)-[]-(T2:Patient)-[]-(T3:Stay)\nWHERE T3.Room = 111\nRETURN DISTINCT T2.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of patients who are staying in room 111 and have an undergoing treatment?",
        "sql_query": "SELECT DISTINCT T2.name FROM undergoes AS T1 JOIN patient AS T2 ON T1.patient = T2.SSN JOIN stay AS T3 ON T1.Stay  =  T3.StayID WHERE T3.room  =  111",
        "parsed_sql": {
            "select": {
                "value": {
                    "distinct": {
                        "value": "T2.name"
                    }
                }
            },
            "from": [
                {
                    "value": "undergoes",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.patient",
                            "T2.SSN"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "stay",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Stay",
                            "T3.StayID"
                        ]
                    }
                }
            ],
            "where": {
                "eq": [
                    "T3.room",
                    111
                ]
            }
        },
        "sql_ans": [
            [
                "John Smith"
            ]
        ],
        "cypher_query": "MATCH (T1:Undergoes)-[]-(T2:Patient)-[]-(T3:Stay)\nWHERE T3.Room = 111\nRETURN DISTINCT T2.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What is the average cost of procedures that physician John Wen was trained in?",
        "sql_query": "SELECT avg(T3.cost) FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment WHERE T1.name  =  \"John Wen\"",
        "parsed_sql": {
            "select": {
                "value": {
                    "avg": "T3.cost"
                }
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "where": {
                "eq": [
                    "T1.name",
                    "John Wen"
                ]
            }
        },
        "sql_ans": [
            [
                4324.857142857143
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T1.Name = \"John Wen\"\nRETURN T3.Cost",
        "cypher_ans": [
            [
                4899.0
            ],
            [
                1500.0
            ],
            [
                25.0
            ],
            [
                4500.0
            ],
            [
                5600.0
            ],
            [
                3750.0
            ],
            [
                10000.0
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Compute the mean price of procedures physician John Wen was trained in.",
        "sql_query": "SELECT avg(T3.cost) FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment WHERE T1.name  =  \"John Wen\"",
        "parsed_sql": {
            "select": {
                "value": {
                    "avg": "T3.cost"
                }
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "where": {
                "eq": [
                    "T1.name",
                    "John Wen"
                ]
            }
        },
        "sql_ans": [
            [
                4324.857142857143
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T1.Name = \"John Wen\"\nRETURN T3.Cost",
        "cypher_ans": [
            [
                4899.0
            ],
            [
                1500.0
            ],
            [
                25.0
            ],
            [
                4500.0
            ],
            [
                5600.0
            ],
            [
                3750.0
            ],
            [
                10000.0
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "Compute the mean price of procedures physician John Wen was trained in.",
        "sql_query": "SELECT avg(T3.cost) FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment WHERE T1.name  =  \"John Wen\"",
        "parsed_sql": {
            "select": {
                "value": {
                    "avg": "T3.cost"
                }
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "where": {
                "eq": [
                    "T1.name",
                    "John Wen"
                ]
            }
        },
        "sql_ans": [
            [
                4324.857142857143
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T1.Name = \"John Wen\"\nRETURN T3.Cost",
        "cypher_ans": [
            [
                4899.0
            ],
            [
                1500.0
            ],
            [
                25.0
            ],
            [
                4500.0
            ],
            [
                5600.0
            ],
            [
                3750.0
            ],
            [
                10000.0
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "Compute the mean price of procedures physician John Wen was trained in.",
        "sql_query": "SELECT avg(T3.cost) FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment WHERE T1.name  =  \"John Wen\"",
        "parsed_sql": {
            "select": {
                "value": {
                    "avg": "T3.cost"
                }
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "where": {
                "eq": [
                    "T1.name",
                    "John Wen"
                ]
            }
        },
        "sql_ans": [
            [
                4324.857142857143
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T1.Name = \"John Wen\"\nRETURN T3.Cost",
        "cypher_ans": [
            [
                4899.0
            ],
            [
                1500.0
            ],
            [
                25.0
            ],
            [
                4500.0
            ],
            [
                5600.0
            ],
            [
                3750.0
            ],
            [
                10000.0
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "Compute the mean price of procedures physician John Wen was trained in.",
        "sql_query": "SELECT avg(T3.cost) FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment WHERE T1.name  =  \"John Wen\"",
        "parsed_sql": {
            "select": {
                "value": {
                    "avg": "T3.cost"
                }
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "where": {
                "eq": [
                    "T1.name",
                    "John Wen"
                ]
            }
        },
        "sql_ans": [
            [
                4324.857142857143
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T1.Name = \"John Wen\"\nRETURN T3.Cost",
        "cypher_ans": [
            [
                4899.0
            ],
            [
                1500.0
            ],
            [
                25.0
            ],
            [
                4500.0
            ],
            [
                5600.0
            ],
            [
                3750.0
            ],
            [
                10000.0
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "Compute the mean price of procedures physician John Wen was trained in.",
        "sql_query": "SELECT avg(T3.cost) FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment WHERE T1.name  =  \"John Wen\"",
        "parsed_sql": {
            "select": {
                "value": {
                    "avg": "T3.cost"
                }
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "where": {
                "eq": [
                    "T1.name",
                    "John Wen"
                ]
            }
        },
        "sql_ans": [
            [
                4324.857142857143
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T1.Name = \"John Wen\"\nRETURN T3.Cost",
        "cypher_ans": [
            [
                4899.0
            ],
            [
                1500.0
            ],
            [
                25.0
            ],
            [
                4500.0
            ],
            [
                5600.0
            ],
            [
                3750.0
            ],
            [
                10000.0
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "Compute the mean price of procedures physician John Wen was trained in.",
        "sql_query": "SELECT avg(T3.cost) FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment WHERE T1.name  =  \"John Wen\"",
        "parsed_sql": {
            "select": {
                "value": {
                    "avg": "T3.cost"
                }
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "where": {
                "eq": [
                    "T1.name",
                    "John Wen"
                ]
            }
        },
        "sql_ans": [
            [
                4324.857142857143
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T1.Name = \"John Wen\"\nRETURN T3.Cost",
        "cypher_ans": [
            [
                4899.0
            ],
            [
                1500.0
            ],
            [
                25.0
            ],
            [
                4500.0
            ],
            [
                5600.0
            ],
            [
                3750.0
            ],
            [
                10000.0
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "Compute the mean price of procedures physician John Wen was trained in.",
        "sql_query": "SELECT avg(T3.cost) FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment WHERE T1.name  =  \"John Wen\"",
        "parsed_sql": {
            "select": {
                "value": {
                    "avg": "T3.cost"
                }
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "where": {
                "eq": [
                    "T1.name",
                    "John Wen"
                ]
            }
        },
        "sql_ans": [
            [
                4324.857142857143
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T1.Name = \"John Wen\"\nRETURN T3.Cost",
        "cypher_ans": [
            [
                4899.0
            ],
            [
                1500.0
            ],
            [
                25.0
            ],
            [
                4500.0
            ],
            [
                5600.0
            ],
            [
                3750.0
            ],
            [
                10000.0
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "Compute the mean price of procedures physician John Wen was trained in.",
        "sql_query": "SELECT avg(T3.cost) FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment WHERE T1.name  =  \"John Wen\"",
        "parsed_sql": {
            "select": {
                "value": {
                    "avg": "T3.cost"
                }
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "where": {
                "eq": [
                    "T1.name",
                    "John Wen"
                ]
            }
        },
        "sql_ans": [
            [
                4324.857142857143
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T1.Name = \"John Wen\"\nRETURN T3.Cost",
        "cypher_ans": [
            [
                4899.0
            ],
            [
                1500.0
            ],
            [
                25.0
            ],
            [
                4500.0
            ],
            [
                5600.0
            ],
            [
                3750.0
            ],
            [
                10000.0
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "Compute the mean price of procedures physician John Wen was trained in.",
        "sql_query": "SELECT avg(T3.cost) FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment WHERE T1.name  =  \"John Wen\"",
        "parsed_sql": {
            "select": {
                "value": {
                    "avg": "T3.cost"
                }
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "where": {
                "eq": [
                    "T1.name",
                    "John Wen"
                ]
            }
        },
        "sql_ans": [
            [
                4324.857142857143
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T1.Name = \"John Wen\"\nRETURN T3.Cost",
        "cypher_ans": [
            [
                4899.0
            ],
            [
                1500.0
            ],
            [
                25.0
            ],
            [
                4500.0
            ],
            [
                5600.0
            ],
            [
                3750.0
            ],
            [
                10000.0
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "Compute the mean price of procedures physician John Wen was trained in.",
        "sql_query": "SELECT avg(T3.cost) FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment WHERE T1.name  =  \"John Wen\"",
        "parsed_sql": {
            "select": {
                "value": {
                    "avg": "T3.cost"
                }
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "where": {
                "eq": [
                    "T1.name",
                    "John Wen"
                ]
            }
        },
        "sql_ans": [
            [
                4324.857142857143
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T1.Name = \"John Wen\"\nRETURN T3.Cost",
        "cypher_ans": [
            [
                4899.0
            ],
            [
                1500.0
            ],
            [
                25.0
            ],
            [
                4500.0
            ],
            [
                5600.0
            ],
            [
                3750.0
            ],
            [
                10000.0
            ]
        ]
    }
][][
    {
        "db_id": "hospital_1",
        "question": "Compute the mean price of procedures physician John Wen was trained in.",
        "sql_query": "SELECT avg(T3.cost) FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment WHERE T1.name  =  \"John Wen\"",
        "parsed_sql": {
            "select": {
                "value": {
                    "avg": "T3.cost"
                }
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "where": {
                "eq": [
                    "T1.name",
                    "John Wen"
                ]
            }
        },
        "sql_ans": [
            [
                4324.857142857143
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T1.Name = \"John Wen\"\nRETURN T3.Cost",
        "cypher_ans": [
            [
                4899.0
            ],
            [
                1500.0
            ],
            [
                25.0
            ],
            [
                4500.0
            ],
            [
                5600.0
            ],
            [
                3750.0
            ],
            [
                10000.0
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "Compute the mean price of procedures physician John Wen was trained in.",
        "sql_query": "SELECT avg(T3.cost) FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment WHERE T1.name  =  \"John Wen\"",
        "parsed_sql": {
            "select": {
                "value": {
                    "avg": "T3.cost"
                }
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "where": {
                "eq": [
                    "T1.name",
                    "John Wen"
                ]
            }
        },
        "sql_ans": [
            [
                4324.857142857143
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T1.Name = \"John Wen\"\nRETURN AVG(T3.cost)",
        "cypher_ans": [
            [
                null
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "Compute the mean price of procedures physician John Wen was trained in.",
        "sql_query": "SELECT avg(T3.cost) FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment WHERE T1.name  =  \"John Wen\"",
        "parsed_sql": {
            "select": {
                "value": {
                    "avg": "T3.cost"
                }
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "where": {
                "eq": [
                    "T1.name",
                    "John Wen"
                ]
            }
        },
        "sql_ans": [
            [
                4324.857142857143
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T1.Name = \"John Wen\"\nRETURN AVG(T3.cost)",
        "cypher_ans": [
            [
                null
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "Compute the mean price of procedures physician John Wen was trained in.",
        "sql_query": "SELECT avg(T3.cost) FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment WHERE T1.name  =  \"John Wen\"",
        "parsed_sql": {
            "select": {
                "value": {
                    "avg": "T3.cost"
                }
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "where": {
                "eq": [
                    "T1.name",
                    "John Wen"
                ]
            }
        },
        "sql_ans": [
            [
                4324.857142857143
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T1.Name = \"John Wen\"\nRETURN AVG(T3.cost)",
        "cypher_ans": [
            [
                null
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "Compute the mean price of procedures physician John Wen was trained in.",
        "sql_query": "SELECT avg(T3.cost) FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment WHERE T1.name  =  \"John Wen\"",
        "parsed_sql": {
            "select": {
                "value": {
                    "avg": "T3.cost"
                }
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "where": {
                "eq": [
                    "T1.name",
                    "John Wen"
                ]
            }
        },
        "sql_ans": [
            [
                4324.857142857143
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T1.Name = \"John Wen\"\nRETURN AVG(T3.cost)",
        "cypher_ans": [
            [
                null
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "Compute the mean price of procedures physician John Wen was trained in.",
        "sql_query": "SELECT avg(T3.cost) FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment WHERE T1.name  =  \"John Wen\"",
        "parsed_sql": {
            "select": {
                "value": {
                    "avg": "T3.cost"
                }
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "where": {
                "eq": [
                    "T1.name",
                    "John Wen"
                ]
            }
        },
        "sql_ans": [
            [
                4324.857142857143
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T1.Name = \"John Wen\"\nRETURN AVG(T3.cost)",
        "cypher_ans": [
            [
                null
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "Compute the mean price of procedures physician John Wen was trained in.",
        "sql_query": "SELECT avg(T3.cost) FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment WHERE T1.name  =  \"John Wen\"",
        "parsed_sql": {
            "select": {
                "value": {
                    "avg": "T3.cost"
                }
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "where": {
                "eq": [
                    "T1.name",
                    "John Wen"
                ]
            }
        },
        "sql_ans": [
            [
                4324.857142857143
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T1.Name = \"John Wen\"\nRETURN AVG(T3.cost)",
        "cypher_ans": [
            [
                null
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "Compute the mean price of procedures physician John Wen was trained in.",
        "sql_query": "SELECT avg(T3.cost) FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment WHERE T1.name  =  \"John Wen\"",
        "parsed_sql": {
            "select": {
                "value": {
                    "avg": "T3.cost"
                }
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "where": {
                "eq": [
                    "T1.name",
                    "John Wen"
                ]
            }
        },
        "sql_ans": [
            [
                4324.857142857143
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T1.Name = \"John Wen\"\nRETURN AVG(T3.cost)",
        "cypher_ans": [
            [
                null
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "Compute the mean price of procedures physician John Wen was trained in.",
        "sql_query": "SELECT avg(T3.cost) FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment WHERE T1.name  =  \"John Wen\"",
        "parsed_sql": {
            "select": {
                "value": {
                    "avg": "T3.cost"
                }
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "where": {
                "eq": [
                    "T1.name",
                    "John Wen"
                ]
            }
        },
        "sql_ans": [
            [
                4324.857142857143
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T1.Name = \"John Wen\"\nRETURN AVG(T3.cost)",
        "cypher_ans": [
            [
                null
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "Compute the mean price of procedures physician John Wen was trained in.",
        "sql_query": "SELECT avg(T3.cost) FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment WHERE T1.name  =  \"John Wen\"",
        "parsed_sql": {
            "select": {
                "value": {
                    "avg": "T3.cost"
                }
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "where": {
                "eq": [
                    "T1.name",
                    "John Wen"
                ]
            }
        },
        "sql_ans": [
            [
                4324.857142857143
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T1.Name = \"John Wen\"\nRETURN AVG(T3.cost)",
        "cypher_ans": [
            [
                null
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "Compute the mean price of procedures physician John Wen was trained in.",
        "sql_query": "SELECT avg(T3.cost) FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment WHERE T1.name  =  \"John Wen\"",
        "parsed_sql": {
            "select": {
                "value": {
                    "avg": "T3.cost"
                }
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "where": {
                "eq": [
                    "T1.name",
                    "John Wen"
                ]
            }
        },
        "sql_ans": [
            [
                4324.857142857143
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T1.Name = \"John Wen\"\nRETURN AVG(T3.cost)",
        "cypher_ans": [
            [
                null
            ]
        ]
    }
][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][
    {
        "db_id": "hospital_1",
        "question": "List the name of physicians who took some appointment.",
        "sql_query": "SELECT T2.name FROM appointment AS T1 JOIN physician AS T2 ON T1.Physician  =  T2.EmployeeID",
        "parsed_sql": {
            "select": {
                "value": "T2.name"
            },
            "from": [
                {
                    "value": "appointment",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Physician",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "John Dorian"
            ],
            [
                "Elliot Reid"
            ],
            [
                "John Dorian"
            ],
            [
                "Percival Cox"
            ],
            [
                "Percival Cox"
            ],
            [
                "Elliot Reid"
            ],
            [
                "Christopher Turk"
            ],
            [
                "Molly Clock"
            ],
            [
                "Elliot Reid"
            ]
        ],
        "cypher_query": "MATCH (T1:Appointment)-[]-(T2:Physician)\nRETURN T2.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of all the physicians who took appointments.",
        "sql_query": "SELECT T2.name FROM appointment AS T1 JOIN physician AS T2 ON T1.Physician  =  T2.EmployeeID",
        "parsed_sql": {
            "select": {
                "value": "T2.name"
            },
            "from": [
                {
                    "value": "appointment",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Physician",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "John Dorian"
            ],
            [
                "Elliot Reid"
            ],
            [
                "John Dorian"
            ],
            [
                "Percival Cox"
            ],
            [
                "Percival Cox"
            ],
            [
                "Elliot Reid"
            ],
            [
                "Christopher Turk"
            ],
            [
                "Molly Clock"
            ],
            [
                "Elliot Reid"
            ]
        ],
        "cypher_query": "MATCH (T1:Appointment)-[]-(T2:Physician)\nRETURN T2.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many patients do each physician take care of? List their names and number of patients they take care of.",
        "sql_query": "SELECT T1.name ,  count(*) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.PCP"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            }
        },
        "sql_ans": [
            [
                "John Dorian",
                1
            ],
            [
                "Elliot Reid",
                2
            ],
            [
                "Christopher Turk",
                1
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[]-(T2:Patient)\nWITH count(T1.EmployeeID) AS count, T1.Name AS Name\nRETURN Name,COUNT(\"*\")",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Return the name of each physician and the number of patients he or she treats.",
        "sql_query": "SELECT T1.name ,  count(*) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.PCP"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            }
        },
        "sql_ans": [
            [
                "John Dorian",
                1
            ],
            [
                "Elliot Reid",
                2
            ],
            [
                "Christopher Turk",
                1
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[]-(T2:Patient)\nWITH count(T1.EmployeeID) AS count, T1.Name AS Name\nRETURN Name,COUNT(\"*\")",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians who are in charge of more than one patient.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid HAVING count(*)  >  1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.PCP"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "having": {
                "gt": [
                    {
                        "count": "*"
                    },
                    1
                ]
            }
        },
        "sql_ans": [
            [
                "Elliot Reid"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[]-(T2:Patient)\nWITH COUNT(\"*\") AS COUNT, T1.Name AS Name\nWHERE COUNT > 1\nRETURN Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Which physicians are in charge of more than one patient? Give me their names.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid HAVING count(*)  >  1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.PCP"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "having": {
                "gt": [
                    {
                        "count": "*"
                    },
                    1
                ]
            }
        },
        "sql_ans": [
            [
                "Elliot Reid"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[]-(T2:Patient)\nWITH COUNT(\"*\") AS COUNT, T1.Name AS Name\nWHERE COUNT > 1\nRETURN Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms located on each block floor.",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockFloor AS BlockFloor, count(T1.BlockFloor) AS count\nRETURN COUNT(\"*\"),BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms does each block floor have?",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockFloor AS BlockFloor, count(T1.BlockFloor) AS count\nRETURN COUNT(\"*\"),BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms for different block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockCode) AS count, T1.BlockCode AS BlockCode\nRETURN COUNT(\"*\"),BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms are located for each block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockCode) AS count, T1.BlockCode AS BlockCode\nRETURN COUNT(\"*\"),BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of medications prescribed for each brand.",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH T1.Name AS Name, count(T1.Brand) AS count\nRETURN COUNT(\"*\"),Name",
        "cypher_ans": [
            [
                1,
                "Procrastin-X"
            ],
            [
                1,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many medications are prescribed for each brand?",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH T1.Name AS Name, count(T1.Brand) AS count\nRETURN COUNT(\"*\"),Name",
        "cypher_ans": [
            [
                1,
                "Procrastin-X"
            ],
            [
                1,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians whose position title contains the word 'senior'.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of the physicians who have 'senior' in their titles.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the names of all patients who have an undergoing treatment and are staying in room 111.",
        "sql_query": "SELECT DISTINCT T2.name FROM undergoes AS T1 JOIN patient AS T2 ON T1.patient = T2.SSN JOIN stay AS T3 ON T1.Stay  =  T3.StayID WHERE T3.room  =  111",
        "parsed_sql": {
            "select": {
                "value": {
                    "distinct": {
                        "value": "T2.name"
                    }
                }
            },
            "from": [
                {
                    "value": "undergoes",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.patient",
                            "T2.SSN"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "stay",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Stay",
                            "T3.StayID"
                        ]
                    }
                }
            ],
            "where": {
                "eq": [
                    "T3.room",
                    111
                ]
            }
        },
        "sql_ans": [
            [
                "John Smith"
            ]
        ],
        "cypher_query": "MATCH (T1:Undergoes)-[]-(T2:Patient)-[]-(T3:Stay)\nWHERE T3.Room = 111\nRETURN DISTINCT T2.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of patients who are staying in room 111 and have an undergoing treatment?",
        "sql_query": "SELECT DISTINCT T2.name FROM undergoes AS T1 JOIN patient AS T2 ON T1.patient = T2.SSN JOIN stay AS T3 ON T1.Stay  =  T3.StayID WHERE T3.room  =  111",
        "parsed_sql": {
            "select": {
                "value": {
                    "distinct": {
                        "value": "T2.name"
                    }
                }
            },
            "from": [
                {
                    "value": "undergoes",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.patient",
                            "T2.SSN"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "stay",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Stay",
                            "T3.StayID"
                        ]
                    }
                }
            ],
            "where": {
                "eq": [
                    "T3.room",
                    111
                ]
            }
        },
        "sql_ans": [
            [
                "John Smith"
            ]
        ],
        "cypher_query": "MATCH (T1:Undergoes)-[]-(T2:Patient)-[]-(T3:Stay)\nWHERE T3.Room = 111\nRETURN DISTINCT T2.Name",
        "cypher_ans": []
    }
][][][][][][][][][][][][][
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians whose position title contains the word 'senior'.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of the physicians who have 'senior' in their titles.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    }
][
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians whose position title contains the word 'senior'.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of the physicians who have 'senior' in their titles.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    }
][
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians whose position title contains the word 'senior'.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of the physicians who have 'senior' in their titles.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    }
][
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians whose position title contains the word 'senior'.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of the physicians who have 'senior' in their titles.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    }
][
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians whose position title contains the word 'senior'.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of the physicians who have 'senior' in their titles.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    }
][
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians whose position title contains the word 'senior'.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of the physicians who have 'senior' in their titles.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    }
][
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians whose position title contains the word 'senior'.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of the physicians who have 'senior' in their titles.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    }
][
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians whose position title contains the word 'senior'.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of the physicians who have 'senior' in their titles.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    }
][
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians whose position title contains the word 'senior'.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of the physicians who have 'senior' in their titles.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    }
][
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians whose position title contains the word 'senior'.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of the physicians who have 'senior' in their titles.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    }
][
    {
        "db_id": "hospital_1",
        "question": "List the name of physicians who took some appointment.",
        "sql_query": "SELECT T2.name FROM appointment AS T1 JOIN physician AS T2 ON T1.Physician  =  T2.EmployeeID",
        "parsed_sql": {
            "select": {
                "value": "T2.name"
            },
            "from": [
                {
                    "value": "appointment",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Physician",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "John Dorian"
            ],
            [
                "Elliot Reid"
            ],
            [
                "John Dorian"
            ],
            [
                "Percival Cox"
            ],
            [
                "Percival Cox"
            ],
            [
                "Elliot Reid"
            ],
            [
                "Christopher Turk"
            ],
            [
                "Molly Clock"
            ],
            [
                "Elliot Reid"
            ]
        ],
        "cypher_query": "MATCH (T1:Appointment)-[]-(T2:Physician)\nRETURN T2.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of all the physicians who took appointments.",
        "sql_query": "SELECT T2.name FROM appointment AS T1 JOIN physician AS T2 ON T1.Physician  =  T2.EmployeeID",
        "parsed_sql": {
            "select": {
                "value": "T2.name"
            },
            "from": [
                {
                    "value": "appointment",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Physician",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "John Dorian"
            ],
            [
                "Elliot Reid"
            ],
            [
                "John Dorian"
            ],
            [
                "Percival Cox"
            ],
            [
                "Percival Cox"
            ],
            [
                "Elliot Reid"
            ],
            [
                "Christopher Turk"
            ],
            [
                "Molly Clock"
            ],
            [
                "Elliot Reid"
            ]
        ],
        "cypher_query": "MATCH (T1:Appointment)-[]-(T2:Physician)\nRETURN T2.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many patients do each physician take care of? List their names and number of patients they take care of.",
        "sql_query": "SELECT T1.name ,  count(*) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.PCP"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            }
        },
        "sql_ans": [
            [
                "John Dorian",
                1
            ],
            [
                "Elliot Reid",
                2
            ],
            [
                "Christopher Turk",
                1
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[]-(T2:Patient)\nWITH count(T1.EmployeeID) AS count, T1.Name AS Name\nRETURN Name,COUNT(\"*\")",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Return the name of each physician and the number of patients he or she treats.",
        "sql_query": "SELECT T1.name ,  count(*) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.PCP"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            }
        },
        "sql_ans": [
            [
                "John Dorian",
                1
            ],
            [
                "Elliot Reid",
                2
            ],
            [
                "Christopher Turk",
                1
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[]-(T2:Patient)\nWITH count(T1.EmployeeID) AS count, T1.Name AS Name\nRETURN Name,COUNT(\"*\")",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians who are in charge of more than one patient.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid HAVING count(*)  >  1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.PCP"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "having": {
                "gt": [
                    {
                        "count": "*"
                    },
                    1
                ]
            }
        },
        "sql_ans": [
            [
                "Elliot Reid"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[]-(T2:Patient)\nWITH T1.Name AS Name, COUNT(\"*\") AS COUNT\nWHERE COUNT > 1\nRETURN Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Which physicians are in charge of more than one patient? Give me their names.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid HAVING count(*)  >  1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.PCP"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "having": {
                "gt": [
                    {
                        "count": "*"
                    },
                    1
                ]
            }
        },
        "sql_ans": [
            [
                "Elliot Reid"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[]-(T2:Patient)\nWITH T1.Name AS Name, COUNT(\"*\") AS COUNT\nWHERE COUNT > 1\nRETURN Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms located on each block floor.",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockFloor) AS count, T1.BlockFloor AS BlockFloor\nRETURN COUNT(\"*\"),BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms does each block floor have?",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockFloor) AS count, T1.BlockFloor AS BlockFloor\nRETURN COUNT(\"*\"),BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms for different block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockCode AS BlockCode, count(T1.BlockCode) AS count\nRETURN COUNT(\"*\"),BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms are located for each block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockCode AS BlockCode, count(T1.BlockCode) AS count\nRETURN COUNT(\"*\"),BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of medications prescribed for each brand.",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH T1.Name AS Name, count(T1.Brand) AS count\nRETURN COUNT(\"*\"),Name",
        "cypher_ans": [
            [
                1,
                "Procrastin-X"
            ],
            [
                1,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many medications are prescribed for each brand?",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH T1.Name AS Name, count(T1.Brand) AS count\nRETURN COUNT(\"*\"),Name",
        "cypher_ans": [
            [
                1,
                "Procrastin-X"
            ],
            [
                1,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians whose position title contains the word 'senior'.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of the physicians who have 'senior' in their titles.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the names of all patients who have an undergoing treatment and are staying in room 111.",
        "sql_query": "SELECT DISTINCT T2.name FROM undergoes AS T1 JOIN patient AS T2 ON T1.patient = T2.SSN JOIN stay AS T3 ON T1.Stay  =  T3.StayID WHERE T3.room  =  111",
        "parsed_sql": {
            "select": {
                "value": {
                    "distinct": {
                        "value": "T2.name"
                    }
                }
            },
            "from": [
                {
                    "value": "undergoes",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.patient",
                            "T2.SSN"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "stay",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Stay",
                            "T3.StayID"
                        ]
                    }
                }
            ],
            "where": {
                "eq": [
                    "T3.room",
                    111
                ]
            }
        },
        "sql_ans": [
            [
                "John Smith"
            ]
        ],
        "cypher_query": "MATCH (T1:Undergoes)-[]-(T2:Patient)-[]-(T3:Stay)\nWHERE T3.Room = 111\nRETURN DISTINCT T2.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of patients who are staying in room 111 and have an undergoing treatment?",
        "sql_query": "SELECT DISTINCT T2.name FROM undergoes AS T1 JOIN patient AS T2 ON T1.patient = T2.SSN JOIN stay AS T3 ON T1.Stay  =  T3.StayID WHERE T3.room  =  111",
        "parsed_sql": {
            "select": {
                "value": {
                    "distinct": {
                        "value": "T2.name"
                    }
                }
            },
            "from": [
                {
                    "value": "undergoes",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.patient",
                            "T2.SSN"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "stay",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Stay",
                            "T3.StayID"
                        ]
                    }
                }
            ],
            "where": {
                "eq": [
                    "T3.room",
                    111
                ]
            }
        },
        "sql_ans": [
            [
                "John Smith"
            ]
        ],
        "cypher_query": "MATCH (T1:Undergoes)-[]-(T2:Patient)-[]-(T3:Stay)\nWHERE T3.Room = 111\nRETURN DISTINCT T2.Name",
        "cypher_ans": []
    }
][][][][][][
    {
        "db_id": "hospital_1",
        "question": "List the name of physicians who took some appointment.",
        "sql_query": "SELECT T2.name FROM appointment AS T1 JOIN physician AS T2 ON T1.Physician  =  T2.EmployeeID",
        "parsed_sql": {
            "select": {
                "value": "T2.name"
            },
            "from": [
                {
                    "value": "appointment",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Physician",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "John Dorian"
            ],
            [
                "Elliot Reid"
            ],
            [
                "John Dorian"
            ],
            [
                "Percival Cox"
            ],
            [
                "Percival Cox"
            ],
            [
                "Elliot Reid"
            ],
            [
                "Christopher Turk"
            ],
            [
                "Molly Clock"
            ],
            [
                "Elliot Reid"
            ]
        ],
        "cypher_query": "MATCH (T1:Appointment)-[]-(T2:Physician)\nRETURN T2.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of all the physicians who took appointments.",
        "sql_query": "SELECT T2.name FROM appointment AS T1 JOIN physician AS T2 ON T1.Physician  =  T2.EmployeeID",
        "parsed_sql": {
            "select": {
                "value": "T2.name"
            },
            "from": [
                {
                    "value": "appointment",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Physician",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "John Dorian"
            ],
            [
                "Elliot Reid"
            ],
            [
                "John Dorian"
            ],
            [
                "Percival Cox"
            ],
            [
                "Percival Cox"
            ],
            [
                "Elliot Reid"
            ],
            [
                "Christopher Turk"
            ],
            [
                "Molly Clock"
            ],
            [
                "Elliot Reid"
            ]
        ],
        "cypher_query": "MATCH (T1:Appointment)-[]-(T2:Physician)\nRETURN T2.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the patient who made the most recent appointment?",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the patient who made the appointment with the most recent start date.",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many patients do each physician take care of? List their names and number of patients they take care of.",
        "sql_query": "SELECT T1.name ,  count(*) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.PCP"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            }
        },
        "sql_ans": [
            [
                "John Dorian",
                1
            ],
            [
                "Elliot Reid",
                2
            ],
            [
                "Christopher Turk",
                1
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[]-(T2:Patient)\nWITH T1.Name AS Name, count(T1.EmployeeID) AS count\nRETURN Name,COUNT(\"*\")",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Return the name of each physician and the number of patients he or she treats.",
        "sql_query": "SELECT T1.name ,  count(*) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.PCP"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            }
        },
        "sql_ans": [
            [
                "John Dorian",
                1
            ],
            [
                "Elliot Reid",
                2
            ],
            [
                "Christopher Turk",
                1
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[]-(T2:Patient)\nWITH T1.Name AS Name, count(T1.EmployeeID) AS count\nRETURN Name,COUNT(\"*\")",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians who are in charge of more than one patient.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid HAVING count(*)  >  1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.PCP"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "having": {
                "gt": [
                    {
                        "count": "*"
                    },
                    1
                ]
            }
        },
        "sql_ans": [
            [
                "Elliot Reid"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[]-(T2:Patient)\nWITH COUNT(\"*\") AS COUNT, T1.Name AS Name\nWHERE COUNT > 1\nRETURN Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Which physicians are in charge of more than one patient? Give me their names.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid HAVING count(*)  >  1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.PCP"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "having": {
                "gt": [
                    {
                        "count": "*"
                    },
                    1
                ]
            }
        },
        "sql_ans": [
            [
                "Elliot Reid"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[]-(T2:Patient)\nWITH COUNT(\"*\") AS COUNT, T1.Name AS Name\nWHERE COUNT > 1\nRETURN Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms located on each block floor.",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockFloor) AS count, T1.BlockFloor AS BlockFloor\nRETURN COUNT(\"*\"),BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms does each block floor have?",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockFloor) AS count, T1.BlockFloor AS BlockFloor\nRETURN COUNT(\"*\"),BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms for different block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockCode AS BlockCode, count(T1.BlockCode) AS count\nRETURN COUNT(\"*\"),BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms are located for each block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockCode AS BlockCode, count(T1.BlockCode) AS count\nRETURN COUNT(\"*\"),BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of medications prescribed for each brand.",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH T1.Name AS Name, count(T1.Brand) AS count\nRETURN COUNT(\"*\"),Name",
        "cypher_ans": [
            [
                1,
                "Procrastin-X"
            ],
            [
                1,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many medications are prescribed for each brand?",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH T1.Name AS Name, count(T1.Brand) AS count\nRETURN COUNT(\"*\"),Name",
        "cypher_ans": [
            [
                1,
                "Procrastin-X"
            ],
            [
                1,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians whose position title contains the word 'senior'.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of the physicians who have 'senior' in their titles.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the names of all patients who have an undergoing treatment and are staying in room 111.",
        "sql_query": "SELECT DISTINCT T2.name FROM undergoes AS T1 JOIN patient AS T2 ON T1.patient = T2.SSN JOIN stay AS T3 ON T1.Stay  =  T3.StayID WHERE T3.room  =  111",
        "parsed_sql": {
            "select": {
                "value": {
                    "distinct": {
                        "value": "T2.name"
                    }
                }
            },
            "from": [
                {
                    "value": "undergoes",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.patient",
                            "T2.SSN"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "stay",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Stay",
                            "T3.StayID"
                        ]
                    }
                }
            ],
            "where": {
                "eq": [
                    "T3.room",
                    111
                ]
            }
        },
        "sql_ans": [
            [
                "John Smith"
            ]
        ],
        "cypher_query": "MATCH (T1:Undergoes)-[]-(T2:Patient)-[]-(T3:Stay)\nWHERE T3.Room = 111\nRETURN DISTINCT T2.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of patients who are staying in room 111 and have an undergoing treatment?",
        "sql_query": "SELECT DISTINCT T2.name FROM undergoes AS T1 JOIN patient AS T2 ON T1.patient = T2.SSN JOIN stay AS T3 ON T1.Stay  =  T3.StayID WHERE T3.room  =  111",
        "parsed_sql": {
            "select": {
                "value": {
                    "distinct": {
                        "value": "T2.name"
                    }
                }
            },
            "from": [
                {
                    "value": "undergoes",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.patient",
                            "T2.SSN"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "stay",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Stay",
                            "T3.StayID"
                        ]
                    }
                }
            ],
            "where": {
                "eq": [
                    "T3.room",
                    111
                ]
            }
        },
        "sql_ans": [
            [
                "John Smith"
            ]
        ],
        "cypher_query": "MATCH (T1:Undergoes)-[]-(T2:Patient)-[]-(T3:Stay)\nWHERE T3.Room = 111\nRETURN DISTINCT T2.Name",
        "cypher_ans": []
    }
][][][][][][][][][][][][][][][][][
    {
        "db_id": "hospital_1",
        "question": "List the name of physicians who took some appointment.",
        "sql_query": "SELECT T2.name FROM appointment AS T1 JOIN physician AS T2 ON T1.Physician  =  T2.EmployeeID",
        "parsed_sql": {
            "select": {
                "value": "T2.name"
            },
            "from": [
                {
                    "value": "appointment",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Physician",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "John Dorian"
            ],
            [
                "Elliot Reid"
            ],
            [
                "John Dorian"
            ],
            [
                "Percival Cox"
            ],
            [
                "Percival Cox"
            ],
            [
                "Elliot Reid"
            ],
            [
                "Christopher Turk"
            ],
            [
                "Molly Clock"
            ],
            [
                "Elliot Reid"
            ]
        ],
        "cypher_query": "MATCH (T1:Appointment)-[]-(T2:Physician)\nRETURN T2.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of all the physicians who took appointments.",
        "sql_query": "SELECT T2.name FROM appointment AS T1 JOIN physician AS T2 ON T1.Physician  =  T2.EmployeeID",
        "parsed_sql": {
            "select": {
                "value": "T2.name"
            },
            "from": [
                {
                    "value": "appointment",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Physician",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "John Dorian"
            ],
            [
                "Elliot Reid"
            ],
            [
                "John Dorian"
            ],
            [
                "Percival Cox"
            ],
            [
                "Percival Cox"
            ],
            [
                "Elliot Reid"
            ],
            [
                "Christopher Turk"
            ],
            [
                "Molly Clock"
            ],
            [
                "Elliot Reid"
            ]
        ],
        "cypher_query": "MATCH (T1:Appointment)-[]-(T2:Physician)\nRETURN T2.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many patients do each physician take care of? List their names and number of patients they take care of.",
        "sql_query": "SELECT T1.name ,  count(*) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.PCP"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            }
        },
        "sql_ans": [
            [
                "John Dorian",
                1
            ],
            [
                "Elliot Reid",
                2
            ],
            [
                "Christopher Turk",
                1
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[]-(T2:Patient)\nWITH count(T1.EmployeeID) AS count, T1.Name AS Name\nRETURN Name,COUNT(\"*\")",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Return the name of each physician and the number of patients he or she treats.",
        "sql_query": "SELECT T1.name ,  count(*) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.PCP"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            }
        },
        "sql_ans": [
            [
                "John Dorian",
                1
            ],
            [
                "Elliot Reid",
                2
            ],
            [
                "Christopher Turk",
                1
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[]-(T2:Patient)\nWITH count(T1.EmployeeID) AS count, T1.Name AS Name\nRETURN Name,COUNT(\"*\")",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians who are in charge of more than one patient.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid HAVING count(*)  >  1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.PCP"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "having": {
                "gt": [
                    {
                        "count": "*"
                    },
                    1
                ]
            }
        },
        "sql_ans": [
            [
                "Elliot Reid"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[]-(T2:Patient)\nWITH T1.Name AS Name, COUNT(\"*\") AS COUNT\nWHERE COUNT > 1\nRETURN Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Which physicians are in charge of more than one patient? Give me their names.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid HAVING count(*)  >  1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.PCP"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "having": {
                "gt": [
                    {
                        "count": "*"
                    },
                    1
                ]
            }
        },
        "sql_ans": [
            [
                "Elliot Reid"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[]-(T2:Patient)\nWITH T1.Name AS Name, COUNT(\"*\") AS COUNT\nWHERE COUNT > 1\nRETURN Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms located on each block floor.",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockFloor AS BlockFloor, count(T1.BlockFloor) AS count\nRETURN COUNT(\"*\"),BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms does each block floor have?",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockFloor AS BlockFloor, count(T1.BlockFloor) AS count\nRETURN COUNT(\"*\"),BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms for different block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockCode AS BlockCode, count(T1.BlockCode) AS count\nRETURN COUNT(\"*\"),BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms are located for each block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockCode AS BlockCode, count(T1.BlockCode) AS count\nRETURN COUNT(\"*\"),BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of medications prescribed for each brand.",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH count(T1.Brand) AS count, T1.Name AS Name\nRETURN COUNT(\"*\"),Name",
        "cypher_ans": [
            [
                1,
                "Procrastin-X"
            ],
            [
                1,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many medications are prescribed for each brand?",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH count(T1.Brand) AS count, T1.Name AS Name\nRETURN COUNT(\"*\"),Name",
        "cypher_ans": [
            [
                1,
                "Procrastin-X"
            ],
            [
                1,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians whose position title contains the word 'senior'.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of the physicians who have 'senior' in their titles.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the names of all patients who have an undergoing treatment and are staying in room 111.",
        "sql_query": "SELECT DISTINCT T2.name FROM undergoes AS T1 JOIN patient AS T2 ON T1.patient = T2.SSN JOIN stay AS T3 ON T1.Stay  =  T3.StayID WHERE T3.room  =  111",
        "parsed_sql": {
            "select": {
                "value": {
                    "distinct": {
                        "value": "T2.name"
                    }
                }
            },
            "from": [
                {
                    "value": "undergoes",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.patient",
                            "T2.SSN"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "stay",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Stay",
                            "T3.StayID"
                        ]
                    }
                }
            ],
            "where": {
                "eq": [
                    "T3.room",
                    111
                ]
            }
        },
        "sql_ans": [
            [
                "John Smith"
            ]
        ],
        "cypher_query": "MATCH (T1:Undergoes)-[]-(T2:Patient)-[]-(T3:Stay)\nWHERE T3.Room = 111\nRETURN DISTINCT T2.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of patients who are staying in room 111 and have an undergoing treatment?",
        "sql_query": "SELECT DISTINCT T2.name FROM undergoes AS T1 JOIN patient AS T2 ON T1.patient = T2.SSN JOIN stay AS T3 ON T1.Stay  =  T3.StayID WHERE T3.room  =  111",
        "parsed_sql": {
            "select": {
                "value": {
                    "distinct": {
                        "value": "T2.name"
                    }
                }
            },
            "from": [
                {
                    "value": "undergoes",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.patient",
                            "T2.SSN"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "stay",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Stay",
                            "T3.StayID"
                        ]
                    }
                }
            ],
            "where": {
                "eq": [
                    "T3.room",
                    111
                ]
            }
        },
        "sql_ans": [
            [
                "John Smith"
            ]
        ],
        "cypher_query": "MATCH (T1:Undergoes)-[]-(T2:Patient)-[]-(T3:Stay)\nWHERE T3.Room = 111\nRETURN DISTINCT T2.Name",
        "cypher_ans": []
    }
][][
    {
        "db_id": "hospital_1",
        "question": "List the name of physicians who took some appointment.",
        "sql_query": "SELECT T2.name FROM appointment AS T1 JOIN physician AS T2 ON T1.Physician  =  T2.EmployeeID",
        "parsed_sql": {
            "select": {
                "value": "T2.name"
            },
            "from": [
                {
                    "value": "appointment",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Physician",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "John Dorian"
            ],
            [
                "Elliot Reid"
            ],
            [
                "John Dorian"
            ],
            [
                "Percival Cox"
            ],
            [
                "Percival Cox"
            ],
            [
                "Elliot Reid"
            ],
            [
                "Christopher Turk"
            ],
            [
                "Molly Clock"
            ],
            [
                "Elliot Reid"
            ]
        ],
        "cypher_query": "MATCH (T1:Appointment)-[]-(T2:Physician)\nRETURN T2.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of all the physicians who took appointments.",
        "sql_query": "SELECT T2.name FROM appointment AS T1 JOIN physician AS T2 ON T1.Physician  =  T2.EmployeeID",
        "parsed_sql": {
            "select": {
                "value": "T2.name"
            },
            "from": [
                {
                    "value": "appointment",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Physician",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "John Dorian"
            ],
            [
                "Elliot Reid"
            ],
            [
                "John Dorian"
            ],
            [
                "Percival Cox"
            ],
            [
                "Percival Cox"
            ],
            [
                "Elliot Reid"
            ],
            [
                "Christopher Turk"
            ],
            [
                "Molly Clock"
            ],
            [
                "Elliot Reid"
            ]
        ],
        "cypher_query": "MATCH (T1:Appointment)-[]-(T2:Physician)\nRETURN T2.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many patients do each physician take care of? List their names and number of patients they take care of.",
        "sql_query": "SELECT T1.name ,  count(*) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.PCP"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            }
        },
        "sql_ans": [
            [
                "John Dorian",
                1
            ],
            [
                "Elliot Reid",
                2
            ],
            [
                "Christopher Turk",
                1
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[]-(T2:Patient)\nWITH T1.Name AS Name, count(T1.EmployeeID) AS count\nRETURN Name,COUNT(\"*\")",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Return the name of each physician and the number of patients he or she treats.",
        "sql_query": "SELECT T1.name ,  count(*) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.PCP"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            }
        },
        "sql_ans": [
            [
                "John Dorian",
                1
            ],
            [
                "Elliot Reid",
                2
            ],
            [
                "Christopher Turk",
                1
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[]-(T2:Patient)\nWITH T1.Name AS Name, count(T1.EmployeeID) AS count\nRETURN Name,COUNT(\"*\")",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians who are in charge of more than one patient.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid HAVING count(*)  >  1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.PCP"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "having": {
                "gt": [
                    {
                        "count": "*"
                    },
                    1
                ]
            }
        },
        "sql_ans": [
            [
                "Elliot Reid"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[]-(T2:Patient)\nWITH T1.Name AS Name, COUNT(\"*\") AS COUNT\nWHERE COUNT > 1\nRETURN Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Which physicians are in charge of more than one patient? Give me their names.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid HAVING count(*)  >  1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.PCP"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "having": {
                "gt": [
                    {
                        "count": "*"
                    },
                    1
                ]
            }
        },
        "sql_ans": [
            [
                "Elliot Reid"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[]-(T2:Patient)\nWITH T1.Name AS Name, COUNT(\"*\") AS COUNT\nWHERE COUNT > 1\nRETURN Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms located on each block floor.",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockFloor) AS count, T1.BlockFloor AS BlockFloor\nRETURN COUNT(\"*\"),BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms does each block floor have?",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockFloor) AS count, T1.BlockFloor AS BlockFloor\nRETURN COUNT(\"*\"),BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms for different block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockCode) AS count, T1.BlockCode AS BlockCode\nRETURN COUNT(\"*\"),BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms are located for each block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockCode) AS count, T1.BlockCode AS BlockCode\nRETURN COUNT(\"*\"),BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of medications prescribed for each brand.",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH T1.Name AS Name, count(T1.Brand) AS count\nRETURN COUNT(\"*\"),Name",
        "cypher_ans": [
            [
                1,
                "Procrastin-X"
            ],
            [
                1,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many medications are prescribed for each brand?",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH T1.Name AS Name, count(T1.Brand) AS count\nRETURN COUNT(\"*\"),Name",
        "cypher_ans": [
            [
                1,
                "Procrastin-X"
            ],
            [
                1,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians whose position title contains the word 'senior'.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of the physicians who have 'senior' in their titles.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the names of all patients who have an undergoing treatment and are staying in room 111.",
        "sql_query": "SELECT DISTINCT T2.name FROM undergoes AS T1 JOIN patient AS T2 ON T1.patient = T2.SSN JOIN stay AS T3 ON T1.Stay  =  T3.StayID WHERE T3.room  =  111",
        "parsed_sql": {
            "select": {
                "value": {
                    "distinct": {
                        "value": "T2.name"
                    }
                }
            },
            "from": [
                {
                    "value": "undergoes",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.patient",
                            "T2.SSN"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "stay",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Stay",
                            "T3.StayID"
                        ]
                    }
                }
            ],
            "where": {
                "eq": [
                    "T3.room",
                    111
                ]
            }
        },
        "sql_ans": [
            [
                "John Smith"
            ]
        ],
        "cypher_query": "MATCH (T1:Undergoes)-[]-(T2:Patient)-[]-(T3:Stay)\nWHERE T3.Room = 111\nRETURN DISTINCT T2.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of patients who are staying in room 111 and have an undergoing treatment?",
        "sql_query": "SELECT DISTINCT T2.name FROM undergoes AS T1 JOIN patient AS T2 ON T1.patient = T2.SSN JOIN stay AS T3 ON T1.Stay  =  T3.StayID WHERE T3.room  =  111",
        "parsed_sql": {
            "select": {
                "value": {
                    "distinct": {
                        "value": "T2.name"
                    }
                }
            },
            "from": [
                {
                    "value": "undergoes",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.patient",
                            "T2.SSN"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "stay",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Stay",
                            "T3.StayID"
                        ]
                    }
                }
            ],
            "where": {
                "eq": [
                    "T3.room",
                    111
                ]
            }
        },
        "sql_ans": [
            [
                "John Smith"
            ]
        ],
        "cypher_query": "MATCH (T1:Undergoes)-[]-(T2:Patient)-[]-(T3:Stay)\nWHERE T3.Room = 111\nRETURN DISTINCT T2.Name",
        "cypher_ans": []
    }
][
    {
        "db_id": "hospital_1",
        "question": "List the name of physicians who took some appointment.",
        "sql_query": "SELECT T2.name FROM appointment AS T1 JOIN physician AS T2 ON T1.Physician  =  T2.EmployeeID",
        "parsed_sql": {
            "select": {
                "value": "T2.name"
            },
            "from": [
                {
                    "value": "appointment",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Physician",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "John Dorian"
            ],
            [
                "Elliot Reid"
            ],
            [
                "John Dorian"
            ],
            [
                "Percival Cox"
            ],
            [
                "Percival Cox"
            ],
            [
                "Elliot Reid"
            ],
            [
                "Christopher Turk"
            ],
            [
                "Molly Clock"
            ],
            [
                "Elliot Reid"
            ]
        ],
        "cypher_query": "MATCH (T1:Appointment)-[]-(T2:Physician)\nRETURN T2.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of all the physicians who took appointments.",
        "sql_query": "SELECT T2.name FROM appointment AS T1 JOIN physician AS T2 ON T1.Physician  =  T2.EmployeeID",
        "parsed_sql": {
            "select": {
                "value": "T2.name"
            },
            "from": [
                {
                    "value": "appointment",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Physician",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "John Dorian"
            ],
            [
                "Elliot Reid"
            ],
            [
                "John Dorian"
            ],
            [
                "Percival Cox"
            ],
            [
                "Percival Cox"
            ],
            [
                "Elliot Reid"
            ],
            [
                "Christopher Turk"
            ],
            [
                "Molly Clock"
            ],
            [
                "Elliot Reid"
            ]
        ],
        "cypher_query": "MATCH (T1:Appointment)-[]-(T2:Physician)\nRETURN T2.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many patients do each physician take care of? List their names and number of patients they take care of.",
        "sql_query": "SELECT T1.name ,  count(*) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.PCP"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            }
        },
        "sql_ans": [
            [
                "John Dorian",
                1
            ],
            [
                "Elliot Reid",
                2
            ],
            [
                "Christopher Turk",
                1
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[]-(T2:Patient)\nWITH count(T1.EmployeeID) AS count, T1.Name AS Name\nRETURN Name,COUNT(\"*\")",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Return the name of each physician and the number of patients he or she treats.",
        "sql_query": "SELECT T1.name ,  count(*) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.PCP"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            }
        },
        "sql_ans": [
            [
                "John Dorian",
                1
            ],
            [
                "Elliot Reid",
                2
            ],
            [
                "Christopher Turk",
                1
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[]-(T2:Patient)\nWITH count(T1.EmployeeID) AS count, T1.Name AS Name\nRETURN Name,COUNT(\"*\")",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians who are in charge of more than one patient.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid HAVING count(*)  >  1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.PCP"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "having": {
                "gt": [
                    {
                        "count": "*"
                    },
                    1
                ]
            }
        },
        "sql_ans": [
            [
                "Elliot Reid"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[]-(T2:Patient)\nWITH COUNT(\"*\") AS COUNT, T1.Name AS Name\nWHERE COUNT > 1\nRETURN Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Which physicians are in charge of more than one patient? Give me their names.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid HAVING count(*)  >  1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.PCP"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "having": {
                "gt": [
                    {
                        "count": "*"
                    },
                    1
                ]
            }
        },
        "sql_ans": [
            [
                "Elliot Reid"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[]-(T2:Patient)\nWITH COUNT(\"*\") AS COUNT, T1.Name AS Name\nWHERE COUNT > 1\nRETURN Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms located on each block floor.",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockFloor) AS count, T1.BlockFloor AS BlockFloor\nRETURN COUNT(\"*\"),BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms does each block floor have?",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockFloor) AS count, T1.BlockFloor AS BlockFloor\nRETURN COUNT(\"*\"),BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms for different block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockCode AS BlockCode, count(T1.BlockCode) AS count\nRETURN COUNT(\"*\"),BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms are located for each block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockCode AS BlockCode, count(T1.BlockCode) AS count\nRETURN COUNT(\"*\"),BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of medications prescribed for each brand.",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH count(T1.Brand) AS count, T1.Name AS Name\nRETURN COUNT(\"*\"),Name",
        "cypher_ans": [
            [
                1,
                "Procrastin-X"
            ],
            [
                1,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many medications are prescribed for each brand?",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH count(T1.Brand) AS count, T1.Name AS Name\nRETURN COUNT(\"*\"),Name",
        "cypher_ans": [
            [
                1,
                "Procrastin-X"
            ],
            [
                1,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians whose position title contains the word 'senior'.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of the physicians who have 'senior' in their titles.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the names of all patients who have an undergoing treatment and are staying in room 111.",
        "sql_query": "SELECT DISTINCT T2.name FROM undergoes AS T1 JOIN patient AS T2 ON T1.patient = T2.SSN JOIN stay AS T3 ON T1.Stay  =  T3.StayID WHERE T3.room  =  111",
        "parsed_sql": {
            "select": {
                "value": {
                    "distinct": {
                        "value": "T2.name"
                    }
                }
            },
            "from": [
                {
                    "value": "undergoes",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.patient",
                            "T2.SSN"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "stay",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Stay",
                            "T3.StayID"
                        ]
                    }
                }
            ],
            "where": {
                "eq": [
                    "T3.room",
                    111
                ]
            }
        },
        "sql_ans": [
            [
                "John Smith"
            ]
        ],
        "cypher_query": "MATCH (T1:Undergoes)-[]-(T2:Patient)-[]-(T3:Stay)\nWHERE T3.Room = 111\nRETURN DISTINCT T2.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of patients who are staying in room 111 and have an undergoing treatment?",
        "sql_query": "SELECT DISTINCT T2.name FROM undergoes AS T1 JOIN patient AS T2 ON T1.patient = T2.SSN JOIN stay AS T3 ON T1.Stay  =  T3.StayID WHERE T3.room  =  111",
        "parsed_sql": {
            "select": {
                "value": {
                    "distinct": {
                        "value": "T2.name"
                    }
                }
            },
            "from": [
                {
                    "value": "undergoes",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.patient",
                            "T2.SSN"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "stay",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Stay",
                            "T3.StayID"
                        ]
                    }
                }
            ],
            "where": {
                "eq": [
                    "T3.room",
                    111
                ]
            }
        },
        "sql_ans": [
            [
                "John Smith"
            ]
        ],
        "cypher_query": "MATCH (T1:Undergoes)-[]-(T2:Patient)-[]-(T3:Stay)\nWHERE T3.Room = 111\nRETURN DISTINCT T2.Name",
        "cypher_ans": []
    }
][
    {
        "db_id": "hospital_1",
        "question": "List the name of physicians who took some appointment.",
        "sql_query": "SELECT T2.name FROM appointment AS T1 JOIN physician AS T2 ON T1.Physician  =  T2.EmployeeID",
        "parsed_sql": {
            "select": {
                "value": "T2.name"
            },
            "from": [
                {
                    "value": "appointment",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Physician",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "John Dorian"
            ],
            [
                "Elliot Reid"
            ],
            [
                "John Dorian"
            ],
            [
                "Percival Cox"
            ],
            [
                "Percival Cox"
            ],
            [
                "Elliot Reid"
            ],
            [
                "Christopher Turk"
            ],
            [
                "Molly Clock"
            ],
            [
                "Elliot Reid"
            ]
        ],
        "cypher_query": "MATCH (T1:Appointment)-[]-(T2:Physician)\nRETURN T2.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of all the physicians who took appointments.",
        "sql_query": "SELECT T2.name FROM appointment AS T1 JOIN physician AS T2 ON T1.Physician  =  T2.EmployeeID",
        "parsed_sql": {
            "select": {
                "value": "T2.name"
            },
            "from": [
                {
                    "value": "appointment",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Physician",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "John Dorian"
            ],
            [
                "Elliot Reid"
            ],
            [
                "John Dorian"
            ],
            [
                "Percival Cox"
            ],
            [
                "Percival Cox"
            ],
            [
                "Elliot Reid"
            ],
            [
                "Christopher Turk"
            ],
            [
                "Molly Clock"
            ],
            [
                "Elliot Reid"
            ]
        ],
        "cypher_query": "MATCH (T1:Appointment)-[]-(T2:Physician)\nRETURN T2.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many patients do each physician take care of? List their names and number of patients they take care of.",
        "sql_query": "SELECT T1.name ,  count(*) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.PCP"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            }
        },
        "sql_ans": [
            [
                "John Dorian",
                1
            ],
            [
                "Elliot Reid",
                2
            ],
            [
                "Christopher Turk",
                1
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[]-(T2:Patient)\nWITH count(T1.EmployeeID) AS count, T1.Name AS Name\nRETURN Name,COUNT(\"*\")",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Return the name of each physician and the number of patients he or she treats.",
        "sql_query": "SELECT T1.name ,  count(*) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.PCP"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            }
        },
        "sql_ans": [
            [
                "John Dorian",
                1
            ],
            [
                "Elliot Reid",
                2
            ],
            [
                "Christopher Turk",
                1
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[]-(T2:Patient)\nWITH count(T1.EmployeeID) AS count, T1.Name AS Name\nRETURN Name,COUNT(\"*\")",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians who are in charge of more than one patient.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid HAVING count(*)  >  1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.PCP"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "having": {
                "gt": [
                    {
                        "count": "*"
                    },
                    1
                ]
            }
        },
        "sql_ans": [
            [
                "Elliot Reid"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[]-(T2:Patient)\nWITH COUNT(\"*\") AS COUNT, T1.Name AS Name\nWHERE COUNT > 1\nRETURN Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Which physicians are in charge of more than one patient? Give me their names.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid HAVING count(*)  >  1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.PCP"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "having": {
                "gt": [
                    {
                        "count": "*"
                    },
                    1
                ]
            }
        },
        "sql_ans": [
            [
                "Elliot Reid"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[]-(T2:Patient)\nWITH COUNT(\"*\") AS COUNT, T1.Name AS Name\nWHERE COUNT > 1\nRETURN Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms located on each block floor.",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockFloor) AS count, T1.BlockFloor AS BlockFloor\nRETURN COUNT(\"*\"),BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms does each block floor have?",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockFloor) AS count, T1.BlockFloor AS BlockFloor\nRETURN COUNT(\"*\"),BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms for different block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockCode) AS count, T1.BlockCode AS BlockCode\nRETURN COUNT(\"*\"),BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms are located for each block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockCode) AS count, T1.BlockCode AS BlockCode\nRETURN COUNT(\"*\"),BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of medications prescribed for each brand.",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH count(T1.Brand) AS count, T1.Name AS Name\nRETURN COUNT(\"*\"),Name",
        "cypher_ans": [
            [
                1,
                "Procrastin-X"
            ],
            [
                1,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many medications are prescribed for each brand?",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH count(T1.Brand) AS count, T1.Name AS Name\nRETURN COUNT(\"*\"),Name",
        "cypher_ans": [
            [
                1,
                "Procrastin-X"
            ],
            [
                1,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians whose position title contains the word 'senior'.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of the physicians who have 'senior' in their titles.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the names of all patients who have an undergoing treatment and are staying in room 111.",
        "sql_query": "SELECT DISTINCT T2.name FROM undergoes AS T1 JOIN patient AS T2 ON T1.patient = T2.SSN JOIN stay AS T3 ON T1.Stay  =  T3.StayID WHERE T3.room  =  111",
        "parsed_sql": {
            "select": {
                "value": {
                    "distinct": {
                        "value": "T2.name"
                    }
                }
            },
            "from": [
                {
                    "value": "undergoes",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.patient",
                            "T2.SSN"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "stay",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Stay",
                            "T3.StayID"
                        ]
                    }
                }
            ],
            "where": {
                "eq": [
                    "T3.room",
                    111
                ]
            }
        },
        "sql_ans": [
            [
                "John Smith"
            ]
        ],
        "cypher_query": "MATCH (T1:Undergoes)-[]-(T2:Patient)-[]-(T3:Stay)\nWHERE T3.Room = 111\nRETURN DISTINCT T2.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of patients who are staying in room 111 and have an undergoing treatment?",
        "sql_query": "SELECT DISTINCT T2.name FROM undergoes AS T1 JOIN patient AS T2 ON T1.patient = T2.SSN JOIN stay AS T3 ON T1.Stay  =  T3.StayID WHERE T3.room  =  111",
        "parsed_sql": {
            "select": {
                "value": {
                    "distinct": {
                        "value": "T2.name"
                    }
                }
            },
            "from": [
                {
                    "value": "undergoes",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.patient",
                            "T2.SSN"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "stay",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Stay",
                            "T3.StayID"
                        ]
                    }
                }
            ],
            "where": {
                "eq": [
                    "T3.room",
                    111
                ]
            }
        },
        "sql_ans": [
            [
                "John Smith"
            ]
        ],
        "cypher_query": "MATCH (T1:Undergoes)-[]-(T2:Patient)-[]-(T3:Stay)\nWHERE T3.Room = 111\nRETURN DISTINCT T2.Name",
        "cypher_ans": []
    }
][
    {
        "db_id": "hospital_1",
        "question": "List the name of physicians who took some appointment.",
        "sql_query": "SELECT T2.name FROM appointment AS T1 JOIN physician AS T2 ON T1.Physician  =  T2.EmployeeID",
        "parsed_sql": {
            "select": {
                "value": "T2.name"
            },
            "from": [
                {
                    "value": "appointment",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Physician",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "John Dorian"
            ],
            [
                "Elliot Reid"
            ],
            [
                "John Dorian"
            ],
            [
                "Percival Cox"
            ],
            [
                "Percival Cox"
            ],
            [
                "Elliot Reid"
            ],
            [
                "Christopher Turk"
            ],
            [
                "Molly Clock"
            ],
            [
                "Elliot Reid"
            ]
        ],
        "cypher_query": "MATCH (T1:Appointment)-[]-(T2:Physician)\nRETURN T2.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of all the physicians who took appointments.",
        "sql_query": "SELECT T2.name FROM appointment AS T1 JOIN physician AS T2 ON T1.Physician  =  T2.EmployeeID",
        "parsed_sql": {
            "select": {
                "value": "T2.name"
            },
            "from": [
                {
                    "value": "appointment",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Physician",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "John Dorian"
            ],
            [
                "Elliot Reid"
            ],
            [
                "John Dorian"
            ],
            [
                "Percival Cox"
            ],
            [
                "Percival Cox"
            ],
            [
                "Elliot Reid"
            ],
            [
                "Christopher Turk"
            ],
            [
                "Molly Clock"
            ],
            [
                "Elliot Reid"
            ]
        ],
        "cypher_query": "MATCH (T1:Appointment)-[]-(T2:Physician)\nRETURN T2.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many patients do each physician take care of? List their names and number of patients they take care of.",
        "sql_query": "SELECT T1.name ,  count(*) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.PCP"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            }
        },
        "sql_ans": [
            [
                "John Dorian",
                1
            ],
            [
                "Elliot Reid",
                2
            ],
            [
                "Christopher Turk",
                1
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[]-(T2:Patient)\nWITH T1.Name AS Name, count(T1.EmployeeID) AS count\nRETURN Name,COUNT(\"*\")",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Return the name of each physician and the number of patients he or she treats.",
        "sql_query": "SELECT T1.name ,  count(*) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.PCP"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            }
        },
        "sql_ans": [
            [
                "John Dorian",
                1
            ],
            [
                "Elliot Reid",
                2
            ],
            [
                "Christopher Turk",
                1
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[]-(T2:Patient)\nWITH T1.Name AS Name, count(T1.EmployeeID) AS count\nRETURN Name,COUNT(\"*\")",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians who are in charge of more than one patient.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid HAVING count(*)  >  1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.PCP"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "having": {
                "gt": [
                    {
                        "count": "*"
                    },
                    1
                ]
            }
        },
        "sql_ans": [
            [
                "Elliot Reid"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[]-(T2:Patient)\nWITH COUNT(\"*\") AS COUNT, T1.Name AS Name\nWHERE COUNT > 1\nRETURN Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Which physicians are in charge of more than one patient? Give me their names.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid HAVING count(*)  >  1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.PCP"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "having": {
                "gt": [
                    {
                        "count": "*"
                    },
                    1
                ]
            }
        },
        "sql_ans": [
            [
                "Elliot Reid"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[]-(T2:Patient)\nWITH COUNT(\"*\") AS COUNT, T1.Name AS Name\nWHERE COUNT > 1\nRETURN Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms located on each block floor.",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockFloor AS BlockFloor, count(T1.BlockFloor) AS count\nRETURN COUNT(\"*\"),BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms does each block floor have?",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockFloor AS BlockFloor, count(T1.BlockFloor) AS count\nRETURN COUNT(\"*\"),BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms for different block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockCode AS BlockCode, count(T1.BlockCode) AS count\nRETURN COUNT(\"*\"),BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms are located for each block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockCode AS BlockCode, count(T1.BlockCode) AS count\nRETURN COUNT(\"*\"),BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of medications prescribed for each brand.",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH count(T1.Brand) AS count, T1.Name AS Name\nRETURN COUNT(\"*\"),Name",
        "cypher_ans": [
            [
                1,
                "Procrastin-X"
            ],
            [
                1,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many medications are prescribed for each brand?",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH count(T1.Brand) AS count, T1.Name AS Name\nRETURN COUNT(\"*\"),Name",
        "cypher_ans": [
            [
                1,
                "Procrastin-X"
            ],
            [
                1,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians whose position title contains the word 'senior'.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of the physicians who have 'senior' in their titles.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the names of all patients who have an undergoing treatment and are staying in room 111.",
        "sql_query": "SELECT DISTINCT T2.name FROM undergoes AS T1 JOIN patient AS T2 ON T1.patient = T2.SSN JOIN stay AS T3 ON T1.Stay  =  T3.StayID WHERE T3.room  =  111",
        "parsed_sql": {
            "select": {
                "value": {
                    "distinct": {
                        "value": "T2.name"
                    }
                }
            },
            "from": [
                {
                    "value": "undergoes",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.patient",
                            "T2.SSN"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "stay",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Stay",
                            "T3.StayID"
                        ]
                    }
                }
            ],
            "where": {
                "eq": [
                    "T3.room",
                    111
                ]
            }
        },
        "sql_ans": [
            [
                "John Smith"
            ]
        ],
        "cypher_query": "MATCH (T1:Undergoes)-[]-(T2:Patient)-[]-(T3:Stay)\nWHERE T3.Room = 111\nRETURN DISTINCT T2.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of patients who are staying in room 111 and have an undergoing treatment?",
        "sql_query": "SELECT DISTINCT T2.name FROM undergoes AS T1 JOIN patient AS T2 ON T1.patient = T2.SSN JOIN stay AS T3 ON T1.Stay  =  T3.StayID WHERE T3.room  =  111",
        "parsed_sql": {
            "select": {
                "value": {
                    "distinct": {
                        "value": "T2.name"
                    }
                }
            },
            "from": [
                {
                    "value": "undergoes",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.patient",
                            "T2.SSN"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "stay",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Stay",
                            "T3.StayID"
                        ]
                    }
                }
            ],
            "where": {
                "eq": [
                    "T3.room",
                    111
                ]
            }
        },
        "sql_ans": [
            [
                "John Smith"
            ]
        ],
        "cypher_query": "MATCH (T1:Undergoes)-[]-(T2:Patient)-[]-(T3:Stay)\nWHERE T3.Room = 111\nRETURN DISTINCT T2.Name",
        "cypher_ans": []
    }
][
    {
        "db_id": "hospital_1",
        "question": "List the name of physicians who took some appointment.",
        "sql_query": "SELECT T2.name FROM appointment AS T1 JOIN physician AS T2 ON T1.Physician  =  T2.EmployeeID",
        "parsed_sql": {
            "select": {
                "value": "T2.name"
            },
            "from": [
                {
                    "value": "appointment",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Physician",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "John Dorian"
            ],
            [
                "Elliot Reid"
            ],
            [
                "John Dorian"
            ],
            [
                "Percival Cox"
            ],
            [
                "Percival Cox"
            ],
            [
                "Elliot Reid"
            ],
            [
                "Christopher Turk"
            ],
            [
                "Molly Clock"
            ],
            [
                "Elliot Reid"
            ]
        ],
        "cypher_query": "MATCH (T1:Appointment)-[]-(T2:Physician)\nRETURN T2.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of all the physicians who took appointments.",
        "sql_query": "SELECT T2.name FROM appointment AS T1 JOIN physician AS T2 ON T1.Physician  =  T2.EmployeeID",
        "parsed_sql": {
            "select": {
                "value": "T2.name"
            },
            "from": [
                {
                    "value": "appointment",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Physician",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "John Dorian"
            ],
            [
                "Elliot Reid"
            ],
            [
                "John Dorian"
            ],
            [
                "Percival Cox"
            ],
            [
                "Percival Cox"
            ],
            [
                "Elliot Reid"
            ],
            [
                "Christopher Turk"
            ],
            [
                "Molly Clock"
            ],
            [
                "Elliot Reid"
            ]
        ],
        "cypher_query": "MATCH (T1:Appointment)-[]-(T2:Physician)\nRETURN T2.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many patients do each physician take care of? List their names and number of patients they take care of.",
        "sql_query": "SELECT T1.name ,  count(*) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.PCP"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            }
        },
        "sql_ans": [
            [
                "John Dorian",
                1
            ],
            [
                "Elliot Reid",
                2
            ],
            [
                "Christopher Turk",
                1
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[]-(T2:Patient)\nWITH T1.Name AS Name, count(T1.EmployeeID) AS count\nRETURN Name,COUNT(\"*\")",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Return the name of each physician and the number of patients he or she treats.",
        "sql_query": "SELECT T1.name ,  count(*) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.PCP"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            }
        },
        "sql_ans": [
            [
                "John Dorian",
                1
            ],
            [
                "Elliot Reid",
                2
            ],
            [
                "Christopher Turk",
                1
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[]-(T2:Patient)\nWITH T1.Name AS Name, count(T1.EmployeeID) AS count\nRETURN Name,COUNT(\"*\")",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians who are in charge of more than one patient.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid HAVING count(*)  >  1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.PCP"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "having": {
                "gt": [
                    {
                        "count": "*"
                    },
                    1
                ]
            }
        },
        "sql_ans": [
            [
                "Elliot Reid"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[]-(T2:Patient)\nWITH COUNT(\"*\") AS COUNT, T1.Name AS Name\nWHERE COUNT > 1\nRETURN Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Which physicians are in charge of more than one patient? Give me their names.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid HAVING count(*)  >  1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.PCP"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "having": {
                "gt": [
                    {
                        "count": "*"
                    },
                    1
                ]
            }
        },
        "sql_ans": [
            [
                "Elliot Reid"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[]-(T2:Patient)\nWITH COUNT(\"*\") AS COUNT, T1.Name AS Name\nWHERE COUNT > 1\nRETURN Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms located on each block floor.",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockFloor AS BlockFloor, count(T1.BlockFloor) AS count\nRETURN COUNT(\"*\"),BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms does each block floor have?",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockFloor AS BlockFloor, count(T1.BlockFloor) AS count\nRETURN COUNT(\"*\"),BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms for different block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockCode AS BlockCode, count(T1.BlockCode) AS count\nRETURN COUNT(\"*\"),BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms are located for each block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockCode AS BlockCode, count(T1.BlockCode) AS count\nRETURN COUNT(\"*\"),BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of medications prescribed for each brand.",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH T1.Name AS Name, count(T1.Brand) AS count\nRETURN COUNT(\"*\"),Name",
        "cypher_ans": [
            [
                1,
                "Procrastin-X"
            ],
            [
                1,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many medications are prescribed for each brand?",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH T1.Name AS Name, count(T1.Brand) AS count\nRETURN COUNT(\"*\"),Name",
        "cypher_ans": [
            [
                1,
                "Procrastin-X"
            ],
            [
                1,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians whose position title contains the word 'senior'.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of the physicians who have 'senior' in their titles.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the names of all patients who have an undergoing treatment and are staying in room 111.",
        "sql_query": "SELECT DISTINCT T2.name FROM undergoes AS T1 JOIN patient AS T2 ON T1.patient = T2.SSN JOIN stay AS T3 ON T1.Stay  =  T3.StayID WHERE T3.room  =  111",
        "parsed_sql": {
            "select": {
                "value": {
                    "distinct": {
                        "value": "T2.name"
                    }
                }
            },
            "from": [
                {
                    "value": "undergoes",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.patient",
                            "T2.SSN"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "stay",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Stay",
                            "T3.StayID"
                        ]
                    }
                }
            ],
            "where": {
                "eq": [
                    "T3.room",
                    111
                ]
            }
        },
        "sql_ans": [
            [
                "John Smith"
            ]
        ],
        "cypher_query": "MATCH (T1:Undergoes)-[]-(T2:Patient)-[]-(T3:Stay)\nWHERE T3.Room = 111\nRETURN DISTINCT T2.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of patients who are staying in room 111 and have an undergoing treatment?",
        "sql_query": "SELECT DISTINCT T2.name FROM undergoes AS T1 JOIN patient AS T2 ON T1.patient = T2.SSN JOIN stay AS T3 ON T1.Stay  =  T3.StayID WHERE T3.room  =  111",
        "parsed_sql": {
            "select": {
                "value": {
                    "distinct": {
                        "value": "T2.name"
                    }
                }
            },
            "from": [
                {
                    "value": "undergoes",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.patient",
                            "T2.SSN"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "stay",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Stay",
                            "T3.StayID"
                        ]
                    }
                }
            ],
            "where": {
                "eq": [
                    "T3.room",
                    111
                ]
            }
        },
        "sql_ans": [
            [
                "John Smith"
            ]
        ],
        "cypher_query": "MATCH (T1:Undergoes)-[]-(T2:Patient)-[]-(T3:Stay)\nWHERE T3.Room = 111\nRETURN DISTINCT T2.Name",
        "cypher_ans": []
    }
][][][][
    {
        "db_id": "hospital_1",
        "question": "List the name of physicians who took some appointment.",
        "sql_query": "SELECT T2.name FROM appointment AS T1 JOIN physician AS T2 ON T1.Physician  =  T2.EmployeeID",
        "parsed_sql": {
            "select": {
                "value": "T2.name"
            },
            "from": [
                {
                    "value": "appointment",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Physician",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "John Dorian"
            ],
            [
                "Elliot Reid"
            ],
            [
                "John Dorian"
            ],
            [
                "Percival Cox"
            ],
            [
                "Percival Cox"
            ],
            [
                "Elliot Reid"
            ],
            [
                "Christopher Turk"
            ],
            [
                "Molly Clock"
            ],
            [
                "Elliot Reid"
            ]
        ],
        "cypher_query": "MATCH (T1:Appointment)-[]-(T2:Physician)\nRETURN T2.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of all the physicians who took appointments.",
        "sql_query": "SELECT T2.name FROM appointment AS T1 JOIN physician AS T2 ON T1.Physician  =  T2.EmployeeID",
        "parsed_sql": {
            "select": {
                "value": "T2.name"
            },
            "from": [
                {
                    "value": "appointment",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Physician",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "John Dorian"
            ],
            [
                "Elliot Reid"
            ],
            [
                "John Dorian"
            ],
            [
                "Percival Cox"
            ],
            [
                "Percival Cox"
            ],
            [
                "Elliot Reid"
            ],
            [
                "Christopher Turk"
            ],
            [
                "Molly Clock"
            ],
            [
                "Elliot Reid"
            ]
        ],
        "cypher_query": "MATCH (T1:Appointment)-[]-(T2:Physician)\nRETURN T2.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many patients do each physician take care of? List their names and number of patients they take care of.",
        "sql_query": "SELECT T1.name ,  count(*) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.PCP"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            }
        },
        "sql_ans": [
            [
                "John Dorian",
                1
            ],
            [
                "Elliot Reid",
                2
            ],
            [
                "Christopher Turk",
                1
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[]-(T2:Patient)\nWITH T1.Name AS Name, count(T1.EmployeeID) AS count\nRETURN Name,COUNT(\"*\")",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Return the name of each physician and the number of patients he or she treats.",
        "sql_query": "SELECT T1.name ,  count(*) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.PCP"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            }
        },
        "sql_ans": [
            [
                "John Dorian",
                1
            ],
            [
                "Elliot Reid",
                2
            ],
            [
                "Christopher Turk",
                1
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[]-(T2:Patient)\nWITH T1.Name AS Name, count(T1.EmployeeID) AS count\nRETURN Name,COUNT(\"*\")",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians who are in charge of more than one patient.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid HAVING count(*)  >  1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.PCP"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "having": {
                "gt": [
                    {
                        "count": "*"
                    },
                    1
                ]
            }
        },
        "sql_ans": [
            [
                "Elliot Reid"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[]-(T2:Patient)\nWITH T1.Name AS Name, COUNT(\"*\") AS COUNT\nWHERE COUNT > 1\nRETURN Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Which physicians are in charge of more than one patient? Give me their names.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid HAVING count(*)  >  1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.PCP"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "having": {
                "gt": [
                    {
                        "count": "*"
                    },
                    1
                ]
            }
        },
        "sql_ans": [
            [
                "Elliot Reid"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[]-(T2:Patient)\nWITH T1.Name AS Name, COUNT(\"*\") AS COUNT\nWHERE COUNT > 1\nRETURN Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms located on each block floor.",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockFloor) AS count, T1.BlockFloor AS BlockFloor\nRETURN COUNT(\"*\"),BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms does each block floor have?",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockFloor) AS count, T1.BlockFloor AS BlockFloor\nRETURN COUNT(\"*\"),BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms for different block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockCode AS BlockCode, count(T1.BlockCode) AS count\nRETURN COUNT(\"*\"),BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms are located for each block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockCode AS BlockCode, count(T1.BlockCode) AS count\nRETURN COUNT(\"*\"),BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of medications prescribed for each brand.",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH T1.Name AS Name, count(T1.Brand) AS count\nRETURN COUNT(\"*\"),Name",
        "cypher_ans": [
            [
                1,
                "Procrastin-X"
            ],
            [
                1,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many medications are prescribed for each brand?",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH T1.Name AS Name, count(T1.Brand) AS count\nRETURN COUNT(\"*\"),Name",
        "cypher_ans": [
            [
                1,
                "Procrastin-X"
            ],
            [
                1,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians whose position title contains the word 'senior'.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of the physicians who have 'senior' in their titles.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the names of all patients who have an undergoing treatment and are staying in room 111.",
        "sql_query": "SELECT DISTINCT T2.name FROM undergoes AS T1 JOIN patient AS T2 ON T1.patient = T2.SSN JOIN stay AS T3 ON T1.Stay  =  T3.StayID WHERE T3.room  =  111",
        "parsed_sql": {
            "select": {
                "value": {
                    "distinct": {
                        "value": "T2.name"
                    }
                }
            },
            "from": [
                {
                    "value": "undergoes",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.patient",
                            "T2.SSN"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "stay",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Stay",
                            "T3.StayID"
                        ]
                    }
                }
            ],
            "where": {
                "eq": [
                    "T3.room",
                    111
                ]
            }
        },
        "sql_ans": [
            [
                "John Smith"
            ]
        ],
        "cypher_query": "MATCH (T1:Undergoes)-[]-(T2:Patient)-[]-(T3:Stay)\nWHERE T3.Room = 111\nRETURN DISTINCT T2.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of patients who are staying in room 111 and have an undergoing treatment?",
        "sql_query": "SELECT DISTINCT T2.name FROM undergoes AS T1 JOIN patient AS T2 ON T1.patient = T2.SSN JOIN stay AS T3 ON T1.Stay  =  T3.StayID WHERE T3.room  =  111",
        "parsed_sql": {
            "select": {
                "value": {
                    "distinct": {
                        "value": "T2.name"
                    }
                }
            },
            "from": [
                {
                    "value": "undergoes",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.patient",
                            "T2.SSN"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "stay",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Stay",
                            "T3.StayID"
                        ]
                    }
                }
            ],
            "where": {
                "eq": [
                    "T3.room",
                    111
                ]
            }
        },
        "sql_ans": [
            [
                "John Smith"
            ]
        ],
        "cypher_query": "MATCH (T1:Undergoes)-[]-(T2:Patient)-[]-(T3:Stay)\nWHERE T3.Room = 111\nRETURN DISTINCT T2.Name",
        "cypher_ans": []
    }
][][][][][][][][][][][][][][][][][][][][][][][][][][][][][
    {
        "db_id": "hospital_1",
        "question": "List the name of physicians who took some appointment.",
        "sql_query": "SELECT T2.name FROM appointment AS T1 JOIN physician AS T2 ON T1.Physician  =  T2.EmployeeID",
        "parsed_sql": {
            "select": {
                "value": "T2.name"
            },
            "from": [
                {
                    "value": "appointment",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Physician",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "John Dorian"
            ],
            [
                "Elliot Reid"
            ],
            [
                "John Dorian"
            ],
            [
                "Percival Cox"
            ],
            [
                "Percival Cox"
            ],
            [
                "Elliot Reid"
            ],
            [
                "Christopher Turk"
            ],
            [
                "Molly Clock"
            ],
            [
                "Elliot Reid"
            ]
        ],
        "cypher_query": "MATCH (T1:Appointment)-[]-(T2:Physician)\nRETURN T2.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of all the physicians who took appointments.",
        "sql_query": "SELECT T2.name FROM appointment AS T1 JOIN physician AS T2 ON T1.Physician  =  T2.EmployeeID",
        "parsed_sql": {
            "select": {
                "value": "T2.name"
            },
            "from": [
                {
                    "value": "appointment",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Physician",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "John Dorian"
            ],
            [
                "Elliot Reid"
            ],
            [
                "John Dorian"
            ],
            [
                "Percival Cox"
            ],
            [
                "Percival Cox"
            ],
            [
                "Elliot Reid"
            ],
            [
                "Christopher Turk"
            ],
            [
                "Molly Clock"
            ],
            [
                "Elliot Reid"
            ]
        ],
        "cypher_query": "MATCH (T1:Appointment)-[]-(T2:Physician)\nRETURN T2.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many patients do each physician take care of? List their names and number of patients they take care of.",
        "sql_query": "SELECT T1.name ,  count(*) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.PCP"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            }
        },
        "sql_ans": [
            [
                "John Dorian",
                1
            ],
            [
                "Elliot Reid",
                2
            ],
            [
                "Christopher Turk",
                1
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[]-(T2:Patient)\nWITH count(T1.EmployeeID) AS count, T1.Name AS Name\nRETURN Name,COUNT(\"*\")",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Return the name of each physician and the number of patients he or she treats.",
        "sql_query": "SELECT T1.name ,  count(*) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.PCP"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            }
        },
        "sql_ans": [
            [
                "John Dorian",
                1
            ],
            [
                "Elliot Reid",
                2
            ],
            [
                "Christopher Turk",
                1
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[]-(T2:Patient)\nWITH count(T1.EmployeeID) AS count, T1.Name AS Name\nRETURN Name,COUNT(\"*\")",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians who are in charge of more than one patient.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid HAVING count(*)  >  1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.PCP"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "having": {
                "gt": [
                    {
                        "count": "*"
                    },
                    1
                ]
            }
        },
        "sql_ans": [
            [
                "Elliot Reid"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[]-(T2:Patient)\nWITH COUNT(\"*\") AS COUNT, T1.Name AS Name\nWHERE COUNT > 1\nRETURN Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Which physicians are in charge of more than one patient? Give me their names.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid HAVING count(*)  >  1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.PCP"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "having": {
                "gt": [
                    {
                        "count": "*"
                    },
                    1
                ]
            }
        },
        "sql_ans": [
            [
                "Elliot Reid"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[]-(T2:Patient)\nWITH COUNT(\"*\") AS COUNT, T1.Name AS Name\nWHERE COUNT > 1\nRETURN Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms located on each block floor.",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockFloor) AS count, T1.BlockFloor AS BlockFloor\nRETURN COUNT(\"*\"),BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms does each block floor have?",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockFloor) AS count, T1.BlockFloor AS BlockFloor\nRETURN COUNT(\"*\"),BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms for different block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockCode) AS count, T1.BlockCode AS BlockCode\nRETURN COUNT(\"*\"),BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms are located for each block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockCode) AS count, T1.BlockCode AS BlockCode\nRETURN COUNT(\"*\"),BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of medications prescribed for each brand.",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH T1.Name AS Name, count(T1.Brand) AS count\nRETURN COUNT(\"*\"),Name",
        "cypher_ans": [
            [
                1,
                "Procrastin-X"
            ],
            [
                1,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many medications are prescribed for each brand?",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH T1.Name AS Name, count(T1.Brand) AS count\nRETURN COUNT(\"*\"),Name",
        "cypher_ans": [
            [
                1,
                "Procrastin-X"
            ],
            [
                1,
                "Thesisin"
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "List the name of physicians who took some appointment.",
        "sql_query": "SELECT T2.name FROM appointment AS T1 JOIN physician AS T2 ON T1.Physician  =  T2.EmployeeID",
        "parsed_sql": {
            "select": {
                "value": "T2.name"
            },
            "from": [
                {
                    "value": "appointment",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Physician",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "John Dorian"
            ],
            [
                "Elliot Reid"
            ],
            [
                "John Dorian"
            ],
            [
                "Percival Cox"
            ],
            [
                "Percival Cox"
            ],
            [
                "Elliot Reid"
            ],
            [
                "Christopher Turk"
            ],
            [
                "Molly Clock"
            ],
            [
                "Elliot Reid"
            ]
        ],
        "cypher_query": "MATCH (T1:Appointment)-[]-(T2:Physician)\nRETURN T2.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of all the physicians who took appointments.",
        "sql_query": "SELECT T2.name FROM appointment AS T1 JOIN physician AS T2 ON T1.Physician  =  T2.EmployeeID",
        "parsed_sql": {
            "select": {
                "value": "T2.name"
            },
            "from": [
                {
                    "value": "appointment",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Physician",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "John Dorian"
            ],
            [
                "Elliot Reid"
            ],
            [
                "John Dorian"
            ],
            [
                "Percival Cox"
            ],
            [
                "Percival Cox"
            ],
            [
                "Elliot Reid"
            ],
            [
                "Christopher Turk"
            ],
            [
                "Molly Clock"
            ],
            [
                "Elliot Reid"
            ]
        ],
        "cypher_query": "MATCH (T1:Appointment)-[]-(T2:Physician)\nRETURN T2.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many patients do each physician take care of? List their names and number of patients they take care of.",
        "sql_query": "SELECT T1.name ,  count(*) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.PCP"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            }
        },
        "sql_ans": [
            [
                "John Dorian",
                1
            ],
            [
                "Elliot Reid",
                2
            ],
            [
                "Christopher Turk",
                1
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[]-(T2:Patient)\nWITH count(T1.EmployeeID) AS count, T1.Name AS Name\nRETURN Name,COUNT(\"*\")",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Return the name of each physician and the number of patients he or she treats.",
        "sql_query": "SELECT T1.name ,  count(*) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.PCP"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            }
        },
        "sql_ans": [
            [
                "John Dorian",
                1
            ],
            [
                "Elliot Reid",
                2
            ],
            [
                "Christopher Turk",
                1
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[]-(T2:Patient)\nWITH count(T1.EmployeeID) AS count, T1.Name AS Name\nRETURN Name,COUNT(\"*\")",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians who are in charge of more than one patient.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid HAVING count(*)  >  1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.PCP"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "having": {
                "gt": [
                    {
                        "count": "*"
                    },
                    1
                ]
            }
        },
        "sql_ans": [
            [
                "Elliot Reid"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[]-(T2:Patient)\nWITH COUNT(\"*\") AS COUNT, T1.Name AS Name\nWHERE COUNT > 1\nRETURN Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Which physicians are in charge of more than one patient? Give me their names.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid HAVING count(*)  >  1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.PCP"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "having": {
                "gt": [
                    {
                        "count": "*"
                    },
                    1
                ]
            }
        },
        "sql_ans": [
            [
                "Elliot Reid"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[]-(T2:Patient)\nWITH COUNT(\"*\") AS COUNT, T1.Name AS Name\nWHERE COUNT > 1\nRETURN Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms located on each block floor.",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockFloor AS BlockFloor, count(T1.BlockFloor) AS count\nRETURN COUNT(\"*\"),BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms does each block floor have?",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockFloor AS BlockFloor, count(T1.BlockFloor) AS count\nRETURN COUNT(\"*\"),BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms for different block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockCode AS BlockCode, count(T1.BlockCode) AS count\nRETURN COUNT(\"*\"),BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms are located for each block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockCode AS BlockCode, count(T1.BlockCode) AS count\nRETURN COUNT(\"*\"),BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of medications prescribed for each brand.",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH T1.Name AS Name, count(T1.Brand) AS count\nRETURN COUNT(\"*\"),Name",
        "cypher_ans": [
            [
                1,
                "Procrastin-X"
            ],
            [
                1,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many medications are prescribed for each brand?",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH T1.Name AS Name, count(T1.Brand) AS count\nRETURN COUNT(\"*\"),Name",
        "cypher_ans": [
            [
                1,
                "Procrastin-X"
            ],
            [
                1,
                "Thesisin"
            ]
        ]
    }
][][
    {
        "db_id": "hospital_1",
        "question": "List the name of physicians who took some appointment.",
        "sql_query": "SELECT T2.name FROM appointment AS T1 JOIN physician AS T2 ON T1.Physician  =  T2.EmployeeID",
        "parsed_sql": {
            "select": {
                "value": "T2.name"
            },
            "from": [
                {
                    "value": "appointment",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Physician",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "John Dorian"
            ],
            [
                "Elliot Reid"
            ],
            [
                "John Dorian"
            ],
            [
                "Percival Cox"
            ],
            [
                "Percival Cox"
            ],
            [
                "Elliot Reid"
            ],
            [
                "Christopher Turk"
            ],
            [
                "Molly Clock"
            ],
            [
                "Elliot Reid"
            ]
        ],
        "cypher_query": "MATCH (T1:Appointment)-[]-(T2:Physician)\nRETURN T2.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of all the physicians who took appointments.",
        "sql_query": "SELECT T2.name FROM appointment AS T1 JOIN physician AS T2 ON T1.Physician  =  T2.EmployeeID",
        "parsed_sql": {
            "select": {
                "value": "T2.name"
            },
            "from": [
                {
                    "value": "appointment",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Physician",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "John Dorian"
            ],
            [
                "Elliot Reid"
            ],
            [
                "John Dorian"
            ],
            [
                "Percival Cox"
            ],
            [
                "Percival Cox"
            ],
            [
                "Elliot Reid"
            ],
            [
                "Christopher Turk"
            ],
            [
                "Molly Clock"
            ],
            [
                "Elliot Reid"
            ]
        ],
        "cypher_query": "MATCH (T1:Appointment)-[]-(T2:Physician)\nRETURN T2.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many patients do each physician take care of? List their names and number of patients they take care of.",
        "sql_query": "SELECT T1.name ,  count(*) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.PCP"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            }
        },
        "sql_ans": [
            [
                "John Dorian",
                1
            ],
            [
                "Elliot Reid",
                2
            ],
            [
                "Christopher Turk",
                1
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[]-(T2:Patient)\nWITH T1.Name AS Name, count(T1.EmployeeID) AS count\nRETURN Name,COUNT(\"*\")",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Return the name of each physician and the number of patients he or she treats.",
        "sql_query": "SELECT T1.name ,  count(*) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.PCP"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            }
        },
        "sql_ans": [
            [
                "John Dorian",
                1
            ],
            [
                "Elliot Reid",
                2
            ],
            [
                "Christopher Turk",
                1
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[]-(T2:Patient)\nWITH T1.Name AS Name, count(T1.EmployeeID) AS count\nRETURN Name,COUNT(\"*\")",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians who are in charge of more than one patient.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid HAVING count(*)  >  1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.PCP"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "having": {
                "gt": [
                    {
                        "count": "*"
                    },
                    1
                ]
            }
        },
        "sql_ans": [
            [
                "Elliot Reid"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[]-(T2:Patient)\nWITH COUNT(\"*\") AS COUNT, T1.Name AS Name\nWHERE COUNT > 1\nRETURN Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Which physicians are in charge of more than one patient? Give me their names.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid HAVING count(*)  >  1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.PCP"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "having": {
                "gt": [
                    {
                        "count": "*"
                    },
                    1
                ]
            }
        },
        "sql_ans": [
            [
                "Elliot Reid"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[]-(T2:Patient)\nWITH COUNT(\"*\") AS COUNT, T1.Name AS Name\nWHERE COUNT > 1\nRETURN Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms located on each block floor.",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockFloor) AS count, T1.BlockFloor AS BlockFloor\nRETURN COUNT(\"*\"),BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms does each block floor have?",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockFloor) AS count, T1.BlockFloor AS BlockFloor\nRETURN COUNT(\"*\"),BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms for different block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockCode) AS count, T1.BlockCode AS BlockCode\nRETURN COUNT(\"*\"),BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms are located for each block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockCode) AS count, T1.BlockCode AS BlockCode\nRETURN COUNT(\"*\"),BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of medications prescribed for each brand.",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH T1.Name AS Name, count(T1.Brand) AS count\nRETURN COUNT(\"*\"),Name",
        "cypher_ans": [
            [
                1,
                "Procrastin-X"
            ],
            [
                1,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many medications are prescribed for each brand?",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH T1.Name AS Name, count(T1.Brand) AS count\nRETURN COUNT(\"*\"),Name",
        "cypher_ans": [
            [
                1,
                "Procrastin-X"
            ],
            [
                1,
                "Thesisin"
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "List the name of physicians who took some appointment.",
        "sql_query": "SELECT T2.name FROM appointment AS T1 JOIN physician AS T2 ON T1.Physician  =  T2.EmployeeID",
        "parsed_sql": {
            "select": {
                "value": "T2.name"
            },
            "from": [
                {
                    "value": "appointment",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Physician",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "John Dorian"
            ],
            [
                "Elliot Reid"
            ],
            [
                "John Dorian"
            ],
            [
                "Percival Cox"
            ],
            [
                "Percival Cox"
            ],
            [
                "Elliot Reid"
            ],
            [
                "Christopher Turk"
            ],
            [
                "Molly Clock"
            ],
            [
                "Elliot Reid"
            ]
        ],
        "cypher_query": "MATCH (T1:Appointment)-[]-(T2:Physician)\nRETURN T2.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of all the physicians who took appointments.",
        "sql_query": "SELECT T2.name FROM appointment AS T1 JOIN physician AS T2 ON T1.Physician  =  T2.EmployeeID",
        "parsed_sql": {
            "select": {
                "value": "T2.name"
            },
            "from": [
                {
                    "value": "appointment",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Physician",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "John Dorian"
            ],
            [
                "Elliot Reid"
            ],
            [
                "John Dorian"
            ],
            [
                "Percival Cox"
            ],
            [
                "Percival Cox"
            ],
            [
                "Elliot Reid"
            ],
            [
                "Christopher Turk"
            ],
            [
                "Molly Clock"
            ],
            [
                "Elliot Reid"
            ]
        ],
        "cypher_query": "MATCH (T1:Appointment)-[]-(T2:Physician)\nRETURN T2.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many patients do each physician take care of? List their names and number of patients they take care of.",
        "sql_query": "SELECT T1.name ,  count(*) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.PCP"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            }
        },
        "sql_ans": [
            [
                "John Dorian",
                1
            ],
            [
                "Elliot Reid",
                2
            ],
            [
                "Christopher Turk",
                1
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[]-(T2:Patient)\nWITH T1.Name AS Name, count(T1.EmployeeID) AS count\nRETURN Name,COUNT(\"*\")",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Return the name of each physician and the number of patients he or she treats.",
        "sql_query": "SELECT T1.name ,  count(*) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.PCP"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            }
        },
        "sql_ans": [
            [
                "John Dorian",
                1
            ],
            [
                "Elliot Reid",
                2
            ],
            [
                "Christopher Turk",
                1
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[]-(T2:Patient)\nWITH T1.Name AS Name, count(T1.EmployeeID) AS count\nRETURN Name,COUNT(\"*\")",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians who are in charge of more than one patient.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid HAVING count(*)  >  1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.PCP"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "having": {
                "gt": [
                    {
                        "count": "*"
                    },
                    1
                ]
            }
        },
        "sql_ans": [
            [
                "Elliot Reid"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[]-(T2:Patient)\nWITH COUNT(\"*\") AS COUNT, T1.Name AS Name\nWHERE COUNT > 1\nRETURN Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Which physicians are in charge of more than one patient? Give me their names.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid HAVING count(*)  >  1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.PCP"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "having": {
                "gt": [
                    {
                        "count": "*"
                    },
                    1
                ]
            }
        },
        "sql_ans": [
            [
                "Elliot Reid"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[]-(T2:Patient)\nWITH COUNT(\"*\") AS COUNT, T1.Name AS Name\nWHERE COUNT > 1\nRETURN Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms located on each block floor.",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockFloor AS BlockFloor, count(T1.BlockFloor) AS count\nRETURN COUNT(\"*\"),BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms does each block floor have?",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockFloor AS BlockFloor, count(T1.BlockFloor) AS count\nRETURN COUNT(\"*\"),BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms for different block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockCode) AS count, T1.BlockCode AS BlockCode\nRETURN COUNT(\"*\"),BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms are located for each block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockCode) AS count, T1.BlockCode AS BlockCode\nRETURN COUNT(\"*\"),BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of medications prescribed for each brand.",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH count(T1.Brand) AS count, T1.Name AS Name\nRETURN COUNT(\"*\"),Name",
        "cypher_ans": [
            [
                1,
                "Procrastin-X"
            ],
            [
                1,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many medications are prescribed for each brand?",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH count(T1.Brand) AS count, T1.Name AS Name\nRETURN COUNT(\"*\"),Name",
        "cypher_ans": [
            [
                1,
                "Procrastin-X"
            ],
            [
                1,
                "Thesisin"
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "List the name of physicians who took some appointment.",
        "sql_query": "SELECT T2.name FROM appointment AS T1 JOIN physician AS T2 ON T1.Physician  =  T2.EmployeeID",
        "parsed_sql": {
            "select": {
                "value": "T2.name"
            },
            "from": [
                {
                    "value": "appointment",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Physician",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "John Dorian"
            ],
            [
                "Elliot Reid"
            ],
            [
                "John Dorian"
            ],
            [
                "Percival Cox"
            ],
            [
                "Percival Cox"
            ],
            [
                "Elliot Reid"
            ],
            [
                "Christopher Turk"
            ],
            [
                "Molly Clock"
            ],
            [
                "Elliot Reid"
            ]
        ],
        "cypher_query": "MATCH (T1:Appointment)-[]-(T2:Physician)\nRETURN T2.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of all the physicians who took appointments.",
        "sql_query": "SELECT T2.name FROM appointment AS T1 JOIN physician AS T2 ON T1.Physician  =  T2.EmployeeID",
        "parsed_sql": {
            "select": {
                "value": "T2.name"
            },
            "from": [
                {
                    "value": "appointment",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Physician",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "John Dorian"
            ],
            [
                "Elliot Reid"
            ],
            [
                "John Dorian"
            ],
            [
                "Percival Cox"
            ],
            [
                "Percival Cox"
            ],
            [
                "Elliot Reid"
            ],
            [
                "Christopher Turk"
            ],
            [
                "Molly Clock"
            ],
            [
                "Elliot Reid"
            ]
        ],
        "cypher_query": "MATCH (T1:Appointment)-[]-(T2:Physician)\nRETURN T2.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many patients do each physician take care of? List their names and number of patients they take care of.",
        "sql_query": "SELECT T1.name ,  count(*) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.PCP"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            }
        },
        "sql_ans": [
            [
                "John Dorian",
                1
            ],
            [
                "Elliot Reid",
                2
            ],
            [
                "Christopher Turk",
                1
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[]-(T2:Patient)\nWITH count(T1.EmployeeID) AS count, T1.Name AS Name\nRETURN Name,COUNT(\"*\")",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Return the name of each physician and the number of patients he or she treats.",
        "sql_query": "SELECT T1.name ,  count(*) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.PCP"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            }
        },
        "sql_ans": [
            [
                "John Dorian",
                1
            ],
            [
                "Elliot Reid",
                2
            ],
            [
                "Christopher Turk",
                1
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[]-(T2:Patient)\nWITH count(T1.EmployeeID) AS count, T1.Name AS Name\nRETURN Name,COUNT(\"*\")",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians who are in charge of more than one patient.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid HAVING count(*)  >  1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.PCP"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "having": {
                "gt": [
                    {
                        "count": "*"
                    },
                    1
                ]
            }
        },
        "sql_ans": [
            [
                "Elliot Reid"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[]-(T2:Patient)\nWITH T1.Name AS Name, COUNT(\"*\") AS COUNT\nWHERE COUNT > 1\nRETURN Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Which physicians are in charge of more than one patient? Give me their names.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid HAVING count(*)  >  1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.PCP"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "having": {
                "gt": [
                    {
                        "count": "*"
                    },
                    1
                ]
            }
        },
        "sql_ans": [
            [
                "Elliot Reid"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[]-(T2:Patient)\nWITH T1.Name AS Name, COUNT(\"*\") AS COUNT\nWHERE COUNT > 1\nRETURN Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms located on each block floor.",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockFloor) AS count, T1.BlockFloor AS BlockFloor\nRETURN COUNT(\"*\"),BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms does each block floor have?",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockFloor) AS count, T1.BlockFloor AS BlockFloor\nRETURN COUNT(\"*\"),BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms for different block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockCode AS BlockCode, count(T1.BlockCode) AS count\nRETURN COUNT(\"*\"),BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms are located for each block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockCode AS BlockCode, count(T1.BlockCode) AS count\nRETURN COUNT(\"*\"),BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of medications prescribed for each brand.",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH T1.Name AS Name, count(T1.Brand) AS count\nRETURN COUNT(\"*\"),Name",
        "cypher_ans": [
            [
                1,
                "Procrastin-X"
            ],
            [
                1,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many medications are prescribed for each brand?",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH T1.Name AS Name, count(T1.Brand) AS count\nRETURN COUNT(\"*\"),Name",
        "cypher_ans": [
            [
                1,
                "Procrastin-X"
            ],
            [
                1,
                "Thesisin"
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "List the name of physicians who took some appointment.",
        "sql_query": "SELECT T2.name FROM appointment AS T1 JOIN physician AS T2 ON T1.Physician  =  T2.EmployeeID",
        "parsed_sql": {
            "select": {
                "value": "T2.name"
            },
            "from": [
                {
                    "value": "appointment",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Physician",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "John Dorian"
            ],
            [
                "Elliot Reid"
            ],
            [
                "John Dorian"
            ],
            [
                "Percival Cox"
            ],
            [
                "Percival Cox"
            ],
            [
                "Elliot Reid"
            ],
            [
                "Christopher Turk"
            ],
            [
                "Molly Clock"
            ],
            [
                "Elliot Reid"
            ]
        ],
        "cypher_query": "MATCH (T1:Appointment)-[]-(T2:Physician)\nRETURN T2.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of all the physicians who took appointments.",
        "sql_query": "SELECT T2.name FROM appointment AS T1 JOIN physician AS T2 ON T1.Physician  =  T2.EmployeeID",
        "parsed_sql": {
            "select": {
                "value": "T2.name"
            },
            "from": [
                {
                    "value": "appointment",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Physician",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "John Dorian"
            ],
            [
                "Elliot Reid"
            ],
            [
                "John Dorian"
            ],
            [
                "Percival Cox"
            ],
            [
                "Percival Cox"
            ],
            [
                "Elliot Reid"
            ],
            [
                "Christopher Turk"
            ],
            [
                "Molly Clock"
            ],
            [
                "Elliot Reid"
            ]
        ],
        "cypher_query": "MATCH (T1:Appointment)-[]-(T2:Physician)\nRETURN T2.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many patients do each physician take care of? List their names and number of patients they take care of.",
        "sql_query": "SELECT T1.name ,  count(*) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.PCP"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            }
        },
        "sql_ans": [
            [
                "John Dorian",
                1
            ],
            [
                "Elliot Reid",
                2
            ],
            [
                "Christopher Turk",
                1
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[]-(T2:Patient)\nWITH count(T1.EmployeeID) AS count, T1.Name AS Name\nRETURN Name,COUNT(\"*\")",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Return the name of each physician and the number of patients he or she treats.",
        "sql_query": "SELECT T1.name ,  count(*) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.PCP"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            }
        },
        "sql_ans": [
            [
                "John Dorian",
                1
            ],
            [
                "Elliot Reid",
                2
            ],
            [
                "Christopher Turk",
                1
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[]-(T2:Patient)\nWITH count(T1.EmployeeID) AS count, T1.Name AS Name\nRETURN Name,COUNT(\"*\")",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians who are in charge of more than one patient.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid HAVING count(*)  >  1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.PCP"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "having": {
                "gt": [
                    {
                        "count": "*"
                    },
                    1
                ]
            }
        },
        "sql_ans": [
            [
                "Elliot Reid"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[]-(T2:Patient)\nWITH T1.Name AS Name, COUNT(\"*\") AS COUNT\nWHERE COUNT > 1\nRETURN Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Which physicians are in charge of more than one patient? Give me their names.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid HAVING count(*)  >  1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.PCP"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "having": {
                "gt": [
                    {
                        "count": "*"
                    },
                    1
                ]
            }
        },
        "sql_ans": [
            [
                "Elliot Reid"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[]-(T2:Patient)\nWITH T1.Name AS Name, COUNT(\"*\") AS COUNT\nWHERE COUNT > 1\nRETURN Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms located on each block floor.",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockFloor) AS count, T1.BlockFloor AS BlockFloor\nRETURN COUNT(\"*\"),BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms does each block floor have?",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockFloor) AS count, T1.BlockFloor AS BlockFloor\nRETURN COUNT(\"*\"),BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms for different block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockCode AS BlockCode, count(T1.BlockCode) AS count\nRETURN COUNT(\"*\"),BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms are located for each block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockCode AS BlockCode, count(T1.BlockCode) AS count\nRETURN COUNT(\"*\"),BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of medications prescribed for each brand.",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH T1.Name AS Name, count(T1.Brand) AS count\nRETURN COUNT(\"*\"),Name",
        "cypher_ans": [
            [
                1,
                "Procrastin-X"
            ],
            [
                1,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many medications are prescribed for each brand?",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH T1.Name AS Name, count(T1.Brand) AS count\nRETURN COUNT(\"*\"),Name",
        "cypher_ans": [
            [
                1,
                "Procrastin-X"
            ],
            [
                1,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the names of all patients who have an undergoing treatment and are staying in room 111.",
        "sql_query": "SELECT DISTINCT T2.name FROM undergoes AS T1 JOIN patient AS T2 ON T1.patient = T2.SSN JOIN stay AS T3 ON T1.Stay  =  T3.StayID WHERE T3.room  =  111",
        "parsed_sql": {
            "select": {
                "value": {
                    "distinct": {
                        "value": "T2.name"
                    }
                }
            },
            "from": [
                {
                    "value": "undergoes",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.patient",
                            "T2.SSN"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "stay",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Stay",
                            "T3.StayID"
                        ]
                    }
                }
            ],
            "where": {
                "eq": [
                    "T3.room",
                    111
                ]
            }
        },
        "sql_ans": [
            [
                "John Smith"
            ]
        ],
        "cypher_query": "MATCH (T1:Undergoes)-[]-(T2:Patient)-[]-(T3:Stay)\nWHERE T3.Room = 111\nRETURN DISTINCT T2.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of patients who are staying in room 111 and have an undergoing treatment?",
        "sql_query": "SELECT DISTINCT T2.name FROM undergoes AS T1 JOIN patient AS T2 ON T1.patient = T2.SSN JOIN stay AS T3 ON T1.Stay  =  T3.StayID WHERE T3.room  =  111",
        "parsed_sql": {
            "select": {
                "value": {
                    "distinct": {
                        "value": "T2.name"
                    }
                }
            },
            "from": [
                {
                    "value": "undergoes",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.patient",
                            "T2.SSN"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "stay",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Stay",
                            "T3.StayID"
                        ]
                    }
                }
            ],
            "where": {
                "eq": [
                    "T3.room",
                    111
                ]
            }
        },
        "sql_ans": [
            [
                "John Smith"
            ]
        ],
        "cypher_query": "MATCH (T1:Undergoes)-[]-(T2:Patient)-[]-(T3:Stay)\nWHERE T3.Room = 111\nRETURN DISTINCT T2.Name",
        "cypher_ans": []
    }
][
    {
        "db_id": "hospital_1",
        "question": "List the name of physicians who took some appointment.",
        "sql_query": "SELECT T2.name FROM appointment AS T1 JOIN physician AS T2 ON T1.Physician  =  T2.EmployeeID",
        "parsed_sql": {
            "select": {
                "value": "T2.name"
            },
            "from": [
                {
                    "value": "appointment",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Physician",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "John Dorian"
            ],
            [
                "Elliot Reid"
            ],
            [
                "John Dorian"
            ],
            [
                "Percival Cox"
            ],
            [
                "Percival Cox"
            ],
            [
                "Elliot Reid"
            ],
            [
                "Christopher Turk"
            ],
            [
                "Molly Clock"
            ],
            [
                "Elliot Reid"
            ]
        ],
        "cypher_query": "MATCH (T1:Appointment)-[]-(T2:Physician)\nRETURN T2.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of all the physicians who took appointments.",
        "sql_query": "SELECT T2.name FROM appointment AS T1 JOIN physician AS T2 ON T1.Physician  =  T2.EmployeeID",
        "parsed_sql": {
            "select": {
                "value": "T2.name"
            },
            "from": [
                {
                    "value": "appointment",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Physician",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "John Dorian"
            ],
            [
                "Elliot Reid"
            ],
            [
                "John Dorian"
            ],
            [
                "Percival Cox"
            ],
            [
                "Percival Cox"
            ],
            [
                "Elliot Reid"
            ],
            [
                "Christopher Turk"
            ],
            [
                "Molly Clock"
            ],
            [
                "Elliot Reid"
            ]
        ],
        "cypher_query": "MATCH (T1:Appointment)-[]-(T2:Physician)\nRETURN T2.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many patients do each physician take care of? List their names and number of patients they take care of.",
        "sql_query": "SELECT T1.name ,  count(*) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.PCP"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            }
        },
        "sql_ans": [
            [
                "John Dorian",
                1
            ],
            [
                "Elliot Reid",
                2
            ],
            [
                "Christopher Turk",
                1
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[]-(T2:Patient)\nWITH count(T1.EmployeeID) AS count, T1.Name AS Name\nRETURN Name,COUNT(\"*\")",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Return the name of each physician and the number of patients he or she treats.",
        "sql_query": "SELECT T1.name ,  count(*) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.PCP"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            }
        },
        "sql_ans": [
            [
                "John Dorian",
                1
            ],
            [
                "Elliot Reid",
                2
            ],
            [
                "Christopher Turk",
                1
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[]-(T2:Patient)\nWITH count(T1.EmployeeID) AS count, T1.Name AS Name\nRETURN Name,COUNT(\"*\")",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians who are in charge of more than one patient.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid HAVING count(*)  >  1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.PCP"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "having": {
                "gt": [
                    {
                        "count": "*"
                    },
                    1
                ]
            }
        },
        "sql_ans": [
            [
                "Elliot Reid"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[]-(T2:Patient)\nWITH COUNT(\"*\") AS COUNT, T1.Name AS Name\nWHERE COUNT > 1\nRETURN Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Which physicians are in charge of more than one patient? Give me their names.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid HAVING count(*)  >  1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.PCP"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "having": {
                "gt": [
                    {
                        "count": "*"
                    },
                    1
                ]
            }
        },
        "sql_ans": [
            [
                "Elliot Reid"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[]-(T2:Patient)\nWITH COUNT(\"*\") AS COUNT, T1.Name AS Name\nWHERE COUNT > 1\nRETURN Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms located on each block floor.",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockFloor) AS count, T1.BlockFloor AS BlockFloor\nRETURN COUNT(\"*\"),BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms does each block floor have?",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockFloor) AS count, T1.BlockFloor AS BlockFloor\nRETURN COUNT(\"*\"),BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms for different block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockCode) AS count, T1.BlockCode AS BlockCode\nRETURN COUNT(\"*\"),BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms are located for each block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockCode) AS count, T1.BlockCode AS BlockCode\nRETURN COUNT(\"*\"),BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of medications prescribed for each brand.",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH count(T1.Brand) AS count, T1.Name AS Name\nRETURN COUNT(\"*\"),Name",
        "cypher_ans": [
            [
                1,
                "Procrastin-X"
            ],
            [
                1,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many medications are prescribed for each brand?",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH count(T1.Brand) AS count, T1.Name AS Name\nRETURN COUNT(\"*\"),Name",
        "cypher_ans": [
            [
                1,
                "Procrastin-X"
            ],
            [
                1,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the names of all patients who have an undergoing treatment and are staying in room 111.",
        "sql_query": "SELECT DISTINCT T2.name FROM undergoes AS T1 JOIN patient AS T2 ON T1.patient = T2.SSN JOIN stay AS T3 ON T1.Stay  =  T3.StayID WHERE T3.room  =  111",
        "parsed_sql": {
            "select": {
                "value": {
                    "distinct": {
                        "value": "T2.name"
                    }
                }
            },
            "from": [
                {
                    "value": "undergoes",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.patient",
                            "T2.SSN"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "stay",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Stay",
                            "T3.StayID"
                        ]
                    }
                }
            ],
            "where": {
                "eq": [
                    "T3.room",
                    111
                ]
            }
        },
        "sql_ans": [
            [
                "John Smith"
            ]
        ],
        "cypher_query": "MATCH (T1:Undergoes)-[]-(T2:Patient)-[]-(T3:Stay)\nWHERE T3.Room = 111\nRETURN DISTINCT T2.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of patients who are staying in room 111 and have an undergoing treatment?",
        "sql_query": "SELECT DISTINCT T2.name FROM undergoes AS T1 JOIN patient AS T2 ON T1.patient = T2.SSN JOIN stay AS T3 ON T1.Stay  =  T3.StayID WHERE T3.room  =  111",
        "parsed_sql": {
            "select": {
                "value": {
                    "distinct": {
                        "value": "T2.name"
                    }
                }
            },
            "from": [
                {
                    "value": "undergoes",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.patient",
                            "T2.SSN"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "stay",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Stay",
                            "T3.StayID"
                        ]
                    }
                }
            ],
            "where": {
                "eq": [
                    "T3.room",
                    111
                ]
            }
        },
        "sql_ans": [
            [
                "John Smith"
            ]
        ],
        "cypher_query": "MATCH (T1:Undergoes)-[]-(T2:Patient)-[]-(T3:Stay)\nWHERE T3.Room = 111\nRETURN DISTINCT T2.Name",
        "cypher_ans": []
    }
][][][][
    {
        "db_id": "hospital_1",
        "question": "List the name of physicians who took some appointment.",
        "sql_query": "SELECT T2.name FROM appointment AS T1 JOIN physician AS T2 ON T1.Physician  =  T2.EmployeeID",
        "parsed_sql": {
            "select": {
                "value": "T2.name"
            },
            "from": [
                {
                    "value": "appointment",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Physician",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "John Dorian"
            ],
            [
                "Elliot Reid"
            ],
            [
                "John Dorian"
            ],
            [
                "Percival Cox"
            ],
            [
                "Percival Cox"
            ],
            [
                "Elliot Reid"
            ],
            [
                "Christopher Turk"
            ],
            [
                "Molly Clock"
            ],
            [
                "Elliot Reid"
            ]
        ],
        "cypher_query": "MATCH (T1:Appointment)-[]-(T2:Physician)\nRETURN T2.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of all the physicians who took appointments.",
        "sql_query": "SELECT T2.name FROM appointment AS T1 JOIN physician AS T2 ON T1.Physician  =  T2.EmployeeID",
        "parsed_sql": {
            "select": {
                "value": "T2.name"
            },
            "from": [
                {
                    "value": "appointment",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Physician",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "John Dorian"
            ],
            [
                "Elliot Reid"
            ],
            [
                "John Dorian"
            ],
            [
                "Percival Cox"
            ],
            [
                "Percival Cox"
            ],
            [
                "Elliot Reid"
            ],
            [
                "Christopher Turk"
            ],
            [
                "Molly Clock"
            ],
            [
                "Elliot Reid"
            ]
        ],
        "cypher_query": "MATCH (T1:Appointment)-[]-(T2:Physician)\nRETURN T2.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many patients do each physician take care of? List their names and number of patients they take care of.",
        "sql_query": "SELECT T1.name ,  count(*) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.PCP"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            }
        },
        "sql_ans": [
            [
                "John Dorian",
                1
            ],
            [
                "Elliot Reid",
                2
            ],
            [
                "Christopher Turk",
                1
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[]-(T2:Patient)\nWITH T1.Name AS Name, count(T1.EmployeeID) AS count\nRETURN Name,COUNT(\"*\")",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Return the name of each physician and the number of patients he or she treats.",
        "sql_query": "SELECT T1.name ,  count(*) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.PCP"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            }
        },
        "sql_ans": [
            [
                "John Dorian",
                1
            ],
            [
                "Elliot Reid",
                2
            ],
            [
                "Christopher Turk",
                1
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[]-(T2:Patient)\nWITH T1.Name AS Name, count(T1.EmployeeID) AS count\nRETURN Name,COUNT(\"*\")",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians who are in charge of more than one patient.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid HAVING count(*)  >  1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.PCP"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "having": {
                "gt": [
                    {
                        "count": "*"
                    },
                    1
                ]
            }
        },
        "sql_ans": [
            [
                "Elliot Reid"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[]-(T2:Patient)\nWITH COUNT(\"*\") AS COUNT, T1.Name AS Name\nWHERE COUNT > 1\nRETURN Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Which physicians are in charge of more than one patient? Give me their names.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid HAVING count(*)  >  1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.PCP"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "having": {
                "gt": [
                    {
                        "count": "*"
                    },
                    1
                ]
            }
        },
        "sql_ans": [
            [
                "Elliot Reid"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[]-(T2:Patient)\nWITH COUNT(\"*\") AS COUNT, T1.Name AS Name\nWHERE COUNT > 1\nRETURN Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms located on each block floor.",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockFloor AS BlockFloor, count(T1.BlockFloor) AS count\nRETURN COUNT(\"*\"),BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms does each block floor have?",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockFloor AS BlockFloor, count(T1.BlockFloor) AS count\nRETURN COUNT(\"*\"),BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms for different block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockCode) AS count, T1.BlockCode AS BlockCode\nRETURN COUNT(\"*\"),BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms are located for each block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockCode) AS count, T1.BlockCode AS BlockCode\nRETURN COUNT(\"*\"),BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of medications prescribed for each brand.",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH T1.Name AS Name, count(T1.Brand) AS count\nRETURN COUNT(\"*\"),Name",
        "cypher_ans": [
            [
                1,
                "Procrastin-X"
            ],
            [
                1,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many medications are prescribed for each brand?",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH T1.Name AS Name, count(T1.Brand) AS count\nRETURN COUNT(\"*\"),Name",
        "cypher_ans": [
            [
                1,
                "Procrastin-X"
            ],
            [
                1,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians whose position title contains the word 'senior'.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of the physicians who have 'senior' in their titles.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the names of all patients who have an undergoing treatment and are staying in room 111.",
        "sql_query": "SELECT DISTINCT T2.name FROM undergoes AS T1 JOIN patient AS T2 ON T1.patient = T2.SSN JOIN stay AS T3 ON T1.Stay  =  T3.StayID WHERE T3.room  =  111",
        "parsed_sql": {
            "select": {
                "value": {
                    "distinct": {
                        "value": "T2.name"
                    }
                }
            },
            "from": [
                {
                    "value": "undergoes",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.patient",
                            "T2.SSN"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "stay",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Stay",
                            "T3.StayID"
                        ]
                    }
                }
            ],
            "where": {
                "eq": [
                    "T3.room",
                    111
                ]
            }
        },
        "sql_ans": [
            [
                "John Smith"
            ]
        ],
        "cypher_query": "MATCH (T1:Undergoes)-[]-(T2:Patient)-[]-(T3:Stay)\nWHERE T3.Room = 111\nRETURN DISTINCT T2.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of patients who are staying in room 111 and have an undergoing treatment?",
        "sql_query": "SELECT DISTINCT T2.name FROM undergoes AS T1 JOIN patient AS T2 ON T1.patient = T2.SSN JOIN stay AS T3 ON T1.Stay  =  T3.StayID WHERE T3.room  =  111",
        "parsed_sql": {
            "select": {
                "value": {
                    "distinct": {
                        "value": "T2.name"
                    }
                }
            },
            "from": [
                {
                    "value": "undergoes",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.patient",
                            "T2.SSN"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "stay",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Stay",
                            "T3.StayID"
                        ]
                    }
                }
            ],
            "where": {
                "eq": [
                    "T3.room",
                    111
                ]
            }
        },
        "sql_ans": [
            [
                "John Smith"
            ]
        ],
        "cypher_query": "MATCH (T1:Undergoes)-[]-(T2:Patient)-[]-(T3:Stay)\nWHERE T3.Room = 111\nRETURN DISTINCT T2.Name",
        "cypher_ans": []
    }
][][][][][][][][][][][][][
    {
        "db_id": "hospital_1",
        "question": "What are names of patients who made an appointment?",
        "sql_query": "SELECT name FROM appointment AS T1 JOIN patient AS T2 ON T1.patient  =  T2.ssn",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": [
                {
                    "value": "appointment",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.patient",
                            "T2.ssn"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "John Smith"
            ],
            [
                "Dennis Doe"
            ],
            [
                "Dennis Doe"
            ],
            [
                "Random J. Patient"
            ],
            [
                "John Smith"
            ],
            [
                "Dennis Doe"
            ],
            [
                "Grace Ritchie"
            ]
        ],
        "cypher_query": "MATCH (T1:Appointment)-[]-(T2:Patient)\nRETURN T2.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "List the names of patients who have made appointments.",
        "sql_query": "SELECT name FROM appointment AS T1 JOIN patient AS T2 ON T1.patient  =  T2.ssn",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": [
                {
                    "value": "appointment",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.patient",
                            "T2.ssn"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "John Smith"
            ],
            [
                "Dennis Doe"
            ],
            [
                "Dennis Doe"
            ],
            [
                "Random J. Patient"
            ],
            [
                "John Smith"
            ],
            [
                "Dennis Doe"
            ],
            [
                "Grace Ritchie"
            ]
        ],
        "cypher_query": "MATCH (T1:Appointment)-[]-(T2:Patient)\nRETURN T2.Name",
        "cypher_ans": []
    }
][
    {
        "db_id": "hospital_1",
        "question": "What are names of patients who made an appointment?",
        "sql_query": "SELECT name FROM appointment AS T1 JOIN patient AS T2 ON T1.patient  =  T2.ssn",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": [
                {
                    "value": "appointment",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.patient",
                            "T2.ssn"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "John Smith"
            ],
            [
                "Dennis Doe"
            ],
            [
                "Dennis Doe"
            ],
            [
                "Random J. Patient"
            ],
            [
                "John Smith"
            ],
            [
                "Dennis Doe"
            ],
            [
                "Grace Ritchie"
            ]
        ],
        "cypher_query": "MATCH (T1:Appointment)-[]-(T2:Patient)\nRETURN T2.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "List the names of patients who have made appointments.",
        "sql_query": "SELECT name FROM appointment AS T1 JOIN patient AS T2 ON T1.patient  =  T2.ssn",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": [
                {
                    "value": "appointment",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.patient",
                            "T2.ssn"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "John Smith"
            ],
            [
                "Dennis Doe"
            ],
            [
                "Dennis Doe"
            ],
            [
                "Random J. Patient"
            ],
            [
                "John Smith"
            ],
            [
                "Dennis Doe"
            ],
            [
                "Grace Ritchie"
            ]
        ],
        "cypher_query": "MATCH (T1:Appointment)-[]-(T2:Patient)\nRETURN T2.Name",
        "cypher_ans": []
    }
][
    {
        "db_id": "hospital_1",
        "question": "What are names of patients who made an appointment?",
        "sql_query": "SELECT name FROM appointment AS T1 JOIN patient AS T2 ON T1.patient  =  T2.ssn",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": [
                {
                    "value": "appointment",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.patient",
                            "T2.ssn"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Dennis Doe"
            ],
            [
                "Random J. Patient"
            ]
        ],
        "cypher_query": "MATCH (T1:Appointment)-[]-(T2:Patient)\nRETURN T2.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "List the names of patients who have made appointments.",
        "sql_query": "SELECT name FROM appointment AS T1 JOIN patient AS T2 ON T1.patient  =  T2.ssn",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": [
                {
                    "value": "appointment",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.patient",
                            "T2.ssn"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Dennis Doe"
            ],
            [
                "Random J. Patient"
            ]
        ],
        "cypher_query": "MATCH (T1:Appointment)-[]-(T2:Patient)\nRETURN T2.Name",
        "cypher_ans": []
    }
][][
    {
        "db_id": "hospital_1",
        "question": "What are names of patients who made an appointment?",
        "sql_query": "SELECT name FROM appointment AS T1 JOIN patient AS T2 ON T1.patient  =  T2.ssn",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": [
                {
                    "value": "appointment",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.patient",
                            "T2.ssn"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Dennis Doe"
            ],
            [
                "Random J. Patient"
            ]
        ],
        "cypher_query": "MATCH (T1:Appointment)-[]-(T2:Patient)\nRETURN T2.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "List the names of patients who have made appointments.",
        "sql_query": "SELECT name FROM appointment AS T1 JOIN patient AS T2 ON T1.patient  =  T2.ssn",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": [
                {
                    "value": "appointment",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.patient",
                            "T2.ssn"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Dennis Doe"
            ],
            [
                "Random J. Patient"
            ]
        ],
        "cypher_query": "MATCH (T1:Appointment)-[]-(T2:Patient)\nRETURN T2.Name",
        "cypher_ans": []
    }
][
    {
        "db_id": "hospital_1",
        "question": "What are names of patients who made an appointment?",
        "sql_query": "SELECT name FROM appointment AS T1 JOIN patient AS T2 ON T1.patient  =  T2.ssn",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": [
                {
                    "value": "appointment",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.patient",
                            "T2.ssn"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Dennis Doe"
            ],
            [
                "Random J. Patient"
            ]
        ],
        "cypher_query": "MATCH (T1:Appointment)-[]-(T2:Patient)\nRETURN T2.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "List the names of patients who have made appointments.",
        "sql_query": "SELECT name FROM appointment AS T1 JOIN patient AS T2 ON T1.patient  =  T2.ssn",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": [
                {
                    "value": "appointment",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.patient",
                            "T2.ssn"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Dennis Doe"
            ],
            [
                "Random J. Patient"
            ]
        ],
        "cypher_query": "MATCH (T1:Appointment)-[]-(T2:Patient)\nRETURN T2.Name",
        "cypher_ans": []
    }
][
    {
        "db_id": "hospital_1",
        "question": "What are names of patients who made an appointment?",
        "sql_query": "SELECT name FROM appointment AS T1 JOIN patient AS T2 ON T1.patient  =  T2.ssn",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": [
                {
                    "value": "appointment",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.patient",
                            "T2.ssn"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Dennis Doe"
            ],
            [
                "Random J. Patient"
            ]
        ],
        "cypher_query": "MATCH (T1:Appointment)-[]-(T2:Patient)\nRETURN T2.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "List the names of patients who have made appointments.",
        "sql_query": "SELECT name FROM appointment AS T1 JOIN patient AS T2 ON T1.patient  =  T2.ssn",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": [
                {
                    "value": "appointment",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.patient",
                            "T2.ssn"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Dennis Doe"
            ],
            [
                "Random J. Patient"
            ]
        ],
        "cypher_query": "MATCH (T1:Appointment)-[]-(T2:Patient)\nRETURN T2.Name",
        "cypher_ans": []
    }
][][][][
    {
        "db_id": "hospital_1",
        "question": "What are names of patients who made an appointment?",
        "sql_query": "SELECT name FROM appointment AS T1 JOIN patient AS T2 ON T1.patient  =  T2.ssn",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": [
                {
                    "value": "appointment",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.patient",
                            "T2.ssn"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Dennis Doe"
            ],
            [
                "Random J. Patient"
            ]
        ],
        "cypher_query": "MATCH (T1:Appointment)-[]-(T2:Patient)\nRETURN T2.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "List the names of patients who have made appointments.",
        "sql_query": "SELECT name FROM appointment AS T1 JOIN patient AS T2 ON T1.patient  =  T2.ssn",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": [
                {
                    "value": "appointment",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.patient",
                            "T2.ssn"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Dennis Doe"
            ],
            [
                "Random J. Patient"
            ]
        ],
        "cypher_query": "MATCH (T1:Appointment)-[]-(T2:Patient)\nRETURN T2.Name",
        "cypher_ans": []
    }
][
    {
        "db_id": "hospital_1",
        "question": "What are names of patients who made an appointment?",
        "sql_query": "SELECT name FROM appointment AS T1 JOIN patient AS T2 ON T1.patient  =  T2.ssn",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": [
                {
                    "value": "appointment",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.patient",
                            "T2.ssn"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Dennis Doe"
            ],
            [
                "Random J. Patient"
            ]
        ],
        "cypher_query": "MATCH (T1:Appointment)-[]-(T2:Patient)\nRETURN T2.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "List the names of patients who have made appointments.",
        "sql_query": "SELECT name FROM appointment AS T1 JOIN patient AS T2 ON T1.patient  =  T2.ssn",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": [
                {
                    "value": "appointment",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.patient",
                            "T2.ssn"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Dennis Doe"
            ],
            [
                "Random J. Patient"
            ]
        ],
        "cypher_query": "MATCH (T1:Appointment)-[]-(T2:Patient)\nRETURN T2.Name",
        "cypher_ans": []
    }
][
    {
        "db_id": "hospital_1",
        "question": "What are names of patients who made an appointment?",
        "sql_query": "SELECT name FROM appointment AS T1 JOIN patient AS T2 ON T1.patient  =  T2.ssn",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": [
                {
                    "value": "appointment",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.patient",
                            "T2.ssn"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Dennis Doe"
            ],
            [
                "Random J. Patient"
            ]
        ],
        "cypher_query": "MATCH (T1:Appointment)-[]-(T2:Patient)\nRETURN T2.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "List the names of patients who have made appointments.",
        "sql_query": "SELECT name FROM appointment AS T1 JOIN patient AS T2 ON T1.patient  =  T2.ssn",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": [
                {
                    "value": "appointment",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.patient",
                            "T2.ssn"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Dennis Doe"
            ],
            [
                "Random J. Patient"
            ]
        ],
        "cypher_query": "MATCH (T1:Appointment)-[]-(T2:Patient)\nRETURN T2.Name",
        "cypher_ans": []
    }
][
    {
        "db_id": "hospital_1",
        "question": "What are names of patients who made an appointment?",
        "sql_query": "SELECT name FROM appointment AS T1 JOIN patient AS T2 ON T1.patient  =  T2.ssn",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": [
                {
                    "value": "appointment",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.patient",
                            "T2.ssn"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Dennis Doe"
            ],
            [
                "Random J. Patient"
            ]
        ],
        "cypher_query": "MATCH (T1:Appointment)-[]-(T2:Patient)\nRETURN T2.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "List the names of patients who have made appointments.",
        "sql_query": "SELECT name FROM appointment AS T1 JOIN patient AS T2 ON T1.patient  =  T2.ssn",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": [
                {
                    "value": "appointment",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.patient",
                            "T2.ssn"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Dennis Doe"
            ],
            [
                "Random J. Patient"
            ]
        ],
        "cypher_query": "MATCH (T1:Appointment)-[]-(T2:Patient)\nRETURN T2.Name",
        "cypher_ans": []
    }
][
    {
        "db_id": "hospital_1",
        "question": "What are names of patients who made an appointment?",
        "sql_query": "SELECT name FROM appointment AS T1 JOIN patient AS T2 ON T1.patient  =  T2.ssn",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": [
                {
                    "value": "appointment",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.patient",
                            "T2.ssn"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Dennis Doe"
            ],
            [
                "Random J. Patient"
            ]
        ],
        "cypher_query": "MATCH (T1:Appointment)-[]-(T2:Patient)\nRETURN T2.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "List the names of patients who have made appointments.",
        "sql_query": "SELECT name FROM appointment AS T1 JOIN patient AS T2 ON T1.patient  =  T2.ssn",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": [
                {
                    "value": "appointment",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.patient",
                            "T2.ssn"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Dennis Doe"
            ],
            [
                "Random J. Patient"
            ]
        ],
        "cypher_query": "MATCH (T1:Appointment)-[]-(T2:Patient)\nRETURN T2.Name",
        "cypher_ans": []
    }
][][][][][][
    {
        "db_id": "hospital_1",
        "question": "What are names of patients who made an appointment?",
        "sql_query": "SELECT name FROM appointment AS T1 JOIN patient AS T2 ON T1.patient  =  T2.ssn",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": [
                {
                    "value": "appointment",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.patient",
                            "T2.ssn"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Dennis Doe"
            ],
            [
                "Random J. Patient"
            ]
        ],
        "cypher_query": "MATCH (T1:Appointment)-[]-(T2:Patient)\nRETURN T2.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "List the names of patients who have made appointments.",
        "sql_query": "SELECT name FROM appointment AS T1 JOIN patient AS T2 ON T1.patient  =  T2.ssn",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": [
                {
                    "value": "appointment",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.patient",
                            "T2.ssn"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Dennis Doe"
            ],
            [
                "Random J. Patient"
            ]
        ],
        "cypher_query": "MATCH (T1:Appointment)-[]-(T2:Patient)\nRETURN T2.Name",
        "cypher_ans": []
    }
][][][][][
    {
        "db_id": "hospital_1",
        "question": "What are names of patients who made an appointment?",
        "sql_query": "SELECT name FROM appointment AS T1 JOIN patient AS T2 ON T1.patient  =  T2.ssn",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": [
                {
                    "value": "appointment",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.patient",
                            "T2.ssn"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Dennis Doe"
            ],
            [
                "Random J. Patient"
            ]
        ],
        "cypher_query": "MATCH (T1:Appointment)-[]-(T2:Patient)\nRETURN T2.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "List the names of patients who have made appointments.",
        "sql_query": "SELECT name FROM appointment AS T1 JOIN patient AS T2 ON T1.patient  =  T2.ssn",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": [
                {
                    "value": "appointment",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.patient",
                            "T2.ssn"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Dennis Doe"
            ],
            [
                "Random J. Patient"
            ]
        ],
        "cypher_query": "MATCH (T1:Appointment)-[]-(T2:Patient)\nRETURN T2.Name",
        "cypher_ans": []
    }
][][][][][][][][][][][][][][][
    {
        "db_id": "hospital_1",
        "question": "What are names of patients who made an appointment?",
        "sql_query": "SELECT name FROM appointment AS T1 JOIN patient AS T2 ON T1.patient  =  T2.ssn",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": [
                {
                    "value": "appointment",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.patient",
                            "T2.ssn"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Dennis Doe"
            ],
            [
                "Random J. Patient"
            ]
        ],
        "cypher_query": "MATCH (T1:Appointment)MATCH(T2:Patient)MATCH(T2:Patient)\nRETURN T2.Name",
        "cypher_ans": [
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "List the names of patients who have made appointments.",
        "sql_query": "SELECT name FROM appointment AS T1 JOIN patient AS T2 ON T1.patient  =  T2.ssn",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": [
                {
                    "value": "appointment",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.patient",
                            "T2.ssn"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Dennis Doe"
            ],
            [
                "Random J. Patient"
            ]
        ],
        "cypher_query": "MATCH (T1:Appointment)MATCH(T2:Patient)MATCH(T2:Patient)\nRETURN T2.Name",
        "cypher_ans": [
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "What are names of patients who made an appointment?",
        "sql_query": "SELECT name FROM appointment AS T1 JOIN patient AS T2 ON T1.patient  =  T2.ssn",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": [
                {
                    "value": "appointment",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.patient",
                            "T2.ssn"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Dennis Doe"
            ],
            [
                "Random J. Patient"
            ]
        ],
        "cypher_query": "MATCH (T1:Appointment) MATCH (T2:Patient) MATCH (T2:Patient)\nRETURN T2.Name",
        "cypher_ans": [
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "List the names of patients who have made appointments.",
        "sql_query": "SELECT name FROM appointment AS T1 JOIN patient AS T2 ON T1.patient  =  T2.ssn",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": [
                {
                    "value": "appointment",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.patient",
                            "T2.ssn"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Dennis Doe"
            ],
            [
                "Random J. Patient"
            ]
        ],
        "cypher_query": "MATCH (T1:Appointment) MATCH (T2:Patient) MATCH (T2:Patient)\nRETURN T2.Name",
        "cypher_ans": [
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "What are names of patients who made an appointment?",
        "sql_query": "SELECT name FROM appointment AS T1 JOIN patient AS T2 ON T1.patient  =  T2.ssn",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": [
                {
                    "value": "appointment",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.patient",
                            "T2.ssn"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Dennis Doe"
            ],
            [
                "Random J. Patient"
            ]
        ],
        "cypher_query": "MATCH (T1:Appointment) MATCH (T2:Patient) MATCH (T2:Patient)\nRETURN T2.Name",
        "cypher_ans": [
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "List the names of patients who have made appointments.",
        "sql_query": "SELECT name FROM appointment AS T1 JOIN patient AS T2 ON T1.patient  =  T2.ssn",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": [
                {
                    "value": "appointment",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.patient",
                            "T2.ssn"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Dennis Doe"
            ],
            [
                "Random J. Patient"
            ]
        ],
        "cypher_query": "MATCH (T1:Appointment) MATCH (T2:Patient) MATCH (T2:Patient)\nRETURN T2.Name",
        "cypher_ans": [
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "What are names of patients who made an appointment?",
        "sql_query": "SELECT name FROM appointment AS T1 JOIN patient AS T2 ON T1.patient  =  T2.ssn",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": [
                {
                    "value": "appointment",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.patient",
                            "T2.ssn"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Dennis Doe"
            ],
            [
                "Random J. Patient"
            ]
        ],
        "cypher_query": "MATCH (T1:Appointment) MATCH (T2:Patient) MATCH (T2:Patient)\nRETURN T2.Name",
        "cypher_ans": [
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "List the names of patients who have made appointments.",
        "sql_query": "SELECT name FROM appointment AS T1 JOIN patient AS T2 ON T1.patient  =  T2.ssn",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": [
                {
                    "value": "appointment",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.patient",
                            "T2.ssn"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Dennis Doe"
            ],
            [
                "Random J. Patient"
            ]
        ],
        "cypher_query": "MATCH (T1:Appointment) MATCH (T2:Patient) MATCH (T2:Patient)\nRETURN T2.Name",
        "cypher_ans": [
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "What are names of patients who made an appointment?",
        "sql_query": "SELECT name FROM appointment AS T1 JOIN patient AS T2 ON T1.patient  =  T2.ssn",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": [
                {
                    "value": "appointment",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.patient",
                            "T2.ssn"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Dennis Doe"
            ],
            [
                "Random J. Patient"
            ]
        ],
        "cypher_query": "MATCH (T1:Appointment) MATCH (T2:Patient) MATCH (T2:Patient)\nRETURN T2.Name",
        "cypher_ans": [
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "List the names of patients who have made appointments.",
        "sql_query": "SELECT name FROM appointment AS T1 JOIN patient AS T2 ON T1.patient  =  T2.ssn",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": [
                {
                    "value": "appointment",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.patient",
                            "T2.ssn"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Dennis Doe"
            ],
            [
                "Random J. Patient"
            ]
        ],
        "cypher_query": "MATCH (T1:Appointment) MATCH (T2:Patient) MATCH (T2:Patient)\nRETURN T2.Name",
        "cypher_ans": [
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "What are names of patients who made an appointment?",
        "sql_query": "SELECT name FROM appointment AS T1 JOIN patient AS T2 ON T1.patient  =  T2.ssn",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": [
                {
                    "value": "appointment",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.patient",
                            "T2.ssn"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Dennis Doe"
            ],
            [
                "Random J. Patient"
            ]
        ],
        "cypher_query": "MATCH (T1:Appointment) MATCH (T2:Patient) MATCH (T2:Patient)\nRETURN T2.Name",
        "cypher_ans": [
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "List the names of patients who have made appointments.",
        "sql_query": "SELECT name FROM appointment AS T1 JOIN patient AS T2 ON T1.patient  =  T2.ssn",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": [
                {
                    "value": "appointment",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.patient",
                            "T2.ssn"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Dennis Doe"
            ],
            [
                "Random J. Patient"
            ]
        ],
        "cypher_query": "MATCH (T1:Appointment) MATCH (T2:Patient) MATCH (T2:Patient)\nRETURN T2.Name",
        "cypher_ans": [
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "What are names of patients who made an appointment?",
        "sql_query": "SELECT name FROM appointment AS T1 JOIN patient AS T2 ON T1.patient  =  T2.ssn",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": [
                {
                    "value": "appointment",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.patient",
                            "T2.ssn"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Dennis Doe"
            ],
            [
                "Random J. Patient"
            ]
        ],
        "cypher_query": "MATCH (T1:Appointment) MATCH (T2:Patient) MATCH (T2:Patient)\nRETURN T2.Name",
        "cypher_ans": [
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "List the names of patients who have made appointments.",
        "sql_query": "SELECT name FROM appointment AS T1 JOIN patient AS T2 ON T1.patient  =  T2.ssn",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": [
                {
                    "value": "appointment",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.patient",
                            "T2.ssn"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Dennis Doe"
            ],
            [
                "Random J. Patient"
            ]
        ],
        "cypher_query": "MATCH (T1:Appointment) MATCH (T2:Patient) MATCH (T2:Patient)\nRETURN T2.Name",
        "cypher_ans": [
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "What are names of patients who made an appointment?",
        "sql_query": "SELECT name FROM appointment AS T1 JOIN patient AS T2 ON T1.patient  =  T2.ssn",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": [
                {
                    "value": "appointment",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.patient",
                            "T2.ssn"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Dennis Doe"
            ],
            [
                "Random J. Patient"
            ]
        ],
        "cypher_query": "MATCH (T1:Appointment) MATCH (T2:Patient) MATCH (T2:Patient)\nRETURN T2.Name",
        "cypher_ans": [
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "List the names of patients who have made appointments.",
        "sql_query": "SELECT name FROM appointment AS T1 JOIN patient AS T2 ON T1.patient  =  T2.ssn",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": [
                {
                    "value": "appointment",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.patient",
                            "T2.ssn"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Dennis Doe"
            ],
            [
                "Random J. Patient"
            ]
        ],
        "cypher_query": "MATCH (T1:Appointment) MATCH (T2:Patient) MATCH (T2:Patient)\nRETURN T2.Name",
        "cypher_ans": [
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "What are names of patients who made an appointment?",
        "sql_query": "SELECT name FROM appointment AS T1 JOIN patient AS T2 ON T1.patient  =  T2.ssn",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": [
                {
                    "value": "appointment",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.patient",
                            "T2.ssn"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Dennis Doe"
            ],
            [
                "Random J. Patient"
            ]
        ],
        "cypher_query": "MATCH (T1:Appointment) MATCH (T2:Patient)\nRETURN T2.Name",
        "cypher_ans": [
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "List the names of patients who have made appointments.",
        "sql_query": "SELECT name FROM appointment AS T1 JOIN patient AS T2 ON T1.patient  =  T2.ssn",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": [
                {
                    "value": "appointment",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.patient",
                            "T2.ssn"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Dennis Doe"
            ],
            [
                "Random J. Patient"
            ]
        ],
        "cypher_query": "MATCH (T1:Appointment) MATCH (T2:Patient)\nRETURN T2.Name",
        "cypher_ans": [
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "What are names of patients who made an appointment?",
        "sql_query": "SELECT name FROM appointment AS T1 JOIN patient AS T2 ON T1.patient  =  T2.ssn",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": [
                {
                    "value": "appointment",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.patient",
                            "T2.ssn"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "John Smith"
            ],
            [
                "Dennis Doe"
            ],
            [
                "Dennis Doe"
            ],
            [
                "Random J. Patient"
            ],
            [
                "John Smith"
            ],
            [
                "Dennis Doe"
            ],
            [
                "Grace Ritchie"
            ]
        ],
        "cypher_query": "MATCH (T1:Appointment) MATCH (T2:Patient)\nRETURN T2.Name",
        "cypher_ans": [
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "List the names of patients who have made appointments.",
        "sql_query": "SELECT name FROM appointment AS T1 JOIN patient AS T2 ON T1.patient  =  T2.ssn",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": [
                {
                    "value": "appointment",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.patient",
                            "T2.ssn"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "John Smith"
            ],
            [
                "Dennis Doe"
            ],
            [
                "Dennis Doe"
            ],
            [
                "Random J. Patient"
            ],
            [
                "John Smith"
            ],
            [
                "Dennis Doe"
            ],
            [
                "Grace Ritchie"
            ]
        ],
        "cypher_query": "MATCH (T1:Appointment) MATCH (T2:Patient)\nRETURN T2.Name",
        "cypher_ans": [
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "What are names of patients who made an appointment?",
        "sql_query": "SELECT name FROM appointment AS T1 JOIN patient AS T2 ON T1.patient  =  T2.ssn",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": [
                {
                    "value": "appointment",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.patient",
                            "T2.ssn"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Dennis Doe"
            ],
            [
                "Random J. Patient"
            ]
        ],
        "cypher_query": "MATCH (T1:Appointment) MATCH (T2:Patient)\nRETURN T2.Name",
        "cypher_ans": [
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "List the names of patients who have made appointments.",
        "sql_query": "SELECT name FROM appointment AS T1 JOIN patient AS T2 ON T1.patient  =  T2.ssn",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": [
                {
                    "value": "appointment",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.patient",
                            "T2.ssn"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Dennis Doe"
            ],
            [
                "Random J. Patient"
            ]
        ],
        "cypher_query": "MATCH (T1:Appointment) MATCH (T2:Patient)\nRETURN T2.Name",
        "cypher_ans": [
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "What are names of patients who made an appointment?",
        "sql_query": "SELECT name FROM appointment AS T1 JOIN patient AS T2 ON T1.patient  =  T2.ssn",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": [
                {
                    "value": "appointment",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.patient",
                            "T2.ssn"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Dennis Doe"
            ],
            [
                "Random J. Patient"
            ]
        ],
        "cypher_query": "MATCH (T1:Appointment) MATCH (T2:Patient)\nRETURN T2.Name",
        "cypher_ans": [
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "List the names of patients who have made appointments.",
        "sql_query": "SELECT name FROM appointment AS T1 JOIN patient AS T2 ON T1.patient  =  T2.ssn",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": [
                {
                    "value": "appointment",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.patient",
                            "T2.ssn"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Dennis Doe"
            ],
            [
                "Random J. Patient"
            ]
        ],
        "cypher_query": "MATCH (T1:Appointment) MATCH (T2:Patient)\nRETURN T2.Name",
        "cypher_ans": [
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "What are names of patients who made an appointment?",
        "sql_query": "SELECT name FROM appointment AS T1 JOIN patient AS T2 ON T1.patient  =  T2.ssn",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": [
                {
                    "value": "appointment",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.patient",
                            "T2.ssn"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Dennis Doe"
            ],
            [
                "Random J. Patient"
            ]
        ],
        "cypher_query": "MATCH (T1:Appointment) MATCH (T2:Patient)\nRETURN T2.Name",
        "cypher_ans": [
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "List the names of patients who have made appointments.",
        "sql_query": "SELECT name FROM appointment AS T1 JOIN patient AS T2 ON T1.patient  =  T2.ssn",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": [
                {
                    "value": "appointment",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.patient",
                            "T2.ssn"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Dennis Doe"
            ],
            [
                "Random J. Patient"
            ]
        ],
        "cypher_query": "MATCH (T1:Appointment) MATCH (T2:Patient)\nRETURN T2.Name",
        "cypher_ans": [
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ]
        ]
    }
][][][][][
    {
        "db_id": "hospital_1",
        "question": "What are names of patients who made an appointment?",
        "sql_query": "SELECT name FROM appointment AS T1 JOIN patient AS T2 ON T1.patient  =  T2.ssn",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": [
                {
                    "value": "appointment",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.patient",
                            "T2.ssn"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "John Smith"
            ],
            [
                "Dennis Doe"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Grace Ritchie"
            ]
        ],
        "cypher_query": "MATCH (T1:Appointment) MATCH (T2:Patient)\nRETURN T2.Name",
        "cypher_ans": [
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "List the names of patients who have made appointments.",
        "sql_query": "SELECT name FROM appointment AS T1 JOIN patient AS T2 ON T1.patient  =  T2.ssn",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": [
                {
                    "value": "appointment",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.patient",
                            "T2.ssn"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "John Smith"
            ],
            [
                "Dennis Doe"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Grace Ritchie"
            ]
        ],
        "cypher_query": "MATCH (T1:Appointment) MATCH (T2:Patient)\nRETURN T2.Name",
        "cypher_ans": [
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ],
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Random J. Patient"
            ],
            [
                "Dennis Doe"
            ]
        ]
    }
][][][][][][
    {
        "db_id": "hospital_1",
        "question": "what are name and phone number of patients who had more than one appointment?",
        "sql_query": "SELECT name ,  phone FROM appointment AS T1 JOIN patient AS T2 ON T1.patient  =  T2.ssn GROUP BY T1.patient HAVING count(*)  >  1",
        "parsed_sql": {
            "select": [
                {
                    "value": "name"
                },
                {
                    "value": "phone"
                }
            ],
            "from": [
                {
                    "value": "appointment",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.patient",
                            "T2.ssn"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.patient"
            },
            "having": {
                "gt": [
                    {
                        "count": "*"
                    },
                    1
                ]
            }
        },
        "sql_ans": [
            [
                "John Smith",
                "555-0256"
            ],
            [
                "Grace Ritchie",
                "555-0512"
            ],
            [
                "Dennis Doe",
                "555-2048"
            ]
        ],
        "cypher_query": "MATCH (T1:Appointment) MATCH (T2:Patient)\nWITH T2.Phone AS Phone, COUNT(\"*\") AS COUNT, T2.Name AS Name\nWHERE COUNT > 1\nRETURN Name,Phone",
        "cypher_ans": [
            [
                "John Smith",
                "555-0256"
            ],
            [
                "Grace Ritchie",
                "555-0512"
            ],
            [
                "Random J. Patient",
                "555-1204"
            ],
            [
                "Dennis Doe",
                "555-2048"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which patients made more than one appointment? Tell me the name and phone number of these patients.",
        "sql_query": "SELECT name ,  phone FROM appointment AS T1 JOIN patient AS T2 ON T1.patient  =  T2.ssn GROUP BY T1.patient HAVING count(*)  >  1",
        "parsed_sql": {
            "select": [
                {
                    "value": "name"
                },
                {
                    "value": "phone"
                }
            ],
            "from": [
                {
                    "value": "appointment",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.patient",
                            "T2.ssn"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.patient"
            },
            "having": {
                "gt": [
                    {
                        "count": "*"
                    },
                    1
                ]
            }
        },
        "sql_ans": [
            [
                "John Smith",
                "555-0256"
            ],
            [
                "Grace Ritchie",
                "555-0512"
            ],
            [
                "Dennis Doe",
                "555-2048"
            ]
        ],
        "cypher_query": "MATCH (T1:Appointment) MATCH (T2:Patient)\nWITH T2.Phone AS Phone, COUNT(\"*\") AS COUNT, T2.Name AS Name\nWHERE COUNT > 1\nRETURN Name,Phone",
        "cypher_ans": [
            [
                "John Smith",
                "555-0256"
            ],
            [
                "Grace Ritchie",
                "555-0512"
            ],
            [
                "Random J. Patient",
                "555-1204"
            ],
            [
                "Dennis Doe",
                "555-2048"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "List the name of physicians who took some appointment.",
        "sql_query": "SELECT T2.name FROM appointment AS T1 JOIN physician AS T2 ON T1.Physician  =  T2.EmployeeID",
        "parsed_sql": {
            "select": {
                "value": "T2.name"
            },
            "from": [
                {
                    "value": "appointment",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Physician",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "John Dorian"
            ],
            [
                "Elliot Reid"
            ],
            [
                "Percival Cox"
            ],
            [
                "Christopher Turk"
            ],
            [
                "Molly Clock"
            ]
        ],
        "cypher_query": "MATCH (T1:Appointment) MATCH (T2:Physician)\nRETURN T2.Name",
        "cypher_ans": [
            [
                "John Dorian"
            ],
            [
                "Elliot Reid"
            ],
            [
                "Christopher Turk"
            ],
            [
                "Percival Cox"
            ],
            [
                "Bob Kelso"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "John Wen"
            ],
            [
                "Keith Dudemeister"
            ],
            [
                "Molly Clock"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of all the physicians who took appointments.",
        "sql_query": "SELECT T2.name FROM appointment AS T1 JOIN physician AS T2 ON T1.Physician  =  T2.EmployeeID",
        "parsed_sql": {
            "select": {
                "value": "T2.name"
            },
            "from": [
                {
                    "value": "appointment",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Physician",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "John Dorian"
            ],
            [
                "Elliot Reid"
            ],
            [
                "Percival Cox"
            ],
            [
                "Christopher Turk"
            ],
            [
                "Molly Clock"
            ]
        ],
        "cypher_query": "MATCH (T1:Appointment) MATCH (T2:Physician)\nRETURN T2.Name",
        "cypher_ans": [
            [
                "John Dorian"
            ],
            [
                "Elliot Reid"
            ],
            [
                "Christopher Turk"
            ],
            [
                "Percival Cox"
            ],
            [
                "Bob Kelso"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "John Wen"
            ],
            [
                "Keith Dudemeister"
            ],
            [
                "Molly Clock"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the patient who made the most recent appointment?",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient) MATCH (T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the patient who made the appointment with the most recent start date.",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient) MATCH (T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many patients do each physician take care of? List their names and number of patients they take care of.",
        "sql_query": "SELECT T1.name ,  count(*) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.PCP"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            }
        },
        "sql_ans": [
            [
                "John Dorian",
                1
            ],
            [
                "Elliot Reid",
                2
            ],
            [
                "Christopher Turk",
                1
            ]
        ],
        "cypher_query": "MATCH (T1:Physician) MATCH (T2:Patient)\nWITH count(T1.EmployeeID) AS count, T1.Name AS Name\nRETURN Name,COUNT(\"*\")",
        "cypher_ans": [
            [
                "John Dorian",
                1
            ],
            [
                "Elliot Reid",
                1
            ],
            [
                "Christopher Turk",
                1
            ],
            [
                "Percival Cox",
                1
            ],
            [
                "Bob Kelso",
                1
            ],
            [
                "Todd Quinlan",
                1
            ],
            [
                "John Wen",
                1
            ],
            [
                "Keith Dudemeister",
                1
            ],
            [
                "Molly Clock",
                1
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Return the name of each physician and the number of patients he or she treats.",
        "sql_query": "SELECT T1.name ,  count(*) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.PCP"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            }
        },
        "sql_ans": [
            [
                "John Dorian",
                1
            ],
            [
                "Elliot Reid",
                2
            ],
            [
                "Christopher Turk",
                1
            ]
        ],
        "cypher_query": "MATCH (T1:Physician) MATCH (T2:Patient)\nWITH count(T1.EmployeeID) AS count, T1.Name AS Name\nRETURN Name,COUNT(\"*\")",
        "cypher_ans": [
            [
                "John Dorian",
                1
            ],
            [
                "Elliot Reid",
                1
            ],
            [
                "Christopher Turk",
                1
            ],
            [
                "Percival Cox",
                1
            ],
            [
                "Bob Kelso",
                1
            ],
            [
                "Todd Quinlan",
                1
            ],
            [
                "John Wen",
                1
            ],
            [
                "Keith Dudemeister",
                1
            ],
            [
                "Molly Clock",
                1
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians who are in charge of more than one patient.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid HAVING count(*)  >  1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.PCP"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "having": {
                "gt": [
                    {
                        "count": "*"
                    },
                    1
                ]
            }
        },
        "sql_ans": [
            [
                "Elliot Reid"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician) MATCH (T2:Patient)\nWITH COUNT(\"*\") AS COUNT, T1.Name AS Name\nWHERE COUNT > 1\nRETURN Name",
        "cypher_ans": [
            [
                "John Dorian"
            ],
            [
                "Elliot Reid"
            ],
            [
                "Christopher Turk"
            ],
            [
                "Percival Cox"
            ],
            [
                "Bob Kelso"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "John Wen"
            ],
            [
                "Keith Dudemeister"
            ],
            [
                "Molly Clock"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which physicians are in charge of more than one patient? Give me their names.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid HAVING count(*)  >  1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.PCP"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "having": {
                "gt": [
                    {
                        "count": "*"
                    },
                    1
                ]
            }
        },
        "sql_ans": [
            [
                "Elliot Reid"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician) MATCH (T2:Patient)\nWITH COUNT(\"*\") AS COUNT, T1.Name AS Name\nWHERE COUNT > 1\nRETURN Name",
        "cypher_ans": [
            [
                "John Dorian"
            ],
            [
                "Elliot Reid"
            ],
            [
                "Christopher Turk"
            ],
            [
                "Percival Cox"
            ],
            [
                "Bob Kelso"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "John Wen"
            ],
            [
                "Keith Dudemeister"
            ],
            [
                "Molly Clock"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms located on each block floor.",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block) MATCH (T2:Room)\nWITH T1.BlockFloor AS BlockFloor, count(T1.BlockFloor) AS count\nRETURN COUNT(\"*\"),BlockFloor",
        "cypher_ans": [
            [
                1,
                1
            ],
            [
                1,
                2
            ],
            [
                1,
                3
            ],
            [
                1,
                4
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms does each block floor have?",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block) MATCH (T2:Room)\nWITH T1.BlockFloor AS BlockFloor, count(T1.BlockFloor) AS count\nRETURN COUNT(\"*\"),BlockFloor",
        "cypher_ans": [
            [
                1,
                1
            ],
            [
                1,
                2
            ],
            [
                1,
                3
            ],
            [
                1,
                4
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms for different block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block) MATCH (T2:Room)\nWITH count(T1.BlockCode) AS count, T1.BlockCode AS BlockCode\nRETURN COUNT(\"*\"),BlockCode",
        "cypher_ans": [
            [
                1,
                1
            ],
            [
                1,
                2
            ],
            [
                1,
                3
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms are located for each block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block) MATCH (T2:Room)\nWITH count(T1.BlockCode) AS count, T1.BlockCode AS BlockCode\nRETURN COUNT(\"*\"),BlockCode",
        "cypher_ans": [
            [
                1,
                1
            ],
            [
                1,
                2
            ],
            [
                1,
                3
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of medications prescribed for each brand.",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH count(T1.Brand) AS count, T1.Name AS Name\nRETURN COUNT(\"*\"),Name",
        "cypher_ans": [
            [
                1,
                "Procrastin-X"
            ],
            [
                1,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many medications are prescribed for each brand?",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH count(T1.Brand) AS count, T1.Name AS Name\nRETURN COUNT(\"*\"),Name",
        "cypher_ans": [
            [
                1,
                "Procrastin-X"
            ],
            [
                1,
                "Thesisin"
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "what are name and phone number of patients who had more than one appointment?",
        "sql_query": "SELECT name ,  phone FROM appointment AS T1 JOIN patient AS T2 ON T1.patient  =  T2.ssn GROUP BY T1.patient HAVING count(*)  >  1",
        "parsed_sql": {
            "select": [
                {
                    "value": "name"
                },
                {
                    "value": "phone"
                }
            ],
            "from": [
                {
                    "value": "appointment",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.patient",
                            "T2.ssn"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.patient"
            },
            "having": {
                "gt": [
                    {
                        "count": "*"
                    },
                    1
                ]
            }
        },
        "sql_ans": [
            [
                "John Smith",
                "555-0256"
            ],
            [
                "Grace Ritchie",
                "555-0512"
            ],
            [
                "Dennis Doe",
                "555-2048"
            ]
        ],
        "cypher_query": "MATCH (T1:Appointment) MATCH (T2:Patient)\nWITH T2.Phone AS Phone, T2.Name AS Name, COUNT(\"*\") AS COUNT\nWHERE COUNT > 1\nRETURN Name,Phone",
        "cypher_ans": [
            [
                "John Smith",
                "555-0256"
            ],
            [
                "Grace Ritchie",
                "555-0512"
            ],
            [
                "Random J. Patient",
                "555-1204"
            ],
            [
                "Dennis Doe",
                "555-2048"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which patients made more than one appointment? Tell me the name and phone number of these patients.",
        "sql_query": "SELECT name ,  phone FROM appointment AS T1 JOIN patient AS T2 ON T1.patient  =  T2.ssn GROUP BY T1.patient HAVING count(*)  >  1",
        "parsed_sql": {
            "select": [
                {
                    "value": "name"
                },
                {
                    "value": "phone"
                }
            ],
            "from": [
                {
                    "value": "appointment",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.patient",
                            "T2.ssn"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.patient"
            },
            "having": {
                "gt": [
                    {
                        "count": "*"
                    },
                    1
                ]
            }
        },
        "sql_ans": [
            [
                "John Smith",
                "555-0256"
            ],
            [
                "Grace Ritchie",
                "555-0512"
            ],
            [
                "Dennis Doe",
                "555-2048"
            ]
        ],
        "cypher_query": "MATCH (T1:Appointment) MATCH (T2:Patient)\nWITH T2.Phone AS Phone, T2.Name AS Name, COUNT(\"*\") AS COUNT\nWHERE COUNT > 1\nRETURN Name,Phone",
        "cypher_ans": [
            [
                "John Smith",
                "555-0256"
            ],
            [
                "Grace Ritchie",
                "555-0512"
            ],
            [
                "Random J. Patient",
                "555-1204"
            ],
            [
                "Dennis Doe",
                "555-2048"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "List the name of physicians who took some appointment.",
        "sql_query": "SELECT T2.name FROM appointment AS T1 JOIN physician AS T2 ON T1.Physician  =  T2.EmployeeID",
        "parsed_sql": {
            "select": {
                "value": "T2.name"
            },
            "from": [
                {
                    "value": "appointment",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Physician",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "John Dorian"
            ],
            [
                "Elliot Reid"
            ],
            [
                "Percival Cox"
            ],
            [
                "Christopher Turk"
            ],
            [
                "Molly Clock"
            ]
        ],
        "cypher_query": "MATCH (T1:Appointment) MATCH (T2:Physician)\nRETURN T2.Name",
        "cypher_ans": [
            [
                "John Dorian"
            ],
            [
                "Elliot Reid"
            ],
            [
                "Christopher Turk"
            ],
            [
                "Percival Cox"
            ],
            [
                "Bob Kelso"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "John Wen"
            ],
            [
                "Keith Dudemeister"
            ],
            [
                "Molly Clock"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of all the physicians who took appointments.",
        "sql_query": "SELECT T2.name FROM appointment AS T1 JOIN physician AS T2 ON T1.Physician  =  T2.EmployeeID",
        "parsed_sql": {
            "select": {
                "value": "T2.name"
            },
            "from": [
                {
                    "value": "appointment",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Physician",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "John Dorian"
            ],
            [
                "Elliot Reid"
            ],
            [
                "Percival Cox"
            ],
            [
                "Christopher Turk"
            ],
            [
                "Molly Clock"
            ]
        ],
        "cypher_query": "MATCH (T1:Appointment) MATCH (T2:Physician)\nRETURN T2.Name",
        "cypher_ans": [
            [
                "John Dorian"
            ],
            [
                "Elliot Reid"
            ],
            [
                "Christopher Turk"
            ],
            [
                "Percival Cox"
            ],
            [
                "Bob Kelso"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "John Wen"
            ],
            [
                "Keith Dudemeister"
            ],
            [
                "Molly Clock"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the patient who made the most recent appointment?",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient) MATCH (T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the patient who made the appointment with the most recent start date.",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient) MATCH (T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many patients do each physician take care of? List their names and number of patients they take care of.",
        "sql_query": "SELECT T1.name ,  count(*) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.PCP"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            }
        },
        "sql_ans": [
            [
                "John Dorian",
                1
            ],
            [
                "Elliot Reid",
                2
            ],
            [
                "Christopher Turk",
                1
            ]
        ],
        "cypher_query": "MATCH (T1:Physician) MATCH (T2:Patient)\nWITH T1.Name AS Name, count(T1.EmployeeID) AS count\nRETURN Name,COUNT(\"*\")",
        "cypher_ans": [
            [
                "John Dorian",
                1
            ],
            [
                "Elliot Reid",
                1
            ],
            [
                "Christopher Turk",
                1
            ],
            [
                "Percival Cox",
                1
            ],
            [
                "Bob Kelso",
                1
            ],
            [
                "Todd Quinlan",
                1
            ],
            [
                "John Wen",
                1
            ],
            [
                "Keith Dudemeister",
                1
            ],
            [
                "Molly Clock",
                1
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Return the name of each physician and the number of patients he or she treats.",
        "sql_query": "SELECT T1.name ,  count(*) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.PCP"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            }
        },
        "sql_ans": [
            [
                "John Dorian",
                1
            ],
            [
                "Elliot Reid",
                2
            ],
            [
                "Christopher Turk",
                1
            ]
        ],
        "cypher_query": "MATCH (T1:Physician) MATCH (T2:Patient)\nWITH T1.Name AS Name, count(T1.EmployeeID) AS count\nRETURN Name,COUNT(\"*\")",
        "cypher_ans": [
            [
                "John Dorian",
                1
            ],
            [
                "Elliot Reid",
                1
            ],
            [
                "Christopher Turk",
                1
            ],
            [
                "Percival Cox",
                1
            ],
            [
                "Bob Kelso",
                1
            ],
            [
                "Todd Quinlan",
                1
            ],
            [
                "John Wen",
                1
            ],
            [
                "Keith Dudemeister",
                1
            ],
            [
                "Molly Clock",
                1
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians who are in charge of more than one patient.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid HAVING count(*)  >  1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.PCP"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "having": {
                "gt": [
                    {
                        "count": "*"
                    },
                    1
                ]
            }
        },
        "sql_ans": [
            [
                "Elliot Reid"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician) MATCH (T2:Patient)\nWITH T1.Name AS Name, COUNT(\"*\") AS COUNT\nWHERE COUNT > 1\nRETURN Name",
        "cypher_ans": [
            [
                "John Dorian"
            ],
            [
                "Elliot Reid"
            ],
            [
                "Christopher Turk"
            ],
            [
                "Percival Cox"
            ],
            [
                "Bob Kelso"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "John Wen"
            ],
            [
                "Keith Dudemeister"
            ],
            [
                "Molly Clock"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which physicians are in charge of more than one patient? Give me their names.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid HAVING count(*)  >  1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.PCP"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "having": {
                "gt": [
                    {
                        "count": "*"
                    },
                    1
                ]
            }
        },
        "sql_ans": [
            [
                "Elliot Reid"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician) MATCH (T2:Patient)\nWITH T1.Name AS Name, COUNT(\"*\") AS COUNT\nWHERE COUNT > 1\nRETURN Name",
        "cypher_ans": [
            [
                "John Dorian"
            ],
            [
                "Elliot Reid"
            ],
            [
                "Christopher Turk"
            ],
            [
                "Percival Cox"
            ],
            [
                "Bob Kelso"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "John Wen"
            ],
            [
                "Keith Dudemeister"
            ],
            [
                "Molly Clock"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms located on each block floor.",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block) MATCH (T2:Room)\nWITH count(T1.BlockFloor) AS count, T1.BlockFloor AS BlockFloor\nRETURN COUNT(\"*\"),BlockFloor",
        "cypher_ans": [
            [
                1,
                1
            ],
            [
                1,
                2
            ],
            [
                1,
                3
            ],
            [
                1,
                4
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms does each block floor have?",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block) MATCH (T2:Room)\nWITH count(T1.BlockFloor) AS count, T1.BlockFloor AS BlockFloor\nRETURN COUNT(\"*\"),BlockFloor",
        "cypher_ans": [
            [
                1,
                1
            ],
            [
                1,
                2
            ],
            [
                1,
                3
            ],
            [
                1,
                4
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms for different block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block) MATCH (T2:Room)\nWITH T1.BlockCode AS BlockCode, count(T1.BlockCode) AS count\nRETURN COUNT(\"*\"),BlockCode",
        "cypher_ans": [
            [
                1,
                1
            ],
            [
                1,
                2
            ],
            [
                1,
                3
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms are located for each block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block) MATCH (T2:Room)\nWITH T1.BlockCode AS BlockCode, count(T1.BlockCode) AS count\nRETURN COUNT(\"*\"),BlockCode",
        "cypher_ans": [
            [
                1,
                1
            ],
            [
                1,
                2
            ],
            [
                1,
                3
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of medications prescribed for each brand.",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH T1.Name AS Name, count(T1.Brand) AS count\nRETURN COUNT(\"*\"),Name",
        "cypher_ans": [
            [
                1,
                "Procrastin-X"
            ],
            [
                1,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many medications are prescribed for each brand?",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH T1.Name AS Name, count(T1.Brand) AS count\nRETURN COUNT(\"*\"),Name",
        "cypher_ans": [
            [
                1,
                "Procrastin-X"
            ],
            [
                1,
                "Thesisin"
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "what are name and phone number of patients who had more than one appointment?",
        "sql_query": "SELECT name ,  phone FROM appointment AS T1 JOIN patient AS T2 ON T1.patient  =  T2.ssn GROUP BY T1.patient HAVING count(*)  >  1",
        "parsed_sql": {
            "select": [
                {
                    "value": "name"
                },
                {
                    "value": "phone"
                }
            ],
            "from": [
                {
                    "value": "appointment",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.patient",
                            "T2.ssn"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.patient"
            },
            "having": {
                "gt": [
                    {
                        "count": "*"
                    },
                    1
                ]
            }
        },
        "sql_ans": [
            [
                "John Smith",
                "555-0256"
            ],
            [
                "Grace Ritchie",
                "555-0512"
            ],
            [
                "Dennis Doe",
                "555-2048"
            ]
        ],
        "cypher_query": "MATCH (T1:Appointment) MATCH (T2:Patient)\nWITH T2.Name AS Name, COUNT(\"*\") AS COUNT, T2.Phone AS Phone\nWHERE COUNT > 1\nRETURN Name,Phone",
        "cypher_ans": [
            [
                "John Smith",
                "555-0256"
            ],
            [
                "Grace Ritchie",
                "555-0512"
            ],
            [
                "Random J. Patient",
                "555-1204"
            ],
            [
                "Dennis Doe",
                "555-2048"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which patients made more than one appointment? Tell me the name and phone number of these patients.",
        "sql_query": "SELECT name ,  phone FROM appointment AS T1 JOIN patient AS T2 ON T1.patient  =  T2.ssn GROUP BY T1.patient HAVING count(*)  >  1",
        "parsed_sql": {
            "select": [
                {
                    "value": "name"
                },
                {
                    "value": "phone"
                }
            ],
            "from": [
                {
                    "value": "appointment",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.patient",
                            "T2.ssn"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.patient"
            },
            "having": {
                "gt": [
                    {
                        "count": "*"
                    },
                    1
                ]
            }
        },
        "sql_ans": [
            [
                "John Smith",
                "555-0256"
            ],
            [
                "Grace Ritchie",
                "555-0512"
            ],
            [
                "Dennis Doe",
                "555-2048"
            ]
        ],
        "cypher_query": "MATCH (T1:Appointment) MATCH (T2:Patient)\nWITH T2.Name AS Name, COUNT(\"*\") AS COUNT, T2.Phone AS Phone\nWHERE COUNT > 1\nRETURN Name,Phone",
        "cypher_ans": [
            [
                "John Smith",
                "555-0256"
            ],
            [
                "Grace Ritchie",
                "555-0512"
            ],
            [
                "Random J. Patient",
                "555-1204"
            ],
            [
                "Dennis Doe",
                "555-2048"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "List the name of physicians who took some appointment.",
        "sql_query": "SELECT T2.name FROM appointment AS T1 JOIN physician AS T2 ON T1.Physician  =  T2.EmployeeID",
        "parsed_sql": {
            "select": {
                "value": "T2.name"
            },
            "from": [
                {
                    "value": "appointment",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Physician",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "John Dorian"
            ],
            [
                "Elliot Reid"
            ],
            [
                "Percival Cox"
            ],
            [
                "Christopher Turk"
            ],
            [
                "Molly Clock"
            ]
        ],
        "cypher_query": "MATCH (T1:Appointment) MATCH (T2:Physician)\nRETURN T2.Name",
        "cypher_ans": [
            [
                "John Dorian"
            ],
            [
                "Elliot Reid"
            ],
            [
                "Christopher Turk"
            ],
            [
                "Percival Cox"
            ],
            [
                "Bob Kelso"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "John Wen"
            ],
            [
                "Keith Dudemeister"
            ],
            [
                "Molly Clock"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of all the physicians who took appointments.",
        "sql_query": "SELECT T2.name FROM appointment AS T1 JOIN physician AS T2 ON T1.Physician  =  T2.EmployeeID",
        "parsed_sql": {
            "select": {
                "value": "T2.name"
            },
            "from": [
                {
                    "value": "appointment",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Physician",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "John Dorian"
            ],
            [
                "Elliot Reid"
            ],
            [
                "Percival Cox"
            ],
            [
                "Christopher Turk"
            ],
            [
                "Molly Clock"
            ]
        ],
        "cypher_query": "MATCH (T1:Appointment) MATCH (T2:Physician)\nRETURN T2.Name",
        "cypher_ans": [
            [
                "John Dorian"
            ],
            [
                "Elliot Reid"
            ],
            [
                "Christopher Turk"
            ],
            [
                "Percival Cox"
            ],
            [
                "Bob Kelso"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "John Wen"
            ],
            [
                "Keith Dudemeister"
            ],
            [
                "Molly Clock"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the patient who made the most recent appointment?",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient) MATCH (T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the patient who made the appointment with the most recent start date.",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient) MATCH (T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many patients do each physician take care of? List their names and number of patients they take care of.",
        "sql_query": "SELECT T1.name ,  count(*) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.PCP"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            }
        },
        "sql_ans": [
            [
                "John Dorian",
                1
            ],
            [
                "Elliot Reid",
                2
            ],
            [
                "Christopher Turk",
                1
            ]
        ],
        "cypher_query": "MATCH (T1:Physician) MATCH (T2:Patient)\nWITH T1.Name AS Name, count(T1.EmployeeID) AS count\nRETURN Name,COUNT(\"*\")",
        "cypher_ans": [
            [
                "John Dorian",
                1
            ],
            [
                "Elliot Reid",
                1
            ],
            [
                "Christopher Turk",
                1
            ],
            [
                "Percival Cox",
                1
            ],
            [
                "Bob Kelso",
                1
            ],
            [
                "Todd Quinlan",
                1
            ],
            [
                "John Wen",
                1
            ],
            [
                "Keith Dudemeister",
                1
            ],
            [
                "Molly Clock",
                1
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Return the name of each physician and the number of patients he or she treats.",
        "sql_query": "SELECT T1.name ,  count(*) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.PCP"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            }
        },
        "sql_ans": [
            [
                "John Dorian",
                1
            ],
            [
                "Elliot Reid",
                2
            ],
            [
                "Christopher Turk",
                1
            ]
        ],
        "cypher_query": "MATCH (T1:Physician) MATCH (T2:Patient)\nWITH T1.Name AS Name, count(T1.EmployeeID) AS count\nRETURN Name,COUNT(\"*\")",
        "cypher_ans": [
            [
                "John Dorian",
                1
            ],
            [
                "Elliot Reid",
                1
            ],
            [
                "Christopher Turk",
                1
            ],
            [
                "Percival Cox",
                1
            ],
            [
                "Bob Kelso",
                1
            ],
            [
                "Todd Quinlan",
                1
            ],
            [
                "John Wen",
                1
            ],
            [
                "Keith Dudemeister",
                1
            ],
            [
                "Molly Clock",
                1
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians who are in charge of more than one patient.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid HAVING count(*)  >  1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.PCP"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "having": {
                "gt": [
                    {
                        "count": "*"
                    },
                    1
                ]
            }
        },
        "sql_ans": [
            [
                "Elliot Reid"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician) MATCH (T2:Patient)\nWITH COUNT(\"*\") AS COUNT, T1.Name AS Name\nWHERE COUNT > 1\nRETURN Name",
        "cypher_ans": [
            [
                "John Dorian"
            ],
            [
                "Elliot Reid"
            ],
            [
                "Christopher Turk"
            ],
            [
                "Percival Cox"
            ],
            [
                "Bob Kelso"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "John Wen"
            ],
            [
                "Keith Dudemeister"
            ],
            [
                "Molly Clock"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which physicians are in charge of more than one patient? Give me their names.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid HAVING count(*)  >  1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.PCP"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "having": {
                "gt": [
                    {
                        "count": "*"
                    },
                    1
                ]
            }
        },
        "sql_ans": [
            [
                "Elliot Reid"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician) MATCH (T2:Patient)\nWITH COUNT(\"*\") AS COUNT, T1.Name AS Name\nWHERE COUNT > 1\nRETURN Name",
        "cypher_ans": [
            [
                "John Dorian"
            ],
            [
                "Elliot Reid"
            ],
            [
                "Christopher Turk"
            ],
            [
                "Percival Cox"
            ],
            [
                "Bob Kelso"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "John Wen"
            ],
            [
                "Keith Dudemeister"
            ],
            [
                "Molly Clock"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms located on each block floor.",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block) MATCH (T2:Room)\nWITH count(T1.BlockFloor) AS count, T1.BlockFloor AS BlockFloor\nRETURN COUNT(\"*\"),BlockFloor",
        "cypher_ans": [
            [
                1,
                1
            ],
            [
                1,
                2
            ],
            [
                1,
                3
            ],
            [
                1,
                4
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms does each block floor have?",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block) MATCH (T2:Room)\nWITH count(T1.BlockFloor) AS count, T1.BlockFloor AS BlockFloor\nRETURN COUNT(\"*\"),BlockFloor",
        "cypher_ans": [
            [
                1,
                1
            ],
            [
                1,
                2
            ],
            [
                1,
                3
            ],
            [
                1,
                4
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms for different block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block) MATCH (T2:Room)\nWITH T1.BlockCode AS BlockCode, count(T1.BlockCode) AS count\nRETURN COUNT(\"*\"),BlockCode",
        "cypher_ans": [
            [
                1,
                1
            ],
            [
                1,
                2
            ],
            [
                1,
                3
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms are located for each block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block) MATCH (T2:Room)\nWITH T1.BlockCode AS BlockCode, count(T1.BlockCode) AS count\nRETURN COUNT(\"*\"),BlockCode",
        "cypher_ans": [
            [
                1,
                1
            ],
            [
                1,
                2
            ],
            [
                1,
                3
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of medications prescribed for each brand.",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH T1.Name AS Name, count(T1.Brand) AS count\nRETURN COUNT(\"*\"),Name",
        "cypher_ans": [
            [
                1,
                "Procrastin-X"
            ],
            [
                1,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many medications are prescribed for each brand?",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH T1.Name AS Name, count(T1.Brand) AS count\nRETURN COUNT(\"*\"),Name",
        "cypher_ans": [
            [
                1,
                "Procrastin-X"
            ],
            [
                1,
                "Thesisin"
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "what are name and phone number of patients who had more than one appointment?",
        "sql_query": "SELECT name ,  phone FROM appointment AS T1 JOIN patient AS T2 ON T1.patient  =  T2.ssn GROUP BY T1.patient HAVING count(*)  >  1",
        "parsed_sql": {
            "select": [
                {
                    "value": "name"
                },
                {
                    "value": "phone"
                }
            ],
            "from": [
                {
                    "value": "appointment",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.patient",
                            "T2.ssn"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.patient"
            },
            "having": {
                "gt": [
                    {
                        "count": "*"
                    },
                    1
                ]
            }
        },
        "sql_ans": [
            [
                "John Smith",
                "555-0256"
            ],
            [
                "Grace Ritchie",
                "555-0512"
            ],
            [
                "Dennis Doe",
                "555-2048"
            ]
        ],
        "cypher_query": "MATCH (T1:Appointment) MATCH (T2:Patient)\nWITH T2.Name AS Name, T2.Phone AS Phone, COUNT(\"*\") AS COUNT\nWHERE COUNT > 1\nRETURN Name,Phone",
        "cypher_ans": [
            [
                "John Smith",
                "555-0256"
            ],
            [
                "Grace Ritchie",
                "555-0512"
            ],
            [
                "Random J. Patient",
                "555-1204"
            ],
            [
                "Dennis Doe",
                "555-2048"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which patients made more than one appointment? Tell me the name and phone number of these patients.",
        "sql_query": "SELECT name ,  phone FROM appointment AS T1 JOIN patient AS T2 ON T1.patient  =  T2.ssn GROUP BY T1.patient HAVING count(*)  >  1",
        "parsed_sql": {
            "select": [
                {
                    "value": "name"
                },
                {
                    "value": "phone"
                }
            ],
            "from": [
                {
                    "value": "appointment",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.patient",
                            "T2.ssn"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.patient"
            },
            "having": {
                "gt": [
                    {
                        "count": "*"
                    },
                    1
                ]
            }
        },
        "sql_ans": [
            [
                "John Smith",
                "555-0256"
            ],
            [
                "Grace Ritchie",
                "555-0512"
            ],
            [
                "Dennis Doe",
                "555-2048"
            ]
        ],
        "cypher_query": "MATCH (T1:Appointment) MATCH (T2:Patient)\nWITH T2.Name AS Name, T2.Phone AS Phone, COUNT(\"*\") AS COUNT\nWHERE COUNT > 1\nRETURN Name,Phone",
        "cypher_ans": [
            [
                "John Smith",
                "555-0256"
            ],
            [
                "Grace Ritchie",
                "555-0512"
            ],
            [
                "Random J. Patient",
                "555-1204"
            ],
            [
                "Dennis Doe",
                "555-2048"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "List the name of physicians who took some appointment.",
        "sql_query": "SELECT T2.name FROM appointment AS T1 JOIN physician AS T2 ON T1.Physician  =  T2.EmployeeID",
        "parsed_sql": {
            "select": {
                "value": "T2.name"
            },
            "from": [
                {
                    "value": "appointment",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Physician",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "John Dorian"
            ],
            [
                "Elliot Reid"
            ],
            [
                "Percival Cox"
            ],
            [
                "Christopher Turk"
            ],
            [
                "Molly Clock"
            ]
        ],
        "cypher_query": "MATCH (T1:Appointment) MATCH (T2:Physician)\nRETURN T2.Name",
        "cypher_ans": [
            [
                "John Dorian"
            ],
            [
                "Elliot Reid"
            ],
            [
                "Christopher Turk"
            ],
            [
                "Percival Cox"
            ],
            [
                "Bob Kelso"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "John Wen"
            ],
            [
                "Keith Dudemeister"
            ],
            [
                "Molly Clock"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of all the physicians who took appointments.",
        "sql_query": "SELECT T2.name FROM appointment AS T1 JOIN physician AS T2 ON T1.Physician  =  T2.EmployeeID",
        "parsed_sql": {
            "select": {
                "value": "T2.name"
            },
            "from": [
                {
                    "value": "appointment",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Physician",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "John Dorian"
            ],
            [
                "Elliot Reid"
            ],
            [
                "Percival Cox"
            ],
            [
                "Christopher Turk"
            ],
            [
                "Molly Clock"
            ]
        ],
        "cypher_query": "MATCH (T1:Appointment) MATCH (T2:Physician)\nRETURN T2.Name",
        "cypher_ans": [
            [
                "John Dorian"
            ],
            [
                "Elliot Reid"
            ],
            [
                "Christopher Turk"
            ],
            [
                "Percival Cox"
            ],
            [
                "Bob Kelso"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "John Wen"
            ],
            [
                "Keith Dudemeister"
            ],
            [
                "Molly Clock"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the patient who made the most recent appointment?",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient) MATCH (T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the patient who made the appointment with the most recent start date.",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient) MATCH (T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many patients do each physician take care of? List their names and number of patients they take care of.",
        "sql_query": "SELECT T1.name ,  count(*) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.PCP"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            }
        },
        "sql_ans": [
            [
                "John Dorian",
                1
            ],
            [
                "Elliot Reid",
                2
            ],
            [
                "Christopher Turk",
                1
            ]
        ],
        "cypher_query": "MATCH (T1:Physician) MATCH (T2:Patient)\nWITH count(T1.EmployeeID) AS count, T1.Name AS Name\nRETURN Name,COUNT(\"*\")",
        "cypher_ans": [
            [
                "John Dorian",
                1
            ],
            [
                "Elliot Reid",
                1
            ],
            [
                "Christopher Turk",
                1
            ],
            [
                "Percival Cox",
                1
            ],
            [
                "Bob Kelso",
                1
            ],
            [
                "Todd Quinlan",
                1
            ],
            [
                "John Wen",
                1
            ],
            [
                "Keith Dudemeister",
                1
            ],
            [
                "Molly Clock",
                1
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Return the name of each physician and the number of patients he or she treats.",
        "sql_query": "SELECT T1.name ,  count(*) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.PCP"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            }
        },
        "sql_ans": [
            [
                "John Dorian",
                1
            ],
            [
                "Elliot Reid",
                2
            ],
            [
                "Christopher Turk",
                1
            ]
        ],
        "cypher_query": "MATCH (T1:Physician) MATCH (T2:Patient)\nWITH count(T1.EmployeeID) AS count, T1.Name AS Name\nRETURN Name,COUNT(\"*\")",
        "cypher_ans": [
            [
                "John Dorian",
                1
            ],
            [
                "Elliot Reid",
                1
            ],
            [
                "Christopher Turk",
                1
            ],
            [
                "Percival Cox",
                1
            ],
            [
                "Bob Kelso",
                1
            ],
            [
                "Todd Quinlan",
                1
            ],
            [
                "John Wen",
                1
            ],
            [
                "Keith Dudemeister",
                1
            ],
            [
                "Molly Clock",
                1
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians who are in charge of more than one patient.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid HAVING count(*)  >  1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.PCP"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "having": {
                "gt": [
                    {
                        "count": "*"
                    },
                    1
                ]
            }
        },
        "sql_ans": [
            [
                "Elliot Reid"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician) MATCH (T2:Patient)\nWITH T1.Name AS Name, COUNT(\"*\") AS COUNT\nWHERE COUNT > 1\nRETURN Name",
        "cypher_ans": [
            [
                "John Dorian"
            ],
            [
                "Elliot Reid"
            ],
            [
                "Christopher Turk"
            ],
            [
                "Percival Cox"
            ],
            [
                "Bob Kelso"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "John Wen"
            ],
            [
                "Keith Dudemeister"
            ],
            [
                "Molly Clock"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which physicians are in charge of more than one patient? Give me their names.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid HAVING count(*)  >  1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.PCP"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "having": {
                "gt": [
                    {
                        "count": "*"
                    },
                    1
                ]
            }
        },
        "sql_ans": [
            [
                "Elliot Reid"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician) MATCH (T2:Patient)\nWITH T1.Name AS Name, COUNT(\"*\") AS COUNT\nWHERE COUNT > 1\nRETURN Name",
        "cypher_ans": [
            [
                "John Dorian"
            ],
            [
                "Elliot Reid"
            ],
            [
                "Christopher Turk"
            ],
            [
                "Percival Cox"
            ],
            [
                "Bob Kelso"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "John Wen"
            ],
            [
                "Keith Dudemeister"
            ],
            [
                "Molly Clock"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms located on each block floor.",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block) MATCH (T2:Room)\nWITH T1.BlockFloor AS BlockFloor, count(T1.BlockFloor) AS count\nRETURN COUNT(\"*\"),BlockFloor",
        "cypher_ans": [
            [
                1,
                1
            ],
            [
                1,
                2
            ],
            [
                1,
                3
            ],
            [
                1,
                4
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms does each block floor have?",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block) MATCH (T2:Room)\nWITH T1.BlockFloor AS BlockFloor, count(T1.BlockFloor) AS count\nRETURN COUNT(\"*\"),BlockFloor",
        "cypher_ans": [
            [
                1,
                1
            ],
            [
                1,
                2
            ],
            [
                1,
                3
            ],
            [
                1,
                4
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms for different block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block) MATCH (T2:Room)\nWITH count(T1.BlockCode) AS count, T1.BlockCode AS BlockCode\nRETURN COUNT(\"*\"),BlockCode",
        "cypher_ans": [
            [
                1,
                1
            ],
            [
                1,
                2
            ],
            [
                1,
                3
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms are located for each block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block) MATCH (T2:Room)\nWITH count(T1.BlockCode) AS count, T1.BlockCode AS BlockCode\nRETURN COUNT(\"*\"),BlockCode",
        "cypher_ans": [
            [
                1,
                1
            ],
            [
                1,
                2
            ],
            [
                1,
                3
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of medications prescribed for each brand.",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH T1.Name AS Name, count(T1.Brand) AS count\nRETURN COUNT(\"*\"),Name",
        "cypher_ans": [
            [
                1,
                "Procrastin-X"
            ],
            [
                1,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many medications are prescribed for each brand?",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH T1.Name AS Name, count(T1.Brand) AS count\nRETURN COUNT(\"*\"),Name",
        "cypher_ans": [
            [
                1,
                "Procrastin-X"
            ],
            [
                1,
                "Thesisin"
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "what are name and phone number of patients who had more than one appointment?",
        "sql_query": "SELECT name ,  phone FROM appointment AS T1 JOIN patient AS T2 ON T1.patient  =  T2.ssn GROUP BY T1.patient HAVING count(*)  >  1",
        "parsed_sql": {
            "select": [
                {
                    "value": "name"
                },
                {
                    "value": "phone"
                }
            ],
            "from": [
                {
                    "value": "appointment",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.patient",
                            "T2.ssn"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.patient"
            },
            "having": {
                "gt": [
                    {
                        "count": "*"
                    },
                    1
                ]
            }
        },
        "sql_ans": [
            [
                "John Smith",
                "555-0256"
            ],
            [
                "Grace Ritchie",
                "555-0512"
            ],
            [
                "Dennis Doe",
                "555-2048"
            ]
        ],
        "cypher_query": "MATCH (T1:Appointment) MATCH (T2:Patient)\nWITH COUNT(\"*\") AS COUNT, T2.Name AS Name, T2.Phone AS Phone\nWHERE COUNT > 1\nRETURN Name,Phone",
        "cypher_ans": [
            [
                "John Smith",
                "555-0256"
            ],
            [
                "Grace Ritchie",
                "555-0512"
            ],
            [
                "Random J. Patient",
                "555-1204"
            ],
            [
                "Dennis Doe",
                "555-2048"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which patients made more than one appointment? Tell me the name and phone number of these patients.",
        "sql_query": "SELECT name ,  phone FROM appointment AS T1 JOIN patient AS T2 ON T1.patient  =  T2.ssn GROUP BY T1.patient HAVING count(*)  >  1",
        "parsed_sql": {
            "select": [
                {
                    "value": "name"
                },
                {
                    "value": "phone"
                }
            ],
            "from": [
                {
                    "value": "appointment",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.patient",
                            "T2.ssn"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.patient"
            },
            "having": {
                "gt": [
                    {
                        "count": "*"
                    },
                    1
                ]
            }
        },
        "sql_ans": [
            [
                "John Smith",
                "555-0256"
            ],
            [
                "Grace Ritchie",
                "555-0512"
            ],
            [
                "Dennis Doe",
                "555-2048"
            ]
        ],
        "cypher_query": "MATCH (T1:Appointment) MATCH (T2:Patient)\nWITH COUNT(\"*\") AS COUNT, T2.Name AS Name, T2.Phone AS Phone\nWHERE COUNT > 1\nRETURN Name,Phone",
        "cypher_ans": [
            [
                "John Smith",
                "555-0256"
            ],
            [
                "Grace Ritchie",
                "555-0512"
            ],
            [
                "Random J. Patient",
                "555-1204"
            ],
            [
                "Dennis Doe",
                "555-2048"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "List the name of physicians who took some appointment.",
        "sql_query": "SELECT T2.name FROM appointment AS T1 JOIN physician AS T2 ON T1.Physician  =  T2.EmployeeID",
        "parsed_sql": {
            "select": {
                "value": "T2.name"
            },
            "from": [
                {
                    "value": "appointment",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Physician",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "John Dorian"
            ],
            [
                "Elliot Reid"
            ],
            [
                "Percival Cox"
            ],
            [
                "Christopher Turk"
            ],
            [
                "Molly Clock"
            ]
        ],
        "cypher_query": "MATCH (T1:Appointment) MATCH (T2:Physician)\nRETURN T2.Name",
        "cypher_ans": [
            [
                "John Dorian"
            ],
            [
                "Elliot Reid"
            ],
            [
                "Christopher Turk"
            ],
            [
                "Percival Cox"
            ],
            [
                "Bob Kelso"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "John Wen"
            ],
            [
                "Keith Dudemeister"
            ],
            [
                "Molly Clock"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of all the physicians who took appointments.",
        "sql_query": "SELECT T2.name FROM appointment AS T1 JOIN physician AS T2 ON T1.Physician  =  T2.EmployeeID",
        "parsed_sql": {
            "select": {
                "value": "T2.name"
            },
            "from": [
                {
                    "value": "appointment",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Physician",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "John Dorian"
            ],
            [
                "Elliot Reid"
            ],
            [
                "Percival Cox"
            ],
            [
                "Christopher Turk"
            ],
            [
                "Molly Clock"
            ]
        ],
        "cypher_query": "MATCH (T1:Appointment) MATCH (T2:Physician)\nRETURN T2.Name",
        "cypher_ans": [
            [
                "John Dorian"
            ],
            [
                "Elliot Reid"
            ],
            [
                "Christopher Turk"
            ],
            [
                "Percival Cox"
            ],
            [
                "Bob Kelso"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "John Wen"
            ],
            [
                "Keith Dudemeister"
            ],
            [
                "Molly Clock"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the patient who made the most recent appointment?",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient) MATCH (T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the patient who made the appointment with the most recent start date.",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient) MATCH (T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many patients do each physician take care of? List their names and number of patients they take care of.",
        "sql_query": "SELECT T1.name ,  count(*) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.PCP"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            }
        },
        "sql_ans": [
            [
                "John Dorian",
                1
            ],
            [
                "Elliot Reid",
                2
            ],
            [
                "Christopher Turk",
                1
            ]
        ],
        "cypher_query": "MATCH (T1:Physician) MATCH (T2:Patient)\nWITH T1.Name AS Name, count(T1.EmployeeID) AS count\nRETURN Name,COUNT(\"*\")",
        "cypher_ans": [
            [
                "John Dorian",
                1
            ],
            [
                "Elliot Reid",
                1
            ],
            [
                "Christopher Turk",
                1
            ],
            [
                "Percival Cox",
                1
            ],
            [
                "Bob Kelso",
                1
            ],
            [
                "Todd Quinlan",
                1
            ],
            [
                "John Wen",
                1
            ],
            [
                "Keith Dudemeister",
                1
            ],
            [
                "Molly Clock",
                1
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Return the name of each physician and the number of patients he or she treats.",
        "sql_query": "SELECT T1.name ,  count(*) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.PCP"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            }
        },
        "sql_ans": [
            [
                "John Dorian",
                1
            ],
            [
                "Elliot Reid",
                2
            ],
            [
                "Christopher Turk",
                1
            ]
        ],
        "cypher_query": "MATCH (T1:Physician) MATCH (T2:Patient)\nWITH T1.Name AS Name, count(T1.EmployeeID) AS count\nRETURN Name,COUNT(\"*\")",
        "cypher_ans": [
            [
                "John Dorian",
                1
            ],
            [
                "Elliot Reid",
                1
            ],
            [
                "Christopher Turk",
                1
            ],
            [
                "Percival Cox",
                1
            ],
            [
                "Bob Kelso",
                1
            ],
            [
                "Todd Quinlan",
                1
            ],
            [
                "John Wen",
                1
            ],
            [
                "Keith Dudemeister",
                1
            ],
            [
                "Molly Clock",
                1
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians who are in charge of more than one patient.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid HAVING count(*)  >  1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.PCP"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "having": {
                "gt": [
                    {
                        "count": "*"
                    },
                    1
                ]
            }
        },
        "sql_ans": [
            [
                "Elliot Reid"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician) MATCH (T2:Patient)\nWITH COUNT(\"*\") AS COUNT, T1.Name AS Name\nWHERE COUNT > 1\nRETURN Name",
        "cypher_ans": [
            [
                "John Dorian"
            ],
            [
                "Elliot Reid"
            ],
            [
                "Christopher Turk"
            ],
            [
                "Percival Cox"
            ],
            [
                "Bob Kelso"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "John Wen"
            ],
            [
                "Keith Dudemeister"
            ],
            [
                "Molly Clock"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which physicians are in charge of more than one patient? Give me their names.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid HAVING count(*)  >  1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.PCP"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "having": {
                "gt": [
                    {
                        "count": "*"
                    },
                    1
                ]
            }
        },
        "sql_ans": [
            [
                "Elliot Reid"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician) MATCH (T2:Patient)\nWITH COUNT(\"*\") AS COUNT, T1.Name AS Name\nWHERE COUNT > 1\nRETURN Name",
        "cypher_ans": [
            [
                "John Dorian"
            ],
            [
                "Elliot Reid"
            ],
            [
                "Christopher Turk"
            ],
            [
                "Percival Cox"
            ],
            [
                "Bob Kelso"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "John Wen"
            ],
            [
                "Keith Dudemeister"
            ],
            [
                "Molly Clock"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms located on each block floor.",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block) MATCH (T2:Room)\nWITH T1.BlockFloor AS BlockFloor, count(T1.BlockFloor) AS count\nRETURN COUNT(\"*\"),BlockFloor",
        "cypher_ans": [
            [
                1,
                1
            ],
            [
                1,
                2
            ],
            [
                1,
                3
            ],
            [
                1,
                4
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms does each block floor have?",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block) MATCH (T2:Room)\nWITH T1.BlockFloor AS BlockFloor, count(T1.BlockFloor) AS count\nRETURN COUNT(\"*\"),BlockFloor",
        "cypher_ans": [
            [
                1,
                1
            ],
            [
                1,
                2
            ],
            [
                1,
                3
            ],
            [
                1,
                4
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms for different block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block) MATCH (T2:Room)\nWITH count(T1.BlockCode) AS count, T1.BlockCode AS BlockCode\nRETURN COUNT(\"*\"),BlockCode",
        "cypher_ans": [
            [
                1,
                1
            ],
            [
                1,
                2
            ],
            [
                1,
                3
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms are located for each block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block) MATCH (T2:Room)\nWITH count(T1.BlockCode) AS count, T1.BlockCode AS BlockCode\nRETURN COUNT(\"*\"),BlockCode",
        "cypher_ans": [
            [
                1,
                1
            ],
            [
                1,
                2
            ],
            [
                1,
                3
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of medications prescribed for each brand.",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH T1.Name AS Name, count(T1.Brand) AS count\nRETURN COUNT(\"*\"),Name",
        "cypher_ans": [
            [
                1,
                "Procrastin-X"
            ],
            [
                1,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many medications are prescribed for each brand?",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH T1.Name AS Name, count(T1.Brand) AS count\nRETURN COUNT(\"*\"),Name",
        "cypher_ans": [
            [
                1,
                "Procrastin-X"
            ],
            [
                1,
                "Thesisin"
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "what are name and phone number of patients who had more than one appointment?",
        "sql_query": "SELECT name ,  phone FROM appointment AS T1 JOIN patient AS T2 ON T1.patient  =  T2.ssn GROUP BY T1.patient HAVING count(*)  >  1",
        "parsed_sql": {
            "select": [
                {
                    "value": "name"
                },
                {
                    "value": "phone"
                }
            ],
            "from": [
                {
                    "value": "appointment",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.patient",
                            "T2.ssn"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.patient"
            },
            "having": {
                "gt": [
                    {
                        "count": "*"
                    },
                    1
                ]
            }
        },
        "sql_ans": [
            [
                "John Smith",
                "555-0256"
            ],
            [
                "Grace Ritchie",
                "555-0512"
            ],
            [
                "Dennis Doe",
                "555-2048"
            ]
        ],
        "cypher_query": "MATCH (T1:Appointment) MATCH (T2:Patient)\nWITH T2.Phone AS Phone, T2.Name AS Name, COUNT(\"*\") AS COUNT\nWHERE COUNT > 1\nRETURN Name,Phone",
        "cypher_ans": [
            [
                "John Smith",
                "555-0256"
            ],
            [
                "Grace Ritchie",
                "555-0512"
            ],
            [
                "Random J. Patient",
                "555-1204"
            ],
            [
                "Dennis Doe",
                "555-2048"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which patients made more than one appointment? Tell me the name and phone number of these patients.",
        "sql_query": "SELECT name ,  phone FROM appointment AS T1 JOIN patient AS T2 ON T1.patient  =  T2.ssn GROUP BY T1.patient HAVING count(*)  >  1",
        "parsed_sql": {
            "select": [
                {
                    "value": "name"
                },
                {
                    "value": "phone"
                }
            ],
            "from": [
                {
                    "value": "appointment",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.patient",
                            "T2.ssn"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.patient"
            },
            "having": {
                "gt": [
                    {
                        "count": "*"
                    },
                    1
                ]
            }
        },
        "sql_ans": [
            [
                "John Smith",
                "555-0256"
            ],
            [
                "Grace Ritchie",
                "555-0512"
            ],
            [
                "Dennis Doe",
                "555-2048"
            ]
        ],
        "cypher_query": "MATCH (T1:Appointment) MATCH (T2:Patient)\nWITH T2.Phone AS Phone, T2.Name AS Name, COUNT(\"*\") AS COUNT\nWHERE COUNT > 1\nRETURN Name,Phone",
        "cypher_ans": [
            [
                "John Smith",
                "555-0256"
            ],
            [
                "Grace Ritchie",
                "555-0512"
            ],
            [
                "Random J. Patient",
                "555-1204"
            ],
            [
                "Dennis Doe",
                "555-2048"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "List the name of physicians who took some appointment.",
        "sql_query": "SELECT T2.name FROM appointment AS T1 JOIN physician AS T2 ON T1.Physician  =  T2.EmployeeID",
        "parsed_sql": {
            "select": {
                "value": "T2.name"
            },
            "from": [
                {
                    "value": "appointment",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Physician",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "John Dorian"
            ],
            [
                "Elliot Reid"
            ],
            [
                "Percival Cox"
            ],
            [
                "Christopher Turk"
            ],
            [
                "Molly Clock"
            ]
        ],
        "cypher_query": "MATCH (T1:Appointment) MATCH (T2:Physician)\nRETURN T2.Name",
        "cypher_ans": [
            [
                "John Dorian"
            ],
            [
                "Elliot Reid"
            ],
            [
                "Christopher Turk"
            ],
            [
                "Percival Cox"
            ],
            [
                "Bob Kelso"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "John Wen"
            ],
            [
                "Keith Dudemeister"
            ],
            [
                "Molly Clock"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of all the physicians who took appointments.",
        "sql_query": "SELECT T2.name FROM appointment AS T1 JOIN physician AS T2 ON T1.Physician  =  T2.EmployeeID",
        "parsed_sql": {
            "select": {
                "value": "T2.name"
            },
            "from": [
                {
                    "value": "appointment",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Physician",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "John Dorian"
            ],
            [
                "Elliot Reid"
            ],
            [
                "Percival Cox"
            ],
            [
                "Christopher Turk"
            ],
            [
                "Molly Clock"
            ]
        ],
        "cypher_query": "MATCH (T1:Appointment) MATCH (T2:Physician)\nRETURN T2.Name",
        "cypher_ans": [
            [
                "John Dorian"
            ],
            [
                "Elliot Reid"
            ],
            [
                "Christopher Turk"
            ],
            [
                "Percival Cox"
            ],
            [
                "Bob Kelso"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "John Wen"
            ],
            [
                "Keith Dudemeister"
            ],
            [
                "Molly Clock"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the patient who made the most recent appointment?",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient) MATCH (T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the patient who made the appointment with the most recent start date.",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient) MATCH (T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many patients do each physician take care of? List their names and number of patients they take care of.",
        "sql_query": "SELECT T1.name ,  count(*) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.PCP"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            }
        },
        "sql_ans": [
            [
                "John Dorian",
                1
            ],
            [
                "Elliot Reid",
                2
            ],
            [
                "Christopher Turk",
                1
            ]
        ],
        "cypher_query": "MATCH (T1:Physician) MATCH (T2:Patient)\nWITH count(T1.EmployeeID) AS count, T1.Name AS Name\nRETURN Name,COUNT(\"*\")",
        "cypher_ans": [
            [
                "John Dorian",
                1
            ],
            [
                "Elliot Reid",
                1
            ],
            [
                "Christopher Turk",
                1
            ],
            [
                "Percival Cox",
                1
            ],
            [
                "Bob Kelso",
                1
            ],
            [
                "Todd Quinlan",
                1
            ],
            [
                "John Wen",
                1
            ],
            [
                "Keith Dudemeister",
                1
            ],
            [
                "Molly Clock",
                1
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Return the name of each physician and the number of patients he or she treats.",
        "sql_query": "SELECT T1.name ,  count(*) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.PCP"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            }
        },
        "sql_ans": [
            [
                "John Dorian",
                1
            ],
            [
                "Elliot Reid",
                2
            ],
            [
                "Christopher Turk",
                1
            ]
        ],
        "cypher_query": "MATCH (T1:Physician) MATCH (T2:Patient)\nWITH count(T1.EmployeeID) AS count, T1.Name AS Name\nRETURN Name,COUNT(\"*\")",
        "cypher_ans": [
            [
                "John Dorian",
                1
            ],
            [
                "Elliot Reid",
                1
            ],
            [
                "Christopher Turk",
                1
            ],
            [
                "Percival Cox",
                1
            ],
            [
                "Bob Kelso",
                1
            ],
            [
                "Todd Quinlan",
                1
            ],
            [
                "John Wen",
                1
            ],
            [
                "Keith Dudemeister",
                1
            ],
            [
                "Molly Clock",
                1
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians who are in charge of more than one patient.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid HAVING count(*)  >  1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.PCP"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "having": {
                "gt": [
                    {
                        "count": "*"
                    },
                    1
                ]
            }
        },
        "sql_ans": [
            [
                "Elliot Reid"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician) MATCH (T2:Patient)\nWITH COUNT(\"*\") AS COUNT, T1.Name AS Name\nWHERE COUNT > 1\nRETURN Name",
        "cypher_ans": [
            [
                "John Dorian"
            ],
            [
                "Elliot Reid"
            ],
            [
                "Christopher Turk"
            ],
            [
                "Percival Cox"
            ],
            [
                "Bob Kelso"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "John Wen"
            ],
            [
                "Keith Dudemeister"
            ],
            [
                "Molly Clock"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which physicians are in charge of more than one patient? Give me their names.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid HAVING count(*)  >  1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.PCP"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "having": {
                "gt": [
                    {
                        "count": "*"
                    },
                    1
                ]
            }
        },
        "sql_ans": [
            [
                "Elliot Reid"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician) MATCH (T2:Patient)\nWITH COUNT(\"*\") AS COUNT, T1.Name AS Name\nWHERE COUNT > 1\nRETURN Name",
        "cypher_ans": [
            [
                "John Dorian"
            ],
            [
                "Elliot Reid"
            ],
            [
                "Christopher Turk"
            ],
            [
                "Percival Cox"
            ],
            [
                "Bob Kelso"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "John Wen"
            ],
            [
                "Keith Dudemeister"
            ],
            [
                "Molly Clock"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms located on each block floor.",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block) MATCH (T2:Room)\nWITH T1.BlockFloor AS BlockFloor, count(T1.BlockFloor) AS count\nRETURN COUNT(\"*\"),BlockFloor",
        "cypher_ans": [
            [
                1,
                1
            ],
            [
                1,
                2
            ],
            [
                1,
                3
            ],
            [
                1,
                4
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms does each block floor have?",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block) MATCH (T2:Room)\nWITH T1.BlockFloor AS BlockFloor, count(T1.BlockFloor) AS count\nRETURN COUNT(\"*\"),BlockFloor",
        "cypher_ans": [
            [
                1,
                1
            ],
            [
                1,
                2
            ],
            [
                1,
                3
            ],
            [
                1,
                4
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms for different block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block) MATCH (T2:Room)\nWITH T1.BlockCode AS BlockCode, count(T1.BlockCode) AS count\nRETURN COUNT(\"*\"),BlockCode",
        "cypher_ans": [
            [
                1,
                1
            ],
            [
                1,
                2
            ],
            [
                1,
                3
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms are located for each block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block) MATCH (T2:Room)\nWITH T1.BlockCode AS BlockCode, count(T1.BlockCode) AS count\nRETURN COUNT(\"*\"),BlockCode",
        "cypher_ans": [
            [
                1,
                1
            ],
            [
                1,
                2
            ],
            [
                1,
                3
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of medications prescribed for each brand.",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH count(T1.Brand) AS count, T1.Name AS Name\nRETURN COUNT(\"*\"),Name",
        "cypher_ans": [
            [
                1,
                "Procrastin-X"
            ],
            [
                1,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many medications are prescribed for each brand?",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH count(T1.Brand) AS count, T1.Name AS Name\nRETURN COUNT(\"*\"),Name",
        "cypher_ans": [
            [
                1,
                "Procrastin-X"
            ],
            [
                1,
                "Thesisin"
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "what are name and phone number of patients who had more than one appointment?",
        "sql_query": "SELECT name ,  phone FROM appointment AS T1 JOIN patient AS T2 ON T1.patient  =  T2.ssn GROUP BY T1.patient HAVING count(*)  >  1",
        "parsed_sql": {
            "select": [
                {
                    "value": "name"
                },
                {
                    "value": "phone"
                }
            ],
            "from": [
                {
                    "value": "appointment",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.patient",
                            "T2.ssn"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.patient"
            },
            "having": {
                "gt": [
                    {
                        "count": "*"
                    },
                    1
                ]
            }
        },
        "sql_ans": [
            [
                "John Smith",
                "555-0256"
            ],
            [
                "Grace Ritchie",
                "555-0512"
            ],
            [
                "Dennis Doe",
                "555-2048"
            ]
        ],
        "cypher_query": "MATCH (T1:Appointment) MATCH (T2:Patient)\nWITH T2.Name AS Name, COUNT(\"*\") AS COUNT, T2.Phone AS Phone\nWHERE COUNT > 1\nRETURN Name,Phone",
        "cypher_ans": [
            [
                "John Smith",
                "555-0256"
            ],
            [
                "Grace Ritchie",
                "555-0512"
            ],
            [
                "Random J. Patient",
                "555-1204"
            ],
            [
                "Dennis Doe",
                "555-2048"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which patients made more than one appointment? Tell me the name and phone number of these patients.",
        "sql_query": "SELECT name ,  phone FROM appointment AS T1 JOIN patient AS T2 ON T1.patient  =  T2.ssn GROUP BY T1.patient HAVING count(*)  >  1",
        "parsed_sql": {
            "select": [
                {
                    "value": "name"
                },
                {
                    "value": "phone"
                }
            ],
            "from": [
                {
                    "value": "appointment",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.patient",
                            "T2.ssn"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.patient"
            },
            "having": {
                "gt": [
                    {
                        "count": "*"
                    },
                    1
                ]
            }
        },
        "sql_ans": [
            [
                "John Smith",
                "555-0256"
            ],
            [
                "Grace Ritchie",
                "555-0512"
            ],
            [
                "Dennis Doe",
                "555-2048"
            ]
        ],
        "cypher_query": "MATCH (T1:Appointment) MATCH (T2:Patient)\nWITH T2.Name AS Name, COUNT(\"*\") AS COUNT, T2.Phone AS Phone\nWHERE COUNT > 1\nRETURN Name,Phone",
        "cypher_ans": [
            [
                "John Smith",
                "555-0256"
            ],
            [
                "Grace Ritchie",
                "555-0512"
            ],
            [
                "Random J. Patient",
                "555-1204"
            ],
            [
                "Dennis Doe",
                "555-2048"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "List the name of physicians who took some appointment.",
        "sql_query": "SELECT T2.name FROM appointment AS T1 JOIN physician AS T2 ON T1.Physician  =  T2.EmployeeID",
        "parsed_sql": {
            "select": {
                "value": "T2.name"
            },
            "from": [
                {
                    "value": "appointment",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Physician",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "John Dorian"
            ],
            [
                "Elliot Reid"
            ],
            [
                "Percival Cox"
            ],
            [
                "Christopher Turk"
            ],
            [
                "Molly Clock"
            ]
        ],
        "cypher_query": "MATCH (T1:Appointment) MATCH (T2:Physician)\nRETURN T2.Name",
        "cypher_ans": [
            [
                "John Dorian"
            ],
            [
                "Elliot Reid"
            ],
            [
                "Christopher Turk"
            ],
            [
                "Percival Cox"
            ],
            [
                "Bob Kelso"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "John Wen"
            ],
            [
                "Keith Dudemeister"
            ],
            [
                "Molly Clock"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of all the physicians who took appointments.",
        "sql_query": "SELECT T2.name FROM appointment AS T1 JOIN physician AS T2 ON T1.Physician  =  T2.EmployeeID",
        "parsed_sql": {
            "select": {
                "value": "T2.name"
            },
            "from": [
                {
                    "value": "appointment",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Physician",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "John Dorian"
            ],
            [
                "Elliot Reid"
            ],
            [
                "Percival Cox"
            ],
            [
                "Christopher Turk"
            ],
            [
                "Molly Clock"
            ]
        ],
        "cypher_query": "MATCH (T1:Appointment) MATCH (T2:Physician)\nRETURN T2.Name",
        "cypher_ans": [
            [
                "John Dorian"
            ],
            [
                "Elliot Reid"
            ],
            [
                "Christopher Turk"
            ],
            [
                "Percival Cox"
            ],
            [
                "Bob Kelso"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "John Wen"
            ],
            [
                "Keith Dudemeister"
            ],
            [
                "Molly Clock"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the patient who made the most recent appointment?",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient) MATCH (T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the patient who made the appointment with the most recent start date.",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient) MATCH (T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many patients do each physician take care of? List their names and number of patients they take care of.",
        "sql_query": "SELECT T1.name ,  count(*) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.PCP"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            }
        },
        "sql_ans": [
            [
                "John Dorian",
                1
            ],
            [
                "Elliot Reid",
                2
            ],
            [
                "Christopher Turk",
                1
            ]
        ],
        "cypher_query": "MATCH (T1:Physician) MATCH (T2:Patient)\nWITH T1.Name AS Name, count(T1.EmployeeID) AS count\nRETURN Name,COUNT(\"*\")",
        "cypher_ans": [
            [
                "John Dorian",
                1
            ],
            [
                "Elliot Reid",
                1
            ],
            [
                "Christopher Turk",
                1
            ],
            [
                "Percival Cox",
                1
            ],
            [
                "Bob Kelso",
                1
            ],
            [
                "Todd Quinlan",
                1
            ],
            [
                "John Wen",
                1
            ],
            [
                "Keith Dudemeister",
                1
            ],
            [
                "Molly Clock",
                1
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Return the name of each physician and the number of patients he or she treats.",
        "sql_query": "SELECT T1.name ,  count(*) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.PCP"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            }
        },
        "sql_ans": [
            [
                "John Dorian",
                1
            ],
            [
                "Elliot Reid",
                2
            ],
            [
                "Christopher Turk",
                1
            ]
        ],
        "cypher_query": "MATCH (T1:Physician) MATCH (T2:Patient)\nWITH T1.Name AS Name, count(T1.EmployeeID) AS count\nRETURN Name,COUNT(\"*\")",
        "cypher_ans": [
            [
                "John Dorian",
                1
            ],
            [
                "Elliot Reid",
                1
            ],
            [
                "Christopher Turk",
                1
            ],
            [
                "Percival Cox",
                1
            ],
            [
                "Bob Kelso",
                1
            ],
            [
                "Todd Quinlan",
                1
            ],
            [
                "John Wen",
                1
            ],
            [
                "Keith Dudemeister",
                1
            ],
            [
                "Molly Clock",
                1
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians who are in charge of more than one patient.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid HAVING count(*)  >  1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.PCP"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "having": {
                "gt": [
                    {
                        "count": "*"
                    },
                    1
                ]
            }
        },
        "sql_ans": [
            [
                "Elliot Reid"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician) MATCH (T2:Patient)\nWITH T1.Name AS Name, COUNT(\"*\") AS COUNT\nWHERE COUNT > 1\nRETURN Name",
        "cypher_ans": [
            [
                "John Dorian"
            ],
            [
                "Elliot Reid"
            ],
            [
                "Christopher Turk"
            ],
            [
                "Percival Cox"
            ],
            [
                "Bob Kelso"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "John Wen"
            ],
            [
                "Keith Dudemeister"
            ],
            [
                "Molly Clock"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which physicians are in charge of more than one patient? Give me their names.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid HAVING count(*)  >  1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.PCP"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "having": {
                "gt": [
                    {
                        "count": "*"
                    },
                    1
                ]
            }
        },
        "sql_ans": [
            [
                "Elliot Reid"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician) MATCH (T2:Patient)\nWITH T1.Name AS Name, COUNT(\"*\") AS COUNT\nWHERE COUNT > 1\nRETURN Name",
        "cypher_ans": [
            [
                "John Dorian"
            ],
            [
                "Elliot Reid"
            ],
            [
                "Christopher Turk"
            ],
            [
                "Percival Cox"
            ],
            [
                "Bob Kelso"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "John Wen"
            ],
            [
                "Keith Dudemeister"
            ],
            [
                "Molly Clock"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms located on each block floor.",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block) MATCH (T2:Room)\nWITH count(T1.BlockFloor) AS count, T1.BlockFloor AS BlockFloor\nRETURN COUNT(\"*\"),BlockFloor",
        "cypher_ans": [
            [
                1,
                1
            ],
            [
                1,
                2
            ],
            [
                1,
                3
            ],
            [
                1,
                4
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms does each block floor have?",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block) MATCH (T2:Room)\nWITH count(T1.BlockFloor) AS count, T1.BlockFloor AS BlockFloor\nRETURN COUNT(\"*\"),BlockFloor",
        "cypher_ans": [
            [
                1,
                1
            ],
            [
                1,
                2
            ],
            [
                1,
                3
            ],
            [
                1,
                4
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms for different block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block) MATCH (T2:Room)\nWITH count(T1.BlockCode) AS count, T1.BlockCode AS BlockCode\nRETURN COUNT(\"*\"),BlockCode",
        "cypher_ans": [
            [
                1,
                1
            ],
            [
                1,
                2
            ],
            [
                1,
                3
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms are located for each block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block) MATCH (T2:Room)\nWITH count(T1.BlockCode) AS count, T1.BlockCode AS BlockCode\nRETURN COUNT(\"*\"),BlockCode",
        "cypher_ans": [
            [
                1,
                1
            ],
            [
                1,
                2
            ],
            [
                1,
                3
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of medications prescribed for each brand.",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH T1.Name AS Name, count(T1.Brand) AS count\nRETURN COUNT(\"*\"),Name",
        "cypher_ans": [
            [
                1,
                "Procrastin-X"
            ],
            [
                1,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many medications are prescribed for each brand?",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH T1.Name AS Name, count(T1.Brand) AS count\nRETURN COUNT(\"*\"),Name",
        "cypher_ans": [
            [
                1,
                "Procrastin-X"
            ],
            [
                1,
                "Thesisin"
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "what are name and phone number of patients who had more than one appointment?",
        "sql_query": "SELECT name ,  phone FROM appointment AS T1 JOIN patient AS T2 ON T1.patient  =  T2.ssn GROUP BY T1.patient HAVING count(*)  >  1",
        "parsed_sql": {
            "select": [
                {
                    "value": "name"
                },
                {
                    "value": "phone"
                }
            ],
            "from": [
                {
                    "value": "appointment",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.patient",
                            "T2.ssn"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.patient"
            },
            "having": {
                "gt": [
                    {
                        "count": "*"
                    },
                    1
                ]
            }
        },
        "sql_ans": [
            [
                "John Smith",
                "555-0256"
            ],
            [
                "Grace Ritchie",
                "555-0512"
            ],
            [
                "Dennis Doe",
                "555-2048"
            ]
        ],
        "cypher_query": "MATCH (T1:Appointment) MATCH (T2:Patient)\nWITH T2.Phone AS Phone, COUNT(\"*\") AS COUNT, T2.Name AS Name\nWHERE COUNT > 1\nRETURN Name,Phone",
        "cypher_ans": [
            [
                "John Smith",
                "555-0256"
            ],
            [
                "Grace Ritchie",
                "555-0512"
            ],
            [
                "Random J. Patient",
                "555-1204"
            ],
            [
                "Dennis Doe",
                "555-2048"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which patients made more than one appointment? Tell me the name and phone number of these patients.",
        "sql_query": "SELECT name ,  phone FROM appointment AS T1 JOIN patient AS T2 ON T1.patient  =  T2.ssn GROUP BY T1.patient HAVING count(*)  >  1",
        "parsed_sql": {
            "select": [
                {
                    "value": "name"
                },
                {
                    "value": "phone"
                }
            ],
            "from": [
                {
                    "value": "appointment",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.patient",
                            "T2.ssn"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.patient"
            },
            "having": {
                "gt": [
                    {
                        "count": "*"
                    },
                    1
                ]
            }
        },
        "sql_ans": [
            [
                "John Smith",
                "555-0256"
            ],
            [
                "Grace Ritchie",
                "555-0512"
            ],
            [
                "Dennis Doe",
                "555-2048"
            ]
        ],
        "cypher_query": "MATCH (T1:Appointment) MATCH (T2:Patient)\nWITH T2.Phone AS Phone, COUNT(\"*\") AS COUNT, T2.Name AS Name\nWHERE COUNT > 1\nRETURN Name,Phone",
        "cypher_ans": [
            [
                "John Smith",
                "555-0256"
            ],
            [
                "Grace Ritchie",
                "555-0512"
            ],
            [
                "Random J. Patient",
                "555-1204"
            ],
            [
                "Dennis Doe",
                "555-2048"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "List the name of physicians who took some appointment.",
        "sql_query": "SELECT T2.name FROM appointment AS T1 JOIN physician AS T2 ON T1.Physician  =  T2.EmployeeID",
        "parsed_sql": {
            "select": {
                "value": "T2.name"
            },
            "from": [
                {
                    "value": "appointment",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Physician",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "John Dorian"
            ],
            [
                "Elliot Reid"
            ],
            [
                "Percival Cox"
            ],
            [
                "Christopher Turk"
            ],
            [
                "Molly Clock"
            ]
        ],
        "cypher_query": "MATCH (T1:Appointment) MATCH (T2:Physician)\nRETURN T2.Name",
        "cypher_ans": [
            [
                "John Dorian"
            ],
            [
                "Elliot Reid"
            ],
            [
                "Christopher Turk"
            ],
            [
                "Percival Cox"
            ],
            [
                "Bob Kelso"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "John Wen"
            ],
            [
                "Keith Dudemeister"
            ],
            [
                "Molly Clock"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of all the physicians who took appointments.",
        "sql_query": "SELECT T2.name FROM appointment AS T1 JOIN physician AS T2 ON T1.Physician  =  T2.EmployeeID",
        "parsed_sql": {
            "select": {
                "value": "T2.name"
            },
            "from": [
                {
                    "value": "appointment",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Physician",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "John Dorian"
            ],
            [
                "Elliot Reid"
            ],
            [
                "Percival Cox"
            ],
            [
                "Christopher Turk"
            ],
            [
                "Molly Clock"
            ]
        ],
        "cypher_query": "MATCH (T1:Appointment) MATCH (T2:Physician)\nRETURN T2.Name",
        "cypher_ans": [
            [
                "John Dorian"
            ],
            [
                "Elliot Reid"
            ],
            [
                "Christopher Turk"
            ],
            [
                "Percival Cox"
            ],
            [
                "Bob Kelso"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "John Wen"
            ],
            [
                "Keith Dudemeister"
            ],
            [
                "Molly Clock"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the patient who made the most recent appointment?",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient) MATCH (T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the patient who made the appointment with the most recent start date.",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient) MATCH (T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many patients do each physician take care of? List their names and number of patients they take care of.",
        "sql_query": "SELECT T1.name ,  count(*) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.PCP"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            }
        },
        "sql_ans": [
            [
                "John Dorian",
                1
            ],
            [
                "Elliot Reid",
                2
            ],
            [
                "Christopher Turk",
                1
            ]
        ],
        "cypher_query": "MATCH (T1:Physician) MATCH (T2:Patient)\nWITH T1.Name AS Name, count(T1.EmployeeID) AS count\nRETURN Name,COUNT(\"*\")",
        "cypher_ans": [
            [
                "John Dorian",
                1
            ],
            [
                "Elliot Reid",
                1
            ],
            [
                "Christopher Turk",
                1
            ],
            [
                "Percival Cox",
                1
            ],
            [
                "Bob Kelso",
                1
            ],
            [
                "Todd Quinlan",
                1
            ],
            [
                "John Wen",
                1
            ],
            [
                "Keith Dudemeister",
                1
            ],
            [
                "Molly Clock",
                1
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Return the name of each physician and the number of patients he or she treats.",
        "sql_query": "SELECT T1.name ,  count(*) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.PCP"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            }
        },
        "sql_ans": [
            [
                "John Dorian",
                1
            ],
            [
                "Elliot Reid",
                2
            ],
            [
                "Christopher Turk",
                1
            ]
        ],
        "cypher_query": "MATCH (T1:Physician) MATCH (T2:Patient)\nWITH T1.Name AS Name, count(T1.EmployeeID) AS count\nRETURN Name,COUNT(\"*\")",
        "cypher_ans": [
            [
                "John Dorian",
                1
            ],
            [
                "Elliot Reid",
                1
            ],
            [
                "Christopher Turk",
                1
            ],
            [
                "Percival Cox",
                1
            ],
            [
                "Bob Kelso",
                1
            ],
            [
                "Todd Quinlan",
                1
            ],
            [
                "John Wen",
                1
            ],
            [
                "Keith Dudemeister",
                1
            ],
            [
                "Molly Clock",
                1
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians who are in charge of more than one patient.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid HAVING count(*)  >  1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.PCP"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "having": {
                "gt": [
                    {
                        "count": "*"
                    },
                    1
                ]
            }
        },
        "sql_ans": [
            [
                "Elliot Reid"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician) MATCH (T2:Patient)\nWITH T1.Name AS Name, COUNT(\"*\") AS COUNT\nWHERE COUNT > 1\nRETURN Name",
        "cypher_ans": [
            [
                "John Dorian"
            ],
            [
                "Elliot Reid"
            ],
            [
                "Christopher Turk"
            ],
            [
                "Percival Cox"
            ],
            [
                "Bob Kelso"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "John Wen"
            ],
            [
                "Keith Dudemeister"
            ],
            [
                "Molly Clock"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which physicians are in charge of more than one patient? Give me their names.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid HAVING count(*)  >  1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.PCP"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "having": {
                "gt": [
                    {
                        "count": "*"
                    },
                    1
                ]
            }
        },
        "sql_ans": [
            [
                "Elliot Reid"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician) MATCH (T2:Patient)\nWITH T1.Name AS Name, COUNT(\"*\") AS COUNT\nWHERE COUNT > 1\nRETURN Name",
        "cypher_ans": [
            [
                "John Dorian"
            ],
            [
                "Elliot Reid"
            ],
            [
                "Christopher Turk"
            ],
            [
                "Percival Cox"
            ],
            [
                "Bob Kelso"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "John Wen"
            ],
            [
                "Keith Dudemeister"
            ],
            [
                "Molly Clock"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms located on each block floor.",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block) MATCH (T2:Room)\nWITH count(T1.BlockFloor) AS count, T1.BlockFloor AS BlockFloor\nRETURN COUNT(\"*\"),BlockFloor",
        "cypher_ans": [
            [
                1,
                1
            ],
            [
                1,
                2
            ],
            [
                1,
                3
            ],
            [
                1,
                4
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms does each block floor have?",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block) MATCH (T2:Room)\nWITH count(T1.BlockFloor) AS count, T1.BlockFloor AS BlockFloor\nRETURN COUNT(\"*\"),BlockFloor",
        "cypher_ans": [
            [
                1,
                1
            ],
            [
                1,
                2
            ],
            [
                1,
                3
            ],
            [
                1,
                4
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms for different block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block) MATCH (T2:Room)\nWITH count(T1.BlockCode) AS count, T1.BlockCode AS BlockCode\nRETURN COUNT(\"*\"),BlockCode",
        "cypher_ans": [
            [
                1,
                1
            ],
            [
                1,
                2
            ],
            [
                1,
                3
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms are located for each block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block) MATCH (T2:Room)\nWITH count(T1.BlockCode) AS count, T1.BlockCode AS BlockCode\nRETURN COUNT(\"*\"),BlockCode",
        "cypher_ans": [
            [
                1,
                1
            ],
            [
                1,
                2
            ],
            [
                1,
                3
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of medications prescribed for each brand.",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH count(T1.Brand) AS count, T1.Name AS Name\nRETURN COUNT(\"*\"),Name",
        "cypher_ans": [
            [
                1,
                "Procrastin-X"
            ],
            [
                1,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many medications are prescribed for each brand?",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH count(T1.Brand) AS count, T1.Name AS Name\nRETURN COUNT(\"*\"),Name",
        "cypher_ans": [
            [
                1,
                "Procrastin-X"
            ],
            [
                1,
                "Thesisin"
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "what are name and phone number of patients who had more than one appointment?",
        "sql_query": "SELECT name ,  phone FROM appointment AS T1 JOIN patient AS T2 ON T1.patient  =  T2.ssn GROUP BY T1.patient HAVING count(*)  >  1",
        "parsed_sql": {
            "select": [
                {
                    "value": "name"
                },
                {
                    "value": "phone"
                }
            ],
            "from": [
                {
                    "value": "appointment",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.patient",
                            "T2.ssn"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.patient"
            },
            "having": {
                "gt": [
                    {
                        "count": "*"
                    },
                    1
                ]
            }
        },
        "sql_ans": [
            [
                "John Smith",
                "555-0256"
            ],
            [
                "Grace Ritchie",
                "555-0512"
            ],
            [
                "Dennis Doe",
                "555-2048"
            ]
        ],
        "cypher_query": "MATCH (T1:Appointment) MATCH (T2:Patient)\nWITH T2.Phone AS Phone, COUNT(\"*\") AS COUNT, T2.Name AS Name\nWHERE COUNT > 1\nRETURN Name,Phone",
        "cypher_ans": [
            [
                "John Smith",
                "555-0256"
            ],
            [
                "Grace Ritchie",
                "555-0512"
            ],
            [
                "Random J. Patient",
                "555-1204"
            ],
            [
                "Dennis Doe",
                "555-2048"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which patients made more than one appointment? Tell me the name and phone number of these patients.",
        "sql_query": "SELECT name ,  phone FROM appointment AS T1 JOIN patient AS T2 ON T1.patient  =  T2.ssn GROUP BY T1.patient HAVING count(*)  >  1",
        "parsed_sql": {
            "select": [
                {
                    "value": "name"
                },
                {
                    "value": "phone"
                }
            ],
            "from": [
                {
                    "value": "appointment",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.patient",
                            "T2.ssn"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.patient"
            },
            "having": {
                "gt": [
                    {
                        "count": "*"
                    },
                    1
                ]
            }
        },
        "sql_ans": [
            [
                "John Smith",
                "555-0256"
            ],
            [
                "Grace Ritchie",
                "555-0512"
            ],
            [
                "Dennis Doe",
                "555-2048"
            ]
        ],
        "cypher_query": "MATCH (T1:Appointment) MATCH (T2:Patient)\nWITH T2.Phone AS Phone, COUNT(\"*\") AS COUNT, T2.Name AS Name\nWHERE COUNT > 1\nRETURN Name,Phone",
        "cypher_ans": [
            [
                "John Smith",
                "555-0256"
            ],
            [
                "Grace Ritchie",
                "555-0512"
            ],
            [
                "Random J. Patient",
                "555-1204"
            ],
            [
                "Dennis Doe",
                "555-2048"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "List the name of physicians who took some appointment.",
        "sql_query": "SELECT T2.name FROM appointment AS T1 JOIN physician AS T2 ON T1.Physician  =  T2.EmployeeID",
        "parsed_sql": {
            "select": {
                "value": "T2.name"
            },
            "from": [
                {
                    "value": "appointment",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Physician",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "John Dorian"
            ],
            [
                "Elliot Reid"
            ],
            [
                "Percival Cox"
            ],
            [
                "Christopher Turk"
            ],
            [
                "Molly Clock"
            ]
        ],
        "cypher_query": "MATCH (T1:Appointment) MATCH (T2:Physician)\nRETURN T2.Name",
        "cypher_ans": [
            [
                "John Dorian"
            ],
            [
                "Elliot Reid"
            ],
            [
                "Christopher Turk"
            ],
            [
                "Percival Cox"
            ],
            [
                "Bob Kelso"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "John Wen"
            ],
            [
                "Keith Dudemeister"
            ],
            [
                "Molly Clock"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of all the physicians who took appointments.",
        "sql_query": "SELECT T2.name FROM appointment AS T1 JOIN physician AS T2 ON T1.Physician  =  T2.EmployeeID",
        "parsed_sql": {
            "select": {
                "value": "T2.name"
            },
            "from": [
                {
                    "value": "appointment",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Physician",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "John Dorian"
            ],
            [
                "Elliot Reid"
            ],
            [
                "Percival Cox"
            ],
            [
                "Christopher Turk"
            ],
            [
                "Molly Clock"
            ]
        ],
        "cypher_query": "MATCH (T1:Appointment) MATCH (T2:Physician)\nRETURN T2.Name",
        "cypher_ans": [
            [
                "John Dorian"
            ],
            [
                "Elliot Reid"
            ],
            [
                "Christopher Turk"
            ],
            [
                "Percival Cox"
            ],
            [
                "Bob Kelso"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "John Wen"
            ],
            [
                "Keith Dudemeister"
            ],
            [
                "Molly Clock"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the patient who made the most recent appointment?",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient) MATCH (T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the patient who made the appointment with the most recent start date.",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient) MATCH (T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many patients do each physician take care of? List their names and number of patients they take care of.",
        "sql_query": "SELECT T1.name ,  count(*) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.PCP"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            }
        },
        "sql_ans": [
            [
                "John Dorian",
                1
            ],
            [
                "Elliot Reid",
                2
            ],
            [
                "Christopher Turk",
                1
            ]
        ],
        "cypher_query": "MATCH (T1:Physician) MATCH (T2:Patient)\nWITH count(T1.EmployeeID) AS count, T1.Name AS Name\nRETURN Name,COUNT(\"*\")",
        "cypher_ans": [
            [
                "John Dorian",
                1
            ],
            [
                "Elliot Reid",
                1
            ],
            [
                "Christopher Turk",
                1
            ],
            [
                "Percival Cox",
                1
            ],
            [
                "Bob Kelso",
                1
            ],
            [
                "Todd Quinlan",
                1
            ],
            [
                "John Wen",
                1
            ],
            [
                "Keith Dudemeister",
                1
            ],
            [
                "Molly Clock",
                1
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Return the name of each physician and the number of patients he or she treats.",
        "sql_query": "SELECT T1.name ,  count(*) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.PCP"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            }
        },
        "sql_ans": [
            [
                "John Dorian",
                1
            ],
            [
                "Elliot Reid",
                2
            ],
            [
                "Christopher Turk",
                1
            ]
        ],
        "cypher_query": "MATCH (T1:Physician) MATCH (T2:Patient)\nWITH count(T1.EmployeeID) AS count, T1.Name AS Name\nRETURN Name,COUNT(\"*\")",
        "cypher_ans": [
            [
                "John Dorian",
                1
            ],
            [
                "Elliot Reid",
                1
            ],
            [
                "Christopher Turk",
                1
            ],
            [
                "Percival Cox",
                1
            ],
            [
                "Bob Kelso",
                1
            ],
            [
                "Todd Quinlan",
                1
            ],
            [
                "John Wen",
                1
            ],
            [
                "Keith Dudemeister",
                1
            ],
            [
                "Molly Clock",
                1
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians who are in charge of more than one patient.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid HAVING count(*)  >  1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.PCP"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "having": {
                "gt": [
                    {
                        "count": "*"
                    },
                    1
                ]
            }
        },
        "sql_ans": [
            [
                "Elliot Reid"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician) MATCH (T2:Patient)\nWITH COUNT(\"*\") AS COUNT, T1.Name AS Name\nWHERE COUNT > 1\nRETURN Name",
        "cypher_ans": [
            [
                "John Dorian"
            ],
            [
                "Elliot Reid"
            ],
            [
                "Christopher Turk"
            ],
            [
                "Percival Cox"
            ],
            [
                "Bob Kelso"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "John Wen"
            ],
            [
                "Keith Dudemeister"
            ],
            [
                "Molly Clock"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which physicians are in charge of more than one patient? Give me their names.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid HAVING count(*)  >  1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.PCP"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "having": {
                "gt": [
                    {
                        "count": "*"
                    },
                    1
                ]
            }
        },
        "sql_ans": [
            [
                "Elliot Reid"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician) MATCH (T2:Patient)\nWITH COUNT(\"*\") AS COUNT, T1.Name AS Name\nWHERE COUNT > 1\nRETURN Name",
        "cypher_ans": [
            [
                "John Dorian"
            ],
            [
                "Elliot Reid"
            ],
            [
                "Christopher Turk"
            ],
            [
                "Percival Cox"
            ],
            [
                "Bob Kelso"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "John Wen"
            ],
            [
                "Keith Dudemeister"
            ],
            [
                "Molly Clock"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms located on each block floor.",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block) MATCH (T2:Room)\nWITH count(T1.BlockFloor) AS count, T1.BlockFloor AS BlockFloor\nRETURN COUNT(\"*\"),BlockFloor",
        "cypher_ans": [
            [
                1,
                1
            ],
            [
                1,
                2
            ],
            [
                1,
                3
            ],
            [
                1,
                4
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms does each block floor have?",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block) MATCH (T2:Room)\nWITH count(T1.BlockFloor) AS count, T1.BlockFloor AS BlockFloor\nRETURN COUNT(\"*\"),BlockFloor",
        "cypher_ans": [
            [
                1,
                1
            ],
            [
                1,
                2
            ],
            [
                1,
                3
            ],
            [
                1,
                4
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms for different block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block) MATCH (T2:Room)\nWITH count(T1.BlockCode) AS count, T1.BlockCode AS BlockCode\nRETURN COUNT(\"*\"),BlockCode",
        "cypher_ans": [
            [
                1,
                1
            ],
            [
                1,
                2
            ],
            [
                1,
                3
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms are located for each block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block) MATCH (T2:Room)\nWITH count(T1.BlockCode) AS count, T1.BlockCode AS BlockCode\nRETURN COUNT(\"*\"),BlockCode",
        "cypher_ans": [
            [
                1,
                1
            ],
            [
                1,
                2
            ],
            [
                1,
                3
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of medications prescribed for each brand.",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH count(T1.Brand) AS count, T1.Name AS Name\nRETURN COUNT(\"*\"),Name",
        "cypher_ans": [
            [
                1,
                "Procrastin-X"
            ],
            [
                1,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many medications are prescribed for each brand?",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH count(T1.Brand) AS count, T1.Name AS Name\nRETURN COUNT(\"*\"),Name",
        "cypher_ans": [
            [
                1,
                "Procrastin-X"
            ],
            [
                1,
                "Thesisin"
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "what are name and phone number of patients who had more than one appointment?",
        "sql_query": "SELECT name ,  phone FROM appointment AS T1 JOIN patient AS T2 ON T1.patient  =  T2.ssn GROUP BY T1.patient HAVING count(*)  >  1",
        "parsed_sql": {
            "select": [
                {
                    "value": "name"
                },
                {
                    "value": "phone"
                }
            ],
            "from": [
                {
                    "value": "appointment",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.patient",
                            "T2.ssn"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.patient"
            },
            "having": {
                "gt": [
                    {
                        "count": "*"
                    },
                    1
                ]
            }
        },
        "sql_ans": [
            [
                "John Smith",
                "555-0256"
            ],
            [
                "Grace Ritchie",
                "555-0512"
            ],
            [
                "Dennis Doe",
                "555-2048"
            ]
        ],
        "cypher_query": "MATCH (T1:Appointment) MATCH (T2:Patient)\nWITH T2.Phone AS Phone, COUNT(\"*\") AS COUNT, T2.Name AS Name\nWHERE COUNT > 1\nRETURN Name,Phone",
        "cypher_ans": [
            [
                "John Smith",
                "555-0256"
            ],
            [
                "Grace Ritchie",
                "555-0512"
            ],
            [
                "Random J. Patient",
                "555-1204"
            ],
            [
                "Dennis Doe",
                "555-2048"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which patients made more than one appointment? Tell me the name and phone number of these patients.",
        "sql_query": "SELECT name ,  phone FROM appointment AS T1 JOIN patient AS T2 ON T1.patient  =  T2.ssn GROUP BY T1.patient HAVING count(*)  >  1",
        "parsed_sql": {
            "select": [
                {
                    "value": "name"
                },
                {
                    "value": "phone"
                }
            ],
            "from": [
                {
                    "value": "appointment",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.patient",
                            "T2.ssn"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.patient"
            },
            "having": {
                "gt": [
                    {
                        "count": "*"
                    },
                    1
                ]
            }
        },
        "sql_ans": [
            [
                "John Smith",
                "555-0256"
            ],
            [
                "Grace Ritchie",
                "555-0512"
            ],
            [
                "Dennis Doe",
                "555-2048"
            ]
        ],
        "cypher_query": "MATCH (T1:Appointment) MATCH (T2:Patient)\nWITH T2.Phone AS Phone, COUNT(\"*\") AS COUNT, T2.Name AS Name\nWHERE COUNT > 1\nRETURN Name,Phone",
        "cypher_ans": [
            [
                "John Smith",
                "555-0256"
            ],
            [
                "Grace Ritchie",
                "555-0512"
            ],
            [
                "Random J. Patient",
                "555-1204"
            ],
            [
                "Dennis Doe",
                "555-2048"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "List the name of physicians who took some appointment.",
        "sql_query": "SELECT T2.name FROM appointment AS T1 JOIN physician AS T2 ON T1.Physician  =  T2.EmployeeID",
        "parsed_sql": {
            "select": {
                "value": "T2.name"
            },
            "from": [
                {
                    "value": "appointment",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Physician",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "John Dorian"
            ],
            [
                "Elliot Reid"
            ],
            [
                "Percival Cox"
            ],
            [
                "Christopher Turk"
            ],
            [
                "Molly Clock"
            ]
        ],
        "cypher_query": "MATCH (T1:Appointment) MATCH (T2:Physician)\nRETURN T2.Name",
        "cypher_ans": [
            [
                "John Dorian"
            ],
            [
                "Elliot Reid"
            ],
            [
                "Christopher Turk"
            ],
            [
                "Percival Cox"
            ],
            [
                "Bob Kelso"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "John Wen"
            ],
            [
                "Keith Dudemeister"
            ],
            [
                "Molly Clock"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of all the physicians who took appointments.",
        "sql_query": "SELECT T2.name FROM appointment AS T1 JOIN physician AS T2 ON T1.Physician  =  T2.EmployeeID",
        "parsed_sql": {
            "select": {
                "value": "T2.name"
            },
            "from": [
                {
                    "value": "appointment",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Physician",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "John Dorian"
            ],
            [
                "Elliot Reid"
            ],
            [
                "Percival Cox"
            ],
            [
                "Christopher Turk"
            ],
            [
                "Molly Clock"
            ]
        ],
        "cypher_query": "MATCH (T1:Appointment) MATCH (T2:Physician)\nRETURN T2.Name",
        "cypher_ans": [
            [
                "John Dorian"
            ],
            [
                "Elliot Reid"
            ],
            [
                "Christopher Turk"
            ],
            [
                "Percival Cox"
            ],
            [
                "Bob Kelso"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "John Wen"
            ],
            [
                "Keith Dudemeister"
            ],
            [
                "Molly Clock"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the patient who made the most recent appointment?",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient) MATCH (T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the patient who made the appointment with the most recent start date.",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient) MATCH (T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many patients do each physician take care of? List their names and number of patients they take care of.",
        "sql_query": "SELECT T1.name ,  count(*) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.PCP"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            }
        },
        "sql_ans": [
            [
                "John Dorian",
                1
            ],
            [
                "Elliot Reid",
                2
            ],
            [
                "Christopher Turk",
                1
            ]
        ],
        "cypher_query": "MATCH (T1:Physician) MATCH (T2:Patient)\nWITH count(T1.EmployeeID) AS count, T1.Name AS Name\nRETURN Name,COUNT(\"*\")",
        "cypher_ans": [
            [
                "John Dorian",
                1
            ],
            [
                "Elliot Reid",
                1
            ],
            [
                "Christopher Turk",
                1
            ],
            [
                "Percival Cox",
                1
            ],
            [
                "Bob Kelso",
                1
            ],
            [
                "Todd Quinlan",
                1
            ],
            [
                "John Wen",
                1
            ],
            [
                "Keith Dudemeister",
                1
            ],
            [
                "Molly Clock",
                1
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Return the name of each physician and the number of patients he or she treats.",
        "sql_query": "SELECT T1.name ,  count(*) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.PCP"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            }
        },
        "sql_ans": [
            [
                "John Dorian",
                1
            ],
            [
                "Elliot Reid",
                2
            ],
            [
                "Christopher Turk",
                1
            ]
        ],
        "cypher_query": "MATCH (T1:Physician) MATCH (T2:Patient)\nWITH count(T1.EmployeeID) AS count, T1.Name AS Name\nRETURN Name,COUNT(\"*\")",
        "cypher_ans": [
            [
                "John Dorian",
                1
            ],
            [
                "Elliot Reid",
                1
            ],
            [
                "Christopher Turk",
                1
            ],
            [
                "Percival Cox",
                1
            ],
            [
                "Bob Kelso",
                1
            ],
            [
                "Todd Quinlan",
                1
            ],
            [
                "John Wen",
                1
            ],
            [
                "Keith Dudemeister",
                1
            ],
            [
                "Molly Clock",
                1
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians who are in charge of more than one patient.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid HAVING count(*)  >  1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.PCP"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "having": {
                "gt": [
                    {
                        "count": "*"
                    },
                    1
                ]
            }
        },
        "sql_ans": [
            [
                "Elliot Reid"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician) MATCH (T2:Patient)\nWITH T1.Name AS Name, COUNT(\"*\") AS COUNT\nWHERE COUNT > 1\nRETURN Name",
        "cypher_ans": [
            [
                "John Dorian"
            ],
            [
                "Elliot Reid"
            ],
            [
                "Christopher Turk"
            ],
            [
                "Percival Cox"
            ],
            [
                "Bob Kelso"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "John Wen"
            ],
            [
                "Keith Dudemeister"
            ],
            [
                "Molly Clock"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which physicians are in charge of more than one patient? Give me their names.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid HAVING count(*)  >  1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.PCP"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "having": {
                "gt": [
                    {
                        "count": "*"
                    },
                    1
                ]
            }
        },
        "sql_ans": [
            [
                "Elliot Reid"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician) MATCH (T2:Patient)\nWITH T1.Name AS Name, COUNT(\"*\") AS COUNT\nWHERE COUNT > 1\nRETURN Name",
        "cypher_ans": [
            [
                "John Dorian"
            ],
            [
                "Elliot Reid"
            ],
            [
                "Christopher Turk"
            ],
            [
                "Percival Cox"
            ],
            [
                "Bob Kelso"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "John Wen"
            ],
            [
                "Keith Dudemeister"
            ],
            [
                "Molly Clock"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms located on each block floor.",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block) MATCH (T2:Room)\nWITH T1.BlockFloor AS BlockFloor, count(T1.BlockFloor) AS count\nRETURN COUNT(\"*\"),BlockFloor",
        "cypher_ans": [
            [
                1,
                1
            ],
            [
                1,
                2
            ],
            [
                1,
                3
            ],
            [
                1,
                4
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms does each block floor have?",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block) MATCH (T2:Room)\nWITH T1.BlockFloor AS BlockFloor, count(T1.BlockFloor) AS count\nRETURN COUNT(\"*\"),BlockFloor",
        "cypher_ans": [
            [
                1,
                1
            ],
            [
                1,
                2
            ],
            [
                1,
                3
            ],
            [
                1,
                4
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms for different block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block) MATCH (T2:Room)\nWITH T1.BlockCode AS BlockCode, count(T1.BlockCode) AS count\nRETURN COUNT(\"*\"),BlockCode",
        "cypher_ans": [
            [
                1,
                1
            ],
            [
                1,
                2
            ],
            [
                1,
                3
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms are located for each block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block) MATCH (T2:Room)\nWITH T1.BlockCode AS BlockCode, count(T1.BlockCode) AS count\nRETURN COUNT(\"*\"),BlockCode",
        "cypher_ans": [
            [
                1,
                1
            ],
            [
                1,
                2
            ],
            [
                1,
                3
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of medications prescribed for each brand.",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH T1.Name AS Name, count(T1.Brand) AS count\nRETURN COUNT(\"*\"),Name",
        "cypher_ans": [
            [
                1,
                "Procrastin-X"
            ],
            [
                1,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many medications are prescribed for each brand?",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH T1.Name AS Name, count(T1.Brand) AS count\nRETURN COUNT(\"*\"),Name",
        "cypher_ans": [
            [
                1,
                "Procrastin-X"
            ],
            [
                1,
                "Thesisin"
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "what are name and phone number of patients who had more than one appointment?",
        "sql_query": "SELECT name ,  phone FROM appointment AS T1 JOIN patient AS T2 ON T1.patient  =  T2.ssn GROUP BY T1.patient HAVING count(*)  >  1",
        "parsed_sql": {
            "select": [
                {
                    "value": "name"
                },
                {
                    "value": "phone"
                }
            ],
            "from": [
                {
                    "value": "appointment",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.patient",
                            "T2.ssn"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.patient"
            },
            "having": {
                "gt": [
                    {
                        "count": "*"
                    },
                    1
                ]
            }
        },
        "sql_ans": [
            [
                "John Smith",
                "555-0256"
            ],
            [
                "Grace Ritchie",
                "555-0512"
            ],
            [
                "Dennis Doe",
                "555-2048"
            ]
        ],
        "cypher_query": "MATCH (T1:Appointment) MATCH (T2:Patient)\nWITH T2.Name AS Name, T2.Phone AS Phone, COUNT(\"*\") AS COUNT\nWHERE COUNT > 1\nRETURN Name,Phone",
        "cypher_ans": [
            [
                "John Smith",
                "555-0256"
            ],
            [
                "Grace Ritchie",
                "555-0512"
            ],
            [
                "Random J. Patient",
                "555-1204"
            ],
            [
                "Dennis Doe",
                "555-2048"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which patients made more than one appointment? Tell me the name and phone number of these patients.",
        "sql_query": "SELECT name ,  phone FROM appointment AS T1 JOIN patient AS T2 ON T1.patient  =  T2.ssn GROUP BY T1.patient HAVING count(*)  >  1",
        "parsed_sql": {
            "select": [
                {
                    "value": "name"
                },
                {
                    "value": "phone"
                }
            ],
            "from": [
                {
                    "value": "appointment",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.patient",
                            "T2.ssn"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.patient"
            },
            "having": {
                "gt": [
                    {
                        "count": "*"
                    },
                    1
                ]
            }
        },
        "sql_ans": [
            [
                "John Smith",
                "555-0256"
            ],
            [
                "Grace Ritchie",
                "555-0512"
            ],
            [
                "Dennis Doe",
                "555-2048"
            ]
        ],
        "cypher_query": "MATCH (T1:Appointment) MATCH (T2:Patient)\nWITH T2.Name AS Name, T2.Phone AS Phone, COUNT(\"*\") AS COUNT\nWHERE COUNT > 1\nRETURN Name,Phone",
        "cypher_ans": [
            [
                "John Smith",
                "555-0256"
            ],
            [
                "Grace Ritchie",
                "555-0512"
            ],
            [
                "Random J. Patient",
                "555-1204"
            ],
            [
                "Dennis Doe",
                "555-2048"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "List the name of physicians who took some appointment.",
        "sql_query": "SELECT T2.name FROM appointment AS T1 JOIN physician AS T2 ON T1.Physician  =  T2.EmployeeID",
        "parsed_sql": {
            "select": {
                "value": "T2.name"
            },
            "from": [
                {
                    "value": "appointment",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Physician",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "John Dorian"
            ],
            [
                "Elliot Reid"
            ],
            [
                "Percival Cox"
            ],
            [
                "Christopher Turk"
            ],
            [
                "Molly Clock"
            ]
        ],
        "cypher_query": "MATCH (T1:Appointment) MATCH (T2:Physician)\nRETURN T2.Name",
        "cypher_ans": [
            [
                "John Dorian"
            ],
            [
                "Elliot Reid"
            ],
            [
                "Christopher Turk"
            ],
            [
                "Percival Cox"
            ],
            [
                "Bob Kelso"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "John Wen"
            ],
            [
                "Keith Dudemeister"
            ],
            [
                "Molly Clock"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of all the physicians who took appointments.",
        "sql_query": "SELECT T2.name FROM appointment AS T1 JOIN physician AS T2 ON T1.Physician  =  T2.EmployeeID",
        "parsed_sql": {
            "select": {
                "value": "T2.name"
            },
            "from": [
                {
                    "value": "appointment",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Physician",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "John Dorian"
            ],
            [
                "Elliot Reid"
            ],
            [
                "Percival Cox"
            ],
            [
                "Christopher Turk"
            ],
            [
                "Molly Clock"
            ]
        ],
        "cypher_query": "MATCH (T1:Appointment) MATCH (T2:Physician)\nRETURN T2.Name",
        "cypher_ans": [
            [
                "John Dorian"
            ],
            [
                "Elliot Reid"
            ],
            [
                "Christopher Turk"
            ],
            [
                "Percival Cox"
            ],
            [
                "Bob Kelso"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "John Wen"
            ],
            [
                "Keith Dudemeister"
            ],
            [
                "Molly Clock"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the patient who made the most recent appointment?",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient) MATCH (T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the patient who made the appointment with the most recent start date.",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient) MATCH (T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many patients do each physician take care of? List their names and number of patients they take care of.",
        "sql_query": "SELECT T1.name ,  count(*) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.PCP"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            }
        },
        "sql_ans": [
            [
                "John Dorian",
                1
            ],
            [
                "Elliot Reid",
                2
            ],
            [
                "Christopher Turk",
                1
            ]
        ],
        "cypher_query": "MATCH (T1:Physician) MATCH (T2:Patient)\nWITH count(T1.EmployeeID) AS count, T1.Name AS Name\nRETURN Name,COUNT(\"*\")",
        "cypher_ans": [
            [
                "John Dorian",
                1
            ],
            [
                "Elliot Reid",
                1
            ],
            [
                "Christopher Turk",
                1
            ],
            [
                "Percival Cox",
                1
            ],
            [
                "Bob Kelso",
                1
            ],
            [
                "Todd Quinlan",
                1
            ],
            [
                "John Wen",
                1
            ],
            [
                "Keith Dudemeister",
                1
            ],
            [
                "Molly Clock",
                1
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Return the name of each physician and the number of patients he or she treats.",
        "sql_query": "SELECT T1.name ,  count(*) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.PCP"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            }
        },
        "sql_ans": [
            [
                "John Dorian",
                1
            ],
            [
                "Elliot Reid",
                2
            ],
            [
                "Christopher Turk",
                1
            ]
        ],
        "cypher_query": "MATCH (T1:Physician) MATCH (T2:Patient)\nWITH count(T1.EmployeeID) AS count, T1.Name AS Name\nRETURN Name,COUNT(\"*\")",
        "cypher_ans": [
            [
                "John Dorian",
                1
            ],
            [
                "Elliot Reid",
                1
            ],
            [
                "Christopher Turk",
                1
            ],
            [
                "Percival Cox",
                1
            ],
            [
                "Bob Kelso",
                1
            ],
            [
                "Todd Quinlan",
                1
            ],
            [
                "John Wen",
                1
            ],
            [
                "Keith Dudemeister",
                1
            ],
            [
                "Molly Clock",
                1
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians who are in charge of more than one patient.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid HAVING count(*)  >  1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.PCP"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "having": {
                "gt": [
                    {
                        "count": "*"
                    },
                    1
                ]
            }
        },
        "sql_ans": [
            [
                "Elliot Reid"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician) MATCH (T2:Patient)\nWITH T1.Name AS Name, COUNT(\"*\") AS COUNT\nWHERE COUNT > 1\nRETURN Name",
        "cypher_ans": [
            [
                "John Dorian"
            ],
            [
                "Elliot Reid"
            ],
            [
                "Christopher Turk"
            ],
            [
                "Percival Cox"
            ],
            [
                "Bob Kelso"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "John Wen"
            ],
            [
                "Keith Dudemeister"
            ],
            [
                "Molly Clock"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which physicians are in charge of more than one patient? Give me their names.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid HAVING count(*)  >  1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.PCP"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "having": {
                "gt": [
                    {
                        "count": "*"
                    },
                    1
                ]
            }
        },
        "sql_ans": [
            [
                "Elliot Reid"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician) MATCH (T2:Patient)\nWITH T1.Name AS Name, COUNT(\"*\") AS COUNT\nWHERE COUNT > 1\nRETURN Name",
        "cypher_ans": [
            [
                "John Dorian"
            ],
            [
                "Elliot Reid"
            ],
            [
                "Christopher Turk"
            ],
            [
                "Percival Cox"
            ],
            [
                "Bob Kelso"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "John Wen"
            ],
            [
                "Keith Dudemeister"
            ],
            [
                "Molly Clock"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms located on each block floor.",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block) MATCH (T2:Room)\nWITH count(T1.BlockFloor) AS count, T1.BlockFloor AS BlockFloor\nRETURN COUNT(\"*\"),BlockFloor",
        "cypher_ans": [
            [
                1,
                1
            ],
            [
                1,
                2
            ],
            [
                1,
                3
            ],
            [
                1,
                4
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms does each block floor have?",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block) MATCH (T2:Room)\nWITH count(T1.BlockFloor) AS count, T1.BlockFloor AS BlockFloor\nRETURN COUNT(\"*\"),BlockFloor",
        "cypher_ans": [
            [
                1,
                1
            ],
            [
                1,
                2
            ],
            [
                1,
                3
            ],
            [
                1,
                4
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms for different block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block) MATCH (T2:Room)\nWITH T1.BlockCode AS BlockCode, count(T1.BlockCode) AS count\nRETURN COUNT(\"*\"),BlockCode",
        "cypher_ans": [
            [
                1,
                1
            ],
            [
                1,
                2
            ],
            [
                1,
                3
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms are located for each block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block) MATCH (T2:Room)\nWITH T1.BlockCode AS BlockCode, count(T1.BlockCode) AS count\nRETURN COUNT(\"*\"),BlockCode",
        "cypher_ans": [
            [
                1,
                1
            ],
            [
                1,
                2
            ],
            [
                1,
                3
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of medications prescribed for each brand.",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH T1.Name AS Name, count(T1.Brand) AS count\nRETURN COUNT(\"*\"),Name",
        "cypher_ans": [
            [
                1,
                "Procrastin-X"
            ],
            [
                1,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many medications are prescribed for each brand?",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH T1.Name AS Name, count(T1.Brand) AS count\nRETURN COUNT(\"*\"),Name",
        "cypher_ans": [
            [
                1,
                "Procrastin-X"
            ],
            [
                1,
                "Thesisin"
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "what are name and phone number of patients who had more than one appointment?",
        "sql_query": "SELECT name ,  phone FROM appointment AS T1 JOIN patient AS T2 ON T1.patient  =  T2.ssn GROUP BY T1.patient HAVING count(*)  >  1",
        "parsed_sql": {
            "select": [
                {
                    "value": "name"
                },
                {
                    "value": "phone"
                }
            ],
            "from": [
                {
                    "value": "appointment",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.patient",
                            "T2.ssn"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.patient"
            },
            "having": {
                "gt": [
                    {
                        "count": "*"
                    },
                    1
                ]
            }
        },
        "sql_ans": [
            [
                "John Smith",
                "555-0256"
            ],
            [
                "Grace Ritchie",
                "555-0512"
            ],
            [
                "Dennis Doe",
                "555-2048"
            ]
        ],
        "cypher_query": "MATCH (T1:Appointment) MATCH (T2:Patient)\nWITH T2.Phone AS Phone, T2.Name AS Name, COUNT(\"*\") AS COUNT\nWHERE COUNT > 1\nRETURN Name,Phone",
        "cypher_ans": [
            [
                "John Smith",
                "555-0256"
            ],
            [
                "Grace Ritchie",
                "555-0512"
            ],
            [
                "Random J. Patient",
                "555-1204"
            ],
            [
                "Dennis Doe",
                "555-2048"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which patients made more than one appointment? Tell me the name and phone number of these patients.",
        "sql_query": "SELECT name ,  phone FROM appointment AS T1 JOIN patient AS T2 ON T1.patient  =  T2.ssn GROUP BY T1.patient HAVING count(*)  >  1",
        "parsed_sql": {
            "select": [
                {
                    "value": "name"
                },
                {
                    "value": "phone"
                }
            ],
            "from": [
                {
                    "value": "appointment",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.patient",
                            "T2.ssn"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.patient"
            },
            "having": {
                "gt": [
                    {
                        "count": "*"
                    },
                    1
                ]
            }
        },
        "sql_ans": [
            [
                "John Smith",
                "555-0256"
            ],
            [
                "Grace Ritchie",
                "555-0512"
            ],
            [
                "Dennis Doe",
                "555-2048"
            ]
        ],
        "cypher_query": "MATCH (T1:Appointment) MATCH (T2:Patient)\nWITH T2.Phone AS Phone, T2.Name AS Name, COUNT(\"*\") AS COUNT\nWHERE COUNT > 1\nRETURN Name,Phone",
        "cypher_ans": [
            [
                "John Smith",
                "555-0256"
            ],
            [
                "Grace Ritchie",
                "555-0512"
            ],
            [
                "Random J. Patient",
                "555-1204"
            ],
            [
                "Dennis Doe",
                "555-2048"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "List the name of physicians who took some appointment.",
        "sql_query": "SELECT T2.name FROM appointment AS T1 JOIN physician AS T2 ON T1.Physician  =  T2.EmployeeID",
        "parsed_sql": {
            "select": {
                "value": "T2.name"
            },
            "from": [
                {
                    "value": "appointment",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Physician",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "John Dorian"
            ],
            [
                "Elliot Reid"
            ],
            [
                "Percival Cox"
            ],
            [
                "Christopher Turk"
            ],
            [
                "Molly Clock"
            ]
        ],
        "cypher_query": "MATCH (T1:Appointment) MATCH (T2:Physician)\nRETURN T2.Name",
        "cypher_ans": [
            [
                "John Dorian"
            ],
            [
                "Elliot Reid"
            ],
            [
                "Christopher Turk"
            ],
            [
                "Percival Cox"
            ],
            [
                "Bob Kelso"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "John Wen"
            ],
            [
                "Keith Dudemeister"
            ],
            [
                "Molly Clock"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of all the physicians who took appointments.",
        "sql_query": "SELECT T2.name FROM appointment AS T1 JOIN physician AS T2 ON T1.Physician  =  T2.EmployeeID",
        "parsed_sql": {
            "select": {
                "value": "T2.name"
            },
            "from": [
                {
                    "value": "appointment",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Physician",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "John Dorian"
            ],
            [
                "Elliot Reid"
            ],
            [
                "Percival Cox"
            ],
            [
                "Christopher Turk"
            ],
            [
                "Molly Clock"
            ]
        ],
        "cypher_query": "MATCH (T1:Appointment) MATCH (T2:Physician)\nRETURN T2.Name",
        "cypher_ans": [
            [
                "John Dorian"
            ],
            [
                "Elliot Reid"
            ],
            [
                "Christopher Turk"
            ],
            [
                "Percival Cox"
            ],
            [
                "Bob Kelso"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "John Wen"
            ],
            [
                "Keith Dudemeister"
            ],
            [
                "Molly Clock"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the patient who made the most recent appointment?",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient) MATCH (T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the patient who made the appointment with the most recent start date.",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient) MATCH (T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many patients do each physician take care of? List their names and number of patients they take care of.",
        "sql_query": "SELECT T1.name ,  count(*) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.PCP"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            }
        },
        "sql_ans": [
            [
                "John Dorian",
                1
            ],
            [
                "Elliot Reid",
                2
            ],
            [
                "Christopher Turk",
                1
            ]
        ],
        "cypher_query": "MATCH (T1:Physician) MATCH (T2:Patient)\nWITH count(T1.EmployeeID) AS count, T1.Name AS Name\nRETURN Name,COUNT(\"*\")",
        "cypher_ans": [
            [
                "John Dorian",
                1
            ],
            [
                "Elliot Reid",
                1
            ],
            [
                "Christopher Turk",
                1
            ],
            [
                "Percival Cox",
                1
            ],
            [
                "Bob Kelso",
                1
            ],
            [
                "Todd Quinlan",
                1
            ],
            [
                "John Wen",
                1
            ],
            [
                "Keith Dudemeister",
                1
            ],
            [
                "Molly Clock",
                1
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Return the name of each physician and the number of patients he or she treats.",
        "sql_query": "SELECT T1.name ,  count(*) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.PCP"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            }
        },
        "sql_ans": [
            [
                "John Dorian",
                1
            ],
            [
                "Elliot Reid",
                2
            ],
            [
                "Christopher Turk",
                1
            ]
        ],
        "cypher_query": "MATCH (T1:Physician) MATCH (T2:Patient)\nWITH count(T1.EmployeeID) AS count, T1.Name AS Name\nRETURN Name,COUNT(\"*\")",
        "cypher_ans": [
            [
                "John Dorian",
                1
            ],
            [
                "Elliot Reid",
                1
            ],
            [
                "Christopher Turk",
                1
            ],
            [
                "Percival Cox",
                1
            ],
            [
                "Bob Kelso",
                1
            ],
            [
                "Todd Quinlan",
                1
            ],
            [
                "John Wen",
                1
            ],
            [
                "Keith Dudemeister",
                1
            ],
            [
                "Molly Clock",
                1
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians who are in charge of more than one patient.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid HAVING count(*)  >  1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.PCP"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "having": {
                "gt": [
                    {
                        "count": "*"
                    },
                    1
                ]
            }
        },
        "sql_ans": [
            [
                "Elliot Reid"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician) MATCH (T2:Patient)\nWITH T1.Name AS Name, COUNT(\"*\") AS COUNT\nWHERE COUNT > 1\nRETURN Name",
        "cypher_ans": [
            [
                "John Dorian"
            ],
            [
                "Elliot Reid"
            ],
            [
                "Christopher Turk"
            ],
            [
                "Percival Cox"
            ],
            [
                "Bob Kelso"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "John Wen"
            ],
            [
                "Keith Dudemeister"
            ],
            [
                "Molly Clock"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which physicians are in charge of more than one patient? Give me their names.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid HAVING count(*)  >  1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.PCP"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "having": {
                "gt": [
                    {
                        "count": "*"
                    },
                    1
                ]
            }
        },
        "sql_ans": [
            [
                "Elliot Reid"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician) MATCH (T2:Patient)\nWITH T1.Name AS Name, COUNT(\"*\") AS COUNT\nWHERE COUNT > 1\nRETURN Name",
        "cypher_ans": [
            [
                "John Dorian"
            ],
            [
                "Elliot Reid"
            ],
            [
                "Christopher Turk"
            ],
            [
                "Percival Cox"
            ],
            [
                "Bob Kelso"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "John Wen"
            ],
            [
                "Keith Dudemeister"
            ],
            [
                "Molly Clock"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms located on each block floor.",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block) MATCH (T2:Room)\nWITH T1.BlockFloor AS BlockFloor, count(T1.BlockFloor) AS count\nRETURN COUNT(\"*\"),BlockFloor",
        "cypher_ans": [
            [
                1,
                1
            ],
            [
                1,
                2
            ],
            [
                1,
                3
            ],
            [
                1,
                4
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms does each block floor have?",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block) MATCH (T2:Room)\nWITH T1.BlockFloor AS BlockFloor, count(T1.BlockFloor) AS count\nRETURN COUNT(\"*\"),BlockFloor",
        "cypher_ans": [
            [
                1,
                1
            ],
            [
                1,
                2
            ],
            [
                1,
                3
            ],
            [
                1,
                4
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms for different block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block) MATCH (T2:Room)\nWITH count(T1.BlockCode) AS count, T1.BlockCode AS BlockCode\nRETURN COUNT(\"*\"),BlockCode",
        "cypher_ans": [
            [
                1,
                1
            ],
            [
                1,
                2
            ],
            [
                1,
                3
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms are located for each block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block) MATCH (T2:Room)\nWITH count(T1.BlockCode) AS count, T1.BlockCode AS BlockCode\nRETURN COUNT(\"*\"),BlockCode",
        "cypher_ans": [
            [
                1,
                1
            ],
            [
                1,
                2
            ],
            [
                1,
                3
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of medications prescribed for each brand.",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH count(T1.Brand) AS count, T1.Name AS Name\nRETURN COUNT(\"*\"),Name",
        "cypher_ans": [
            [
                1,
                "Procrastin-X"
            ],
            [
                1,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many medications are prescribed for each brand?",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH count(T1.Brand) AS count, T1.Name AS Name\nRETURN COUNT(\"*\"),Name",
        "cypher_ans": [
            [
                1,
                "Procrastin-X"
            ],
            [
                1,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the physician who was trained in the most expensive procedure?",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which physician was trained in the procedure that costs the most.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    }
][][][][][
    {
        "db_id": "hospital_1",
        "question": "what are name and phone number of patients who had more than one appointment?",
        "sql_query": "SELECT name ,  phone FROM appointment AS T1 JOIN patient AS T2 ON T1.patient  =  T2.ssn GROUP BY T1.patient HAVING count(*)  >  1",
        "parsed_sql": {
            "select": [
                {
                    "value": "name"
                },
                {
                    "value": "phone"
                }
            ],
            "from": [
                {
                    "value": "appointment",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.patient",
                            "T2.ssn"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.patient"
            },
            "having": {
                "gt": [
                    {
                        "count": "*"
                    },
                    1
                ]
            }
        },
        "sql_ans": [
            [
                "John Smith",
                "555-0256"
            ],
            [
                "Grace Ritchie",
                "555-0512"
            ],
            [
                "Dennis Doe",
                "555-2048"
            ]
        ],
        "cypher_query": "MATCH (T1:Appointment) MATCH (T2:Patient)\nWITH T2.Name AS Name, COUNT(\"*\") AS COUNT, T2.Phone AS Phone\nWHERE COUNT > 1\nRETURN Name,Phone",
        "cypher_ans": [
            [
                "John Smith",
                "555-0256"
            ],
            [
                "Grace Ritchie",
                "555-0512"
            ],
            [
                "Random J. Patient",
                "555-1204"
            ],
            [
                "Dennis Doe",
                "555-2048"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which patients made more than one appointment? Tell me the name and phone number of these patients.",
        "sql_query": "SELECT name ,  phone FROM appointment AS T1 JOIN patient AS T2 ON T1.patient  =  T2.ssn GROUP BY T1.patient HAVING count(*)  >  1",
        "parsed_sql": {
            "select": [
                {
                    "value": "name"
                },
                {
                    "value": "phone"
                }
            ],
            "from": [
                {
                    "value": "appointment",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.patient",
                            "T2.ssn"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.patient"
            },
            "having": {
                "gt": [
                    {
                        "count": "*"
                    },
                    1
                ]
            }
        },
        "sql_ans": [
            [
                "John Smith",
                "555-0256"
            ],
            [
                "Grace Ritchie",
                "555-0512"
            ],
            [
                "Dennis Doe",
                "555-2048"
            ]
        ],
        "cypher_query": "MATCH (T1:Appointment) MATCH (T2:Patient)\nWITH T2.Name AS Name, COUNT(\"*\") AS COUNT, T2.Phone AS Phone\nWHERE COUNT > 1\nRETURN Name,Phone",
        "cypher_ans": [
            [
                "John Smith",
                "555-0256"
            ],
            [
                "Grace Ritchie",
                "555-0512"
            ],
            [
                "Random J. Patient",
                "555-1204"
            ],
            [
                "Dennis Doe",
                "555-2048"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "List the name of physicians who took some appointment.",
        "sql_query": "SELECT T2.name FROM appointment AS T1 JOIN physician AS T2 ON T1.Physician  =  T2.EmployeeID",
        "parsed_sql": {
            "select": {
                "value": "T2.name"
            },
            "from": [
                {
                    "value": "appointment",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Physician",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "John Dorian"
            ],
            [
                "Elliot Reid"
            ],
            [
                "Percival Cox"
            ],
            [
                "Christopher Turk"
            ],
            [
                "Molly Clock"
            ]
        ],
        "cypher_query": "MATCH (T1:Appointment) MATCH (T2:Physician)\nRETURN T2.Name",
        "cypher_ans": [
            [
                "John Dorian"
            ],
            [
                "Elliot Reid"
            ],
            [
                "Christopher Turk"
            ],
            [
                "Percival Cox"
            ],
            [
                "Bob Kelso"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "John Wen"
            ],
            [
                "Keith Dudemeister"
            ],
            [
                "Molly Clock"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of all the physicians who took appointments.",
        "sql_query": "SELECT T2.name FROM appointment AS T1 JOIN physician AS T2 ON T1.Physician  =  T2.EmployeeID",
        "parsed_sql": {
            "select": {
                "value": "T2.name"
            },
            "from": [
                {
                    "value": "appointment",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Physician",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "John Dorian"
            ],
            [
                "Elliot Reid"
            ],
            [
                "Percival Cox"
            ],
            [
                "Christopher Turk"
            ],
            [
                "Molly Clock"
            ]
        ],
        "cypher_query": "MATCH (T1:Appointment) MATCH (T2:Physician)\nRETURN T2.Name",
        "cypher_ans": [
            [
                "John Dorian"
            ],
            [
                "Elliot Reid"
            ],
            [
                "Christopher Turk"
            ],
            [
                "Percival Cox"
            ],
            [
                "Bob Kelso"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "John Wen"
            ],
            [
                "Keith Dudemeister"
            ],
            [
                "Molly Clock"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the patient who made the most recent appointment?",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient) MATCH (T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the patient who made the appointment with the most recent start date.",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient) MATCH (T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many patients do each physician take care of? List their names and number of patients they take care of.",
        "sql_query": "SELECT T1.name ,  count(*) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.PCP"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            }
        },
        "sql_ans": [
            [
                "John Dorian",
                1
            ],
            [
                "Elliot Reid",
                2
            ],
            [
                "Christopher Turk",
                1
            ]
        ],
        "cypher_query": "MATCH (T1:Physician) MATCH (T2:Patient)\nWITH count(T1.EmployeeID) AS count, T1.Name AS Name\nRETURN Name,COUNT(\"*\")",
        "cypher_ans": [
            [
                "John Dorian",
                1
            ],
            [
                "Elliot Reid",
                1
            ],
            [
                "Christopher Turk",
                1
            ],
            [
                "Percival Cox",
                1
            ],
            [
                "Bob Kelso",
                1
            ],
            [
                "Todd Quinlan",
                1
            ],
            [
                "John Wen",
                1
            ],
            [
                "Keith Dudemeister",
                1
            ],
            [
                "Molly Clock",
                1
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Return the name of each physician and the number of patients he or she treats.",
        "sql_query": "SELECT T1.name ,  count(*) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.PCP"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            }
        },
        "sql_ans": [
            [
                "John Dorian",
                1
            ],
            [
                "Elliot Reid",
                2
            ],
            [
                "Christopher Turk",
                1
            ]
        ],
        "cypher_query": "MATCH (T1:Physician) MATCH (T2:Patient)\nWITH count(T1.EmployeeID) AS count, T1.Name AS Name\nRETURN Name,COUNT(\"*\")",
        "cypher_ans": [
            [
                "John Dorian",
                1
            ],
            [
                "Elliot Reid",
                1
            ],
            [
                "Christopher Turk",
                1
            ],
            [
                "Percival Cox",
                1
            ],
            [
                "Bob Kelso",
                1
            ],
            [
                "Todd Quinlan",
                1
            ],
            [
                "John Wen",
                1
            ],
            [
                "Keith Dudemeister",
                1
            ],
            [
                "Molly Clock",
                1
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians who are in charge of more than one patient.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid HAVING count(*)  >  1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.PCP"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "having": {
                "gt": [
                    {
                        "count": "*"
                    },
                    1
                ]
            }
        },
        "sql_ans": [
            [
                "Elliot Reid"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician) MATCH (T2:Patient)\nWITH COUNT(\"*\") AS COUNT, T1.Name AS Name\nWHERE COUNT > 1\nRETURN Name",
        "cypher_ans": [
            [
                "John Dorian"
            ],
            [
                "Elliot Reid"
            ],
            [
                "Christopher Turk"
            ],
            [
                "Percival Cox"
            ],
            [
                "Bob Kelso"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "John Wen"
            ],
            [
                "Keith Dudemeister"
            ],
            [
                "Molly Clock"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which physicians are in charge of more than one patient? Give me their names.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid HAVING count(*)  >  1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.PCP"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "having": {
                "gt": [
                    {
                        "count": "*"
                    },
                    1
                ]
            }
        },
        "sql_ans": [
            [
                "Elliot Reid"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician) MATCH (T2:Patient)\nWITH COUNT(\"*\") AS COUNT, T1.Name AS Name\nWHERE COUNT > 1\nRETURN Name",
        "cypher_ans": [
            [
                "John Dorian"
            ],
            [
                "Elliot Reid"
            ],
            [
                "Christopher Turk"
            ],
            [
                "Percival Cox"
            ],
            [
                "Bob Kelso"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "John Wen"
            ],
            [
                "Keith Dudemeister"
            ],
            [
                "Molly Clock"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms located on each block floor.",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block) MATCH (T2:Room)\nWITH count(T1.BlockFloor) AS count, T1.BlockFloor AS BlockFloor\nRETURN COUNT(\"*\"),BlockFloor",
        "cypher_ans": [
            [
                1,
                1
            ],
            [
                1,
                2
            ],
            [
                1,
                3
            ],
            [
                1,
                4
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms does each block floor have?",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block) MATCH (T2:Room)\nWITH count(T1.BlockFloor) AS count, T1.BlockFloor AS BlockFloor\nRETURN COUNT(\"*\"),BlockFloor",
        "cypher_ans": [
            [
                1,
                1
            ],
            [
                1,
                2
            ],
            [
                1,
                3
            ],
            [
                1,
                4
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms for different block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block) MATCH (T2:Room)\nWITH count(T1.BlockCode) AS count, T1.BlockCode AS BlockCode\nRETURN COUNT(\"*\"),BlockCode",
        "cypher_ans": [
            [
                1,
                1
            ],
            [
                1,
                2
            ],
            [
                1,
                3
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms are located for each block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block) MATCH (T2:Room)\nWITH count(T1.BlockCode) AS count, T1.BlockCode AS BlockCode\nRETURN COUNT(\"*\"),BlockCode",
        "cypher_ans": [
            [
                1,
                1
            ],
            [
                1,
                2
            ],
            [
                1,
                3
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of medications prescribed for each brand.",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH count(T1.Brand) AS count, T1.Name AS Name\nRETURN COUNT(\"*\"),Name",
        "cypher_ans": [
            [
                1,
                "Procrastin-X"
            ],
            [
                1,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many medications are prescribed for each brand?",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH count(T1.Brand) AS count, T1.Name AS Name\nRETURN COUNT(\"*\"),Name",
        "cypher_ans": [
            [
                1,
                "Procrastin-X"
            ],
            [
                1,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians whose position title contains the word 'senior'.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of the physicians who have 'senior' in their titles.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the physician who was trained in the most expensive procedure?",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which physician was trained in the procedure that costs the most.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "what are name and phone number of patients who had more than one appointment?",
        "sql_query": "SELECT name ,  phone FROM appointment AS T1 JOIN patient AS T2 ON T1.patient  =  T2.ssn GROUP BY T1.patient HAVING count(*)  >  1",
        "parsed_sql": {
            "select": [
                {
                    "value": "name"
                },
                {
                    "value": "phone"
                }
            ],
            "from": [
                {
                    "value": "appointment",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.patient",
                            "T2.ssn"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.patient"
            },
            "having": {
                "gt": [
                    {
                        "count": "*"
                    },
                    1
                ]
            }
        },
        "sql_ans": [
            [
                "John Smith",
                "555-0256"
            ],
            [
                "Grace Ritchie",
                "555-0512"
            ],
            [
                "Dennis Doe",
                "555-2048"
            ]
        ],
        "cypher_query": "MATCH (T1:Appointment) MATCH (T2:Patient)\nWITH T2.Name AS Name, T2.Phone AS Phone, COUNT(\"*\") AS COUNT\nWHERE COUNT > 1\nRETURN Name,Phone",
        "cypher_ans": [
            [
                "John Smith",
                "555-0256"
            ],
            [
                "Grace Ritchie",
                "555-0512"
            ],
            [
                "Random J. Patient",
                "555-1204"
            ],
            [
                "Dennis Doe",
                "555-2048"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which patients made more than one appointment? Tell me the name and phone number of these patients.",
        "sql_query": "SELECT name ,  phone FROM appointment AS T1 JOIN patient AS T2 ON T1.patient  =  T2.ssn GROUP BY T1.patient HAVING count(*)  >  1",
        "parsed_sql": {
            "select": [
                {
                    "value": "name"
                },
                {
                    "value": "phone"
                }
            ],
            "from": [
                {
                    "value": "appointment",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.patient",
                            "T2.ssn"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.patient"
            },
            "having": {
                "gt": [
                    {
                        "count": "*"
                    },
                    1
                ]
            }
        },
        "sql_ans": [
            [
                "John Smith",
                "555-0256"
            ],
            [
                "Grace Ritchie",
                "555-0512"
            ],
            [
                "Dennis Doe",
                "555-2048"
            ]
        ],
        "cypher_query": "MATCH (T1:Appointment) MATCH (T2:Patient)\nWITH T2.Name AS Name, T2.Phone AS Phone, COUNT(\"*\") AS COUNT\nWHERE COUNT > 1\nRETURN Name,Phone",
        "cypher_ans": [
            [
                "John Smith",
                "555-0256"
            ],
            [
                "Grace Ritchie",
                "555-0512"
            ],
            [
                "Random J. Patient",
                "555-1204"
            ],
            [
                "Dennis Doe",
                "555-2048"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "List the name of physicians who took some appointment.",
        "sql_query": "SELECT T2.name FROM appointment AS T1 JOIN physician AS T2 ON T1.Physician  =  T2.EmployeeID",
        "parsed_sql": {
            "select": {
                "value": "T2.name"
            },
            "from": [
                {
                    "value": "appointment",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Physician",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "John Dorian"
            ],
            [
                "Elliot Reid"
            ],
            [
                "Percival Cox"
            ],
            [
                "Christopher Turk"
            ],
            [
                "Molly Clock"
            ]
        ],
        "cypher_query": "MATCH (T1:Appointment) MATCH (T2:Physician)\nRETURN T2.Name",
        "cypher_ans": [
            [
                "John Dorian"
            ],
            [
                "Elliot Reid"
            ],
            [
                "Christopher Turk"
            ],
            [
                "Percival Cox"
            ],
            [
                "Bob Kelso"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "John Wen"
            ],
            [
                "Keith Dudemeister"
            ],
            [
                "Molly Clock"
            ]
        ]
    }
][][
    {
        "db_id": "hospital_1",
        "question": "What is the name of the patient who made the most recent appointment?",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the patient who made the appointment with the most recent start date.",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many patients' prescriptions are made by physician John Dorian?",
        "sql_query": "SELECT count(T1.SSN) FROM patient AS T1 JOIN prescribes AS T2 ON T1.SSN  =  T2.patient JOIN physician AS T3 ON T2.physician  =  T3.employeeid WHERE T3.name = \"John Dorian\"",
        "parsed_sql": {
            "select": {
                "value": {
                    "count": "T1.SSN"
                }
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.SSN",
                            "T2.patient"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T2.physician",
                            "T3.employeeid"
                        ]
                    }
                }
            ],
            "where": {
                "eq": [
                    "T3.name",
                    "John Dorian"
                ]
            }
        },
        "sql_ans": [
            [
                1
            ]
        ],
        "cypher_query": "MATCH (T1:Patient) MATCH (T2:Prescribes) MATCH (T3:Physician) MATCH (T2:Prescribes) MATCH (T3:Physician)\nWHERE T3.Name = \"John Dorian\"\nRETURN COUNT(T1.SSN)",
        "cypher_ans": [
            [
                0
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of patients' prescriptions physician John Dorian made.",
        "sql_query": "SELECT count(T1.SSN) FROM patient AS T1 JOIN prescribes AS T2 ON T1.SSN  =  T2.patient JOIN physician AS T3 ON T2.physician  =  T3.employeeid WHERE T3.name = \"John Dorian\"",
        "parsed_sql": {
            "select": {
                "value": {
                    "count": "T1.SSN"
                }
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.SSN",
                            "T2.patient"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T2.physician",
                            "T3.employeeid"
                        ]
                    }
                }
            ],
            "where": {
                "eq": [
                    "T3.name",
                    "John Dorian"
                ]
            }
        },
        "sql_ans": [
            [
                1
            ]
        ],
        "cypher_query": "MATCH (T1:Patient) MATCH (T2:Prescribes) MATCH (T3:Physician) MATCH (T2:Prescribes) MATCH (T3:Physician)\nWHERE T3.Name = \"John Dorian\"\nRETURN COUNT(T1.SSN)",
        "cypher_ans": [
            [
                0
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many patients do each physician take care of? List their names and number of patients they take care of.",
        "sql_query": "SELECT T1.name ,  count(*) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.PCP"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            }
        },
        "sql_ans": [
            [
                "John Dorian",
                1
            ],
            [
                "Elliot Reid",
                2
            ],
            [
                "Christopher Turk",
                1
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[]-(T2:Patient)\nWITH count(T1.EmployeeID) AS count, T1.Name AS Name\nRETURN Name,COUNT(\"*\")",
        "cypher_ans": [
            [
                "John Dorian",
                1
            ],
            [
                "Elliot Reid",
                1
            ],
            [
                "Christopher Turk",
                1
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Return the name of each physician and the number of patients he or she treats.",
        "sql_query": "SELECT T1.name ,  count(*) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.PCP"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            }
        },
        "sql_ans": [
            [
                "John Dorian",
                1
            ],
            [
                "Elliot Reid",
                2
            ],
            [
                "Christopher Turk",
                1
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[]-(T2:Patient)\nWITH count(T1.EmployeeID) AS count, T1.Name AS Name\nRETURN Name,COUNT(\"*\")",
        "cypher_ans": [
            [
                "John Dorian",
                1
            ],
            [
                "Elliot Reid",
                1
            ],
            [
                "Christopher Turk",
                1
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms located on each block floor.",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block) MATCH (T2:Room)\nWITH T1.BlockFloor AS BlockFloor, count(T1.BlockFloor) AS count\nRETURN COUNT(\"*\"),BlockFloor",
        "cypher_ans": [
            [
                1,
                1
            ],
            [
                1,
                2
            ],
            [
                1,
                3
            ],
            [
                1,
                4
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms does each block floor have?",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block) MATCH (T2:Room)\nWITH T1.BlockFloor AS BlockFloor, count(T1.BlockFloor) AS count\nRETURN COUNT(\"*\"),BlockFloor",
        "cypher_ans": [
            [
                1,
                1
            ],
            [
                1,
                2
            ],
            [
                1,
                3
            ],
            [
                1,
                4
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms for different block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block) MATCH (T2:Room)\nWITH count(T1.BlockCode) AS count, T1.BlockCode AS BlockCode\nRETURN COUNT(\"*\"),BlockCode",
        "cypher_ans": [
            [
                1,
                1
            ],
            [
                1,
                2
            ],
            [
                1,
                3
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms are located for each block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block) MATCH (T2:Room)\nWITH count(T1.BlockCode) AS count, T1.BlockCode AS BlockCode\nRETURN COUNT(\"*\"),BlockCode",
        "cypher_ans": [
            [
                1,
                1
            ],
            [
                1,
                2
            ],
            [
                1,
                3
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of medications prescribed for each brand.",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication) MATCH (T2:Prescribes)\nWITH count(T1.Brand) AS count, T1.Name AS Name\nRETURN COUNT(\"*\"),Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many medications are prescribed for each brand?",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication) MATCH (T2:Prescribes)\nWITH count(T1.Brand) AS count, T1.Name AS Name\nRETURN COUNT(\"*\"),Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians whose position title contains the word 'senior'.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of the physicians who have 'senior' in their titles.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the patient who has the most recent undergoing treatment?",
        "sql_query": "SELECT patient FROM undergoes ORDER BY dateundergoes LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "patient"
            },
            "from": "undergoes",
            "orderby": {
                "value": "dateundergoes"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                100000001
            ]
        ],
        "cypher_query": "MATCH (u:Undergoes)\nRETURN u.Patient\nORDER BY u.DateUndergoes\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Which patient is undergoing the most recent treatment?",
        "sql_query": "SELECT patient FROM undergoes ORDER BY dateundergoes LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "patient"
            },
            "from": "undergoes",
            "orderby": {
                "value": "dateundergoes"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                100000001
            ]
        ],
        "cypher_query": "MATCH (u:Undergoes)\nRETURN u.Patient\nORDER BY u.DateUndergoes\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the names of all patients who have an undergoing treatment and are staying in room 111.",
        "sql_query": "SELECT DISTINCT T2.name FROM undergoes AS T1 JOIN patient AS T2 ON T1.patient = T2.SSN JOIN stay AS T3 ON T1.Stay  =  T3.StayID WHERE T3.room  =  111",
        "parsed_sql": {
            "select": {
                "value": {
                    "distinct": {
                        "value": "T2.name"
                    }
                }
            },
            "from": [
                {
                    "value": "undergoes",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.patient",
                            "T2.SSN"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "stay",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Stay",
                            "T3.StayID"
                        ]
                    }
                }
            ],
            "where": {
                "eq": [
                    "T3.room",
                    111
                ]
            }
        },
        "sql_ans": [
            [
                "John Smith"
            ]
        ],
        "cypher_query": "MATCH (T1:Undergoes) MATCH (T2:Patient) MATCH (T3:Stay) MATCH (T2:Patient) MATCH (T3:Stay)\nWHERE T3.Room = 111\nRETURN DISTINCT T2.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of patients who are staying in room 111 and have an undergoing treatment?",
        "sql_query": "SELECT DISTINCT T2.name FROM undergoes AS T1 JOIN patient AS T2 ON T1.patient = T2.SSN JOIN stay AS T3 ON T1.Stay  =  T3.StayID WHERE T3.room  =  111",
        "parsed_sql": {
            "select": {
                "value": {
                    "distinct": {
                        "value": "T2.name"
                    }
                }
            },
            "from": [
                {
                    "value": "undergoes",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.patient",
                            "T2.SSN"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "stay",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Stay",
                            "T3.StayID"
                        ]
                    }
                }
            ],
            "where": {
                "eq": [
                    "T3.room",
                    111
                ]
            }
        },
        "sql_ans": [
            [
                "John Smith"
            ]
        ],
        "cypher_query": "MATCH (T1:Undergoes) MATCH (T2:Patient) MATCH (T3:Stay) MATCH (T2:Patient) MATCH (T3:Stay)\nWHERE T3.Room = 111\nRETURN DISTINCT T2.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the names of nurses who are nursing an undergoing treatment.",
        "sql_query": "SELECT DISTINCT T2.name FROM undergoes AS T1 JOIN nurse AS T2 ON T1.AssistingNurse  =  T2.EmployeeID",
        "parsed_sql": {
            "select": {
                "value": {
                    "distinct": {
                        "value": "T2.name"
                    }
                }
            },
            "from": [
                {
                    "value": "undergoes",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "nurse",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.AssistingNurse",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ],
        "cypher_query": "MATCH (T1:Undergoes) MATCH (T2:Nurse)\nRETURN DISTINCT T2.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Which nurses are in charge of patients undergoing treatments?",
        "sql_query": "SELECT DISTINCT T2.name FROM undergoes AS T1 JOIN nurse AS T2 ON T1.AssistingNurse  =  T2.EmployeeID",
        "parsed_sql": {
            "select": {
                "value": {
                    "distinct": {
                        "value": "T2.name"
                    }
                }
            },
            "from": [
                {
                    "value": "undergoes",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "nurse",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.AssistingNurse",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ],
        "cypher_query": "MATCH (T1:Undergoes) MATCH (T2:Nurse)\nRETURN DISTINCT T2.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of the physician who prescribed the highest dose?",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN prescribes AS T2 ON T1.employeeid = T2.physician ORDER BY T2.dose DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.dose",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Dorian"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician) MATCH (T2:Prescribes)\nRETURN T1.Name\nORDER BY T2.dose DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the physician who prescribed the highest dose. What is his or her name?",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN prescribes AS T2 ON T1.employeeid = T2.physician ORDER BY T2.dose DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.dose",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Dorian"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician) MATCH (T2:Prescribes)\nRETURN T1.Name\nORDER BY T2.dose DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of patients who are not using the medication of Procrastin-X.",
        "sql_query": "SELECT count(*) FROM patient WHERE SSN NOT IN ( SELECT T1.patient FROM Prescribes AS T1 JOIN Medication AS T2 ON T1.Medication  =  T2.Code WHERE T2.name  =  'Procrastin-X' )",
        "parsed_sql": {
            "select": {
                "value": {
                    "count": "*"
                }
            },
            "from": "patient",
            "where": {
                "nin": [
                    "SSN",
                    {
                        "select": {
                            "value": "T1.patient"
                        },
                        "from": [
                            {
                                "value": "Prescribes",
                                "name": "T1",
                                "is_table": true
                            },
                            {
                                "join": {
                                    "name": "T2",
                                    "value": "Medication",
                                    "is_table": true
                                },
                                "on": {
                                    "eq": [
                                        "T1.Medication",
                                        "T2.Code"
                                    ]
                                }
                            }
                        ],
                        "where": {
                            "eq": [
                                "T2.name",
                                {
                                    "literal": "Procrastin-X"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "sql_ans": [
            [
                3
            ]
        ],
        "cypher_query": "MATCH (p:Patient) MATCH (T1:Prescribes) MATCH (T2:Medication)\nWHERE T2.Name = 'Procrastin-X' AND NOT p.SSN in T1.Patient\nRETURN count(DISTINCT p.SSN)",
        "cypher_ans": [
            [
                0
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many patients are not using Procrastin-X as medication?",
        "sql_query": "SELECT count(*) FROM patient WHERE SSN NOT IN ( SELECT T1.patient FROM Prescribes AS T1 JOIN Medication AS T2 ON T1.Medication  =  T2.Code WHERE T2.name  =  'Procrastin-X' )",
        "parsed_sql": {
            "select": {
                "value": {
                    "count": "*"
                }
            },
            "from": "patient",
            "where": {
                "nin": [
                    "SSN",
                    {
                        "select": {
                            "value": "T1.patient"
                        },
                        "from": [
                            {
                                "value": "Prescribes",
                                "name": "T1",
                                "is_table": true
                            },
                            {
                                "join": {
                                    "name": "T2",
                                    "value": "Medication",
                                    "is_table": true
                                },
                                "on": {
                                    "eq": [
                                        "T1.Medication",
                                        "T2.Code"
                                    ]
                                }
                            }
                        ],
                        "where": {
                            "eq": [
                                "T2.name",
                                {
                                    "literal": "Procrastin-X"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "sql_ans": [
            [
                3
            ]
        ],
        "cypher_query": "MATCH (p:Patient) MATCH (T1:Prescribes) MATCH (T2:Medication)\nWHERE T2.Name = 'Procrastin-X' AND NOT p.SSN in T1.Patient\nRETURN count(DISTINCT p.SSN)",
        "cypher_ans": [
            [
                0
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the names of nurses who are on call.",
        "sql_query": "SELECT DISTINCT T1.name FROM nurse AS T1 JOIN on_call AS T2 ON T1.EmployeeID  =  T2.nurse",
        "parsed_sql": {
            "select": {
                "value": {
                    "distinct": {
                        "value": "T1.name"
                    }
                }
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "on_call",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.EmployeeID",
                            "T2.nurse"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse) MATCH (T2:On_Call)\nRETURN DISTINCT T1.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the distinct names of nurses on call?",
        "sql_query": "SELECT DISTINCT T1.name FROM nurse AS T1 JOIN on_call AS T2 ON T1.EmployeeID  =  T2.nurse",
        "parsed_sql": {
            "select": {
                "value": {
                    "distinct": {
                        "value": "T1.name"
                    }
                }
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "on_call",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.EmployeeID",
                            "T2.nurse"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse) MATCH (T2:On_Call)\nRETURN DISTINCT T1.Name",
        "cypher_ans": []
    }
][
    {
        "db_id": "hospital_1",
        "question": "What is the name of the patient who made the most recent appointment?",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the patient who made the appointment with the most recent start date.",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many patients' prescriptions are made by physician John Dorian?",
        "sql_query": "SELECT count(T1.SSN) FROM patient AS T1 JOIN prescribes AS T2 ON T1.SSN  =  T2.patient JOIN physician AS T3 ON T2.physician  =  T3.employeeid WHERE T3.name = \"John Dorian\"",
        "parsed_sql": {
            "select": {
                "value": {
                    "count": "T1.SSN"
                }
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.SSN",
                            "T2.patient"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T2.physician",
                            "T3.employeeid"
                        ]
                    }
                }
            ],
            "where": {
                "eq": [
                    "T3.name",
                    "John Dorian"
                ]
            }
        },
        "sql_ans": [
            [
                1
            ]
        ],
        "cypher_query": "MATCH (T1:Patient) MATCH (T2:Prescribes) MATCH (T3:Physician) MATCH (T2:Prescribes) MATCH (T3:Physician)\nWHERE T3.Name = \"John Dorian\"\nRETURN COUNT(T1.SSN)",
        "cypher_ans": [
            [
                0
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of patients' prescriptions physician John Dorian made.",
        "sql_query": "SELECT count(T1.SSN) FROM patient AS T1 JOIN prescribes AS T2 ON T1.SSN  =  T2.patient JOIN physician AS T3 ON T2.physician  =  T3.employeeid WHERE T3.name = \"John Dorian\"",
        "parsed_sql": {
            "select": {
                "value": {
                    "count": "T1.SSN"
                }
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.SSN",
                            "T2.patient"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T2.physician",
                            "T3.employeeid"
                        ]
                    }
                }
            ],
            "where": {
                "eq": [
                    "T3.name",
                    "John Dorian"
                ]
            }
        },
        "sql_ans": [
            [
                1
            ]
        ],
        "cypher_query": "MATCH (T1:Patient) MATCH (T2:Prescribes) MATCH (T3:Physician) MATCH (T2:Prescribes) MATCH (T3:Physician)\nWHERE T3.Name = \"John Dorian\"\nRETURN COUNT(T1.SSN)",
        "cypher_ans": [
            [
                0
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many patients do each physician take care of? List their names and number of patients they take care of.",
        "sql_query": "SELECT T1.name ,  count(*) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.PCP"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            }
        },
        "sql_ans": [
            [
                "John Dorian",
                1
            ],
            [
                "Elliot Reid",
                2
            ],
            [
                "Christopher Turk",
                1
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[]-(T2:Patient)\nWITH count(T1.EmployeeID) AS count, T1.Name AS Name\nRETURN Name,COUNT(\"*\")",
        "cypher_ans": [
            [
                "John Dorian",
                1
            ],
            [
                "Elliot Reid",
                1
            ],
            [
                "Christopher Turk",
                1
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Return the name of each physician and the number of patients he or she treats.",
        "sql_query": "SELECT T1.name ,  count(*) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.PCP"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            }
        },
        "sql_ans": [
            [
                "John Dorian",
                1
            ],
            [
                "Elliot Reid",
                2
            ],
            [
                "Christopher Turk",
                1
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[]-(T2:Patient)\nWITH count(T1.EmployeeID) AS count, T1.Name AS Name\nRETURN Name,COUNT(\"*\")",
        "cypher_ans": [
            [
                "John Dorian",
                1
            ],
            [
                "Elliot Reid",
                1
            ],
            [
                "Christopher Turk",
                1
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms located on each block floor.",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block) MATCH (T2:Room)\nWITH T1.BlockFloor AS BlockFloor, count(T1.BlockFloor) AS count\nRETURN COUNT(\"*\"),BlockFloor",
        "cypher_ans": [
            [
                1,
                1
            ],
            [
                1,
                2
            ],
            [
                1,
                3
            ],
            [
                1,
                4
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms does each block floor have?",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block) MATCH (T2:Room)\nWITH T1.BlockFloor AS BlockFloor, count(T1.BlockFloor) AS count\nRETURN COUNT(\"*\"),BlockFloor",
        "cypher_ans": [
            [
                1,
                1
            ],
            [
                1,
                2
            ],
            [
                1,
                3
            ],
            [
                1,
                4
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms for different block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block) MATCH (T2:Room)\nWITH count(T1.BlockCode) AS count, T1.BlockCode AS BlockCode\nRETURN COUNT(\"*\"),BlockCode",
        "cypher_ans": [
            [
                1,
                1
            ],
            [
                1,
                2
            ],
            [
                1,
                3
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms are located for each block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block) MATCH (T2:Room)\nWITH count(T1.BlockCode) AS count, T1.BlockCode AS BlockCode\nRETURN COUNT(\"*\"),BlockCode",
        "cypher_ans": [
            [
                1,
                1
            ],
            [
                1,
                2
            ],
            [
                1,
                3
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of medications prescribed for each brand.",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication) MATCH (T2:Prescribes)\nWITH count(T1.Brand) AS count, T1.Name AS Name\nRETURN COUNT(\"*\"),Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many medications are prescribed for each brand?",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication) MATCH (T2:Prescribes)\nWITH count(T1.Brand) AS count, T1.Name AS Name\nRETURN COUNT(\"*\"),Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians whose position title contains the word 'senior'.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of the physicians who have 'senior' in their titles.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the patient who has the most recent undergoing treatment?",
        "sql_query": "SELECT patient FROM undergoes ORDER BY dateundergoes LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "patient"
            },
            "from": "undergoes",
            "orderby": {
                "value": "dateundergoes"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                100000001
            ]
        ],
        "cypher_query": "MATCH (u:Undergoes)\nRETURN u.Patient\nORDER BY u.DateUndergoes\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Which patient is undergoing the most recent treatment?",
        "sql_query": "SELECT patient FROM undergoes ORDER BY dateundergoes LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "patient"
            },
            "from": "undergoes",
            "orderby": {
                "value": "dateundergoes"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                100000001
            ]
        ],
        "cypher_query": "MATCH (u:Undergoes)\nRETURN u.Patient\nORDER BY u.DateUndergoes\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the names of all patients who have an undergoing treatment and are staying in room 111.",
        "sql_query": "SELECT DISTINCT T2.name FROM undergoes AS T1 JOIN patient AS T2 ON T1.patient = T2.SSN JOIN stay AS T3 ON T1.Stay  =  T3.StayID WHERE T3.room  =  111",
        "parsed_sql": {
            "select": {
                "value": {
                    "distinct": {
                        "value": "T2.name"
                    }
                }
            },
            "from": [
                {
                    "value": "undergoes",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.patient",
                            "T2.SSN"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "stay",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Stay",
                            "T3.StayID"
                        ]
                    }
                }
            ],
            "where": {
                "eq": [
                    "T3.room",
                    111
                ]
            }
        },
        "sql_ans": [
            [
                "John Smith"
            ]
        ],
        "cypher_query": "MATCH (T1:Undergoes) MATCH (T2:Patient) MATCH (T3:Stay) MATCH (T2:Patient) MATCH (T3:Stay)\nWHERE T3.Room = 111\nRETURN DISTINCT T2.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of patients who are staying in room 111 and have an undergoing treatment?",
        "sql_query": "SELECT DISTINCT T2.name FROM undergoes AS T1 JOIN patient AS T2 ON T1.patient = T2.SSN JOIN stay AS T3 ON T1.Stay  =  T3.StayID WHERE T3.room  =  111",
        "parsed_sql": {
            "select": {
                "value": {
                    "distinct": {
                        "value": "T2.name"
                    }
                }
            },
            "from": [
                {
                    "value": "undergoes",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.patient",
                            "T2.SSN"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "stay",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Stay",
                            "T3.StayID"
                        ]
                    }
                }
            ],
            "where": {
                "eq": [
                    "T3.room",
                    111
                ]
            }
        },
        "sql_ans": [
            [
                "John Smith"
            ]
        ],
        "cypher_query": "MATCH (T1:Undergoes) MATCH (T2:Patient) MATCH (T3:Stay) MATCH (T2:Patient) MATCH (T3:Stay)\nWHERE T3.Room = 111\nRETURN DISTINCT T2.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the names of nurses who are nursing an undergoing treatment.",
        "sql_query": "SELECT DISTINCT T2.name FROM undergoes AS T1 JOIN nurse AS T2 ON T1.AssistingNurse  =  T2.EmployeeID",
        "parsed_sql": {
            "select": {
                "value": {
                    "distinct": {
                        "value": "T2.name"
                    }
                }
            },
            "from": [
                {
                    "value": "undergoes",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "nurse",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.AssistingNurse",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ],
        "cypher_query": "MATCH (T1:Undergoes) MATCH (T2:Nurse)\nRETURN DISTINCT T2.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Which nurses are in charge of patients undergoing treatments?",
        "sql_query": "SELECT DISTINCT T2.name FROM undergoes AS T1 JOIN nurse AS T2 ON T1.AssistingNurse  =  T2.EmployeeID",
        "parsed_sql": {
            "select": {
                "value": {
                    "distinct": {
                        "value": "T2.name"
                    }
                }
            },
            "from": [
                {
                    "value": "undergoes",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "nurse",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.AssistingNurse",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ],
        "cypher_query": "MATCH (T1:Undergoes) MATCH (T2:Nurse)\nRETURN DISTINCT T2.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of the physician who prescribed the highest dose?",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN prescribes AS T2 ON T1.employeeid = T2.physician ORDER BY T2.dose DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.dose",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Dorian"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician) MATCH (T2:Prescribes)\nRETURN T1.Name\nORDER BY T2.dose DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the physician who prescribed the highest dose. What is his or her name?",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN prescribes AS T2 ON T1.employeeid = T2.physician ORDER BY T2.dose DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.dose",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Dorian"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician) MATCH (T2:Prescribes)\nRETURN T1.Name\nORDER BY T2.dose DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of patients who are not using the medication of Procrastin-X.",
        "sql_query": "SELECT count(*) FROM patient WHERE SSN NOT IN ( SELECT T1.patient FROM Prescribes AS T1 JOIN Medication AS T2 ON T1.Medication  =  T2.Code WHERE T2.name  =  'Procrastin-X' )",
        "parsed_sql": {
            "select": {
                "value": {
                    "count": "*"
                }
            },
            "from": "patient",
            "where": {
                "nin": [
                    "SSN",
                    {
                        "select": {
                            "value": "T1.patient"
                        },
                        "from": [
                            {
                                "value": "Prescribes",
                                "name": "T1",
                                "is_table": true
                            },
                            {
                                "join": {
                                    "name": "T2",
                                    "value": "Medication",
                                    "is_table": true
                                },
                                "on": {
                                    "eq": [
                                        "T1.Medication",
                                        "T2.Code"
                                    ]
                                }
                            }
                        ],
                        "where": {
                            "eq": [
                                "T2.name",
                                {
                                    "literal": "Procrastin-X"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "sql_ans": [
            [
                3
            ]
        ],
        "cypher_query": "MATCH (p:Patient) MATCH (T1:Prescribes) MATCH (T2:Medication)\nWHERE T2.Name = 'Procrastin-X' AND NOT p.SSN in T1.Patient\nRETURN count(DISTINCT p.SSN)",
        "cypher_ans": [
            [
                0
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many patients are not using Procrastin-X as medication?",
        "sql_query": "SELECT count(*) FROM patient WHERE SSN NOT IN ( SELECT T1.patient FROM Prescribes AS T1 JOIN Medication AS T2 ON T1.Medication  =  T2.Code WHERE T2.name  =  'Procrastin-X' )",
        "parsed_sql": {
            "select": {
                "value": {
                    "count": "*"
                }
            },
            "from": "patient",
            "where": {
                "nin": [
                    "SSN",
                    {
                        "select": {
                            "value": "T1.patient"
                        },
                        "from": [
                            {
                                "value": "Prescribes",
                                "name": "T1",
                                "is_table": true
                            },
                            {
                                "join": {
                                    "name": "T2",
                                    "value": "Medication",
                                    "is_table": true
                                },
                                "on": {
                                    "eq": [
                                        "T1.Medication",
                                        "T2.Code"
                                    ]
                                }
                            }
                        ],
                        "where": {
                            "eq": [
                                "T2.name",
                                {
                                    "literal": "Procrastin-X"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "sql_ans": [
            [
                3
            ]
        ],
        "cypher_query": "MATCH (p:Patient) MATCH (T1:Prescribes) MATCH (T2:Medication)\nWHERE T2.Name = 'Procrastin-X' AND NOT p.SSN in T1.Patient\nRETURN count(DISTINCT p.SSN)",
        "cypher_ans": [
            [
                0
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the names of nurses who are on call.",
        "sql_query": "SELECT DISTINCT T1.name FROM nurse AS T1 JOIN on_call AS T2 ON T1.EmployeeID  =  T2.nurse",
        "parsed_sql": {
            "select": {
                "value": {
                    "distinct": {
                        "value": "T1.name"
                    }
                }
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "on_call",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.EmployeeID",
                            "T2.nurse"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse) MATCH (T2:On_Call)\nRETURN DISTINCT T1.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the distinct names of nurses on call?",
        "sql_query": "SELECT DISTINCT T1.name FROM nurse AS T1 JOIN on_call AS T2 ON T1.EmployeeID  =  T2.nurse",
        "parsed_sql": {
            "select": {
                "value": {
                    "distinct": {
                        "value": "T1.name"
                    }
                }
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "on_call",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.EmployeeID",
                            "T2.nurse"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse) MATCH (T2:On_Call)\nRETURN DISTINCT T1.Name",
        "cypher_ans": []
    }
][
    {
        "db_id": "hospital_1",
        "question": "what is the name and position of the head whose department has least number of employees?",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH T2.Name AS Name, T2.Position AS Position, count(T2.departmentID) AS count\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk",
                "Surgical Attending Physician"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name and position of the head of the department with the least employees.",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH T2.Name AS Name, T2.Position AS Position, count(T2.departmentID) AS count\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk",
                "Surgical Attending Physician"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the patient who made the most recent appointment?",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the patient who made the appointment with the most recent start date.",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many patients do each physician take care of? List their names and number of patients they take care of.",
        "sql_query": "SELECT T1.name ,  count(*) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.PCP"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            }
        },
        "sql_ans": [
            [
                "John Dorian",
                1
            ],
            [
                "Elliot Reid",
                2
            ],
            [
                "Christopher Turk",
                1
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[]-(T2:Patient)\nWITH count(T1.EmployeeID) AS count, T1.Name AS Name\nRETURN Name,COUNT(\"*\")",
        "cypher_ans": [
            [
                "John Dorian",
                1
            ],
            [
                "Elliot Reid",
                1
            ],
            [
                "Christopher Turk",
                1
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Return the name of each physician and the number of patients he or she treats.",
        "sql_query": "SELECT T1.name ,  count(*) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.PCP"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            }
        },
        "sql_ans": [
            [
                "John Dorian",
                1
            ],
            [
                "Elliot Reid",
                2
            ],
            [
                "Christopher Turk",
                1
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[]-(T2:Patient)\nWITH count(T1.EmployeeID) AS count, T1.Name AS Name\nRETURN Name,COUNT(\"*\")",
        "cypher_ans": [
            [
                "John Dorian",
                1
            ],
            [
                "Elliot Reid",
                1
            ],
            [
                "Christopher Turk",
                1
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms located on each block floor.",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block) MATCH (T2:Room)\nWITH count(T1.BlockFloor) AS count, T1.BlockFloor AS BlockFloor\nRETURN COUNT(\"*\"),BlockFloor",
        "cypher_ans": [
            [
                1,
                1
            ],
            [
                1,
                2
            ],
            [
                1,
                3
            ],
            [
                1,
                4
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms does each block floor have?",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block) MATCH (T2:Room)\nWITH count(T1.BlockFloor) AS count, T1.BlockFloor AS BlockFloor\nRETURN COUNT(\"*\"),BlockFloor",
        "cypher_ans": [
            [
                1,
                1
            ],
            [
                1,
                2
            ],
            [
                1,
                3
            ],
            [
                1,
                4
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms for different block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block) MATCH (T2:Room)\nWITH count(T1.BlockCode) AS count, T1.BlockCode AS BlockCode\nRETURN COUNT(\"*\"),BlockCode",
        "cypher_ans": [
            [
                1,
                1
            ],
            [
                1,
                2
            ],
            [
                1,
                3
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms are located for each block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block) MATCH (T2:Room)\nWITH count(T1.BlockCode) AS count, T1.BlockCode AS BlockCode\nRETURN COUNT(\"*\"),BlockCode",
        "cypher_ans": [
            [
                1,
                1
            ],
            [
                1,
                2
            ],
            [
                1,
                3
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of medications prescribed for each brand.",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH T1.Name AS Name, count(T1.Brand) AS count\nRETURN COUNT(\"*\"),Name",
        "cypher_ans": [
            [
                1,
                "Procrastin-X"
            ],
            [
                1,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many medications are prescribed for each brand?",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH T1.Name AS Name, count(T1.Brand) AS count\nRETURN COUNT(\"*\"),Name",
        "cypher_ans": [
            [
                1,
                "Procrastin-X"
            ],
            [
                1,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians whose position title contains the word 'senior'.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of the physicians who have 'senior' in their titles.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the physician who was trained in the most expensive procedure?",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which physician was trained in the procedure that costs the most.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "what is the name and position of the head whose department has least number of employees?",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH count(T2.departmentID) AS count, T2.Name AS Name, T2.Position AS Position\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk",
                "Surgical Attending Physician"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name and position of the head of the department with the least employees.",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH count(T2.departmentID) AS count, T2.Name AS Name, T2.Position AS Position\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk",
                "Surgical Attending Physician"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the patient who made the most recent appointment?",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the patient who made the appointment with the most recent start date.",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many patients do each physician take care of? List their names and number of patients they take care of.",
        "sql_query": "SELECT T1.name ,  count(*) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.PCP"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            }
        },
        "sql_ans": [
            [
                "John Dorian",
                1
            ],
            [
                "Elliot Reid",
                2
            ],
            [
                "Christopher Turk",
                1
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[]-(T2:Patient)\nWITH T1.Name AS Name, count(T1.EmployeeID) AS count\nRETURN Name,COUNT(\"*\")",
        "cypher_ans": [
            [
                "John Dorian",
                1
            ],
            [
                "Elliot Reid",
                1
            ],
            [
                "Christopher Turk",
                1
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Return the name of each physician and the number of patients he or she treats.",
        "sql_query": "SELECT T1.name ,  count(*) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.PCP"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            }
        },
        "sql_ans": [
            [
                "John Dorian",
                1
            ],
            [
                "Elliot Reid",
                2
            ],
            [
                "Christopher Turk",
                1
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[]-(T2:Patient)\nWITH T1.Name AS Name, count(T1.EmployeeID) AS count\nRETURN Name,COUNT(\"*\")",
        "cypher_ans": [
            [
                "John Dorian",
                1
            ],
            [
                "Elliot Reid",
                1
            ],
            [
                "Christopher Turk",
                1
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms located on each block floor.",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block) MATCH (T2:Room)\nWITH count(T1.BlockFloor) AS count, T1.BlockFloor AS BlockFloor\nRETURN COUNT(\"*\"),BlockFloor",
        "cypher_ans": [
            [
                1,
                1
            ],
            [
                1,
                2
            ],
            [
                1,
                3
            ],
            [
                1,
                4
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms does each block floor have?",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block) MATCH (T2:Room)\nWITH count(T1.BlockFloor) AS count, T1.BlockFloor AS BlockFloor\nRETURN COUNT(\"*\"),BlockFloor",
        "cypher_ans": [
            [
                1,
                1
            ],
            [
                1,
                2
            ],
            [
                1,
                3
            ],
            [
                1,
                4
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms for different block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block) MATCH (T2:Room)\nWITH count(T1.BlockCode) AS count, T1.BlockCode AS BlockCode\nRETURN COUNT(\"*\"),BlockCode",
        "cypher_ans": [
            [
                1,
                1
            ],
            [
                1,
                2
            ],
            [
                1,
                3
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms are located for each block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block) MATCH (T2:Room)\nWITH count(T1.BlockCode) AS count, T1.BlockCode AS BlockCode\nRETURN COUNT(\"*\"),BlockCode",
        "cypher_ans": [
            [
                1,
                1
            ],
            [
                1,
                2
            ],
            [
                1,
                3
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of medications prescribed for each brand.",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH count(T1.Brand) AS count, T1.Name AS Name\nRETURN COUNT(\"*\"),Name",
        "cypher_ans": [
            [
                1,
                "Procrastin-X"
            ],
            [
                1,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many medications are prescribed for each brand?",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH count(T1.Brand) AS count, T1.Name AS Name\nRETURN COUNT(\"*\"),Name",
        "cypher_ans": [
            [
                1,
                "Procrastin-X"
            ],
            [
                1,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians whose position title contains the word 'senior'.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of the physicians who have 'senior' in their titles.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the physician who was trained in the most expensive procedure?",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which physician was trained in the procedure that costs the most.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "Which department has the largest number of employees?",
        "sql_query": "SELECT name FROM department GROUP BY departmentID ORDER BY count(departmentID) DESC LIMIT 1;",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "department",
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "General Medicine"
            ]
        ],
        "cypher_query": "MATCH (d:Department)\nWITH d.Name AS Name, count(d.DepartmentID) AS count\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the department with the most employees.",
        "sql_query": "SELECT name FROM department GROUP BY departmentID ORDER BY count(departmentID) DESC LIMIT 1;",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "department",
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "General Medicine"
            ]
        ],
        "cypher_query": "MATCH (d:Department)\nWITH d.Name AS Name, count(d.DepartmentID) AS count\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What is the employee id of the head whose department has the least number of employees?",
        "sql_query": "SELECT head FROM department GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": {
                "value": "head"
            },
            "from": "department",
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                4
            ]
        ],
        "cypher_query": "MATCH (d:Department)\nWITH d.Head AS Head, count(d.DepartmentID) AS count\nRETURN Head\nORDER BY count\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Tell me the employee id of the head of the department with the least employees.",
        "sql_query": "SELECT head FROM department GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": {
                "value": "head"
            },
            "from": "department",
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                4
            ]
        ],
        "cypher_query": "MATCH (d:Department)\nWITH d.Head AS Head, count(d.DepartmentID) AS count\nRETURN Head\nORDER BY count\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "what is the name and position of the head whose department has least number of employees?",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department) MATCH (T2:Physician)\nWITH T2.Position AS Position, T2.Name AS Name, count(T2.departmentID) AS count\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name and position of the head of the department with the least employees.",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department) MATCH (T2:Physician)\nWITH T2.Position AS Position, T2.Name AS Name, count(T2.departmentID) AS count\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are names of patients who made an appointment?",
        "sql_query": "SELECT name FROM appointment AS T1 JOIN patient AS T2 ON T1.patient  =  T2.ssn",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": [
                {
                    "value": "appointment",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.patient",
                            "T2.ssn"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Dennis Doe"
            ],
            [
                "Random J. Patient"
            ]
        ],
        "cypher_query": "MATCH (T1:Appointment) MATCH (T2:Patient)\nRETURN T2.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "List the names of patients who have made appointments.",
        "sql_query": "SELECT name FROM appointment AS T1 JOIN patient AS T2 ON T1.patient  =  T2.ssn",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": [
                {
                    "value": "appointment",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.patient",
                            "T2.ssn"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "John Smith"
            ],
            [
                "Grace Ritchie"
            ],
            [
                "Dennis Doe"
            ],
            [
                "Random J. Patient"
            ]
        ],
        "cypher_query": "MATCH (T1:Appointment) MATCH (T2:Patient)\nRETURN T2.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "what are name and phone number of patients who had more than one appointment?",
        "sql_query": "SELECT name ,  phone FROM appointment AS T1 JOIN patient AS T2 ON T1.patient  =  T2.ssn GROUP BY T1.patient HAVING count(*)  >  1",
        "parsed_sql": {
            "select": [
                {
                    "value": "name"
                },
                {
                    "value": "phone"
                }
            ],
            "from": [
                {
                    "value": "appointment",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.patient",
                            "T2.ssn"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.patient"
            },
            "having": {
                "gt": [
                    {
                        "count": "*"
                    },
                    1
                ]
            }
        },
        "sql_ans": [
            [
                "John Smith",
                "555-0256"
            ],
            [
                "Grace Ritchie",
                "555-0512"
            ],
            [
                "Dennis Doe",
                "555-2048"
            ]
        ],
        "cypher_query": "MATCH (T1:Appointment) MATCH (T2:Patient)\nWITH T2.Name AS Name, COUNT(\"*\") AS COUNT, T2.Phone AS Phone\nWHERE COUNT > 1\nRETURN Name,Phone",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Which patients made more than one appointment? Tell me the name and phone number of these patients.",
        "sql_query": "SELECT name ,  phone FROM appointment AS T1 JOIN patient AS T2 ON T1.patient  =  T2.ssn GROUP BY T1.patient HAVING count(*)  >  1",
        "parsed_sql": {
            "select": [
                {
                    "value": "name"
                },
                {
                    "value": "phone"
                }
            ],
            "from": [
                {
                    "value": "appointment",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.patient",
                            "T2.ssn"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.patient"
            },
            "having": {
                "gt": [
                    {
                        "count": "*"
                    },
                    1
                ]
            }
        },
        "sql_ans": [
            [
                "John Smith",
                "555-0256"
            ],
            [
                "Grace Ritchie",
                "555-0512"
            ],
            [
                "Dennis Doe",
                "555-2048"
            ]
        ],
        "cypher_query": "MATCH (T1:Appointment) MATCH (T2:Patient)\nWITH T2.Name AS Name, COUNT(\"*\") AS COUNT, T2.Phone AS Phone\nWHERE COUNT > 1\nRETURN Name,Phone",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the id of the appointment with the most recent start date?",
        "sql_query": "SELECT appointmentid FROM appointment ORDER BY START DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "appointmentid"
            },
            "from": "appointment",
            "orderby": {
                "value": "START",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                86213939
            ]
        ],
        "cypher_query": "MATCH (a:Appointment)\nRETURN a.AppointmentID\nORDER BY a.Start DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What is the id of the appointment that started most recently?",
        "sql_query": "SELECT appointmentid FROM appointment ORDER BY START DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "appointmentid"
            },
            "from": "appointment",
            "orderby": {
                "value": "START",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                86213939
            ]
        ],
        "cypher_query": "MATCH (a:Appointment)\nRETURN a.AppointmentID\nORDER BY a.Start DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "List the name of physicians who took some appointment.",
        "sql_query": "SELECT T2.name FROM appointment AS T1 JOIN physician AS T2 ON T1.Physician  =  T2.EmployeeID",
        "parsed_sql": {
            "select": {
                "value": "T2.name"
            },
            "from": [
                {
                    "value": "appointment",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Physician",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "John Dorian"
            ],
            [
                "Elliot Reid"
            ],
            [
                "Percival Cox"
            ],
            [
                "Christopher Turk"
            ],
            [
                "Molly Clock"
            ]
        ],
        "cypher_query": "MATCH (T1:Appointment) MATCH (T2:Physician)\nRETURN T2.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of all the physicians who took appointments.",
        "sql_query": "SELECT T2.name FROM appointment AS T1 JOIN physician AS T2 ON T1.Physician  =  T2.EmployeeID",
        "parsed_sql": {
            "select": {
                "value": "T2.name"
            },
            "from": [
                {
                    "value": "appointment",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Physician",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "John Dorian"
            ],
            [
                "Elliot Reid"
            ],
            [
                "Percival Cox"
            ],
            [
                "Christopher Turk"
            ],
            [
                "Molly Clock"
            ]
        ],
        "cypher_query": "MATCH (T1:Appointment) MATCH (T2:Physician)\nRETURN T2.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the patient who made the most recent appointment?",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient) MATCH (T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the patient who made the appointment with the most recent start date.",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient) MATCH (T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many patients' prescriptions are made by physician John Dorian?",
        "sql_query": "SELECT count(T1.SSN) FROM patient AS T1 JOIN prescribes AS T2 ON T1.SSN  =  T2.patient JOIN physician AS T3 ON T2.physician  =  T3.employeeid WHERE T3.name = \"John Dorian\"",
        "parsed_sql": {
            "select": {
                "value": {
                    "count": "T1.SSN"
                }
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.SSN",
                            "T2.patient"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T2.physician",
                            "T3.employeeid"
                        ]
                    }
                }
            ],
            "where": {
                "eq": [
                    "T3.name",
                    "John Dorian"
                ]
            }
        },
        "sql_ans": [
            [
                1
            ]
        ],
        "cypher_query": "MATCH (T1:Patient) MATCH (T2:Prescribes) MATCH (T3:Physician) MATCH (T2:Prescribes) MATCH (T3:Physician)\nWHERE T3.Name = \"John Dorian\"\nRETURN COUNT(T1.SSN)",
        "cypher_ans": [
            [
                0
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of patients' prescriptions physician John Dorian made.",
        "sql_query": "SELECT count(T1.SSN) FROM patient AS T1 JOIN prescribes AS T2 ON T1.SSN  =  T2.patient JOIN physician AS T3 ON T2.physician  =  T3.employeeid WHERE T3.name = \"John Dorian\"",
        "parsed_sql": {
            "select": {
                "value": {
                    "count": "T1.SSN"
                }
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.SSN",
                            "T2.patient"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T2.physician",
                            "T3.employeeid"
                        ]
                    }
                }
            ],
            "where": {
                "eq": [
                    "T3.name",
                    "John Dorian"
                ]
            }
        },
        "sql_ans": [
            [
                1
            ]
        ],
        "cypher_query": "MATCH (T1:Patient) MATCH (T2:Prescribes) MATCH (T3:Physician) MATCH (T2:Prescribes) MATCH (T3:Physician)\nWHERE T3.Name = \"John Dorian\"\nRETURN COUNT(T1.SSN)",
        "cypher_ans": [
            [
                0
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the nurse has the most appointments?",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse) MATCH (T2:Appointment)\nWITH T1.Name AS Name, count(T1.EmployeeID) AS count\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the nurse who has the largest number of appointments.",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse) MATCH (T2:Appointment)\nWITH T1.Name AS Name, count(T1.EmployeeID) AS count\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many patients do each physician take care of? List their names and number of patients they take care of.",
        "sql_query": "SELECT T1.name ,  count(*) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.PCP"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            }
        },
        "sql_ans": [
            [
                "John Dorian",
                1
            ],
            [
                "Elliot Reid",
                2
            ],
            [
                "Christopher Turk",
                1
            ]
        ],
        "cypher_query": "MATCH (T1:Physician) MATCH (T2:Patient)\nWITH T1.Name AS Name, count(T1.EmployeeID) AS count\nRETURN Name,COUNT(\"*\")",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Return the name of each physician and the number of patients he or she treats.",
        "sql_query": "SELECT T1.name ,  count(*) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.PCP"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            }
        },
        "sql_ans": [
            [
                "John Dorian",
                1
            ],
            [
                "Elliot Reid",
                2
            ],
            [
                "Christopher Turk",
                1
            ]
        ],
        "cypher_query": "MATCH (T1:Physician) MATCH (T2:Patient)\nWITH T1.Name AS Name, count(T1.EmployeeID) AS count\nRETURN Name,COUNT(\"*\")",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians who are in charge of more than one patient.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid HAVING count(*)  >  1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.PCP"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "having": {
                "gt": [
                    {
                        "count": "*"
                    },
                    1
                ]
            }
        },
        "sql_ans": [
            [
                "Elliot Reid"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician) MATCH (T2:Patient)\nWITH T1.Name AS Name, COUNT(\"*\") AS COUNT\nWHERE COUNT > 1\nRETURN Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Which physicians are in charge of more than one patient? Give me their names.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid HAVING count(*)  >  1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.PCP"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "having": {
                "gt": [
                    {
                        "count": "*"
                    },
                    1
                ]
            }
        },
        "sql_ans": [
            [
                "Elliot Reid"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician) MATCH (T2:Patient)\nWITH T1.Name AS Name, COUNT(\"*\") AS COUNT\nWHERE COUNT > 1\nRETURN Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms located on each block floor.",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block) MATCH (T2:Room)\nWITH count(T1.BlockFloor) AS count, T1.BlockFloor AS BlockFloor\nRETURN COUNT(\"*\"),BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms does each block floor have?",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block) MATCH (T2:Room)\nWITH count(T1.BlockFloor) AS count, T1.BlockFloor AS BlockFloor\nRETURN COUNT(\"*\"),BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms for different block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block) MATCH (T2:Room)\nWITH T1.BlockCode AS BlockCode, count(T1.BlockCode) AS count\nRETURN COUNT(\"*\"),BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms are located for each block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block) MATCH (T2:Room)\nWITH T1.BlockCode AS BlockCode, count(T1.BlockCode) AS count\nRETURN COUNT(\"*\"),BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many different types of rooms are there?",
        "sql_query": "SELECT count(DISTINCT roomtype) FROM room",
        "parsed_sql": {
            "select": {
                "value": {
                    "count": {
                        "distinct": {
                            "value": "roomtype"
                        }
                    }
                }
            },
            "from": "room"
        },
        "sql_ans": [
            [
                1
            ]
        ],
        "cypher_query": "MATCH (r:Room)\nWITH DISTINCT r.RoomType AS roomtype\nRETURN count(roomtype)",
        "cypher_ans": [
            [
                0
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of distinct room types available.",
        "sql_query": "SELECT count(DISTINCT roomtype) FROM room",
        "parsed_sql": {
            "select": {
                "value": {
                    "count": {
                        "distinct": {
                            "value": "roomtype"
                        }
                    }
                }
            },
            "from": "room"
        },
        "sql_ans": [
            [
                1
            ]
        ],
        "cypher_query": "MATCH (r:Room)\nWITH DISTINCT r.RoomType AS roomtype\nRETURN count(roomtype)",
        "cypher_ans": [
            [
                0
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of medications prescribed for each brand.",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication) MATCH (T2:Prescribes)\nWITH T1.Name AS Name, count(T1.Brand) AS count\nRETURN COUNT(\"*\"),Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many medications are prescribed for each brand?",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication) MATCH (T2:Prescribes)\nWITH T1.Name AS Name, count(T1.Brand) AS count\nRETURN COUNT(\"*\"),Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians whose position title contains the word 'senior'.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of the physicians who have 'senior' in their titles.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the patient who has the most recent undergoing treatment?",
        "sql_query": "SELECT patient FROM undergoes ORDER BY dateundergoes LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "patient"
            },
            "from": "undergoes",
            "orderby": {
                "value": "dateundergoes"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                100000001
            ]
        ],
        "cypher_query": "MATCH (u:Undergoes)\nRETURN u.Patient\nORDER BY u.DateUndergoes\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Which patient is undergoing the most recent treatment?",
        "sql_query": "SELECT patient FROM undergoes ORDER BY dateundergoes LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "patient"
            },
            "from": "undergoes",
            "orderby": {
                "value": "dateundergoes"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                100000001
            ]
        ],
        "cypher_query": "MATCH (u:Undergoes)\nRETURN u.Patient\nORDER BY u.DateUndergoes\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the names of all patients who have an undergoing treatment and are staying in room 111.",
        "sql_query": "SELECT DISTINCT T2.name FROM undergoes AS T1 JOIN patient AS T2 ON T1.patient = T2.SSN JOIN stay AS T3 ON T1.Stay  =  T3.StayID WHERE T3.room  =  111",
        "parsed_sql": {
            "select": {
                "value": {
                    "distinct": {
                        "value": "T2.name"
                    }
                }
            },
            "from": [
                {
                    "value": "undergoes",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.patient",
                            "T2.SSN"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "stay",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Stay",
                            "T3.StayID"
                        ]
                    }
                }
            ],
            "where": {
                "eq": [
                    "T3.room",
                    111
                ]
            }
        },
        "sql_ans": [
            [
                "John Smith"
            ]
        ],
        "cypher_query": "MATCH (T1:Undergoes) MATCH (T2:Patient) MATCH (T3:Stay) MATCH (T2:Patient) MATCH (T3:Stay)\nWHERE T3.Room = 111\nRETURN DISTINCT T2.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of patients who are staying in room 111 and have an undergoing treatment?",
        "sql_query": "SELECT DISTINCT T2.name FROM undergoes AS T1 JOIN patient AS T2 ON T1.patient = T2.SSN JOIN stay AS T3 ON T1.Stay  =  T3.StayID WHERE T3.room  =  111",
        "parsed_sql": {
            "select": {
                "value": {
                    "distinct": {
                        "value": "T2.name"
                    }
                }
            },
            "from": [
                {
                    "value": "undergoes",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.patient",
                            "T2.SSN"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "stay",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Stay",
                            "T3.StayID"
                        ]
                    }
                }
            ],
            "where": {
                "eq": [
                    "T3.room",
                    111
                ]
            }
        },
        "sql_ans": [
            [
                "John Smith"
            ]
        ],
        "cypher_query": "MATCH (T1:Undergoes) MATCH (T2:Patient) MATCH (T3:Stay) MATCH (T2:Patient) MATCH (T3:Stay)\nWHERE T3.Room = 111\nRETURN DISTINCT T2.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "List the names of all distinct nurses ordered by alphabetical order?",
        "sql_query": "SELECT DISTINCT name FROM nurse ORDER BY name",
        "parsed_sql": {
            "select": {
                "value": {
                    "distinct": {
                        "value": "name"
                    }
                }
            },
            "from": "nurse",
            "orderby": {
                "value": "name"
            }
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ],
        "cypher_query": "MATCH (n:Nurse)\nRETURN DISTINCT n.Name\nORDER BY n.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What is the alphabetically ordered list of all the distinct names of nurses?",
        "sql_query": "SELECT DISTINCT name FROM nurse ORDER BY name",
        "parsed_sql": {
            "select": {
                "value": {
                    "distinct": {
                        "value": "name"
                    }
                }
            },
            "from": "nurse",
            "orderby": {
                "value": "name"
            }
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ],
        "cypher_query": "MATCH (n:Nurse)\nRETURN DISTINCT n.Name\nORDER BY n.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the names of nurses who are nursing an undergoing treatment.",
        "sql_query": "SELECT DISTINCT T2.name FROM undergoes AS T1 JOIN nurse AS T2 ON T1.AssistingNurse  =  T2.EmployeeID",
        "parsed_sql": {
            "select": {
                "value": {
                    "distinct": {
                        "value": "T2.name"
                    }
                }
            },
            "from": [
                {
                    "value": "undergoes",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "nurse",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.AssistingNurse",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ],
        "cypher_query": "MATCH (T1:Undergoes) MATCH (T2:Nurse)\nRETURN DISTINCT T2.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Which nurses are in charge of patients undergoing treatments?",
        "sql_query": "SELECT DISTINCT T2.name FROM undergoes AS T1 JOIN nurse AS T2 ON T1.AssistingNurse  =  T2.EmployeeID",
        "parsed_sql": {
            "select": {
                "value": {
                    "distinct": {
                        "value": "T2.name"
                    }
                }
            },
            "from": [
                {
                    "value": "undergoes",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "nurse",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.AssistingNurse",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ],
        "cypher_query": "MATCH (T1:Undergoes) MATCH (T2:Nurse)\nRETURN DISTINCT T2.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "List the names of all distinct medications, ordered in an alphabetical order.",
        "sql_query": "SELECT DISTINCT name FROM medication ORDER BY name",
        "parsed_sql": {
            "select": {
                "value": {
                    "distinct": {
                        "value": "name"
                    }
                }
            },
            "from": "medication",
            "orderby": {
                "value": "name"
            }
        },
        "sql_ans": [
            [
                "Awakin"
            ],
            [
                "Crescavitin"
            ],
            [
                "Melioraurin"
            ],
            [
                "Procrastin-X"
            ],
            [
                "Thesisin"
            ]
        ],
        "cypher_query": "MATCH (m:Medication)\nRETURN DISTINCT m.Name\nORDER BY m.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What is the alphabetically ordered list of all distinct medications?",
        "sql_query": "SELECT DISTINCT name FROM medication ORDER BY name",
        "parsed_sql": {
            "select": {
                "value": {
                    "distinct": {
                        "value": "name"
                    }
                }
            },
            "from": "medication",
            "orderby": {
                "value": "name"
            }
        },
        "sql_ans": [
            [
                "Awakin"
            ],
            [
                "Crescavitin"
            ],
            [
                "Melioraurin"
            ],
            [
                "Procrastin-X"
            ],
            [
                "Thesisin"
            ]
        ],
        "cypher_query": "MATCH (m:Medication)\nRETURN DISTINCT m.Name\nORDER BY m.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of the physician who prescribed the highest dose?",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN prescribes AS T2 ON T1.employeeid = T2.physician ORDER BY T2.dose DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.dose",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Dorian"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician) MATCH (T2:Prescribes)\nRETURN T1.Name\nORDER BY T2.dose DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the physician who prescribed the highest dose. What is his or her name?",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN prescribes AS T2 ON T1.employeeid = T2.physician ORDER BY T2.dose DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.dose",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Dorian"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician) MATCH (T2:Prescribes)\nRETURN T1.Name\nORDER BY T2.dose DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the highest cost, lowest cost and average cost of procedures?",
        "sql_query": "SELECT MAX(cost) ,  MIN(cost) ,  AVG(cost) FROM procedures",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "max": "cost"
                    }
                },
                {
                    "value": {
                        "min": "cost"
                    }
                },
                {
                    "value": {
                        "avg": "cost"
                    }
                }
            ],
            "from": "procedures"
        },
        "sql_ans": [
            [
                10000.0,
                25.0,
                4324.857142857143
            ]
        ],
        "cypher_query": "MATCH (p:Procedures)\nRETURN MAX(p.Cost),MIN(p.Cost),AVG(p.Cost)",
        "cypher_ans": [
            [
                null,
                null,
                null
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Tell me the highest, lowest, and average cost of procedures.",
        "sql_query": "SELECT MAX(cost) ,  MIN(cost) ,  AVG(cost) FROM procedures",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "max": "cost"
                    }
                },
                {
                    "value": {
                        "min": "cost"
                    }
                },
                {
                    "value": {
                        "avg": "cost"
                    }
                }
            ],
            "from": "procedures"
        },
        "sql_ans": [
            [
                10000.0,
                25.0,
                4324.857142857143
            ]
        ],
        "cypher_query": "MATCH (p:Procedures)\nRETURN MAX(p.Cost),MIN(p.Cost),AVG(p.Cost)",
        "cypher_ans": [
            [
                null,
                null,
                null
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "List the name and cost of all procedures sorted by the cost from the highest to the lowest.",
        "sql_query": "SELECT name ,  cost FROM procedures ORDER BY cost DESC",
        "parsed_sql": {
            "select": [
                {
                    "value": "name"
                },
                {
                    "value": "cost"
                }
            ],
            "from": "procedures",
            "orderby": {
                "value": "cost",
                "sort": "desc"
            }
        },
        "sql_ans": [
            [
                "Complete Walletectomy",
                10000.0
            ],
            [
                "Reversible Pancreomyoplasty",
                5600.0
            ],
            [
                "Obfuscated Dermogastrotomy",
                4899.0
            ],
            [
                "Folded Demiophtalmectomy",
                4500.0
            ],
            [
                "Obtuse Pyloric Recombobulation",
                3750.0
            ],
            [
                "Reverse Rhinopodoplasty",
                1500.0
            ],
            [
                "Follicular Demiectomy",
                25.0
            ]
        ],
        "cypher_query": "MATCH (p:Procedures)\nRETURN p.Name,p.Cost\nORDER BY p.Cost DESC",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Sort the list of names and costs of all procedures in the descending order of cost.",
        "sql_query": "SELECT name ,  cost FROM procedures ORDER BY cost DESC",
        "parsed_sql": {
            "select": [
                {
                    "value": "name"
                },
                {
                    "value": "cost"
                }
            ],
            "from": "procedures",
            "orderby": {
                "value": "cost",
                "sort": "desc"
            }
        },
        "sql_ans": [
            [
                "Complete Walletectomy",
                10000.0
            ],
            [
                "Reversible Pancreomyoplasty",
                5600.0
            ],
            [
                "Obfuscated Dermogastrotomy",
                4899.0
            ],
            [
                "Folded Demiophtalmectomy",
                4500.0
            ],
            [
                "Obtuse Pyloric Recombobulation",
                3750.0
            ],
            [
                "Reverse Rhinopodoplasty",
                1500.0
            ],
            [
                "Follicular Demiectomy",
                25.0
            ]
        ],
        "cypher_query": "MATCH (p:Procedures)\nRETURN p.Name,p.Cost\nORDER BY p.Cost DESC",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the three most expensive procedures.",
        "sql_query": "SELECT name FROM procedures ORDER BY cost LIMIT 3",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "procedures",
            "orderby": {
                "value": "cost"
            },
            "limit": 3
        },
        "sql_ans": [
            [
                "Follicular Demiectomy"
            ],
            [
                "Reverse Rhinopodoplasty"
            ],
            [
                "Obtuse Pyloric Recombobulation"
            ]
        ],
        "cypher_query": "MATCH (p:Procedures)\nRETURN p.Name\nORDER BY p.Cost\nLIMIT 3",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the three most costly procedures?",
        "sql_query": "SELECT name FROM procedures ORDER BY cost LIMIT 3",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "procedures",
            "orderby": {
                "value": "cost"
            },
            "limit": 3
        },
        "sql_ans": [
            [
                "Follicular Demiectomy"
            ],
            [
                "Reverse Rhinopodoplasty"
            ],
            [
                "Obtuse Pyloric Recombobulation"
            ]
        ],
        "cypher_query": "MATCH (p:Procedures)\nRETURN p.Name\nORDER BY p.Cost\nLIMIT 3",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the physicians who are trained in a procedure that costs more than 5000.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment WHERE T3.cost  >  5000",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "where": {
                "gt": [
                    "T3.cost",
                    5000
                ]
            }
        },
        "sql_ans": [
            [
                "Christopher Turk"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T3.Cost > 5000\nRETURN T1.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Which physicians are trained in procedures that are more expensive than 5000?",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment WHERE T3.cost  >  5000",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "where": {
                "gt": [
                    "T3.cost",
                    5000
                ]
            }
        },
        "sql_ans": [
            [
                "Christopher Turk"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T3.Cost > 5000\nRETURN T1.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the physician who was trained in the most expensive procedure?",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Which physician was trained in the procedure that costs the most.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What is the average cost of procedures that physician John Wen was trained in?",
        "sql_query": "SELECT avg(T3.cost) FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment WHERE T1.name  =  \"John Wen\"",
        "parsed_sql": {
            "select": {
                "value": {
                    "avg": "T3.cost"
                }
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "where": {
                "eq": [
                    "T1.name",
                    "John Wen"
                ]
            }
        },
        "sql_ans": [
            [
                4324.857142857143
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T1.Name = \"John Wen\"\nRETURN AVG(T3.Cost)",
        "cypher_ans": [
            [
                null
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Compute the mean price of procedures physician John Wen was trained in.",
        "sql_query": "SELECT avg(T3.cost) FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment WHERE T1.name  =  \"John Wen\"",
        "parsed_sql": {
            "select": {
                "value": {
                    "avg": "T3.cost"
                }
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "where": {
                "eq": [
                    "T1.name",
                    "John Wen"
                ]
            }
        },
        "sql_ans": [
            [
                4324.857142857143
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T1.Name = \"John Wen\"\nRETURN AVG(T3.Cost)",
        "cypher_ans": [
            [
                null
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the names of procedures which physician John Wen was trained in.",
        "sql_query": "SELECT T3.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment WHERE T1.name  =  \"John Wen\"",
        "parsed_sql": {
            "select": {
                "value": "T3.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "where": {
                "eq": [
                    "T1.name",
                    "John Wen"
                ]
            }
        },
        "sql_ans": [
            [
                "Reverse Rhinopodoplasty"
            ],
            [
                "Obtuse Pyloric Recombobulation"
            ],
            [
                "Folded Demiophtalmectomy"
            ],
            [
                "Complete Walletectomy"
            ],
            [
                "Obfuscated Dermogastrotomy"
            ],
            [
                "Reversible Pancreomyoplasty"
            ],
            [
                "Follicular Demiectomy"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T1.Name = \"John Wen\"\nRETURN T3.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of procedures physician John Wen was trained in?",
        "sql_query": "SELECT T3.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment WHERE T1.name  =  \"John Wen\"",
        "parsed_sql": {
            "select": {
                "value": "T3.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "where": {
                "eq": [
                    "T1.name",
                    "John Wen"
                ]
            }
        },
        "sql_ans": [
            [
                "Reverse Rhinopodoplasty"
            ],
            [
                "Obtuse Pyloric Recombobulation"
            ],
            [
                "Folded Demiophtalmectomy"
            ],
            [
                "Complete Walletectomy"
            ],
            [
                "Obfuscated Dermogastrotomy"
            ],
            [
                "Reversible Pancreomyoplasty"
            ],
            [
                "Follicular Demiectomy"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nWHERE T1.Name = \"John Wen\"\nRETURN T3.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians who are affiliated with Surgery or Psychiatry department.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN affiliated_with AS T2 ON T1.EmployeeID  =  T2.physician JOIN department AS T3 ON T2.department  =  T3.DepartmentID WHERE T3.name  =  'Surgery' OR T3.name  =  'Psychiatry'",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "affiliated_with",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.EmployeeID",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "department",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T2.department",
                            "T3.DepartmentID"
                        ]
                    }
                }
            ],
            "where": {
                "or": [
                    {
                        "eq": [
                            "T3.name",
                            {
                                "literal": "Surgery"
                            }
                        ]
                    },
                    {
                        "eq": [
                            "T3.name",
                            {
                                "literal": "Psychiatry"
                            }
                        ]
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Christopher Turk"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "John Wen"
            ],
            [
                "Molly Clock"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Affiliated_With]-(T3:Department)\nWHERE T3.Name = 'Surgery' OR T3.Name = 'Psychiatry'\nRETURN T1.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Which physicians are affiliated with either Surgery or Psychiatry department? Give me their names.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN affiliated_with AS T2 ON T1.EmployeeID  =  T2.physician JOIN department AS T3 ON T2.department  =  T3.DepartmentID WHERE T3.name  =  'Surgery' OR T3.name  =  'Psychiatry'",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "affiliated_with",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.EmployeeID",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "department",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T2.department",
                            "T3.DepartmentID"
                        ]
                    }
                }
            ],
            "where": {
                "or": [
                    {
                        "eq": [
                            "T3.name",
                            {
                                "literal": "Surgery"
                            }
                        ]
                    },
                    {
                        "eq": [
                            "T3.name",
                            {
                                "literal": "Psychiatry"
                            }
                        ]
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Christopher Turk"
            ],
            [
                "Todd Quinlan"
            ],
            [
                "John Wen"
            ],
            [
                "Molly Clock"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Affiliated_With]-(T3:Department)\nWHERE T3.Name = 'Surgery' OR T3.Name = 'Psychiatry'\nRETURN T1.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of patients who are not using the medication of Procrastin-X.",
        "sql_query": "SELECT count(*) FROM patient WHERE SSN NOT IN ( SELECT T1.patient FROM Prescribes AS T1 JOIN Medication AS T2 ON T1.Medication  =  T2.Code WHERE T2.name  =  'Procrastin-X' )",
        "parsed_sql": {
            "select": {
                "value": {
                    "count": "*"
                }
            },
            "from": "patient",
            "where": {
                "nin": [
                    "SSN",
                    {
                        "select": {
                            "value": "T1.patient"
                        },
                        "from": [
                            {
                                "value": "Prescribes",
                                "name": "T1",
                                "is_table": true
                            },
                            {
                                "join": {
                                    "name": "T2",
                                    "value": "Medication",
                                    "is_table": true
                                },
                                "on": {
                                    "eq": [
                                        "T1.Medication",
                                        "T2.Code"
                                    ]
                                }
                            }
                        ],
                        "where": {
                            "eq": [
                                "T2.name",
                                {
                                    "literal": "Procrastin-X"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "sql_ans": [
            [
                3
            ]
        ],
        "cypher_query": "MATCH (p:Patient) MATCH (T1:Prescribes) MATCH (T2:Medication)\nWHERE T2.Name = 'Procrastin-X' AND NOT p.SSN in T1.Patient\nRETURN count(DISTINCT p.SSN)",
        "cypher_ans": [
            [
                0
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many patients are not using Procrastin-X as medication?",
        "sql_query": "SELECT count(*) FROM patient WHERE SSN NOT IN ( SELECT T1.patient FROM Prescribes AS T1 JOIN Medication AS T2 ON T1.Medication  =  T2.Code WHERE T2.name  =  'Procrastin-X' )",
        "parsed_sql": {
            "select": {
                "value": {
                    "count": "*"
                }
            },
            "from": "patient",
            "where": {
                "nin": [
                    "SSN",
                    {
                        "select": {
                            "value": "T1.patient"
                        },
                        "from": [
                            {
                                "value": "Prescribes",
                                "name": "T1",
                                "is_table": true
                            },
                            {
                                "join": {
                                    "name": "T2",
                                    "value": "Medication",
                                    "is_table": true
                                },
                                "on": {
                                    "eq": [
                                        "T1.Medication",
                                        "T2.Code"
                                    ]
                                }
                            }
                        ],
                        "where": {
                            "eq": [
                                "T2.name",
                                {
                                    "literal": "Procrastin-X"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "sql_ans": [
            [
                3
            ]
        ],
        "cypher_query": "MATCH (p:Patient) MATCH (T1:Prescribes) MATCH (T2:Medication)\nWHERE T2.Name = 'Procrastin-X' AND NOT p.SSN in T1.Patient\nRETURN count(DISTINCT p.SSN)",
        "cypher_ans": [
            [
                0
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many appointments are there?",
        "sql_query": "SELECT count(*) FROM appointment",
        "parsed_sql": {
            "select": {
                "value": {
                    "count": "*"
                }
            },
            "from": "appointment"
        },
        "sql_ans": [
            [
                9
            ]
        ],
        "cypher_query": "MATCH (a:Appointment)\nRETURN COUNT(\"*\")",
        "cypher_ans": [
            [
                0
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Count how many appointments have been made in total.",
        "sql_query": "SELECT count(*) FROM appointment",
        "parsed_sql": {
            "select": {
                "value": {
                    "count": "*"
                }
            },
            "from": "appointment"
        },
        "sql_ans": [
            [
                9
            ]
        ],
        "cypher_query": "MATCH (a:Appointment)\nRETURN COUNT(\"*\")",
        "cypher_ans": [
            [
                0
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the names of nurses who are on call.",
        "sql_query": "SELECT DISTINCT T1.name FROM nurse AS T1 JOIN on_call AS T2 ON T1.EmployeeID  =  T2.nurse",
        "parsed_sql": {
            "select": {
                "value": {
                    "distinct": {
                        "value": "T1.name"
                    }
                }
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "on_call",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.EmployeeID",
                            "T2.nurse"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse) MATCH (T2:On_Call)\nRETURN DISTINCT T1.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the distinct names of nurses on call?",
        "sql_query": "SELECT DISTINCT T1.name FROM nurse AS T1 JOIN on_call AS T2 ON T1.EmployeeID  =  T2.nurse",
        "parsed_sql": {
            "select": {
                "value": {
                    "distinct": {
                        "value": "T1.name"
                    }
                }
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "on_call",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.EmployeeID",
                            "T2.nurse"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ],
            [
                "Laverne Roberts"
            ],
            [
                "Paul Flowers"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse) MATCH (T2:On_Call)\nRETURN DISTINCT T1.Name",
        "cypher_ans": []
    }
][
    {
        "db_id": "department_management",
        "question": "Which department has more than 1 head at a time? List the id, name and the number of heads.",
        "sql_query": "SELECT T1.department_id ,  T1.name ,  count(*) FROM management AS T2 JOIN department AS T1 ON T1.department_id  =  T2.department_id GROUP BY T1.department_id HAVING count(*)  >  1",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.department_id"
                },
                {
                    "value": "T1.name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "management",
                    "name": "T2",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T1",
                        "value": "department",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.department_id",
                            "T2.department_id"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.department_id"
            },
            "having": {
                "gt": [
                    {
                        "count": "*"
                    },
                    1
                ]
            }
        },
        "sql_ans": [
            [
                2,
                "Treasury",
                2
            ]
        ],
        "cypher_query": "MATCH ()-[T2:management]-(T1:department)\nWITH T1.Department_ID AS Department_ID, COUNT(\"*\") AS COUNT, T1.Name AS Name\nWHERE COUNT > 1\nRETURN Department_ID,Name,COUNT(\"*\")",
        "cypher_ans": [
            [
                2,
                "Treasury",
                1
            ]
        ]
    }
][
    {
        "db_id": "musical",
        "question": "Show names of musicals and the number of actors who have appeared in the musicals.",
        "sql_query": "SELECT T2.Name ,  COUNT(*) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID GROUP BY T1.Musical_ID",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.Name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "actor",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "musical",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Musical_ID",
                            "T2.Musical_ID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.Musical_ID"
            }
        },
        "sql_ans": [
            [
                "The Phantom of the Opera",
                2
            ],
            [
                "Les Mis\u00e9rables",
                2
            ],
            [
                "West Side Story",
                1
            ],
            [
                "The Book of Mormon",
                4
            ]
        ],
        "cypher_query": "MATCH (T1:actor)-[]-(T2:musical)\nWITH T2.Name AS Name, count(T1.Musical_ID) AS count\nRETURN Name,COUNT(\"*\")",
        "cypher_ans": [
            [
                "The Phantom of the Opera",
                1
            ],
            [
                "Les Mis\u00e9rables",
                1
            ],
            [
                "West Side Story",
                1
            ],
            [
                "The Book of Mormon",
                1
            ]
        ]
    },
    {
        "db_id": "musical",
        "question": "How many actors have appeared in each musical?",
        "sql_query": "SELECT T2.Name ,  COUNT(*) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID GROUP BY T1.Musical_ID",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.Name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "actor",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "musical",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Musical_ID",
                            "T2.Musical_ID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.Musical_ID"
            }
        },
        "sql_ans": [
            [
                "The Phantom of the Opera",
                2
            ],
            [
                "Les Mis\u00e9rables",
                2
            ],
            [
                "West Side Story",
                1
            ],
            [
                "The Book of Mormon",
                4
            ]
        ],
        "cypher_query": "MATCH (T1:actor)-[]-(T2:musical)\nWITH T2.Name AS Name, count(T1.Musical_ID) AS count\nRETURN Name,COUNT(\"*\")",
        "cypher_ans": [
            [
                "The Phantom of the Opera",
                1
            ],
            [
                "Les Mis\u00e9rables",
                1
            ],
            [
                "West Side Story",
                1
            ],
            [
                "The Book of Mormon",
                1
            ]
        ]
    },
    {
        "db_id": "musical",
        "question": "Show different nominees and the number of musicals they have been nominated.",
        "sql_query": "SELECT Nominee ,  COUNT(*) FROM musical GROUP BY Nominee",
        "parsed_sql": {
            "select": [
                {
                    "value": "Nominee"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": "musical",
            "groupby": {
                "value": "Nominee"
            }
        },
        "sql_ans": [
            [
                "Bob Fosse",
                5
            ],
            [
                "Cleavant Derricks",
                2
            ]
        ],
        "cypher_query": "MATCH (m:musical)\nWITH m.Nominee AS Nominee, count(m.Nominee) AS count\nRETURN Nominee,COUNT(\"*\")",
        "cypher_ans": [
            [
                "Bob Fosse",
                1
            ],
            [
                "Cleavant Derricks",
                1
            ]
        ]
    },
    {
        "db_id": "musical",
        "question": "How many musicals has each nominee been nominated for?",
        "sql_query": "SELECT Nominee ,  COUNT(*) FROM musical GROUP BY Nominee",
        "parsed_sql": {
            "select": [
                {
                    "value": "Nominee"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": "musical",
            "groupby": {
                "value": "Nominee"
            }
        },
        "sql_ans": [
            [
                "Bob Fosse",
                5
            ],
            [
                "Cleavant Derricks",
                2
            ]
        ],
        "cypher_query": "MATCH (m:musical)\nWITH m.Nominee AS Nominee, count(m.Nominee) AS count\nRETURN Nominee,COUNT(\"*\")",
        "cypher_ans": [
            [
                "Bob Fosse",
                1
            ],
            [
                "Cleavant Derricks",
                1
            ]
        ]
    }
][
    {
        "db_id": "musical",
        "question": "Show names of musicals and the number of actors who have appeared in the musicals.",
        "sql_query": "SELECT T2.Name ,  COUNT(*) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID GROUP BY T1.Musical_ID",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.Name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "actor",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "musical",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Musical_ID",
                            "T2.Musical_ID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.Musical_ID"
            }
        },
        "sql_ans": [
            [
                "The Phantom of the Opera",
                2
            ],
            [
                "Les Mis\u00e9rables",
                2
            ],
            [
                "West Side Story",
                1
            ],
            [
                "The Book of Mormon",
                4
            ]
        ],
        "cypher_query": "MATCH (T1:actor)-[]-(T2:musical)\nWITH T2.Name AS Name, count(T1.Musical_ID) AS count\nRETURN Name,COUNT(\"*\")",
        "cypher_ans": [
            [
                "The Phantom of the Opera",
                1
            ],
            [
                "Les Mis\u00e9rables",
                1
            ],
            [
                "West Side Story",
                1
            ],
            [
                "The Book of Mormon",
                1
            ]
        ]
    },
    {
        "db_id": "musical",
        "question": "How many actors have appeared in each musical?",
        "sql_query": "SELECT T2.Name ,  COUNT(*) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID GROUP BY T1.Musical_ID",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.Name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "actor",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "musical",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Musical_ID",
                            "T2.Musical_ID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.Musical_ID"
            }
        },
        "sql_ans": [
            [
                "The Phantom of the Opera",
                2
            ],
            [
                "Les Mis\u00e9rables",
                2
            ],
            [
                "West Side Story",
                1
            ],
            [
                "The Book of Mormon",
                4
            ]
        ],
        "cypher_query": "MATCH (T1:actor)-[]-(T2:musical)\nWITH T2.Name AS Name, count(T1.Musical_ID) AS count\nRETURN Name,COUNT(\"*\")",
        "cypher_ans": [
            [
                "The Phantom of the Opera",
                1
            ],
            [
                "Les Mis\u00e9rables",
                1
            ],
            [
                "West Side Story",
                1
            ],
            [
                "The Book of Mormon",
                1
            ]
        ]
    },
    {
        "db_id": "musical",
        "question": "Show different nominees and the number of musicals they have been nominated.",
        "sql_query": "SELECT Nominee ,  COUNT(*) FROM musical GROUP BY Nominee",
        "parsed_sql": {
            "select": [
                {
                    "value": "Nominee"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": "musical",
            "groupby": {
                "value": "Nominee"
            }
        },
        "sql_ans": [
            [
                "Bob Fosse",
                5
            ],
            [
                "Cleavant Derricks",
                2
            ]
        ],
        "cypher_query": "MATCH (m:musical)\nWITH count(m.Nominee) AS count, m.Nominee AS Nominee\nRETURN Nominee,COUNT(\"*\")",
        "cypher_ans": [
            [
                "Bob Fosse",
                1
            ],
            [
                "Cleavant Derricks",
                1
            ]
        ]
    },
    {
        "db_id": "musical",
        "question": "How many musicals has each nominee been nominated for?",
        "sql_query": "SELECT Nominee ,  COUNT(*) FROM musical GROUP BY Nominee",
        "parsed_sql": {
            "select": [
                {
                    "value": "Nominee"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": "musical",
            "groupby": {
                "value": "Nominee"
            }
        },
        "sql_ans": [
            [
                "Bob Fosse",
                5
            ],
            [
                "Cleavant Derricks",
                2
            ]
        ],
        "cypher_query": "MATCH (m:musical)\nWITH count(m.Nominee) AS count, m.Nominee AS Nominee\nRETURN Nominee,COUNT(\"*\")",
        "cypher_ans": [
            [
                "Bob Fosse",
                1
            ],
            [
                "Cleavant Derricks",
                1
            ]
        ]
    }
][
    {
        "db_id": "musical",
        "question": "Show names of musicals and the number of actors who have appeared in the musicals.",
        "sql_query": "SELECT T2.Name ,  COUNT(*) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID GROUP BY T1.Musical_ID",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.Name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "actor",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "musical",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Musical_ID",
                            "T2.Musical_ID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.Musical_ID"
            }
        },
        "sql_ans": [
            [
                "The Phantom of the Opera",
                2
            ],
            [
                "Les Mis\u00e9rables",
                2
            ],
            [
                "West Side Story",
                1
            ],
            [
                "The Book of Mormon",
                4
            ]
        ],
        "cypher_query": "MATCH (T1:actor)-[]-(T2:musical)\nWITH count(T1.Musical_ID) AS count, T2.Name AS Name\nRETURN Name,COUNT(\"*\")",
        "cypher_ans": [
            [
                "The Phantom of the Opera",
                1
            ],
            [
                "Les Mis\u00e9rables",
                1
            ],
            [
                "West Side Story",
                1
            ],
            [
                "The Book of Mormon",
                1
            ]
        ]
    },
    {
        "db_id": "musical",
        "question": "How many actors have appeared in each musical?",
        "sql_query": "SELECT T2.Name ,  COUNT(*) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID GROUP BY T1.Musical_ID",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.Name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "actor",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "musical",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Musical_ID",
                            "T2.Musical_ID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.Musical_ID"
            }
        },
        "sql_ans": [
            [
                "The Phantom of the Opera",
                2
            ],
            [
                "Les Mis\u00e9rables",
                2
            ],
            [
                "West Side Story",
                1
            ],
            [
                "The Book of Mormon",
                4
            ]
        ],
        "cypher_query": "MATCH (T1:actor)-[]-(T2:musical)\nWITH count(T1.Musical_ID) AS count, T2.Name AS Name\nRETURN Name,COUNT(\"*\")",
        "cypher_ans": [
            [
                "The Phantom of the Opera",
                1
            ],
            [
                "Les Mis\u00e9rables",
                1
            ],
            [
                "West Side Story",
                1
            ],
            [
                "The Book of Mormon",
                1
            ]
        ]
    },
    {
        "db_id": "musical",
        "question": "Show different nominees and the number of musicals they have been nominated.",
        "sql_query": "SELECT Nominee ,  COUNT(*) FROM musical GROUP BY Nominee",
        "parsed_sql": {
            "select": [
                {
                    "value": "Nominee"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": "musical",
            "groupby": {
                "value": "Nominee"
            }
        },
        "sql_ans": [
            [
                "Bob Fosse",
                5
            ],
            [
                "Cleavant Derricks",
                2
            ]
        ],
        "cypher_query": "MATCH (m:musical)\nWITH count(m.Nominee) AS count, m.Nominee AS Nominee\nRETURN Nominee,COUNT(\"*\")",
        "cypher_ans": [
            [
                "Bob Fosse",
                1
            ],
            [
                "Cleavant Derricks",
                1
            ]
        ]
    },
    {
        "db_id": "musical",
        "question": "How many musicals has each nominee been nominated for?",
        "sql_query": "SELECT Nominee ,  COUNT(*) FROM musical GROUP BY Nominee",
        "parsed_sql": {
            "select": [
                {
                    "value": "Nominee"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": "musical",
            "groupby": {
                "value": "Nominee"
            }
        },
        "sql_ans": [
            [
                "Bob Fosse",
                5
            ],
            [
                "Cleavant Derricks",
                2
            ]
        ],
        "cypher_query": "MATCH (m:musical)\nWITH count(m.Nominee) AS count, m.Nominee AS Nominee\nRETURN Nominee,COUNT(\"*\")",
        "cypher_ans": [
            [
                "Bob Fosse",
                1
            ],
            [
                "Cleavant Derricks",
                1
            ]
        ]
    }
][
    {
        "db_id": "musical",
        "question": "Show names of musicals and the number of actors who have appeared in the musicals.",
        "sql_query": "SELECT T2.Name ,  COUNT(*) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID GROUP BY T1.Musical_ID",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.Name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "actor",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "musical",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Musical_ID",
                            "T2.Musical_ID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.Musical_ID"
            }
        },
        "sql_ans": [
            [
                "The Phantom of the Opera",
                2
            ],
            [
                "Les Mis\u00e9rables",
                2
            ],
            [
                "West Side Story",
                1
            ],
            [
                "The Book of Mormon",
                4
            ]
        ],
        "cypher_query": "MATCH (T1:actor)-[]-(T2:musical)\nWITH T2.Name AS Name, count(T1.Musical_ID) AS count\nRETURN Name,COUNT(\"*\")",
        "cypher_ans": [
            [
                "The Phantom of the Opera",
                1
            ],
            [
                "Les Mis\u00e9rables",
                1
            ],
            [
                "West Side Story",
                1
            ],
            [
                "The Book of Mormon",
                1
            ]
        ]
    },
    {
        "db_id": "musical",
        "question": "How many actors have appeared in each musical?",
        "sql_query": "SELECT T2.Name ,  COUNT(*) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID GROUP BY T1.Musical_ID",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.Name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "actor",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "musical",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Musical_ID",
                            "T2.Musical_ID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.Musical_ID"
            }
        },
        "sql_ans": [
            [
                "The Phantom of the Opera",
                2
            ],
            [
                "Les Mis\u00e9rables",
                2
            ],
            [
                "West Side Story",
                1
            ],
            [
                "The Book of Mormon",
                4
            ]
        ],
        "cypher_query": "MATCH (T1:actor)-[]-(T2:musical)\nWITH T2.Name AS Name, count(T1.Musical_ID) AS count\nRETURN Name,COUNT(\"*\")",
        "cypher_ans": [
            [
                "The Phantom of the Opera",
                1
            ],
            [
                "Les Mis\u00e9rables",
                1
            ],
            [
                "West Side Story",
                1
            ],
            [
                "The Book of Mormon",
                1
            ]
        ]
    },
    {
        "db_id": "musical",
        "question": "Show different nominees and the number of musicals they have been nominated.",
        "sql_query": "SELECT Nominee ,  COUNT(*) FROM musical GROUP BY Nominee",
        "parsed_sql": {
            "select": [
                {
                    "value": "Nominee"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": "musical",
            "groupby": {
                "value": "Nominee"
            }
        },
        "sql_ans": [
            [
                "Bob Fosse",
                5
            ],
            [
                "Cleavant Derricks",
                2
            ]
        ],
        "cypher_query": "MATCH (m:musical)\nWITH count(m.Nominee) AS count, m.Nominee AS Nominee\nRETURN Nominee,COUNT(\"*\")",
        "cypher_ans": [
            [
                "Bob Fosse",
                1
            ],
            [
                "Cleavant Derricks",
                1
            ]
        ]
    },
    {
        "db_id": "musical",
        "question": "How many musicals has each nominee been nominated for?",
        "sql_query": "SELECT Nominee ,  COUNT(*) FROM musical GROUP BY Nominee",
        "parsed_sql": {
            "select": [
                {
                    "value": "Nominee"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": "musical",
            "groupby": {
                "value": "Nominee"
            }
        },
        "sql_ans": [
            [
                "Bob Fosse",
                5
            ],
            [
                "Cleavant Derricks",
                2
            ]
        ],
        "cypher_query": "MATCH (m:musical)\nWITH count(m.Nominee) AS count, m.Nominee AS Nominee\nRETURN Nominee,COUNT(\"*\")",
        "cypher_ans": [
            [
                "Bob Fosse",
                1
            ],
            [
                "Cleavant Derricks",
                1
            ]
        ]
    }
][
    {
        "db_id": "musical",
        "question": "Show names of musicals and the number of actors who have appeared in the musicals.",
        "sql_query": "SELECT T2.Name ,  COUNT(*) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID GROUP BY T1.Musical_ID",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.Name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "actor",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "musical",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Musical_ID",
                            "T2.Musical_ID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.Musical_ID"
            }
        },
        "sql_ans": [
            [
                "The Phantom of the Opera",
                2
            ],
            [
                "Les Mis\u00e9rables",
                2
            ],
            [
                "West Side Story",
                1
            ],
            [
                "The Book of Mormon",
                4
            ]
        ],
        "cypher_query": "MATCH (T1:actor)-[]-(T2:musical)\nWITH count(T1.Musical_ID) AS count, T2.Name AS Name\nRETURN Name,COUNT(\"*\")",
        "cypher_ans": [
            [
                "The Phantom of the Opera",
                1
            ],
            [
                "Les Mis\u00e9rables",
                1
            ],
            [
                "West Side Story",
                1
            ],
            [
                "The Book of Mormon",
                1
            ]
        ]
    },
    {
        "db_id": "musical",
        "question": "How many actors have appeared in each musical?",
        "sql_query": "SELECT T2.Name ,  COUNT(*) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID GROUP BY T1.Musical_ID",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.Name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "actor",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "musical",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Musical_ID",
                            "T2.Musical_ID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.Musical_ID"
            }
        },
        "sql_ans": [
            [
                "The Phantom of the Opera",
                2
            ],
            [
                "Les Mis\u00e9rables",
                2
            ],
            [
                "West Side Story",
                1
            ],
            [
                "The Book of Mormon",
                4
            ]
        ],
        "cypher_query": "MATCH (T1:actor)-[]-(T2:musical)\nWITH count(T1.Musical_ID) AS count, T2.Name AS Name\nRETURN Name,COUNT(\"*\")",
        "cypher_ans": [
            [
                "The Phantom of the Opera",
                1
            ],
            [
                "Les Mis\u00e9rables",
                1
            ],
            [
                "West Side Story",
                1
            ],
            [
                "The Book of Mormon",
                1
            ]
        ]
    },
    {
        "db_id": "musical",
        "question": "Show different nominees and the number of musicals they have been nominated.",
        "sql_query": "SELECT Nominee ,  COUNT(*) FROM musical GROUP BY Nominee",
        "parsed_sql": {
            "select": [
                {
                    "value": "Nominee"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": "musical",
            "groupby": {
                "value": "Nominee"
            }
        },
        "sql_ans": [
            [
                "Bob Fosse",
                5
            ],
            [
                "Cleavant Derricks",
                2
            ]
        ],
        "cypher_query": "MATCH (m:musical)\nWITH m.Nominee AS Nominee, count(m.Nominee) AS count\nRETURN Nominee,COUNT(\"*\")",
        "cypher_ans": [
            [
                "Bob Fosse",
                1
            ],
            [
                "Cleavant Derricks",
                1
            ]
        ]
    },
    {
        "db_id": "musical",
        "question": "How many musicals has each nominee been nominated for?",
        "sql_query": "SELECT Nominee ,  COUNT(*) FROM musical GROUP BY Nominee",
        "parsed_sql": {
            "select": [
                {
                    "value": "Nominee"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": "musical",
            "groupby": {
                "value": "Nominee"
            }
        },
        "sql_ans": [
            [
                "Bob Fosse",
                5
            ],
            [
                "Cleavant Derricks",
                2
            ]
        ],
        "cypher_query": "MATCH (m:musical)\nWITH m.Nominee AS Nominee, count(m.Nominee) AS count\nRETURN Nominee,COUNT(\"*\")",
        "cypher_ans": [
            [
                "Bob Fosse",
                1
            ],
            [
                "Cleavant Derricks",
                1
            ]
        ]
    }
][
    {
        "db_id": "musical",
        "question": "Show names of musicals and the number of actors who have appeared in the musicals.",
        "sql_query": "SELECT T2.Name ,  COUNT(*) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID GROUP BY T1.Musical_ID",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.Name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "actor",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "musical",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Musical_ID",
                            "T2.Musical_ID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.Musical_ID"
            }
        },
        "sql_ans": [
            [
                "The Phantom of the Opera",
                2
            ],
            [
                "Les Mis\u00e9rables",
                2
            ],
            [
                "West Side Story",
                1
            ],
            [
                "The Book of Mormon",
                4
            ]
        ],
        "cypher_query": "MATCH (T1:actor)-[]-(T2:musical)\nWITH count(T1.Musical_ID) AS count, T2.Name AS Name\nRETURN Name,COUNT(\"*\")",
        "cypher_ans": [
            [
                "The Phantom of the Opera",
                1
            ],
            [
                "Les Mis\u00e9rables",
                1
            ],
            [
                "West Side Story",
                1
            ],
            [
                "The Book of Mormon",
                1
            ]
        ]
    },
    {
        "db_id": "musical",
        "question": "How many actors have appeared in each musical?",
        "sql_query": "SELECT T2.Name ,  COUNT(*) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID GROUP BY T1.Musical_ID",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.Name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "actor",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "musical",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Musical_ID",
                            "T2.Musical_ID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.Musical_ID"
            }
        },
        "sql_ans": [
            [
                "The Phantom of the Opera",
                2
            ],
            [
                "Les Mis\u00e9rables",
                2
            ],
            [
                "West Side Story",
                1
            ],
            [
                "The Book of Mormon",
                4
            ]
        ],
        "cypher_query": "MATCH (T1:actor)-[]-(T2:musical)\nWITH count(T1.Musical_ID) AS count, T2.Name AS Name\nRETURN Name,COUNT(\"*\")",
        "cypher_ans": [
            [
                "The Phantom of the Opera",
                1
            ],
            [
                "Les Mis\u00e9rables",
                1
            ],
            [
                "West Side Story",
                1
            ],
            [
                "The Book of Mormon",
                1
            ]
        ]
    },
    {
        "db_id": "musical",
        "question": "Show different nominees and the number of musicals they have been nominated.",
        "sql_query": "SELECT Nominee ,  COUNT(*) FROM musical GROUP BY Nominee",
        "parsed_sql": {
            "select": [
                {
                    "value": "Nominee"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": "musical",
            "groupby": {
                "value": "Nominee"
            }
        },
        "sql_ans": [
            [
                "Bob Fosse",
                5
            ],
            [
                "Cleavant Derricks",
                2
            ]
        ],
        "cypher_query": "MATCH (m:musical)\nWITH count(m.Nominee) AS count, m.Nominee AS Nominee\nRETURN Nominee,COUNT(\"*\")",
        "cypher_ans": [
            [
                "Bob Fosse",
                1
            ],
            [
                "Cleavant Derricks",
                1
            ]
        ]
    },
    {
        "db_id": "musical",
        "question": "How many musicals has each nominee been nominated for?",
        "sql_query": "SELECT Nominee ,  COUNT(*) FROM musical GROUP BY Nominee",
        "parsed_sql": {
            "select": [
                {
                    "value": "Nominee"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": "musical",
            "groupby": {
                "value": "Nominee"
            }
        },
        "sql_ans": [
            [
                "Bob Fosse",
                5
            ],
            [
                "Cleavant Derricks",
                2
            ]
        ],
        "cypher_query": "MATCH (m:musical)\nWITH count(m.Nominee) AS count, m.Nominee AS Nominee\nRETURN Nominee,COUNT(\"*\")",
        "cypher_ans": [
            [
                "Bob Fosse",
                1
            ],
            [
                "Cleavant Derricks",
                1
            ]
        ]
    }
][
    {
        "db_id": "musical",
        "question": "Show names of musicals and the number of actors who have appeared in the musicals.",
        "sql_query": "SELECT T2.Name ,  COUNT(*) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID GROUP BY T1.Musical_ID",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.Name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "actor",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "musical",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Musical_ID",
                            "T2.Musical_ID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.Musical_ID"
            }
        },
        "sql_ans": [
            [
                "The Phantom of the Opera",
                2
            ],
            [
                "Les Mis\u00e9rables",
                2
            ],
            [
                "West Side Story",
                1
            ],
            [
                "The Book of Mormon",
                4
            ]
        ],
        "cypher_query": "MATCH (T1:actor)-[]-(T2:musical)\nWITH count(T1.Musical_ID) AS count, T2.Name AS Name\nRETURN Name,COUNT(\"*\")",
        "cypher_ans": [
            [
                "The Phantom of the Opera",
                1
            ],
            [
                "Les Mis\u00e9rables",
                1
            ],
            [
                "West Side Story",
                1
            ],
            [
                "The Book of Mormon",
                1
            ]
        ]
    },
    {
        "db_id": "musical",
        "question": "How many actors have appeared in each musical?",
        "sql_query": "SELECT T2.Name ,  COUNT(*) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID GROUP BY T1.Musical_ID",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.Name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "actor",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "musical",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Musical_ID",
                            "T2.Musical_ID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.Musical_ID"
            }
        },
        "sql_ans": [
            [
                "The Phantom of the Opera",
                2
            ],
            [
                "Les Mis\u00e9rables",
                2
            ],
            [
                "West Side Story",
                1
            ],
            [
                "The Book of Mormon",
                4
            ]
        ],
        "cypher_query": "MATCH (T1:actor)-[]-(T2:musical)\nWITH count(T1.Musical_ID) AS count, T2.Name AS Name\nRETURN Name,COUNT(\"*\")",
        "cypher_ans": [
            [
                "The Phantom of the Opera",
                1
            ],
            [
                "Les Mis\u00e9rables",
                1
            ],
            [
                "West Side Story",
                1
            ],
            [
                "The Book of Mormon",
                1
            ]
        ]
    },
    {
        "db_id": "musical",
        "question": "Show different nominees and the number of musicals they have been nominated.",
        "sql_query": "SELECT Nominee ,  COUNT(*) FROM musical GROUP BY Nominee",
        "parsed_sql": {
            "select": [
                {
                    "value": "Nominee"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": "musical",
            "groupby": {
                "value": "Nominee"
            }
        },
        "sql_ans": [
            [
                "Bob Fosse",
                5
            ],
            [
                "Cleavant Derricks",
                2
            ]
        ],
        "cypher_query": "MATCH (m:musical)\nWITH count(m.Nominee) AS count, m.Nominee AS Nominee\nRETURN Nominee,COUNT(\"*\")",
        "cypher_ans": [
            [
                "Bob Fosse",
                1
            ],
            [
                "Cleavant Derricks",
                1
            ]
        ]
    },
    {
        "db_id": "musical",
        "question": "How many musicals has each nominee been nominated for?",
        "sql_query": "SELECT Nominee ,  COUNT(*) FROM musical GROUP BY Nominee",
        "parsed_sql": {
            "select": [
                {
                    "value": "Nominee"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": "musical",
            "groupby": {
                "value": "Nominee"
            }
        },
        "sql_ans": [
            [
                "Bob Fosse",
                5
            ],
            [
                "Cleavant Derricks",
                2
            ]
        ],
        "cypher_query": "MATCH (m:musical)\nWITH count(m.Nominee) AS count, m.Nominee AS Nominee\nRETURN Nominee,COUNT(\"*\")",
        "cypher_ans": [
            [
                "Bob Fosse",
                1
            ],
            [
                "Cleavant Derricks",
                1
            ]
        ]
    }
][
    {
        "db_id": "musical",
        "question": "Show names of musicals and the number of actors who have appeared in the musicals.",
        "sql_query": "SELECT T2.Name ,  COUNT(*) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID GROUP BY T1.Musical_ID",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.Name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "actor",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "musical",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Musical_ID",
                            "T2.Musical_ID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.Musical_ID"
            }
        },
        "sql_ans": [
            [
                "The Phantom of the Opera",
                2
            ],
            [
                "Les Mis\u00e9rables",
                2
            ],
            [
                "West Side Story",
                1
            ],
            [
                "The Book of Mormon",
                4
            ]
        ],
        "cypher_query": "MATCH (T1:actor)-[]-(T2:musical)\nWITH count(T1.Musical_ID) AS count, T2.Name AS Name\nRETURN Name,COUNT(\"*\")",
        "cypher_ans": [
            [
                "The Phantom of the Opera",
                1
            ],
            [
                "Les Mis\u00e9rables",
                1
            ],
            [
                "West Side Story",
                1
            ],
            [
                "The Book of Mormon",
                1
            ]
        ]
    },
    {
        "db_id": "musical",
        "question": "How many actors have appeared in each musical?",
        "sql_query": "SELECT T2.Name ,  COUNT(*) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID GROUP BY T1.Musical_ID",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.Name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "actor",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "musical",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Musical_ID",
                            "T2.Musical_ID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.Musical_ID"
            }
        },
        "sql_ans": [
            [
                "The Phantom of the Opera",
                2
            ],
            [
                "Les Mis\u00e9rables",
                2
            ],
            [
                "West Side Story",
                1
            ],
            [
                "The Book of Mormon",
                4
            ]
        ],
        "cypher_query": "MATCH (T1:actor)-[]-(T2:musical)\nWITH count(T1.Musical_ID) AS count, T2.Name AS Name\nRETURN Name,COUNT(\"*\")",
        "cypher_ans": [
            [
                "The Phantom of the Opera",
                1
            ],
            [
                "Les Mis\u00e9rables",
                1
            ],
            [
                "West Side Story",
                1
            ],
            [
                "The Book of Mormon",
                1
            ]
        ]
    },
    {
        "db_id": "musical",
        "question": "Show different nominees and the number of musicals they have been nominated.",
        "sql_query": "SELECT Nominee ,  COUNT(*) FROM musical GROUP BY Nominee",
        "parsed_sql": {
            "select": [
                {
                    "value": "Nominee"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": "musical",
            "groupby": {
                "value": "Nominee"
            }
        },
        "sql_ans": [
            [
                "Bob Fosse",
                5
            ],
            [
                "Cleavant Derricks",
                2
            ]
        ],
        "cypher_query": "MATCH (m:musical)\nWITH count(m.Nominee) AS count, m.Nominee AS Nominee\nRETURN Nominee,COUNT(\"*\")",
        "cypher_ans": [
            [
                "Bob Fosse",
                1
            ],
            [
                "Cleavant Derricks",
                1
            ]
        ]
    },
    {
        "db_id": "musical",
        "question": "How many musicals has each nominee been nominated for?",
        "sql_query": "SELECT Nominee ,  COUNT(*) FROM musical GROUP BY Nominee",
        "parsed_sql": {
            "select": [
                {
                    "value": "Nominee"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": "musical",
            "groupby": {
                "value": "Nominee"
            }
        },
        "sql_ans": [
            [
                "Bob Fosse",
                5
            ],
            [
                "Cleavant Derricks",
                2
            ]
        ],
        "cypher_query": "MATCH (m:musical)\nWITH count(m.Nominee) AS count, m.Nominee AS Nominee\nRETURN Nominee,COUNT(\"*\")",
        "cypher_ans": [
            [
                "Bob Fosse",
                1
            ],
            [
                "Cleavant Derricks",
                1
            ]
        ]
    }
][
    {
        "db_id": "musical",
        "question": "Show names of musicals and the number of actors who have appeared in the musicals.",
        "sql_query": "SELECT T2.Name ,  COUNT(*) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID GROUP BY T1.Musical_ID",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.Name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "actor",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "musical",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Musical_ID",
                            "T2.Musical_ID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.Musical_ID"
            }
        },
        "sql_ans": [
            [
                "The Phantom of the Opera",
                2
            ],
            [
                "Les Mis\u00e9rables",
                2
            ],
            [
                "West Side Story",
                1
            ],
            [
                "The Book of Mormon",
                4
            ]
        ],
        "cypher_query": "MATCH (T1:actor)-[]-(T2:musical)\nWITH count(T1.Musical_ID) AS count, T2.Name AS Name\nRETURN Name,COUNT(\"*\")",
        "cypher_ans": [
            [
                "The Phantom of the Opera",
                1
            ],
            [
                "Les Mis\u00e9rables",
                1
            ],
            [
                "West Side Story",
                1
            ],
            [
                "The Book of Mormon",
                1
            ]
        ]
    },
    {
        "db_id": "musical",
        "question": "How many actors have appeared in each musical?",
        "sql_query": "SELECT T2.Name ,  COUNT(*) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID GROUP BY T1.Musical_ID",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.Name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "actor",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "musical",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Musical_ID",
                            "T2.Musical_ID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.Musical_ID"
            }
        },
        "sql_ans": [
            [
                "The Phantom of the Opera",
                2
            ],
            [
                "Les Mis\u00e9rables",
                2
            ],
            [
                "West Side Story",
                1
            ],
            [
                "The Book of Mormon",
                4
            ]
        ],
        "cypher_query": "MATCH (T1:actor)-[]-(T2:musical)\nWITH count(T1.Musical_ID) AS count, T2.Name AS Name\nRETURN Name,COUNT(\"*\")",
        "cypher_ans": [
            [
                "The Phantom of the Opera",
                1
            ],
            [
                "Les Mis\u00e9rables",
                1
            ],
            [
                "West Side Story",
                1
            ],
            [
                "The Book of Mormon",
                1
            ]
        ]
    },
    {
        "db_id": "musical",
        "question": "Show different nominees and the number of musicals they have been nominated.",
        "sql_query": "SELECT Nominee ,  COUNT(*) FROM musical GROUP BY Nominee",
        "parsed_sql": {
            "select": [
                {
                    "value": "Nominee"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": "musical",
            "groupby": {
                "value": "Nominee"
            }
        },
        "sql_ans": [
            [
                "Bob Fosse",
                5
            ],
            [
                "Cleavant Derricks",
                2
            ]
        ],
        "cypher_query": "MATCH (m:musical)\nWITH m.Nominee AS Nominee, count(m.Nominee) AS count\nRETURN Nominee,COUNT(\"*\")",
        "cypher_ans": [
            [
                "Bob Fosse",
                1
            ],
            [
                "Cleavant Derricks",
                1
            ]
        ]
    },
    {
        "db_id": "musical",
        "question": "How many musicals has each nominee been nominated for?",
        "sql_query": "SELECT Nominee ,  COUNT(*) FROM musical GROUP BY Nominee",
        "parsed_sql": {
            "select": [
                {
                    "value": "Nominee"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": "musical",
            "groupby": {
                "value": "Nominee"
            }
        },
        "sql_ans": [
            [
                "Bob Fosse",
                5
            ],
            [
                "Cleavant Derricks",
                2
            ]
        ],
        "cypher_query": "MATCH (m:musical)\nWITH m.Nominee AS Nominee, count(m.Nominee) AS count\nRETURN Nominee,COUNT(\"*\")",
        "cypher_ans": [
            [
                "Bob Fosse",
                1
            ],
            [
                "Cleavant Derricks",
                1
            ]
        ]
    }
][
    {
        "db_id": "musical",
        "question": "Show names of musicals and the number of actors who have appeared in the musicals.",
        "sql_query": "SELECT T2.Name ,  COUNT(*) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID GROUP BY T1.Musical_ID",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.Name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "actor",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "musical",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Musical_ID",
                            "T2.Musical_ID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.Musical_ID"
            }
        },
        "sql_ans": [
            [
                "The Phantom of the Opera",
                2
            ],
            [
                "Les Mis\u00e9rables",
                2
            ],
            [
                "West Side Story",
                1
            ],
            [
                "The Book of Mormon",
                4
            ]
        ],
        "cypher_query": "MATCH (T1:actor)-[]-(T2:musical)\nWITH T2.Name AS Name, count(T1.Musical_ID) AS count\nRETURN Name,COUNT(\"*\")",
        "cypher_ans": [
            [
                "The Phantom of the Opera",
                1
            ],
            [
                "Les Mis\u00e9rables",
                1
            ],
            [
                "West Side Story",
                1
            ],
            [
                "The Book of Mormon",
                1
            ]
        ]
    },
    {
        "db_id": "musical",
        "question": "How many actors have appeared in each musical?",
        "sql_query": "SELECT T2.Name ,  COUNT(*) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID GROUP BY T1.Musical_ID",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.Name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "actor",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "musical",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Musical_ID",
                            "T2.Musical_ID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.Musical_ID"
            }
        },
        "sql_ans": [
            [
                "The Phantom of the Opera",
                2
            ],
            [
                "Les Mis\u00e9rables",
                2
            ],
            [
                "West Side Story",
                1
            ],
            [
                "The Book of Mormon",
                4
            ]
        ],
        "cypher_query": "MATCH (T1:actor)-[]-(T2:musical)\nWITH T2.Name AS Name, count(T1.Musical_ID) AS count\nRETURN Name,COUNT(\"*\")",
        "cypher_ans": [
            [
                "The Phantom of the Opera",
                1
            ],
            [
                "Les Mis\u00e9rables",
                1
            ],
            [
                "West Side Story",
                1
            ],
            [
                "The Book of Mormon",
                1
            ]
        ]
    },
    {
        "db_id": "musical",
        "question": "Show different nominees and the number of musicals they have been nominated.",
        "sql_query": "SELECT Nominee ,  COUNT(*) FROM musical GROUP BY Nominee",
        "parsed_sql": {
            "select": [
                {
                    "value": "Nominee"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": "musical",
            "groupby": {
                "value": "Nominee"
            }
        },
        "sql_ans": [
            [
                "Bob Fosse",
                5
            ],
            [
                "Cleavant Derricks",
                2
            ]
        ],
        "cypher_query": "MATCH (m:musical)\nWITH count(m.Nominee) AS count, m.Nominee AS Nominee\nRETURN Nominee,COUNT(\"*\")",
        "cypher_ans": [
            [
                "Bob Fosse",
                1
            ],
            [
                "Cleavant Derricks",
                1
            ]
        ]
    },
    {
        "db_id": "musical",
        "question": "How many musicals has each nominee been nominated for?",
        "sql_query": "SELECT Nominee ,  COUNT(*) FROM musical GROUP BY Nominee",
        "parsed_sql": {
            "select": [
                {
                    "value": "Nominee"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": "musical",
            "groupby": {
                "value": "Nominee"
            }
        },
        "sql_ans": [
            [
                "Bob Fosse",
                5
            ],
            [
                "Cleavant Derricks",
                2
            ]
        ],
        "cypher_query": "MATCH (m:musical)\nWITH count(m.Nominee) AS count, m.Nominee AS Nominee\nRETURN Nominee,COUNT(\"*\")",
        "cypher_ans": [
            [
                "Bob Fosse",
                1
            ],
            [
                "Cleavant Derricks",
                1
            ]
        ]
    }
][
    {
        "db_id": "musical",
        "question": "Show names of musicals and the number of actors who have appeared in the musicals.",
        "sql_query": "SELECT T2.Name ,  COUNT(*) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID GROUP BY T1.Musical_ID",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.Name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "actor",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "musical",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Musical_ID",
                            "T2.Musical_ID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.Musical_ID"
            }
        },
        "sql_ans": [
            [
                "The Phantom of the Opera",
                2
            ],
            [
                "Les Mis\u00e9rables",
                2
            ],
            [
                "West Side Story",
                1
            ],
            [
                "The Book of Mormon",
                4
            ]
        ],
        "cypher_query": "MATCH (T1:actor)-[]-(T2:musical)\nWITH T2.Name AS Name, count(T1.Musical_ID) AS count\nRETURN Name,COUNT(\"*\")",
        "cypher_ans": [
            [
                "The Phantom of the Opera",
                1
            ],
            [
                "Les Mis\u00e9rables",
                1
            ],
            [
                "West Side Story",
                1
            ],
            [
                "The Book of Mormon",
                1
            ]
        ]
    },
    {
        "db_id": "musical",
        "question": "How many actors have appeared in each musical?",
        "sql_query": "SELECT T2.Name ,  COUNT(*) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID GROUP BY T1.Musical_ID",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.Name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "actor",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "musical",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Musical_ID",
                            "T2.Musical_ID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.Musical_ID"
            }
        },
        "sql_ans": [
            [
                "The Phantom of the Opera",
                2
            ],
            [
                "Les Mis\u00e9rables",
                2
            ],
            [
                "West Side Story",
                1
            ],
            [
                "The Book of Mormon",
                4
            ]
        ],
        "cypher_query": "MATCH (T1:actor)-[]-(T2:musical)\nWITH T2.Name AS Name, count(T1.Musical_ID) AS count\nRETURN Name,COUNT(\"*\")",
        "cypher_ans": [
            [
                "The Phantom of the Opera",
                1
            ],
            [
                "Les Mis\u00e9rables",
                1
            ],
            [
                "West Side Story",
                1
            ],
            [
                "The Book of Mormon",
                1
            ]
        ]
    },
    {
        "db_id": "musical",
        "question": "Show different nominees and the number of musicals they have been nominated.",
        "sql_query": "SELECT Nominee ,  COUNT(*) FROM musical GROUP BY Nominee",
        "parsed_sql": {
            "select": [
                {
                    "value": "Nominee"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": "musical",
            "groupby": {
                "value": "Nominee"
            }
        },
        "sql_ans": [
            [
                "Bob Fosse",
                5
            ],
            [
                "Cleavant Derricks",
                2
            ]
        ],
        "cypher_query": "MATCH (m:musical)\nWITH m.Nominee AS Nominee, count(m.Nominee) AS count\nRETURN Nominee,COUNT(\"*\")",
        "cypher_ans": [
            [
                "Bob Fosse",
                1
            ],
            [
                "Cleavant Derricks",
                1
            ]
        ]
    },
    {
        "db_id": "musical",
        "question": "How many musicals has each nominee been nominated for?",
        "sql_query": "SELECT Nominee ,  COUNT(*) FROM musical GROUP BY Nominee",
        "parsed_sql": {
            "select": [
                {
                    "value": "Nominee"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": "musical",
            "groupby": {
                "value": "Nominee"
            }
        },
        "sql_ans": [
            [
                "Bob Fosse",
                5
            ],
            [
                "Cleavant Derricks",
                2
            ]
        ],
        "cypher_query": "MATCH (m:musical)\nWITH m.Nominee AS Nominee, count(m.Nominee) AS count\nRETURN Nominee,COUNT(\"*\")",
        "cypher_ans": [
            [
                "Bob Fosse",
                1
            ],
            [
                "Cleavant Derricks",
                1
            ]
        ]
    }
][
    {
        "db_id": "musical",
        "question": "Show names of musicals and the number of actors who have appeared in the musicals.",
        "sql_query": "SELECT T2.Name ,  COUNT(*) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID GROUP BY T1.Musical_ID",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.Name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "actor",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "musical",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Musical_ID",
                            "T2.Musical_ID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.Musical_ID"
            }
        },
        "sql_ans": [
            [
                "The Phantom of the Opera",
                2
            ],
            [
                "Les Mis\u00e9rables",
                2
            ],
            [
                "West Side Story",
                1
            ],
            [
                "The Book of Mormon",
                4
            ]
        ],
        "cypher_query": "MATCH (T1:actor)-[]-(T2:musical)\nWITH count(T1.Musical_ID) AS count, T2.Name AS Name\nRETURN Name,COUNT(\"*\")",
        "cypher_ans": [
            [
                "The Phantom of the Opera",
                1
            ],
            [
                "Les Mis\u00e9rables",
                1
            ],
            [
                "West Side Story",
                1
            ],
            [
                "The Book of Mormon",
                1
            ]
        ]
    },
    {
        "db_id": "musical",
        "question": "How many actors have appeared in each musical?",
        "sql_query": "SELECT T2.Name ,  COUNT(*) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID GROUP BY T1.Musical_ID",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.Name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "actor",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "musical",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Musical_ID",
                            "T2.Musical_ID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.Musical_ID"
            }
        },
        "sql_ans": [
            [
                "The Phantom of the Opera",
                2
            ],
            [
                "Les Mis\u00e9rables",
                2
            ],
            [
                "West Side Story",
                1
            ],
            [
                "The Book of Mormon",
                4
            ]
        ],
        "cypher_query": "MATCH (T1:actor)-[]-(T2:musical)\nWITH count(T1.Musical_ID) AS count, T2.Name AS Name\nRETURN Name,COUNT(\"*\")",
        "cypher_ans": [
            [
                "The Phantom of the Opera",
                1
            ],
            [
                "Les Mis\u00e9rables",
                1
            ],
            [
                "West Side Story",
                1
            ],
            [
                "The Book of Mormon",
                1
            ]
        ]
    },
    {
        "db_id": "musical",
        "question": "Show different nominees and the number of musicals they have been nominated.",
        "sql_query": "SELECT Nominee ,  COUNT(*) FROM musical GROUP BY Nominee",
        "parsed_sql": {
            "select": [
                {
                    "value": "Nominee"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": "musical",
            "groupby": {
                "value": "Nominee"
            }
        },
        "sql_ans": [
            [
                "Bob Fosse",
                5
            ],
            [
                "Cleavant Derricks",
                2
            ]
        ],
        "cypher_query": "MATCH (m:musical)\nWITH count(m.Nominee) AS count, m.Nominee AS Nominee\nRETURN Nominee,COUNT(\"*\")",
        "cypher_ans": [
            [
                "Bob Fosse",
                1
            ],
            [
                "Cleavant Derricks",
                1
            ]
        ]
    },
    {
        "db_id": "musical",
        "question": "How many musicals has each nominee been nominated for?",
        "sql_query": "SELECT Nominee ,  COUNT(*) FROM musical GROUP BY Nominee",
        "parsed_sql": {
            "select": [
                {
                    "value": "Nominee"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": "musical",
            "groupby": {
                "value": "Nominee"
            }
        },
        "sql_ans": [
            [
                "Bob Fosse",
                5
            ],
            [
                "Cleavant Derricks",
                2
            ]
        ],
        "cypher_query": "MATCH (m:musical)\nWITH count(m.Nominee) AS count, m.Nominee AS Nominee\nRETURN Nominee,COUNT(\"*\")",
        "cypher_ans": [
            [
                "Bob Fosse",
                1
            ],
            [
                "Cleavant Derricks",
                1
            ]
        ]
    }
][
    {
        "db_id": "musical",
        "question": "Show names of musicals and the number of actors who have appeared in the musicals.",
        "sql_query": "SELECT T2.Name ,  COUNT(*) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID GROUP BY T1.Musical_ID",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.Name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "actor",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "musical",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Musical_ID",
                            "T2.Musical_ID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.Musical_ID"
            }
        },
        "sql_ans": [
            [
                "The Phantom of the Opera",
                2
            ],
            [
                "Les Mis\u00e9rables",
                2
            ],
            [
                "West Side Story",
                1
            ],
            [
                "The Book of Mormon",
                4
            ]
        ],
        "cypher_query": "MATCH (T1:actor)-[]-(T2:musical)\nWITH count(T1.Musical_ID) AS count, T2.Name AS Name\nRETURN Name,COUNT(\"*\")",
        "cypher_ans": [
            [
                "The Phantom of the Opera",
                1
            ],
            [
                "Les Mis\u00e9rables",
                1
            ],
            [
                "West Side Story",
                1
            ],
            [
                "The Book of Mormon",
                1
            ]
        ]
    },
    {
        "db_id": "musical",
        "question": "How many actors have appeared in each musical?",
        "sql_query": "SELECT T2.Name ,  COUNT(*) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID GROUP BY T1.Musical_ID",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.Name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "actor",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "musical",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Musical_ID",
                            "T2.Musical_ID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.Musical_ID"
            }
        },
        "sql_ans": [
            [
                "The Phantom of the Opera",
                2
            ],
            [
                "Les Mis\u00e9rables",
                2
            ],
            [
                "West Side Story",
                1
            ],
            [
                "The Book of Mormon",
                4
            ]
        ],
        "cypher_query": "MATCH (T1:actor)-[]-(T2:musical)\nWITH count(T1.Musical_ID) AS count, T2.Name AS Name\nRETURN Name,COUNT(\"*\")",
        "cypher_ans": [
            [
                "The Phantom of the Opera",
                1
            ],
            [
                "Les Mis\u00e9rables",
                1
            ],
            [
                "West Side Story",
                1
            ],
            [
                "The Book of Mormon",
                1
            ]
        ]
    },
    {
        "db_id": "musical",
        "question": "Show different nominees and the number of musicals they have been nominated.",
        "sql_query": "SELECT Nominee ,  COUNT(*) FROM musical GROUP BY Nominee",
        "parsed_sql": {
            "select": [
                {
                    "value": "Nominee"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": "musical",
            "groupby": {
                "value": "Nominee"
            }
        },
        "sql_ans": [
            [
                "Bob Fosse",
                5
            ],
            [
                "Cleavant Derricks",
                2
            ]
        ],
        "cypher_query": "MATCH (m:musical)\nWITH count(m.Nominee) AS count, m.Nominee AS Nominee\nRETURN Nominee,COUNT(\"*\")",
        "cypher_ans": [
            [
                "Bob Fosse",
                1
            ],
            [
                "Cleavant Derricks",
                1
            ]
        ]
    },
    {
        "db_id": "musical",
        "question": "How many musicals has each nominee been nominated for?",
        "sql_query": "SELECT Nominee ,  COUNT(*) FROM musical GROUP BY Nominee",
        "parsed_sql": {
            "select": [
                {
                    "value": "Nominee"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": "musical",
            "groupby": {
                "value": "Nominee"
            }
        },
        "sql_ans": [
            [
                "Bob Fosse",
                5
            ],
            [
                "Cleavant Derricks",
                2
            ]
        ],
        "cypher_query": "MATCH (m:musical)\nWITH count(m.Nominee) AS count, m.Nominee AS Nominee\nRETURN Nominee,COUNT(\"*\")",
        "cypher_ans": [
            [
                "Bob Fosse",
                1
            ],
            [
                "Cleavant Derricks",
                1
            ]
        ]
    }
][
    {
        "db_id": "musical",
        "question": "Show names of musicals and the number of actors who have appeared in the musicals.",
        "sql_query": "SELECT T2.Name ,  COUNT(*) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID GROUP BY T1.Musical_ID",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.Name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "actor",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "musical",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Musical_ID",
                            "T2.Musical_ID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.Musical_ID"
            }
        },
        "sql_ans": [
            [
                "The Phantom of the Opera",
                2
            ],
            [
                "Les Mis\u00e9rables",
                2
            ],
            [
                "West Side Story",
                1
            ],
            [
                "The Book of Mormon",
                4
            ]
        ],
        "cypher_query": "MATCH (T1:actor)-[]-(T2:musical)\nWITH count(T1.Musical_ID) AS count, T2.Name AS Name\nRETURN Name,COUNT(\"*\")",
        "cypher_ans": [
            [
                "The Phantom of the Opera",
                1
            ],
            [
                "Les Mis\u00e9rables",
                1
            ],
            [
                "West Side Story",
                1
            ],
            [
                "The Book of Mormon",
                1
            ]
        ]
    },
    {
        "db_id": "musical",
        "question": "How many actors have appeared in each musical?",
        "sql_query": "SELECT T2.Name ,  COUNT(*) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID GROUP BY T1.Musical_ID",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.Name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "actor",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "musical",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Musical_ID",
                            "T2.Musical_ID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.Musical_ID"
            }
        },
        "sql_ans": [
            [
                "The Phantom of the Opera",
                2
            ],
            [
                "Les Mis\u00e9rables",
                2
            ],
            [
                "West Side Story",
                1
            ],
            [
                "The Book of Mormon",
                4
            ]
        ],
        "cypher_query": "MATCH (T1:actor)-[]-(T2:musical)\nWITH count(T1.Musical_ID) AS count, T2.Name AS Name\nRETURN Name,COUNT(\"*\")",
        "cypher_ans": [
            [
                "The Phantom of the Opera",
                1
            ],
            [
                "Les Mis\u00e9rables",
                1
            ],
            [
                "West Side Story",
                1
            ],
            [
                "The Book of Mormon",
                1
            ]
        ]
    },
    {
        "db_id": "musical",
        "question": "Show different nominees and the number of musicals they have been nominated.",
        "sql_query": "SELECT Nominee ,  COUNT(*) FROM musical GROUP BY Nominee",
        "parsed_sql": {
            "select": [
                {
                    "value": "Nominee"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": "musical",
            "groupby": {
                "value": "Nominee"
            }
        },
        "sql_ans": [
            [
                "Bob Fosse",
                5
            ],
            [
                "Cleavant Derricks",
                2
            ]
        ],
        "cypher_query": "MATCH (m:musical)\nWITH count(m.Nominee) AS count, m.Nominee AS Nominee\nRETURN Nominee,COUNT(\"*\")",
        "cypher_ans": [
            [
                "Bob Fosse",
                1
            ],
            [
                "Cleavant Derricks",
                1
            ]
        ]
    },
    {
        "db_id": "musical",
        "question": "How many musicals has each nominee been nominated for?",
        "sql_query": "SELECT Nominee ,  COUNT(*) FROM musical GROUP BY Nominee",
        "parsed_sql": {
            "select": [
                {
                    "value": "Nominee"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": "musical",
            "groupby": {
                "value": "Nominee"
            }
        },
        "sql_ans": [
            [
                "Bob Fosse",
                5
            ],
            [
                "Cleavant Derricks",
                2
            ]
        ],
        "cypher_query": "MATCH (m:musical)\nWITH count(m.Nominee) AS count, m.Nominee AS Nominee\nRETURN Nominee,COUNT(\"*\")",
        "cypher_ans": [
            [
                "Bob Fosse",
                1
            ],
            [
                "Cleavant Derricks",
                1
            ]
        ]
    }
][
    {
        "db_id": "musical",
        "question": "Show names of musicals and the number of actors who have appeared in the musicals.",
        "sql_query": "SELECT T2.Name ,  COUNT(*) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID GROUP BY T1.Musical_ID",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.Name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "actor",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "musical",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Musical_ID",
                            "T2.Musical_ID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.Musical_ID"
            }
        },
        "sql_ans": [
            [
                "The Phantom of the Opera",
                2
            ],
            [
                "Les Mis\u00e9rables",
                2
            ],
            [
                "West Side Story",
                1
            ],
            [
                "The Book of Mormon",
                4
            ]
        ],
        "cypher_query": "MATCH (T1:actor)-[]-(T2:musical)\nWITH count(T1.Musical_ID) AS count, T2.Name AS Name\nRETURN Name,COUNT(\"*\")",
        "cypher_ans": [
            [
                "The Phantom of the Opera",
                1
            ],
            [
                "Les Mis\u00e9rables",
                1
            ],
            [
                "West Side Story",
                1
            ],
            [
                "The Book of Mormon",
                1
            ]
        ]
    },
    {
        "db_id": "musical",
        "question": "How many actors have appeared in each musical?",
        "sql_query": "SELECT T2.Name ,  COUNT(*) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID GROUP BY T1.Musical_ID",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.Name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "actor",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "musical",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Musical_ID",
                            "T2.Musical_ID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.Musical_ID"
            }
        },
        "sql_ans": [
            [
                "The Phantom of the Opera",
                2
            ],
            [
                "Les Mis\u00e9rables",
                2
            ],
            [
                "West Side Story",
                1
            ],
            [
                "The Book of Mormon",
                4
            ]
        ],
        "cypher_query": "MATCH (T1:actor)-[]-(T2:musical)\nWITH count(T1.Musical_ID) AS count, T2.Name AS Name\nRETURN Name,COUNT(\"*\")",
        "cypher_ans": [
            [
                "The Phantom of the Opera",
                1
            ],
            [
                "Les Mis\u00e9rables",
                1
            ],
            [
                "West Side Story",
                1
            ],
            [
                "The Book of Mormon",
                1
            ]
        ]
    },
    {
        "db_id": "musical",
        "question": "Show different nominees and the number of musicals they have been nominated.",
        "sql_query": "SELECT Nominee ,  COUNT(*) FROM musical GROUP BY Nominee",
        "parsed_sql": {
            "select": [
                {
                    "value": "Nominee"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": "musical",
            "groupby": {
                "value": "Nominee"
            }
        },
        "sql_ans": [
            [
                "Bob Fosse",
                5
            ],
            [
                "Cleavant Derricks",
                2
            ]
        ],
        "cypher_query": "MATCH (m:musical)\nWITH m.Nominee AS Nominee, count(m.Nominee) AS count\nRETURN Nominee,COUNT(\"*\")",
        "cypher_ans": [
            [
                "Bob Fosse",
                1
            ],
            [
                "Cleavant Derricks",
                1
            ]
        ]
    },
    {
        "db_id": "musical",
        "question": "How many musicals has each nominee been nominated for?",
        "sql_query": "SELECT Nominee ,  COUNT(*) FROM musical GROUP BY Nominee",
        "parsed_sql": {
            "select": [
                {
                    "value": "Nominee"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": "musical",
            "groupby": {
                "value": "Nominee"
            }
        },
        "sql_ans": [
            [
                "Bob Fosse",
                5
            ],
            [
                "Cleavant Derricks",
                2
            ]
        ],
        "cypher_query": "MATCH (m:musical)\nWITH m.Nominee AS Nominee, count(m.Nominee) AS count\nRETURN Nominee,COUNT(\"*\")",
        "cypher_ans": [
            [
                "Bob Fosse",
                1
            ],
            [
                "Cleavant Derricks",
                1
            ]
        ]
    }
][
    {
        "db_id": "musical",
        "question": "Show names of musicals and the number of actors who have appeared in the musicals.",
        "sql_query": "SELECT T2.Name ,  COUNT(*) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID GROUP BY T1.Musical_ID",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.Name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "actor",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "musical",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Musical_ID",
                            "T2.Musical_ID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.Musical_ID"
            }
        },
        "sql_ans": [
            [
                "The Phantom of the Opera",
                2
            ],
            [
                "Les Mis\u00e9rables",
                2
            ],
            [
                "West Side Story",
                1
            ],
            [
                "The Book of Mormon",
                4
            ]
        ],
        "cypher_query": "MATCH (T1:actor)-[]-(T2:musical)\nWITH T2.Name AS Name, count(T1.Musical_ID) AS count\nRETURN Name,COUNT(\"*\")",
        "cypher_ans": [
            [
                "The Phantom of the Opera",
                1
            ],
            [
                "Les Mis\u00e9rables",
                1
            ],
            [
                "West Side Story",
                1
            ],
            [
                "The Book of Mormon",
                1
            ]
        ]
    },
    {
        "db_id": "musical",
        "question": "How many actors have appeared in each musical?",
        "sql_query": "SELECT T2.Name ,  COUNT(*) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID GROUP BY T1.Musical_ID",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.Name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "actor",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "musical",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Musical_ID",
                            "T2.Musical_ID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.Musical_ID"
            }
        },
        "sql_ans": [
            [
                "The Phantom of the Opera",
                2
            ],
            [
                "Les Mis\u00e9rables",
                2
            ],
            [
                "West Side Story",
                1
            ],
            [
                "The Book of Mormon",
                4
            ]
        ],
        "cypher_query": "MATCH (T1:actor)-[]-(T2:musical)\nWITH T2.Name AS Name, count(T1.Musical_ID) AS count\nRETURN Name,COUNT(\"*\")",
        "cypher_ans": [
            [
                "The Phantom of the Opera",
                1
            ],
            [
                "Les Mis\u00e9rables",
                1
            ],
            [
                "West Side Story",
                1
            ],
            [
                "The Book of Mormon",
                1
            ]
        ]
    },
    {
        "db_id": "musical",
        "question": "Show different nominees and the number of musicals they have been nominated.",
        "sql_query": "SELECT Nominee ,  COUNT(*) FROM musical GROUP BY Nominee",
        "parsed_sql": {
            "select": [
                {
                    "value": "Nominee"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": "musical",
            "groupby": {
                "value": "Nominee"
            }
        },
        "sql_ans": [
            [
                "Bob Fosse",
                5
            ],
            [
                "Cleavant Derricks",
                2
            ]
        ],
        "cypher_query": "MATCH (m:musical)\nWITH count(m.Nominee) AS count, m.Nominee AS Nominee\nRETURN Nominee,COUNT(\"*\")",
        "cypher_ans": [
            [
                "Bob Fosse",
                1
            ],
            [
                "Cleavant Derricks",
                1
            ]
        ]
    },
    {
        "db_id": "musical",
        "question": "How many musicals has each nominee been nominated for?",
        "sql_query": "SELECT Nominee ,  COUNT(*) FROM musical GROUP BY Nominee",
        "parsed_sql": {
            "select": [
                {
                    "value": "Nominee"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": "musical",
            "groupby": {
                "value": "Nominee"
            }
        },
        "sql_ans": [
            [
                "Bob Fosse",
                5
            ],
            [
                "Cleavant Derricks",
                2
            ]
        ],
        "cypher_query": "MATCH (m:musical)\nWITH count(m.Nominee) AS count, m.Nominee AS Nominee\nRETURN Nominee,COUNT(\"*\")",
        "cypher_ans": [
            [
                "Bob Fosse",
                1
            ],
            [
                "Cleavant Derricks",
                1
            ]
        ]
    }
][
    {
        "db_id": "musical",
        "question": "Show names of musicals and the number of actors who have appeared in the musicals.",
        "sql_query": "SELECT T2.Name ,  COUNT(*) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID GROUP BY T1.Musical_ID",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.Name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "actor",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "musical",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Musical_ID",
                            "T2.Musical_ID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.Musical_ID"
            }
        },
        "sql_ans": [
            [
                "The Phantom of the Opera",
                2
            ],
            [
                "Les Mis\u00e9rables",
                2
            ],
            [
                "West Side Story",
                1
            ],
            [
                "The Book of Mormon",
                4
            ]
        ],
        "cypher_query": "MATCH (T1:actor)-[]-(T2:musical)\nWITH T2.Name AS Name, count(T1.Musical_ID) AS count\nRETURN Name,COUNT(\"*\")",
        "cypher_ans": [
            [
                "The Phantom of the Opera",
                1
            ],
            [
                "Les Mis\u00e9rables",
                1
            ],
            [
                "West Side Story",
                1
            ],
            [
                "The Book of Mormon",
                1
            ]
        ]
    },
    {
        "db_id": "musical",
        "question": "How many actors have appeared in each musical?",
        "sql_query": "SELECT T2.Name ,  COUNT(*) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID GROUP BY T1.Musical_ID",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.Name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "actor",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "musical",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Musical_ID",
                            "T2.Musical_ID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.Musical_ID"
            }
        },
        "sql_ans": [
            [
                "The Phantom of the Opera",
                2
            ],
            [
                "Les Mis\u00e9rables",
                2
            ],
            [
                "West Side Story",
                1
            ],
            [
                "The Book of Mormon",
                4
            ]
        ],
        "cypher_query": "MATCH (T1:actor)-[]-(T2:musical)\nWITH T2.Name AS Name, count(T1.Musical_ID) AS count\nRETURN Name,COUNT(\"*\")",
        "cypher_ans": [
            [
                "The Phantom of the Opera",
                1
            ],
            [
                "Les Mis\u00e9rables",
                1
            ],
            [
                "West Side Story",
                1
            ],
            [
                "The Book of Mormon",
                1
            ]
        ]
    },
    {
        "db_id": "musical",
        "question": "Show different nominees and the number of musicals they have been nominated.",
        "sql_query": "SELECT Nominee ,  COUNT(*) FROM musical GROUP BY Nominee",
        "parsed_sql": {
            "select": [
                {
                    "value": "Nominee"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": "musical",
            "groupby": {
                "value": "Nominee"
            }
        },
        "sql_ans": [
            [
                "Bob Fosse",
                5
            ],
            [
                "Cleavant Derricks",
                2
            ]
        ],
        "cypher_query": "MATCH (m:musical)\nWITH count(m.Nominee) AS count, m.Nominee AS Nominee\nRETURN Nominee,COUNT(\"*\")",
        "cypher_ans": [
            [
                "Bob Fosse",
                1
            ],
            [
                "Cleavant Derricks",
                1
            ]
        ]
    },
    {
        "db_id": "musical",
        "question": "How many musicals has each nominee been nominated for?",
        "sql_query": "SELECT Nominee ,  COUNT(*) FROM musical GROUP BY Nominee",
        "parsed_sql": {
            "select": [
                {
                    "value": "Nominee"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": "musical",
            "groupby": {
                "value": "Nominee"
            }
        },
        "sql_ans": [
            [
                "Bob Fosse",
                5
            ],
            [
                "Cleavant Derricks",
                2
            ]
        ],
        "cypher_query": "MATCH (m:musical)\nWITH count(m.Nominee) AS count, m.Nominee AS Nominee\nRETURN Nominee,COUNT(\"*\")",
        "cypher_ans": [
            [
                "Bob Fosse",
                1
            ],
            [
                "Cleavant Derricks",
                1
            ]
        ]
    }
][
    {
        "db_id": "musical",
        "question": "Show names of musicals and the number of actors who have appeared in the musicals.",
        "sql_query": "SELECT T2.Name ,  COUNT(*) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID GROUP BY T1.Musical_ID",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.Name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "actor",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "musical",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Musical_ID",
                            "T2.Musical_ID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.Musical_ID"
            }
        },
        "sql_ans": [
            [
                "The Phantom of the Opera",
                2
            ],
            [
                "Les Mis\u00e9rables",
                2
            ],
            [
                "West Side Story",
                1
            ],
            [
                "The Book of Mormon",
                4
            ]
        ],
        "cypher_query": "MATCH (T1:actor)-[]-(T2:musical)\nWITH T2.Name AS Name, count(T1.Musical_ID) AS count\nRETURN Name,COUNT(\"*\")",
        "cypher_ans": [
            [
                "The Phantom of the Opera",
                1
            ],
            [
                "Les Mis\u00e9rables",
                1
            ],
            [
                "West Side Story",
                1
            ],
            [
                "The Book of Mormon",
                1
            ]
        ]
    },
    {
        "db_id": "musical",
        "question": "How many actors have appeared in each musical?",
        "sql_query": "SELECT T2.Name ,  COUNT(*) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID GROUP BY T1.Musical_ID",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.Name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "actor",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "musical",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Musical_ID",
                            "T2.Musical_ID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.Musical_ID"
            }
        },
        "sql_ans": [
            [
                "The Phantom of the Opera",
                2
            ],
            [
                "Les Mis\u00e9rables",
                2
            ],
            [
                "West Side Story",
                1
            ],
            [
                "The Book of Mormon",
                4
            ]
        ],
        "cypher_query": "MATCH (T1:actor)-[]-(T2:musical)\nWITH T2.Name AS Name, count(T1.Musical_ID) AS count\nRETURN Name,COUNT(\"*\")",
        "cypher_ans": [
            [
                "The Phantom of the Opera",
                1
            ],
            [
                "Les Mis\u00e9rables",
                1
            ],
            [
                "West Side Story",
                1
            ],
            [
                "The Book of Mormon",
                1
            ]
        ]
    },
    {
        "db_id": "musical",
        "question": "Show different nominees and the number of musicals they have been nominated.",
        "sql_query": "SELECT Nominee ,  COUNT(*) FROM musical GROUP BY Nominee",
        "parsed_sql": {
            "select": [
                {
                    "value": "Nominee"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": "musical",
            "groupby": {
                "value": "Nominee"
            }
        },
        "sql_ans": [
            [
                "Bob Fosse",
                5
            ],
            [
                "Cleavant Derricks",
                2
            ]
        ],
        "cypher_query": "MATCH (m:musical)\nWITH count(m.Nominee) AS count, m.Nominee AS Nominee\nRETURN Nominee,COUNT(\"*\")",
        "cypher_ans": [
            [
                "Bob Fosse",
                1
            ],
            [
                "Cleavant Derricks",
                1
            ]
        ]
    },
    {
        "db_id": "musical",
        "question": "How many musicals has each nominee been nominated for?",
        "sql_query": "SELECT Nominee ,  COUNT(*) FROM musical GROUP BY Nominee",
        "parsed_sql": {
            "select": [
                {
                    "value": "Nominee"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": "musical",
            "groupby": {
                "value": "Nominee"
            }
        },
        "sql_ans": [
            [
                "Bob Fosse",
                5
            ],
            [
                "Cleavant Derricks",
                2
            ]
        ],
        "cypher_query": "MATCH (m:musical)\nWITH count(m.Nominee) AS count, m.Nominee AS Nominee\nRETURN Nominee,COUNT(\"*\")",
        "cypher_ans": [
            [
                "Bob Fosse",
                1
            ],
            [
                "Cleavant Derricks",
                1
            ]
        ]
    }
][
    {
        "db_id": "musical",
        "question": "Show names of musicals and the number of actors who have appeared in the musicals.",
        "sql_query": "SELECT T2.Name ,  COUNT(*) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID GROUP BY T1.Musical_ID",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.Name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "actor",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "musical",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Musical_ID",
                            "T2.Musical_ID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.Musical_ID"
            }
        },
        "sql_ans": [
            [
                "The Phantom of the Opera",
                2
            ],
            [
                "Les Mis\u00e9rables",
                2
            ],
            [
                "West Side Story",
                1
            ],
            [
                "The Book of Mormon",
                4
            ]
        ],
        "cypher_query": "MATCH (T1:actor)-[]-(T2:musical)\nWITH T2.Name AS Name, count(T1.Musical_ID) AS count\nRETURN Name,COUNT(\"*\")",
        "cypher_ans": [
            [
                "The Phantom of the Opera",
                1
            ],
            [
                "Les Mis\u00e9rables",
                1
            ],
            [
                "West Side Story",
                1
            ],
            [
                "The Book of Mormon",
                1
            ]
        ]
    },
    {
        "db_id": "musical",
        "question": "How many actors have appeared in each musical?",
        "sql_query": "SELECT T2.Name ,  COUNT(*) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID GROUP BY T1.Musical_ID",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.Name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "actor",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "musical",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Musical_ID",
                            "T2.Musical_ID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.Musical_ID"
            }
        },
        "sql_ans": [
            [
                "The Phantom of the Opera",
                2
            ],
            [
                "Les Mis\u00e9rables",
                2
            ],
            [
                "West Side Story",
                1
            ],
            [
                "The Book of Mormon",
                4
            ]
        ],
        "cypher_query": "MATCH (T1:actor)-[]-(T2:musical)\nWITH T2.Name AS Name, count(T1.Musical_ID) AS count\nRETURN Name,COUNT(\"*\")",
        "cypher_ans": [
            [
                "The Phantom of the Opera",
                1
            ],
            [
                "Les Mis\u00e9rables",
                1
            ],
            [
                "West Side Story",
                1
            ],
            [
                "The Book of Mormon",
                1
            ]
        ]
    },
    {
        "db_id": "musical",
        "question": "Show different nominees and the number of musicals they have been nominated.",
        "sql_query": "SELECT Nominee ,  COUNT(*) FROM musical GROUP BY Nominee",
        "parsed_sql": {
            "select": [
                {
                    "value": "Nominee"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": "musical",
            "groupby": {
                "value": "Nominee"
            }
        },
        "sql_ans": [
            [
                "Bob Fosse",
                5
            ],
            [
                "Cleavant Derricks",
                2
            ]
        ],
        "cypher_query": "MATCH (m:musical)\nWITH count(m.Nominee) AS count, m.Nominee AS Nominee\nRETURN Nominee,COUNT(\"*\")",
        "cypher_ans": [
            [
                "Bob Fosse",
                1
            ],
            [
                "Cleavant Derricks",
                1
            ]
        ]
    },
    {
        "db_id": "musical",
        "question": "How many musicals has each nominee been nominated for?",
        "sql_query": "SELECT Nominee ,  COUNT(*) FROM musical GROUP BY Nominee",
        "parsed_sql": {
            "select": [
                {
                    "value": "Nominee"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": "musical",
            "groupby": {
                "value": "Nominee"
            }
        },
        "sql_ans": [
            [
                "Bob Fosse",
                5
            ],
            [
                "Cleavant Derricks",
                2
            ]
        ],
        "cypher_query": "MATCH (m:musical)\nWITH count(m.Nominee) AS count, m.Nominee AS Nominee\nRETURN Nominee,COUNT(\"*\")",
        "cypher_ans": [
            [
                "Bob Fosse",
                1
            ],
            [
                "Cleavant Derricks",
                1
            ]
        ]
    }
][
    {
        "db_id": "musical",
        "question": "Show names of musicals and the number of actors who have appeared in the musicals.",
        "sql_query": "SELECT T2.Name ,  COUNT(*) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID GROUP BY T1.Musical_ID",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.Name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "actor",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "musical",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Musical_ID",
                            "T2.Musical_ID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.Musical_ID"
            }
        },
        "sql_ans": [
            [
                "The Phantom of the Opera",
                2
            ],
            [
                "Les Mis\u00e9rables",
                2
            ],
            [
                "West Side Story",
                1
            ],
            [
                "The Book of Mormon",
                4
            ]
        ],
        "cypher_query": "MATCH (T1:actor)-[]-(T2:musical)\nWITH count(T1.Musical_ID) AS count, T2.Name AS Name\nRETURN Name,COUNT(\"*\")",
        "cypher_ans": [
            [
                "The Phantom of the Opera",
                1
            ],
            [
                "Les Mis\u00e9rables",
                1
            ],
            [
                "West Side Story",
                1
            ],
            [
                "The Book of Mormon",
                1
            ]
        ]
    },
    {
        "db_id": "musical",
        "question": "How many actors have appeared in each musical?",
        "sql_query": "SELECT T2.Name ,  COUNT(*) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID GROUP BY T1.Musical_ID",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.Name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "actor",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "musical",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Musical_ID",
                            "T2.Musical_ID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.Musical_ID"
            }
        },
        "sql_ans": [
            [
                "The Phantom of the Opera",
                2
            ],
            [
                "Les Mis\u00e9rables",
                2
            ],
            [
                "West Side Story",
                1
            ],
            [
                "The Book of Mormon",
                4
            ]
        ],
        "cypher_query": "MATCH (T1:actor)-[]-(T2:musical)\nWITH count(T1.Musical_ID) AS count, T2.Name AS Name\nRETURN Name,COUNT(\"*\")",
        "cypher_ans": [
            [
                "The Phantom of the Opera",
                1
            ],
            [
                "Les Mis\u00e9rables",
                1
            ],
            [
                "West Side Story",
                1
            ],
            [
                "The Book of Mormon",
                1
            ]
        ]
    },
    {
        "db_id": "musical",
        "question": "Show different nominees and the number of musicals they have been nominated.",
        "sql_query": "SELECT Nominee ,  COUNT(*) FROM musical GROUP BY Nominee",
        "parsed_sql": {
            "select": [
                {
                    "value": "Nominee"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": "musical",
            "groupby": {
                "value": "Nominee"
            }
        },
        "sql_ans": [
            [
                "Bob Fosse",
                5
            ],
            [
                "Cleavant Derricks",
                2
            ]
        ],
        "cypher_query": "MATCH (m:musical)\nWITH m.Nominee AS Nominee, count(m.Nominee) AS count\nRETURN Nominee,COUNT(\"*\")",
        "cypher_ans": [
            [
                "Bob Fosse",
                1
            ],
            [
                "Cleavant Derricks",
                1
            ]
        ]
    },
    {
        "db_id": "musical",
        "question": "How many musicals has each nominee been nominated for?",
        "sql_query": "SELECT Nominee ,  COUNT(*) FROM musical GROUP BY Nominee",
        "parsed_sql": {
            "select": [
                {
                    "value": "Nominee"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": "musical",
            "groupby": {
                "value": "Nominee"
            }
        },
        "sql_ans": [
            [
                "Bob Fosse",
                5
            ],
            [
                "Cleavant Derricks",
                2
            ]
        ],
        "cypher_query": "MATCH (m:musical)\nWITH m.Nominee AS Nominee, count(m.Nominee) AS count\nRETURN Nominee,COUNT(\"*\")",
        "cypher_ans": [
            [
                "Bob Fosse",
                1
            ],
            [
                "Cleavant Derricks",
                1
            ]
        ]
    }
][
    {
        "db_id": "musical",
        "question": "Show names of musicals and the number of actors who have appeared in the musicals.",
        "sql_query": "SELECT T2.Name ,  COUNT(*) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID GROUP BY T1.Musical_ID",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.Name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "actor",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "musical",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Musical_ID",
                            "T2.Musical_ID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.Musical_ID"
            }
        },
        "sql_ans": [
            [
                "The Phantom of the Opera",
                2
            ],
            [
                "Les Mis\u00e9rables",
                2
            ],
            [
                "West Side Story",
                1
            ],
            [
                "The Book of Mormon",
                4
            ]
        ],
        "cypher_query": "MATCH (T1:actor)-[]-(T2:musical)\nWITH T2.Name AS Name, count(T1.Musical_ID) AS count\nRETURN Name,COUNT(\"*\")",
        "cypher_ans": [
            [
                "The Phantom of the Opera",
                1
            ],
            [
                "Les Mis\u00e9rables",
                1
            ],
            [
                "West Side Story",
                1
            ],
            [
                "The Book of Mormon",
                1
            ]
        ]
    },
    {
        "db_id": "musical",
        "question": "How many actors have appeared in each musical?",
        "sql_query": "SELECT T2.Name ,  COUNT(*) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID GROUP BY T1.Musical_ID",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.Name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "actor",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "musical",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Musical_ID",
                            "T2.Musical_ID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.Musical_ID"
            }
        },
        "sql_ans": [
            [
                "The Phantom of the Opera",
                2
            ],
            [
                "Les Mis\u00e9rables",
                2
            ],
            [
                "West Side Story",
                1
            ],
            [
                "The Book of Mormon",
                4
            ]
        ],
        "cypher_query": "MATCH (T1:actor)-[]-(T2:musical)\nWITH T2.Name AS Name, count(T1.Musical_ID) AS count\nRETURN Name,COUNT(\"*\")",
        "cypher_ans": [
            [
                "The Phantom of the Opera",
                1
            ],
            [
                "Les Mis\u00e9rables",
                1
            ],
            [
                "West Side Story",
                1
            ],
            [
                "The Book of Mormon",
                1
            ]
        ]
    },
    {
        "db_id": "musical",
        "question": "Show different nominees and the number of musicals they have been nominated.",
        "sql_query": "SELECT Nominee ,  COUNT(*) FROM musical GROUP BY Nominee",
        "parsed_sql": {
            "select": [
                {
                    "value": "Nominee"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": "musical",
            "groupby": {
                "value": "Nominee"
            }
        },
        "sql_ans": [
            [
                "Bob Fosse",
                5
            ],
            [
                "Cleavant Derricks",
                2
            ]
        ],
        "cypher_query": "MATCH (m:musical)\nWITH m.Nominee AS Nominee, count(m.Nominee) AS count\nRETURN Nominee,COUNT(\"*\")",
        "cypher_ans": [
            [
                "Bob Fosse",
                1
            ],
            [
                "Cleavant Derricks",
                1
            ]
        ]
    },
    {
        "db_id": "musical",
        "question": "How many musicals has each nominee been nominated for?",
        "sql_query": "SELECT Nominee ,  COUNT(*) FROM musical GROUP BY Nominee",
        "parsed_sql": {
            "select": [
                {
                    "value": "Nominee"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": "musical",
            "groupby": {
                "value": "Nominee"
            }
        },
        "sql_ans": [
            [
                "Bob Fosse",
                5
            ],
            [
                "Cleavant Derricks",
                2
            ]
        ],
        "cypher_query": "MATCH (m:musical)\nWITH m.Nominee AS Nominee, count(m.Nominee) AS count\nRETURN Nominee,COUNT(\"*\")",
        "cypher_ans": [
            [
                "Bob Fosse",
                1
            ],
            [
                "Cleavant Derricks",
                1
            ]
        ]
    }
][
    {
        "db_id": "musical",
        "question": "Show names of musicals and the number of actors who have appeared in the musicals.",
        "sql_query": "SELECT T2.Name ,  COUNT(*) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID GROUP BY T1.Musical_ID",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.Name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "actor",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "musical",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Musical_ID",
                            "T2.Musical_ID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.Musical_ID"
            }
        },
        "sql_ans": [
            [
                "The Phantom of the Opera",
                2
            ],
            [
                "Les Mis\u00e9rables",
                2
            ],
            [
                "West Side Story",
                1
            ],
            [
                "The Book of Mormon",
                4
            ]
        ],
        "cypher_query": "MATCH (T1:actor)-[]-(T2:musical)\nWITH count(T1.Musical_ID) AS count, T2.Name AS Name\nRETURN Name,COUNT(\"*\")",
        "cypher_ans": [
            [
                "The Phantom of the Opera",
                1
            ],
            [
                "Les Mis\u00e9rables",
                1
            ],
            [
                "West Side Story",
                1
            ],
            [
                "The Book of Mormon",
                1
            ]
        ]
    },
    {
        "db_id": "musical",
        "question": "How many actors have appeared in each musical?",
        "sql_query": "SELECT T2.Name ,  COUNT(*) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID GROUP BY T1.Musical_ID",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.Name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "actor",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "musical",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Musical_ID",
                            "T2.Musical_ID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.Musical_ID"
            }
        },
        "sql_ans": [
            [
                "The Phantom of the Opera",
                2
            ],
            [
                "Les Mis\u00e9rables",
                2
            ],
            [
                "West Side Story",
                1
            ],
            [
                "The Book of Mormon",
                4
            ]
        ],
        "cypher_query": "MATCH (T1:actor)-[]-(T2:musical)\nWITH count(T1.Musical_ID) AS count, T2.Name AS Name\nRETURN Name,COUNT(\"*\")",
        "cypher_ans": [
            [
                "The Phantom of the Opera",
                1
            ],
            [
                "Les Mis\u00e9rables",
                1
            ],
            [
                "West Side Story",
                1
            ],
            [
                "The Book of Mormon",
                1
            ]
        ]
    },
    {
        "db_id": "musical",
        "question": "Show different nominees and the number of musicals they have been nominated.",
        "sql_query": "SELECT Nominee ,  COUNT(*) FROM musical GROUP BY Nominee",
        "parsed_sql": {
            "select": [
                {
                    "value": "Nominee"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": "musical",
            "groupby": {
                "value": "Nominee"
            }
        },
        "sql_ans": [
            [
                "Bob Fosse",
                5
            ],
            [
                "Cleavant Derricks",
                2
            ]
        ],
        "cypher_query": "MATCH (m:musical)\nWITH m.Nominee AS Nominee, count(m.Nominee) AS count\nRETURN Nominee,COUNT(\"*\")",
        "cypher_ans": [
            [
                "Bob Fosse",
                1
            ],
            [
                "Cleavant Derricks",
                1
            ]
        ]
    },
    {
        "db_id": "musical",
        "question": "How many musicals has each nominee been nominated for?",
        "sql_query": "SELECT Nominee ,  COUNT(*) FROM musical GROUP BY Nominee",
        "parsed_sql": {
            "select": [
                {
                    "value": "Nominee"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": "musical",
            "groupby": {
                "value": "Nominee"
            }
        },
        "sql_ans": [
            [
                "Bob Fosse",
                5
            ],
            [
                "Cleavant Derricks",
                2
            ]
        ],
        "cypher_query": "MATCH (m:musical)\nWITH m.Nominee AS Nominee, count(m.Nominee) AS count\nRETURN Nominee,COUNT(\"*\")",
        "cypher_ans": [
            [
                "Bob Fosse",
                1
            ],
            [
                "Cleavant Derricks",
                1
            ]
        ]
    }
][
    {
        "db_id": "musical",
        "question": "Show names of musicals and the number of actors who have appeared in the musicals.",
        "sql_query": "SELECT T2.Name ,  COUNT(*) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID GROUP BY T1.Musical_ID",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.Name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "actor",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "musical",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Musical_ID",
                            "T2.Musical_ID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.Musical_ID"
            }
        },
        "sql_ans": [
            [
                "The Phantom of the Opera",
                2
            ],
            [
                "Les Mis\u00e9rables",
                2
            ],
            [
                "West Side Story",
                1
            ],
            [
                "The Book of Mormon",
                4
            ]
        ],
        "cypher_query": "MATCH (T1:actor)-[]-(T2:musical)\nWITH T2.Name AS Name, count(T1.Musical_ID) AS count\nRETURN Name,COUNT(\"*\")",
        "cypher_ans": [
            [
                "The Phantom of the Opera",
                1
            ],
            [
                "Les Mis\u00e9rables",
                1
            ],
            [
                "West Side Story",
                1
            ],
            [
                "The Book of Mormon",
                1
            ]
        ]
    },
    {
        "db_id": "musical",
        "question": "How many actors have appeared in each musical?",
        "sql_query": "SELECT T2.Name ,  COUNT(*) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID GROUP BY T1.Musical_ID",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.Name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "actor",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "musical",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Musical_ID",
                            "T2.Musical_ID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.Musical_ID"
            }
        },
        "sql_ans": [
            [
                "The Phantom of the Opera",
                2
            ],
            [
                "Les Mis\u00e9rables",
                2
            ],
            [
                "West Side Story",
                1
            ],
            [
                "The Book of Mormon",
                4
            ]
        ],
        "cypher_query": "MATCH (T1:actor)-[]-(T2:musical)\nWITH T2.Name AS Name, count(T1.Musical_ID) AS count\nRETURN Name,COUNT(\"*\")",
        "cypher_ans": [
            [
                "The Phantom of the Opera",
                1
            ],
            [
                "Les Mis\u00e9rables",
                1
            ],
            [
                "West Side Story",
                1
            ],
            [
                "The Book of Mormon",
                1
            ]
        ]
    },
    {
        "db_id": "musical",
        "question": "Show different nominees and the number of musicals they have been nominated.",
        "sql_query": "SELECT Nominee ,  COUNT(*) FROM musical GROUP BY Nominee",
        "parsed_sql": {
            "select": [
                {
                    "value": "Nominee"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": "musical",
            "groupby": {
                "value": "Nominee"
            }
        },
        "sql_ans": [
            [
                "Bob Fosse",
                5
            ],
            [
                "Cleavant Derricks",
                2
            ]
        ],
        "cypher_query": "MATCH (m:musical)\nWITH count(m.Nominee) AS count, m.Nominee AS Nominee\nRETURN Nominee,COUNT(\"*\")",
        "cypher_ans": [
            [
                "Bob Fosse",
                1
            ],
            [
                "Cleavant Derricks",
                1
            ]
        ]
    },
    {
        "db_id": "musical",
        "question": "How many musicals has each nominee been nominated for?",
        "sql_query": "SELECT Nominee ,  COUNT(*) FROM musical GROUP BY Nominee",
        "parsed_sql": {
            "select": [
                {
                    "value": "Nominee"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": "musical",
            "groupby": {
                "value": "Nominee"
            }
        },
        "sql_ans": [
            [
                "Bob Fosse",
                5
            ],
            [
                "Cleavant Derricks",
                2
            ]
        ],
        "cypher_query": "MATCH (m:musical)\nWITH count(m.Nominee) AS count, m.Nominee AS Nominee\nRETURN Nominee,COUNT(\"*\")",
        "cypher_ans": [
            [
                "Bob Fosse",
                1
            ],
            [
                "Cleavant Derricks",
                1
            ]
        ]
    }
][
    {
        "db_id": "musical",
        "question": "Show names of musicals and the number of actors who have appeared in the musicals.",
        "sql_query": "SELECT T2.Name ,  COUNT(*) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID GROUP BY T1.Musical_ID",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.Name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "actor",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "musical",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Musical_ID",
                            "T2.Musical_ID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.Musical_ID"
            }
        },
        "sql_ans": [
            [
                "The Phantom of the Opera",
                2
            ],
            [
                "Les Mis\u00e9rables",
                2
            ],
            [
                "West Side Story",
                1
            ],
            [
                "The Book of Mormon",
                4
            ]
        ],
        "cypher_query": "MATCH (T1:actor)-[]-(T2:musical)\nWITH T2.Name AS Name, count(T1.Musical_ID) AS count\nRETURN Name,COUNT(\"*\")",
        "cypher_ans": [
            [
                "The Phantom of the Opera",
                1
            ],
            [
                "Les Mis\u00e9rables",
                1
            ],
            [
                "West Side Story",
                1
            ],
            [
                "The Book of Mormon",
                1
            ]
        ]
    },
    {
        "db_id": "musical",
        "question": "How many actors have appeared in each musical?",
        "sql_query": "SELECT T2.Name ,  COUNT(*) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID GROUP BY T1.Musical_ID",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.Name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "actor",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "musical",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Musical_ID",
                            "T2.Musical_ID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.Musical_ID"
            }
        },
        "sql_ans": [
            [
                "The Phantom of the Opera",
                2
            ],
            [
                "Les Mis\u00e9rables",
                2
            ],
            [
                "West Side Story",
                1
            ],
            [
                "The Book of Mormon",
                4
            ]
        ],
        "cypher_query": "MATCH (T1:actor)-[]-(T2:musical)\nWITH T2.Name AS Name, count(T1.Musical_ID) AS count\nRETURN Name,COUNT(\"*\")",
        "cypher_ans": [
            [
                "The Phantom of the Opera",
                1
            ],
            [
                "Les Mis\u00e9rables",
                1
            ],
            [
                "West Side Story",
                1
            ],
            [
                "The Book of Mormon",
                1
            ]
        ]
    },
    {
        "db_id": "musical",
        "question": "Show different nominees and the number of musicals they have been nominated.",
        "sql_query": "SELECT Nominee ,  COUNT(*) FROM musical GROUP BY Nominee",
        "parsed_sql": {
            "select": [
                {
                    "value": "Nominee"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": "musical",
            "groupby": {
                "value": "Nominee"
            }
        },
        "sql_ans": [
            [
                "Bob Fosse",
                5
            ],
            [
                "Cleavant Derricks",
                2
            ]
        ],
        "cypher_query": "MATCH (m:musical)\nWITH count(m.Nominee) AS count, m.Nominee AS Nominee\nRETURN Nominee,COUNT(\"*\")",
        "cypher_ans": [
            [
                "Bob Fosse",
                1
            ],
            [
                "Cleavant Derricks",
                1
            ]
        ]
    },
    {
        "db_id": "musical",
        "question": "How many musicals has each nominee been nominated for?",
        "sql_query": "SELECT Nominee ,  COUNT(*) FROM musical GROUP BY Nominee",
        "parsed_sql": {
            "select": [
                {
                    "value": "Nominee"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": "musical",
            "groupby": {
                "value": "Nominee"
            }
        },
        "sql_ans": [
            [
                "Bob Fosse",
                5
            ],
            [
                "Cleavant Derricks",
                2
            ]
        ],
        "cypher_query": "MATCH (m:musical)\nWITH count(m.Nominee) AS count, m.Nominee AS Nominee\nRETURN Nominee,COUNT(\"*\")",
        "cypher_ans": [
            [
                "Bob Fosse",
                1
            ],
            [
                "Cleavant Derricks",
                1
            ]
        ]
    }
][
    {
        "db_id": "musical",
        "question": "Show names of musicals and the number of actors who have appeared in the musicals.",
        "sql_query": "SELECT T2.Name ,  COUNT(*) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID GROUP BY T1.Musical_ID",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.Name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "actor",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "musical",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Musical_ID",
                            "T2.Musical_ID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.Musical_ID"
            }
        },
        "sql_ans": [
            [
                "The Phantom of the Opera",
                2
            ],
            [
                "Les Mis\u00e9rables",
                2
            ],
            [
                "West Side Story",
                1
            ],
            [
                "The Book of Mormon",
                4
            ]
        ],
        "cypher_query": "MATCH (T1:actor)-[]-(T2:musical)\nWITH count(T1.Musical_ID) AS count, T2.Name AS Name\nRETURN Name,COUNT(\"*\")",
        "cypher_ans": [
            [
                "The Phantom of the Opera",
                1
            ],
            [
                "Les Mis\u00e9rables",
                1
            ],
            [
                "West Side Story",
                1
            ],
            [
                "The Book of Mormon",
                1
            ]
        ]
    },
    {
        "db_id": "musical",
        "question": "How many actors have appeared in each musical?",
        "sql_query": "SELECT T2.Name ,  COUNT(*) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID GROUP BY T1.Musical_ID",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.Name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "actor",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "musical",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Musical_ID",
                            "T2.Musical_ID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.Musical_ID"
            }
        },
        "sql_ans": [
            [
                "The Phantom of the Opera",
                2
            ],
            [
                "Les Mis\u00e9rables",
                2
            ],
            [
                "West Side Story",
                1
            ],
            [
                "The Book of Mormon",
                4
            ]
        ],
        "cypher_query": "MATCH (T1:actor)-[]-(T2:musical)\nWITH count(T1.Musical_ID) AS count, T2.Name AS Name\nRETURN Name,COUNT(\"*\")",
        "cypher_ans": [
            [
                "The Phantom of the Opera",
                1
            ],
            [
                "Les Mis\u00e9rables",
                1
            ],
            [
                "West Side Story",
                1
            ],
            [
                "The Book of Mormon",
                1
            ]
        ]
    },
    {
        "db_id": "musical",
        "question": "Show different nominees and the number of musicals they have been nominated.",
        "sql_query": "SELECT Nominee ,  COUNT(*) FROM musical GROUP BY Nominee",
        "parsed_sql": {
            "select": [
                {
                    "value": "Nominee"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": "musical",
            "groupby": {
                "value": "Nominee"
            }
        },
        "sql_ans": [
            [
                "Bob Fosse",
                5
            ],
            [
                "Cleavant Derricks",
                2
            ]
        ],
        "cypher_query": "MATCH (m:musical)\nWITH m.Nominee AS Nominee, count(m.Nominee) AS count\nRETURN Nominee,COUNT(\"*\")",
        "cypher_ans": [
            [
                "Bob Fosse",
                1
            ],
            [
                "Cleavant Derricks",
                1
            ]
        ]
    },
    {
        "db_id": "musical",
        "question": "How many musicals has each nominee been nominated for?",
        "sql_query": "SELECT Nominee ,  COUNT(*) FROM musical GROUP BY Nominee",
        "parsed_sql": {
            "select": [
                {
                    "value": "Nominee"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": "musical",
            "groupby": {
                "value": "Nominee"
            }
        },
        "sql_ans": [
            [
                "Bob Fosse",
                5
            ],
            [
                "Cleavant Derricks",
                2
            ]
        ],
        "cypher_query": "MATCH (m:musical)\nWITH m.Nominee AS Nominee, count(m.Nominee) AS count\nRETURN Nominee,COUNT(\"*\")",
        "cypher_ans": [
            [
                "Bob Fosse",
                1
            ],
            [
                "Cleavant Derricks",
                1
            ]
        ]
    }
][
    {
        "db_id": "musical",
        "question": "Show names of actors that have appeared in musical with name \"The Phantom of the Opera\".",
        "sql_query": "SELECT T1.Name FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID WHERE T2.Name  =  \"The Phantom of the Opera\"",
        "parsed_sql": {
            "select": {
                "value": "T1.Name"
            },
            "from": [
                {
                    "value": "actor",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "musical",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Musical_ID",
                            "T2.Musical_ID"
                        ]
                    }
                }
            ],
            "where": {
                "eq": [
                    "T2.Name",
                    "The Phantom of the Opera"
                ]
            }
        },
        "sql_ans": [
            [
                "Ray Meagher"
            ],
            [
                "Tom Oliver"
            ]
        ],
        "cypher_query": "MATCH (T1:actor)-[]-(T2:musical)\nWHERE T2.Name = T2.Name\nRETURN T1.Name",
        "cypher_ans": [
            [
                "Tom Oliver"
            ],
            [
                "Ray Meagher"
            ],
            [
                "Kate Ritchie"
            ],
            [
                "Lynne McGranger"
            ],
            [
                "Alan Fletcher"
            ],
            [
                "Stefan Dennis"
            ],
            [
                "Ryan Moloney"
            ],
            [
                "Ian Smith"
            ],
            [
                "Jackie Woodburne"
            ]
        ]
    },
    {
        "db_id": "musical",
        "question": "What are the names of actors who have been in the musical titled The Phantom of the Opera?",
        "sql_query": "SELECT T1.Name FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID WHERE T2.Name  =  \"The Phantom of the Opera\"",
        "parsed_sql": {
            "select": {
                "value": "T1.Name"
            },
            "from": [
                {
                    "value": "actor",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "musical",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Musical_ID",
                            "T2.Musical_ID"
                        ]
                    }
                }
            ],
            "where": {
                "eq": [
                    "T2.Name",
                    "The Phantom of the Opera"
                ]
            }
        },
        "sql_ans": [
            [
                "Ray Meagher"
            ],
            [
                "Tom Oliver"
            ]
        ],
        "cypher_query": "MATCH (T1:actor)-[]-(T2:musical)\nWHERE T2.Name = T2.Name\nRETURN T1.Name",
        "cypher_ans": [
            [
                "Tom Oliver"
            ],
            [
                "Ray Meagher"
            ],
            [
                "Kate Ritchie"
            ],
            [
                "Lynne McGranger"
            ],
            [
                "Alan Fletcher"
            ],
            [
                "Stefan Dennis"
            ],
            [
                "Ryan Moloney"
            ],
            [
                "Ian Smith"
            ],
            [
                "Jackie Woodburne"
            ]
        ]
    },
    {
        "db_id": "musical",
        "question": "Show names of musicals and the number of actors who have appeared in the musicals.",
        "sql_query": "SELECT T2.Name ,  COUNT(*) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID GROUP BY T1.Musical_ID",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.Name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "actor",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "musical",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Musical_ID",
                            "T2.Musical_ID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.Musical_ID"
            }
        },
        "sql_ans": [
            [
                "The Phantom of the Opera",
                2
            ],
            [
                "Les Mis\u00e9rables",
                2
            ],
            [
                "West Side Story",
                1
            ],
            [
                "The Book of Mormon",
                4
            ]
        ],
        "cypher_query": "MATCH (T1:actor)-[]-(T2:musical)\nWITH count(T1.Musical_ID) AS count, T2.Name AS Name\nRETURN Name,COUNT(\"*\")",
        "cypher_ans": [
            [
                "The Phantom of the Opera",
                1
            ],
            [
                "Les Mis\u00e9rables",
                1
            ],
            [
                "West Side Story",
                1
            ],
            [
                "The Book of Mormon",
                1
            ]
        ]
    },
    {
        "db_id": "musical",
        "question": "How many actors have appeared in each musical?",
        "sql_query": "SELECT T2.Name ,  COUNT(*) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID GROUP BY T1.Musical_ID",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.Name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "actor",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "musical",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Musical_ID",
                            "T2.Musical_ID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.Musical_ID"
            }
        },
        "sql_ans": [
            [
                "The Phantom of the Opera",
                2
            ],
            [
                "Les Mis\u00e9rables",
                2
            ],
            [
                "West Side Story",
                1
            ],
            [
                "The Book of Mormon",
                4
            ]
        ],
        "cypher_query": "MATCH (T1:actor)-[]-(T2:musical)\nWITH count(T1.Musical_ID) AS count, T2.Name AS Name\nRETURN Name,COUNT(\"*\")",
        "cypher_ans": [
            [
                "The Phantom of the Opera",
                1
            ],
            [
                "Les Mis\u00e9rables",
                1
            ],
            [
                "West Side Story",
                1
            ],
            [
                "The Book of Mormon",
                1
            ]
        ]
    },
    {
        "db_id": "musical",
        "question": "Show different nominees and the number of musicals they have been nominated.",
        "sql_query": "SELECT Nominee ,  COUNT(*) FROM musical GROUP BY Nominee",
        "parsed_sql": {
            "select": [
                {
                    "value": "Nominee"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": "musical",
            "groupby": {
                "value": "Nominee"
            }
        },
        "sql_ans": [
            [
                "Bob Fosse",
                5
            ],
            [
                "Cleavant Derricks",
                2
            ]
        ],
        "cypher_query": "MATCH (m:musical)\nWITH m.Nominee AS Nominee, count(m.Nominee) AS count\nRETURN Nominee,COUNT(\"*\")",
        "cypher_ans": [
            [
                "Bob Fosse",
                1
            ],
            [
                "Cleavant Derricks",
                1
            ]
        ]
    },
    {
        "db_id": "musical",
        "question": "How many musicals has each nominee been nominated for?",
        "sql_query": "SELECT Nominee ,  COUNT(*) FROM musical GROUP BY Nominee",
        "parsed_sql": {
            "select": [
                {
                    "value": "Nominee"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": "musical",
            "groupby": {
                "value": "Nominee"
            }
        },
        "sql_ans": [
            [
                "Bob Fosse",
                5
            ],
            [
                "Cleavant Derricks",
                2
            ]
        ],
        "cypher_query": "MATCH (m:musical)\nWITH m.Nominee AS Nominee, count(m.Nominee) AS count\nRETURN Nominee,COUNT(\"*\")",
        "cypher_ans": [
            [
                "Bob Fosse",
                1
            ],
            [
                "Cleavant Derricks",
                1
            ]
        ]
    }
][
    {
        "db_id": "musical",
        "question": "Show names of musicals and the number of actors who have appeared in the musicals.",
        "sql_query": "SELECT T2.Name ,  COUNT(*) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID GROUP BY T1.Musical_ID",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.Name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "actor",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "musical",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Musical_ID",
                            "T2.Musical_ID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.Musical_ID"
            }
        },
        "sql_ans": [
            [
                "The Phantom of the Opera",
                2
            ],
            [
                "Les Mis\u00e9rables",
                2
            ],
            [
                "West Side Story",
                1
            ],
            [
                "The Book of Mormon",
                4
            ]
        ],
        "cypher_query": "MATCH (T1:actor)-[]-(T2:musical)\nWITH T2.Name AS Name, count(T1.Musical_ID) AS count\nRETURN Name,COUNT(\"*\")",
        "cypher_ans": [
            [
                "The Phantom of the Opera",
                1
            ],
            [
                "Les Mis\u00e9rables",
                1
            ],
            [
                "West Side Story",
                1
            ],
            [
                "The Book of Mormon",
                1
            ]
        ]
    },
    {
        "db_id": "musical",
        "question": "How many actors have appeared in each musical?",
        "sql_query": "SELECT T2.Name ,  COUNT(*) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID GROUP BY T1.Musical_ID",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.Name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "actor",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "musical",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Musical_ID",
                            "T2.Musical_ID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.Musical_ID"
            }
        },
        "sql_ans": [
            [
                "The Phantom of the Opera",
                2
            ],
            [
                "Les Mis\u00e9rables",
                2
            ],
            [
                "West Side Story",
                1
            ],
            [
                "The Book of Mormon",
                4
            ]
        ],
        "cypher_query": "MATCH (T1:actor)-[]-(T2:musical)\nWITH T2.Name AS Name, count(T1.Musical_ID) AS count\nRETURN Name,COUNT(\"*\")",
        "cypher_ans": [
            [
                "The Phantom of the Opera",
                1
            ],
            [
                "Les Mis\u00e9rables",
                1
            ],
            [
                "West Side Story",
                1
            ],
            [
                "The Book of Mormon",
                1
            ]
        ]
    },
    {
        "db_id": "musical",
        "question": "Show different nominees and the number of musicals they have been nominated.",
        "sql_query": "SELECT Nominee ,  COUNT(*) FROM musical GROUP BY Nominee",
        "parsed_sql": {
            "select": [
                {
                    "value": "Nominee"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": "musical",
            "groupby": {
                "value": "Nominee"
            }
        },
        "sql_ans": [
            [
                "Bob Fosse",
                5
            ],
            [
                "Cleavant Derricks",
                2
            ]
        ],
        "cypher_query": "MATCH (m:musical)\nWITH m.Nominee AS Nominee, count(m.Nominee) AS count\nRETURN Nominee,COUNT(\"*\")",
        "cypher_ans": [
            [
                "Bob Fosse",
                1
            ],
            [
                "Cleavant Derricks",
                1
            ]
        ]
    },
    {
        "db_id": "musical",
        "question": "How many musicals has each nominee been nominated for?",
        "sql_query": "SELECT Nominee ,  COUNT(*) FROM musical GROUP BY Nominee",
        "parsed_sql": {
            "select": [
                {
                    "value": "Nominee"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": "musical",
            "groupby": {
                "value": "Nominee"
            }
        },
        "sql_ans": [
            [
                "Bob Fosse",
                5
            ],
            [
                "Cleavant Derricks",
                2
            ]
        ],
        "cypher_query": "MATCH (m:musical)\nWITH m.Nominee AS Nominee, count(m.Nominee) AS count\nRETURN Nominee,COUNT(\"*\")",
        "cypher_ans": [
            [
                "Bob Fosse",
                1
            ],
            [
                "Cleavant Derricks",
                1
            ]
        ]
    }
][
    {
        "db_id": "musical",
        "question": "Show names of musicals and the number of actors who have appeared in the musicals.",
        "sql_query": "SELECT T2.Name ,  COUNT(*) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID GROUP BY T1.Musical_ID",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.Name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "actor",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "musical",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Musical_ID",
                            "T2.Musical_ID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.Musical_ID"
            }
        },
        "sql_ans": [
            [
                "The Phantom of the Opera",
                2
            ],
            [
                "Les Mis\u00e9rables",
                2
            ],
            [
                "West Side Story",
                1
            ],
            [
                "The Book of Mormon",
                4
            ]
        ],
        "cypher_query": "MATCH (T1:actor)-[]-(T2:musical)\nWITH T2.Name AS Name, count(T1.Musical_ID) AS count\nRETURN Name,COUNT(\"*\")",
        "cypher_ans": [
            [
                "The Phantom of the Opera",
                1
            ],
            [
                "Les Mis\u00e9rables",
                1
            ],
            [
                "West Side Story",
                1
            ],
            [
                "The Book of Mormon",
                1
            ]
        ]
    },
    {
        "db_id": "musical",
        "question": "How many actors have appeared in each musical?",
        "sql_query": "SELECT T2.Name ,  COUNT(*) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID GROUP BY T1.Musical_ID",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.Name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "actor",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "musical",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Musical_ID",
                            "T2.Musical_ID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.Musical_ID"
            }
        },
        "sql_ans": [
            [
                "The Phantom of the Opera",
                2
            ],
            [
                "Les Mis\u00e9rables",
                2
            ],
            [
                "West Side Story",
                1
            ],
            [
                "The Book of Mormon",
                4
            ]
        ],
        "cypher_query": "MATCH (T1:actor)-[]-(T2:musical)\nWITH T2.Name AS Name, count(T1.Musical_ID) AS count\nRETURN Name,COUNT(\"*\")",
        "cypher_ans": [
            [
                "The Phantom of the Opera",
                1
            ],
            [
                "Les Mis\u00e9rables",
                1
            ],
            [
                "West Side Story",
                1
            ],
            [
                "The Book of Mormon",
                1
            ]
        ]
    },
    {
        "db_id": "musical",
        "question": "Show different nominees and the number of musicals they have been nominated.",
        "sql_query": "SELECT Nominee ,  COUNT(*) FROM musical GROUP BY Nominee",
        "parsed_sql": {
            "select": [
                {
                    "value": "Nominee"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": "musical",
            "groupby": {
                "value": "Nominee"
            }
        },
        "sql_ans": [
            [
                "Bob Fosse",
                5
            ],
            [
                "Cleavant Derricks",
                2
            ]
        ],
        "cypher_query": "MATCH (m:musical)\nWITH count(m.Nominee) AS count, m.Nominee AS Nominee\nRETURN Nominee,COUNT(\"*\")",
        "cypher_ans": [
            [
                "Bob Fosse",
                1
            ],
            [
                "Cleavant Derricks",
                1
            ]
        ]
    },
    {
        "db_id": "musical",
        "question": "How many musicals has each nominee been nominated for?",
        "sql_query": "SELECT Nominee ,  COUNT(*) FROM musical GROUP BY Nominee",
        "parsed_sql": {
            "select": [
                {
                    "value": "Nominee"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": "musical",
            "groupby": {
                "value": "Nominee"
            }
        },
        "sql_ans": [
            [
                "Bob Fosse",
                5
            ],
            [
                "Cleavant Derricks",
                2
            ]
        ],
        "cypher_query": "MATCH (m:musical)\nWITH count(m.Nominee) AS count, m.Nominee AS Nominee\nRETURN Nominee,COUNT(\"*\")",
        "cypher_ans": [
            [
                "Bob Fosse",
                1
            ],
            [
                "Cleavant Derricks",
                1
            ]
        ]
    }
][
    {
        "db_id": "musical",
        "question": "Show names of musicals and the number of actors who have appeared in the musicals.",
        "sql_query": "SELECT T2.Name ,  COUNT(*) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID GROUP BY T1.Musical_ID",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.Name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "actor",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "musical",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Musical_ID",
                            "T2.Musical_ID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.Musical_ID"
            }
        },
        "sql_ans": [
            [
                "The Phantom of the Opera",
                2
            ],
            [
                "Les Mis\u00e9rables",
                2
            ],
            [
                "West Side Story",
                1
            ],
            [
                "The Book of Mormon",
                4
            ]
        ],
        "cypher_query": "MATCH (T1:actor)-[]-(T2:musical)\nWITH count(T1.Musical_ID) AS count, T2.Name AS Name\nRETURN Name,COUNT(\"*\")",
        "cypher_ans": [
            [
                "The Phantom of the Opera",
                1
            ],
            [
                "Les Mis\u00e9rables",
                1
            ],
            [
                "West Side Story",
                1
            ],
            [
                "The Book of Mormon",
                1
            ]
        ]
    },
    {
        "db_id": "musical",
        "question": "How many actors have appeared in each musical?",
        "sql_query": "SELECT T2.Name ,  COUNT(*) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID GROUP BY T1.Musical_ID",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.Name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "actor",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "musical",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Musical_ID",
                            "T2.Musical_ID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.Musical_ID"
            }
        },
        "sql_ans": [
            [
                "The Phantom of the Opera",
                2
            ],
            [
                "Les Mis\u00e9rables",
                2
            ],
            [
                "West Side Story",
                1
            ],
            [
                "The Book of Mormon",
                4
            ]
        ],
        "cypher_query": "MATCH (T1:actor)-[]-(T2:musical)\nWITH count(T1.Musical_ID) AS count, T2.Name AS Name\nRETURN Name,COUNT(\"*\")",
        "cypher_ans": [
            [
                "The Phantom of the Opera",
                1
            ],
            [
                "Les Mis\u00e9rables",
                1
            ],
            [
                "West Side Story",
                1
            ],
            [
                "The Book of Mormon",
                1
            ]
        ]
    },
    {
        "db_id": "musical",
        "question": "Show different nominees and the number of musicals they have been nominated.",
        "sql_query": "SELECT Nominee ,  COUNT(*) FROM musical GROUP BY Nominee",
        "parsed_sql": {
            "select": [
                {
                    "value": "Nominee"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": "musical",
            "groupby": {
                "value": "Nominee"
            }
        },
        "sql_ans": [
            [
                "Bob Fosse",
                5
            ],
            [
                "Cleavant Derricks",
                2
            ]
        ],
        "cypher_query": "MATCH (m:musical)\nWITH count(m.Nominee) AS count, m.Nominee AS Nominee\nRETURN Nominee,COUNT(\"*\")",
        "cypher_ans": [
            [
                "Bob Fosse",
                1
            ],
            [
                "Cleavant Derricks",
                1
            ]
        ]
    },
    {
        "db_id": "musical",
        "question": "How many musicals has each nominee been nominated for?",
        "sql_query": "SELECT Nominee ,  COUNT(*) FROM musical GROUP BY Nominee",
        "parsed_sql": {
            "select": [
                {
                    "value": "Nominee"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": "musical",
            "groupby": {
                "value": "Nominee"
            }
        },
        "sql_ans": [
            [
                "Bob Fosse",
                5
            ],
            [
                "Cleavant Derricks",
                2
            ]
        ],
        "cypher_query": "MATCH (m:musical)\nWITH count(m.Nominee) AS count, m.Nominee AS Nominee\nRETURN Nominee,COUNT(\"*\")",
        "cypher_ans": [
            [
                "Bob Fosse",
                1
            ],
            [
                "Cleavant Derricks",
                1
            ]
        ]
    }
][
    {
        "db_id": "musical",
        "question": "Show names of musicals and the number of actors who have appeared in the musicals.",
        "sql_query": "SELECT T2.Name ,  COUNT(*) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID GROUP BY T1.Musical_ID",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.Name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "actor",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "musical",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Musical_ID",
                            "T2.Musical_ID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.Musical_ID"
            }
        },
        "sql_ans": [
            [
                "The Phantom of the Opera",
                2
            ],
            [
                "Les Mis\u00e9rables",
                2
            ],
            [
                "West Side Story",
                1
            ],
            [
                "The Book of Mormon",
                4
            ]
        ],
        "cypher_query": "MATCH (T1:actor)-[]-(T2:musical)\nWITH count(T1.Musical_ID) AS count, T2.Name AS Name\nRETURN Name,COUNT(\"*\")",
        "cypher_ans": [
            [
                "The Phantom of the Opera",
                1
            ],
            [
                "Les Mis\u00e9rables",
                1
            ],
            [
                "West Side Story",
                1
            ],
            [
                "The Book of Mormon",
                1
            ]
        ]
    },
    {
        "db_id": "musical",
        "question": "How many actors have appeared in each musical?",
        "sql_query": "SELECT T2.Name ,  COUNT(*) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID GROUP BY T1.Musical_ID",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.Name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "actor",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "musical",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Musical_ID",
                            "T2.Musical_ID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.Musical_ID"
            }
        },
        "sql_ans": [
            [
                "The Phantom of the Opera",
                2
            ],
            [
                "Les Mis\u00e9rables",
                2
            ],
            [
                "West Side Story",
                1
            ],
            [
                "The Book of Mormon",
                4
            ]
        ],
        "cypher_query": "MATCH (T1:actor)-[]-(T2:musical)\nWITH count(T1.Musical_ID) AS count, T2.Name AS Name\nRETURN Name,COUNT(\"*\")",
        "cypher_ans": [
            [
                "The Phantom of the Opera",
                1
            ],
            [
                "Les Mis\u00e9rables",
                1
            ],
            [
                "West Side Story",
                1
            ],
            [
                "The Book of Mormon",
                1
            ]
        ]
    },
    {
        "db_id": "musical",
        "question": "Show different nominees and the number of musicals they have been nominated.",
        "sql_query": "SELECT Nominee ,  COUNT(*) FROM musical GROUP BY Nominee",
        "parsed_sql": {
            "select": [
                {
                    "value": "Nominee"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": "musical",
            "groupby": {
                "value": "Nominee"
            }
        },
        "sql_ans": [
            [
                "Bob Fosse",
                5
            ],
            [
                "Cleavant Derricks",
                2
            ]
        ],
        "cypher_query": "MATCH (m:musical)\nWITH m.Nominee AS Nominee, count(m.Nominee) AS count\nRETURN Nominee,COUNT(\"*\")",
        "cypher_ans": [
            [
                "Bob Fosse",
                1
            ],
            [
                "Cleavant Derricks",
                1
            ]
        ]
    },
    {
        "db_id": "musical",
        "question": "How many musicals has each nominee been nominated for?",
        "sql_query": "SELECT Nominee ,  COUNT(*) FROM musical GROUP BY Nominee",
        "parsed_sql": {
            "select": [
                {
                    "value": "Nominee"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": "musical",
            "groupby": {
                "value": "Nominee"
            }
        },
        "sql_ans": [
            [
                "Bob Fosse",
                5
            ],
            [
                "Cleavant Derricks",
                2
            ]
        ],
        "cypher_query": "MATCH (m:musical)\nWITH m.Nominee AS Nominee, count(m.Nominee) AS count\nRETURN Nominee,COUNT(\"*\")",
        "cypher_ans": [
            [
                "Bob Fosse",
                1
            ],
            [
                "Cleavant Derricks",
                1
            ]
        ]
    }
][
    {
        "db_id": "musical",
        "question": "Show names of musicals and the number of actors who have appeared in the musicals.",
        "sql_query": "SELECT T2.Name ,  COUNT(*) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID GROUP BY T1.Musical_ID",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.Name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "actor",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "musical",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Musical_ID",
                            "T2.Musical_ID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.Musical_ID"
            }
        },
        "sql_ans": [
            [
                "The Phantom of the Opera",
                2
            ],
            [
                "Les Mis\u00e9rables",
                2
            ],
            [
                "West Side Story",
                1
            ],
            [
                "The Book of Mormon",
                4
            ]
        ],
        "cypher_query": "MATCH (T1:actor)-[]-(T2:musical)\nWITH count(T1.Musical_ID) AS count, T2.Name AS Name\nRETURN Name,COUNT(\"*\")",
        "cypher_ans": [
            [
                "The Phantom of the Opera",
                1
            ],
            [
                "Les Mis\u00e9rables",
                1
            ],
            [
                "West Side Story",
                1
            ],
            [
                "The Book of Mormon",
                1
            ]
        ]
    },
    {
        "db_id": "musical",
        "question": "How many actors have appeared in each musical?",
        "sql_query": "SELECT T2.Name ,  COUNT(*) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID GROUP BY T1.Musical_ID",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.Name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "actor",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "musical",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Musical_ID",
                            "T2.Musical_ID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.Musical_ID"
            }
        },
        "sql_ans": [
            [
                "The Phantom of the Opera",
                2
            ],
            [
                "Les Mis\u00e9rables",
                2
            ],
            [
                "West Side Story",
                1
            ],
            [
                "The Book of Mormon",
                4
            ]
        ],
        "cypher_query": "MATCH (T1:actor)-[]-(T2:musical)\nWITH count(T1.Musical_ID) AS count, T2.Name AS Name\nRETURN Name,COUNT(\"*\")",
        "cypher_ans": [
            [
                "The Phantom of the Opera",
                1
            ],
            [
                "Les Mis\u00e9rables",
                1
            ],
            [
                "West Side Story",
                1
            ],
            [
                "The Book of Mormon",
                1
            ]
        ]
    },
    {
        "db_id": "musical",
        "question": "Show different nominees and the number of musicals they have been nominated.",
        "sql_query": "SELECT Nominee ,  COUNT(*) FROM musical GROUP BY Nominee",
        "parsed_sql": {
            "select": [
                {
                    "value": "Nominee"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": "musical",
            "groupby": {
                "value": "Nominee"
            }
        },
        "sql_ans": [
            [
                "Bob Fosse",
                5
            ],
            [
                "Cleavant Derricks",
                2
            ]
        ],
        "cypher_query": "MATCH (m:musical)\nWITH count(m.Nominee) AS count, m.Nominee AS Nominee\nRETURN Nominee,COUNT(\"*\")",
        "cypher_ans": [
            [
                "Bob Fosse",
                1
            ],
            [
                "Cleavant Derricks",
                1
            ]
        ]
    },
    {
        "db_id": "musical",
        "question": "How many musicals has each nominee been nominated for?",
        "sql_query": "SELECT Nominee ,  COUNT(*) FROM musical GROUP BY Nominee",
        "parsed_sql": {
            "select": [
                {
                    "value": "Nominee"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": "musical",
            "groupby": {
                "value": "Nominee"
            }
        },
        "sql_ans": [
            [
                "Bob Fosse",
                5
            ],
            [
                "Cleavant Derricks",
                2
            ]
        ],
        "cypher_query": "MATCH (m:musical)\nWITH count(m.Nominee) AS count, m.Nominee AS Nominee\nRETURN Nominee,COUNT(\"*\")",
        "cypher_ans": [
            [
                "Bob Fosse",
                1
            ],
            [
                "Cleavant Derricks",
                1
            ]
        ]
    }
][][][][][
    {
        "db_id": "musical",
        "question": "What are the names of musicals who have no actors?",
        "sql_query": "SELECT Name FROM musical WHERE Musical_ID NOT IN (SELECT Musical_ID FROM actor)",
        "parsed_sql": {
            "select": {
                "value": "Name"
            },
            "from": "musical",
            "where": {
                "nin": [
                    "Musical_ID",
                    {
                        "select": {
                            "value": "Musical_ID"
                        },
                        "from": "actor"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Wicked"
            ],
            [
                "Rent"
            ],
            [
                "Chicago"
            ]
        ],
        "cypher_query": "MATCH (m:musical) MATCH (a:actor)\nWHERE NOT m.Musical_ID in a.Musical_ID\nRETURN a.Name",
        "cypher_ans": [
            [
                "Lynne McGranger"
            ],
            [
                "Kate Ritchie"
            ],
            [
                "Alan Fletcher"
            ],
            [
                "Jackie Woodburne"
            ],
            [
                "Ryan Moloney"
            ],
            [
                "Ian Smith"
            ],
            [
                "Stefan Dennis"
            ],
            [
                "Ray Meagher"
            ],
            [
                "Tom Oliver"
            ]
        ]
    }
][
    {
        "db_id": "musical",
        "question": "What are the names of musicals who have no actors?",
        "sql_query": "SELECT Name FROM musical WHERE Musical_ID NOT IN (SELECT Musical_ID FROM actor)",
        "parsed_sql": {
            "select": {
                "value": "Name"
            },
            "from": "musical",
            "where": {
                "nin": [
                    "Musical_ID",
                    {
                        "select": {
                            "value": "Musical_ID"
                        },
                        "from": "actor"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Wicked"
            ],
            [
                "Rent"
            ],
            [
                "Chicago"
            ]
        ],
        "cypher_query": "MATCH (m:musical) MATCH (a:actor)\nWHERE NOT m.Musical_ID in a.Musical_ID\nRETURN a.Name",
        "cypher_ans": [
            [
                "Lynne McGranger"
            ],
            [
                "Kate Ritchie"
            ],
            [
                "Alan Fletcher"
            ],
            [
                "Jackie Woodburne"
            ],
            [
                "Ryan Moloney"
            ],
            [
                "Ian Smith"
            ],
            [
                "Stefan Dennis"
            ],
            [
                "Ray Meagher"
            ],
            [
                "Tom Oliver"
            ]
        ]
    }
][
    {
        "db_id": "musical",
        "question": "What are the names of musicals who have no actors?",
        "sql_query": "SELECT Name FROM musical WHERE Musical_ID NOT IN (SELECT Musical_ID FROM actor)",
        "parsed_sql": {
            "select": {
                "value": "Name"
            },
            "from": "musical",
            "where": {
                "nin": [
                    "Musical_ID",
                    {
                        "select": {
                            "value": "Musical_ID"
                        },
                        "from": "actor"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Wicked"
            ],
            [
                "Rent"
            ],
            [
                "Chicago"
            ]
        ],
        "cypher_query": "MATCH (m:musical) MATCH (a:actor)\nWHERE NOT m.Musical_ID in a.Musical_ID\nRETURN a.Name",
        "cypher_ans": [
            [
                "Lynne McGranger"
            ],
            [
                "Kate Ritchie"
            ],
            [
                "Alan Fletcher"
            ],
            [
                "Jackie Woodburne"
            ],
            [
                "Ryan Moloney"
            ],
            [
                "Ian Smith"
            ],
            [
                "Stefan Dennis"
            ],
            [
                "Ray Meagher"
            ],
            [
                "Tom Oliver"
            ]
        ]
    }
][
    {
        "db_id": "musical",
        "question": "What are the names of musicals who have no actors?",
        "sql_query": "SELECT Name FROM musical WHERE Musical_ID NOT IN (SELECT Musical_ID FROM actor)",
        "parsed_sql": {
            "select": {
                "value": "Name"
            },
            "from": "musical",
            "where": {
                "nin": [
                    "Musical_ID",
                    {
                        "select": {
                            "value": "Musical_ID"
                        },
                        "from": "actor"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Wicked"
            ],
            [
                "Rent"
            ],
            [
                "Chicago"
            ]
        ],
        "cypher_query": "MATCH (m:musical) MATCH (a:actor)\nWHERE NOT m.Musical_ID in a.Musical_ID\nRETURN a.Name",
        "cypher_ans": [
            [
                "Lynne McGranger"
            ],
            [
                "Kate Ritchie"
            ],
            [
                "Alan Fletcher"
            ],
            [
                "Jackie Woodburne"
            ],
            [
                "Ryan Moloney"
            ],
            [
                "Ian Smith"
            ],
            [
                "Stefan Dennis"
            ],
            [
                "Ray Meagher"
            ],
            [
                "Tom Oliver"
            ]
        ]
    }
][
    {
        "db_id": "musical",
        "question": "What are the names of musicals who have no actors?",
        "sql_query": "SELECT Name FROM musical WHERE Musical_ID NOT IN (SELECT Musical_ID FROM actor)",
        "parsed_sql": {
            "select": {
                "value": "Name"
            },
            "from": "musical",
            "where": {
                "nin": [
                    "Musical_ID",
                    {
                        "select": {
                            "value": "Musical_ID"
                        },
                        "from": "actor"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Wicked"
            ],
            [
                "Rent"
            ],
            [
                "Chicago"
            ]
        ],
        "cypher_query": "MATCH (m:musical) MATCH (a:actor)\nWHERE NOT m.Musical_ID in a.Musical_ID\nRETURN a.Name",
        "cypher_ans": [
            [
                "Lynne McGranger"
            ],
            [
                "Kate Ritchie"
            ],
            [
                "Alan Fletcher"
            ],
            [
                "Jackie Woodburne"
            ],
            [
                "Ryan Moloney"
            ],
            [
                "Ian Smith"
            ],
            [
                "Stefan Dennis"
            ],
            [
                "Ray Meagher"
            ],
            [
                "Tom Oliver"
            ]
        ]
    }
][
    {
        "db_id": "musical",
        "question": "Show names of musicals and the number of actors who have appeared in the musicals.",
        "sql_query": "SELECT T2.Name ,  COUNT(*) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID GROUP BY T1.Musical_ID",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.Name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "actor",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "musical",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Musical_ID",
                            "T2.Musical_ID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.Musical_ID"
            }
        },
        "sql_ans": [
            [
                "The Phantom of the Opera",
                2
            ],
            [
                "Les Mis\u00e9rables",
                2
            ],
            [
                "West Side Story",
                1
            ],
            [
                "The Book of Mormon",
                4
            ]
        ],
        "cypher_query": "MATCH (T1:actor)-[]-(T2:musical)\nWITH count(T1.Musical_ID) AS count, T2.Name AS Name\nRETURN Name,COUNT(\"*\")",
        "cypher_ans": [
            [
                "The Phantom of the Opera",
                1
            ],
            [
                "Les Mis\u00e9rables",
                1
            ],
            [
                "West Side Story",
                1
            ],
            [
                "The Book of Mormon",
                1
            ]
        ]
    },
    {
        "db_id": "musical",
        "question": "How many actors have appeared in each musical?",
        "sql_query": "SELECT T2.Name ,  COUNT(*) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID GROUP BY T1.Musical_ID",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.Name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "actor",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "musical",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Musical_ID",
                            "T2.Musical_ID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.Musical_ID"
            }
        },
        "sql_ans": [
            [
                "The Phantom of the Opera",
                2
            ],
            [
                "Les Mis\u00e9rables",
                2
            ],
            [
                "West Side Story",
                1
            ],
            [
                "The Book of Mormon",
                4
            ]
        ],
        "cypher_query": "MATCH (T1:actor)-[]-(T2:musical)\nWITH count(T1.Musical_ID) AS count, T2.Name AS Name\nRETURN Name,COUNT(\"*\")",
        "cypher_ans": [
            [
                "The Phantom of the Opera",
                1
            ],
            [
                "Les Mis\u00e9rables",
                1
            ],
            [
                "West Side Story",
                1
            ],
            [
                "The Book of Mormon",
                1
            ]
        ]
    },
    {
        "db_id": "musical",
        "question": "Show different nominees and the number of musicals they have been nominated.",
        "sql_query": "SELECT Nominee ,  COUNT(*) FROM musical GROUP BY Nominee",
        "parsed_sql": {
            "select": [
                {
                    "value": "Nominee"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": "musical",
            "groupby": {
                "value": "Nominee"
            }
        },
        "sql_ans": [
            [
                "Bob Fosse",
                5
            ],
            [
                "Cleavant Derricks",
                2
            ]
        ],
        "cypher_query": "MATCH (m:musical)\nWITH count(m.Nominee) AS count, m.Nominee AS Nominee\nRETURN Nominee,COUNT(\"*\")",
        "cypher_ans": [
            [
                "Bob Fosse",
                1
            ],
            [
                "Cleavant Derricks",
                1
            ]
        ]
    },
    {
        "db_id": "musical",
        "question": "How many musicals has each nominee been nominated for?",
        "sql_query": "SELECT Nominee ,  COUNT(*) FROM musical GROUP BY Nominee",
        "parsed_sql": {
            "select": [
                {
                    "value": "Nominee"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": "musical",
            "groupby": {
                "value": "Nominee"
            }
        },
        "sql_ans": [
            [
                "Bob Fosse",
                5
            ],
            [
                "Cleavant Derricks",
                2
            ]
        ],
        "cypher_query": "MATCH (m:musical)\nWITH count(m.Nominee) AS count, m.Nominee AS Nominee\nRETURN Nominee,COUNT(\"*\")",
        "cypher_ans": [
            [
                "Bob Fosse",
                1
            ],
            [
                "Cleavant Derricks",
                1
            ]
        ]
    },
    {
        "db_id": "musical",
        "question": "List the name of musicals that do not have actors.",
        "sql_query": "SELECT Name FROM musical WHERE Musical_ID NOT IN (SELECT Musical_ID FROM actor)",
        "parsed_sql": {
            "select": {
                "value": "Name"
            },
            "from": "musical",
            "where": {
                "nin": [
                    "Musical_ID",
                    {
                        "select": {
                            "value": "Musical_ID"
                        },
                        "from": "actor"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Wicked"
            ],
            [
                "Rent"
            ],
            [
                "Chicago"
            ]
        ],
        "cypher_query": "MATCH (m:musical) MATCH (a:actor)\nWHERE NOT m.Musical_ID in a.Musical_ID\nRETURN a.Name",
        "cypher_ans": [
            [
                "Lynne McGranger"
            ],
            [
                "Kate Ritchie"
            ],
            [
                "Alan Fletcher"
            ],
            [
                "Jackie Woodburne"
            ],
            [
                "Ryan Moloney"
            ],
            [
                "Ian Smith"
            ],
            [
                "Stefan Dennis"
            ],
            [
                "Ray Meagher"
            ],
            [
                "Tom Oliver"
            ]
        ]
    },
    {
        "db_id": "musical",
        "question": "What are the names of musicals who have no actors?",
        "sql_query": "SELECT Name FROM musical WHERE Musical_ID NOT IN (SELECT Musical_ID FROM actor)",
        "parsed_sql": {
            "select": {
                "value": "Name"
            },
            "from": "musical",
            "where": {
                "nin": [
                    "Musical_ID",
                    {
                        "select": {
                            "value": "Musical_ID"
                        },
                        "from": "actor"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Wicked"
            ],
            [
                "Rent"
            ],
            [
                "Chicago"
            ]
        ],
        "cypher_query": "MATCH (m:musical) MATCH (a:actor)\nWHERE NOT m.Musical_ID in a.Musical_ID\nRETURN a.Name",
        "cypher_ans": [
            [
                "Lynne McGranger"
            ],
            [
                "Kate Ritchie"
            ],
            [
                "Alan Fletcher"
            ],
            [
                "Jackie Woodburne"
            ],
            [
                "Ryan Moloney"
            ],
            [
                "Ian Smith"
            ],
            [
                "Stefan Dennis"
            ],
            [
                "Ray Meagher"
            ],
            [
                "Tom Oliver"
            ]
        ]
    }
][
    {
        "db_id": "musical",
        "question": "List the name of musicals that do not have actors.",
        "sql_query": "SELECT Name FROM musical WHERE Musical_ID NOT IN (SELECT Musical_ID FROM actor)",
        "parsed_sql": {
            "select": {
                "value": "Name"
            },
            "from": "musical",
            "where": {
                "nin": [
                    "Musical_ID",
                    {
                        "select": {
                            "value": "Musical_ID"
                        },
                        "from": "actor"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Wicked"
            ],
            [
                "Rent"
            ],
            [
                "Chicago"
            ]
        ],
        "cypher_query": "MATCH (m:musical) MATCH (a:actor)\nWHERE NOT m.Musical_ID in a.Musical_ID\nRETURN a.Name",
        "cypher_ans": [
            [
                "Lynne McGranger"
            ],
            [
                "Kate Ritchie"
            ],
            [
                "Alan Fletcher"
            ],
            [
                "Jackie Woodburne"
            ],
            [
                "Ryan Moloney"
            ],
            [
                "Ian Smith"
            ],
            [
                "Stefan Dennis"
            ],
            [
                "Ray Meagher"
            ],
            [
                "Tom Oliver"
            ]
        ]
    },
    {
        "db_id": "musical",
        "question": "What are the names of musicals who have no actors?",
        "sql_query": "SELECT Name FROM musical WHERE Musical_ID NOT IN (SELECT Musical_ID FROM actor)",
        "parsed_sql": {
            "select": {
                "value": "Name"
            },
            "from": "musical",
            "where": {
                "nin": [
                    "Musical_ID",
                    {
                        "select": {
                            "value": "Musical_ID"
                        },
                        "from": "actor"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Wicked"
            ],
            [
                "Rent"
            ],
            [
                "Chicago"
            ]
        ],
        "cypher_query": "MATCH (m:musical) MATCH (a:actor)\nWHERE NOT m.Musical_ID in a.Musical_ID\nRETURN a.Name",
        "cypher_ans": [
            [
                "Lynne McGranger"
            ],
            [
                "Kate Ritchie"
            ],
            [
                "Alan Fletcher"
            ],
            [
                "Jackie Woodburne"
            ],
            [
                "Ryan Moloney"
            ],
            [
                "Ian Smith"
            ],
            [
                "Stefan Dennis"
            ],
            [
                "Ray Meagher"
            ],
            [
                "Tom Oliver"
            ]
        ]
    }
][
    {
        "db_id": "musical",
        "question": "List the name of musicals that do not have actors.",
        "sql_query": "SELECT Name FROM musical WHERE Musical_ID NOT IN (SELECT Musical_ID FROM actor)",
        "parsed_sql": {
            "select": {
                "value": "Name"
            },
            "from": "musical",
            "where": {
                "nin": [
                    "Musical_ID",
                    {
                        "select": {
                            "value": "Musical_ID"
                        },
                        "from": "actor"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Wicked"
            ],
            [
                "Rent"
            ],
            [
                "Chicago"
            ]
        ],
        "cypher_query": "MATCH (m:musical) MATCH (a:actor)\nWHERE NOT m.Musical_ID in a.Musical_ID\nRETURN a.Name",
        "cypher_ans": [
            [
                "Lynne McGranger"
            ],
            [
                "Kate Ritchie"
            ],
            [
                "Alan Fletcher"
            ],
            [
                "Jackie Woodburne"
            ],
            [
                "Ryan Moloney"
            ],
            [
                "Ian Smith"
            ],
            [
                "Stefan Dennis"
            ],
            [
                "Ray Meagher"
            ],
            [
                "Tom Oliver"
            ]
        ]
    }
][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][
    {
        "db_id": "department_management",
        "question": "How many departments are led by heads who are not mentioned?",
        "sql_query": "SELECT count(*) FROM department WHERE department_id NOT IN (SELECT department_id FROM management);",
        "parsed_sql": {
            "select": {
                "value": {
                    "count": "*"
                }
            },
            "from": "department",
            "where": {
                "nin": [
                    "department_id",
                    {
                        "select": {
                            "value": "department_id"
                        },
                        "from": "management"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                11
            ]
        ],
        "cypher_query": "MATCH (d:department) MATCH ()-[m:management]-()\nWHERE NOT d.department_id in d.Department_ID\nRETURN count(DISTINCT d.department_id)",
        "cypher_ans": [
            [
                0
            ]
        ]
    }
][
    {
        "db_id": "department_management",
        "question": "How many departments are led by heads who are not mentioned?",
        "sql_query": "SELECT count(*) FROM department WHERE department_id NOT IN (SELECT department_id FROM management);",
        "parsed_sql": {
            "select": {
                "value": {
                    "count": "*"
                }
            },
            "from": "department",
            "where": {
                "nin": [
                    "department_id",
                    {
                        "select": {
                            "value": "department_id"
                        },
                        "from": "management"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                11
            ]
        ],
        "cypher_query": "MATCH (d:department) MATCH ()-[m:management]-()\nWHERE NOT d.department_id in d.Department_ID\nRETURN count(DISTINCT d.department_id)",
        "cypher_ans": [
            [
                0
            ]
        ]
    }
][
    {
        "db_id": "department_management",
        "question": "How many departments are led by heads who are not mentioned?",
        "sql_query": "SELECT count(*) FROM department WHERE department_id NOT IN (SELECT department_id FROM management);",
        "parsed_sql": {
            "select": {
                "value": {
                    "count": "*"
                }
            },
            "from": "department",
            "where": {
                "nin": [
                    "department_id",
                    {
                        "select": {
                            "value": "department_id"
                        },
                        "from": "management"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                11
            ]
        ],
        "cypher_query": "MATCH (d:department) MATCH ()-[m:management]-()\nWHERE NOT d.Department_ID in d.Department_ID\nRETURN count(DISTINCT d.Department_ID)",
        "cypher_ans": [
            [
                0
            ]
        ]
    }
][
    {
        "db_id": "department_management",
        "question": "How many departments are led by heads who are not mentioned?",
        "sql_query": "SELECT count(*) FROM department WHERE department_id NOT IN (SELECT department_id FROM management);",
        "parsed_sql": {
            "select": {
                "value": {
                    "count": "*"
                }
            },
            "from": "department",
            "where": {
                "nin": [
                    "department_id",
                    {
                        "select": {
                            "value": "department_id"
                        },
                        "from": "management"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                11
            ]
        ],
        "cypher_query": "MATCH (d:department) MATCH ()-[m:management]-()\nWHERE NOT d.Department_ID in d.Department_ID\nRETURN count(DISTINCT d.Department_ID)",
        "cypher_ans": [
            [
                0
            ]
        ]
    }
][
    {
        "db_id": "department_management",
        "question": "How many departments are led by heads who are not mentioned?",
        "sql_query": "SELECT count(*) FROM department WHERE department_id NOT IN (SELECT department_id FROM management);",
        "parsed_sql": {
            "select": {
                "value": {
                    "count": "*"
                }
            },
            "from": "department",
            "where": {
                "nin": [
                    "department_id",
                    {
                        "select": {
                            "value": "department_id"
                        },
                        "from": "management"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                11
            ]
        ],
        "cypher_query": "MATCH (d:department) MATCH ()-[m:management]-()\nWHERE NOT d.Department_ID in d.Department_ID\nRETURN count(DISTINCT d.Department_ID)",
        "cypher_ans": [
            [
                0
            ]
        ]
    }
][
    {
        "db_id": "department_management",
        "question": "How many departments are led by heads who are not mentioned?",
        "sql_query": "SELECT count(*) FROM department WHERE department_id NOT IN (SELECT department_id FROM management);",
        "parsed_sql": {
            "select": {
                "value": {
                    "count": "*"
                }
            },
            "from": "department",
            "where": {
                "nin": [
                    "department_id",
                    {
                        "select": {
                            "value": "department_id"
                        },
                        "from": "management"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                11
            ]
        ],
        "cypher_query": "MATCH (d:department) MATCH ()-[m:management]-()\nWHERE NOT d.Department_ID in d.Department_ID\nRETURN count(DISTINCT d.Department_ID)",
        "cypher_ans": [
            [
                0
            ]
        ]
    }
][
    {
        "db_id": "department_management",
        "question": "How many departments are led by heads who are not mentioned?",
        "sql_query": "SELECT count(*) FROM department WHERE department_id NOT IN (SELECT department_id FROM management);",
        "parsed_sql": {
            "select": {
                "value": {
                    "count": "*"
                }
            },
            "from": "department",
            "where": {
                "nin": [
                    "department_id",
                    {
                        "select": {
                            "value": "department_id"
                        },
                        "from": "management"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                11
            ]
        ],
        "cypher_query": "MATCH (d:department) MATCH ()-[m:management]-()\nWHERE NOT d.Department_ID in d.Department_ID\nRETURN count(DISTINCT d.Department_ID)",
        "cypher_ans": [
            [
                0
            ]
        ]
    }
][][
    {
        "db_id": "department_management",
        "question": "How many departments are led by heads who are not mentioned?",
        "sql_query": "SELECT count(*) FROM department WHERE department_id NOT IN (SELECT department_id FROM management);",
        "parsed_sql": {
            "select": {
                "value": {
                    "count": "*"
                }
            },
            "from": "department",
            "where": {
                "nin": [
                    "department_id",
                    {
                        "select": {
                            "value": "department_id"
                        },
                        "from": "management"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                11
            ]
        ],
        "cypher_query": "MATCH (d:department) MATCH ()-[m:management]-()\nWHERE NOT d.Department_ID in d.Department_ID\nRETURN count(DISTINCT d.Department_ID)",
        "cypher_ans": [
            [
                0
            ]
        ]
    }
][
    {
        "db_id": "department_management",
        "question": "How many departments are led by heads who are not mentioned?",
        "sql_query": "SELECT count(*) FROM department WHERE department_id NOT IN (SELECT department_id FROM management);",
        "parsed_sql": {
            "select": {
                "value": {
                    "count": "*"
                }
            },
            "from": "department",
            "where": {
                "nin": [
                    "department_id",
                    {
                        "select": {
                            "value": "department_id"
                        },
                        "from": "management"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                11
            ]
        ],
        "cypher_query": "MATCH (d:department) MATCH ()-[m:management]-()\nWHERE NOT d.Department_ID in d.Department_ID\nRETURN count(DISTINCT d.Department_ID)",
        "cypher_ans": [
            [
                0
            ]
        ]
    }
][
    {
        "db_id": "department_management",
        "question": "How many departments are led by heads who are not mentioned?",
        "sql_query": "SELECT count(*) FROM department WHERE department_id NOT IN (SELECT department_id FROM management);",
        "parsed_sql": {
            "select": {
                "value": {
                    "count": "*"
                }
            },
            "from": "department",
            "where": {
                "nin": [
                    "department_id",
                    {
                        "select": {
                            "value": "department_id"
                        },
                        "from": "management"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                11
            ]
        ],
        "cypher_query": "MATCH (d:department) MATCH ()-[m:management]-()\nWHERE NOT d.Department_ID in d.Department_ID\nRETURN count(DISTINCT d.Department_ID)",
        "cypher_ans": [
            [
                0
            ]
        ]
    }
][
    {
        "db_id": "department_management",
        "question": "How many departments are led by heads who are not mentioned?",
        "sql_query": "SELECT count(*) FROM department WHERE department_id NOT IN (SELECT department_id FROM management);",
        "parsed_sql": {
            "select": {
                "value": {
                    "count": "*"
                }
            },
            "from": "department",
            "where": {
                "nin": [
                    "department_id",
                    {
                        "select": {
                            "value": "department_id"
                        },
                        "from": "management"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                11
            ]
        ],
        "cypher_query": "MATCH (d:department) MATCH ()-[m:management]-()\nWHERE NOT d.Department_ID in d.Department_ID\nRETURN count(DISTINCT d.Department_ID)",
        "cypher_ans": [
            [
                0
            ]
        ]
    }
][
    {
        "db_id": "department_management",
        "question": "How many departments are led by heads who are not mentioned?",
        "sql_query": "SELECT count(*) FROM department WHERE department_id NOT IN (SELECT department_id FROM management);",
        "parsed_sql": {
            "select": {
                "value": {
                    "count": "*"
                }
            },
            "from": "department",
            "where": {
                "nin": [
                    "department_id",
                    {
                        "select": {
                            "value": "department_id"
                        },
                        "from": "management"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                11
            ]
        ],
        "cypher_query": "MATCH (d:department) MATCH ()-[m:management]-()\nWHERE NOT d.Department_ID in d.Department_ID\nRETURN count(DISTINCT d.Department_ID)",
        "cypher_ans": [
            [
                0
            ]
        ]
    }
][][][][][
    {
        "db_id": "department_management",
        "question": "How many departments are led by heads who are not mentioned?",
        "sql_query": "SELECT count(*) FROM department WHERE department_id NOT IN (SELECT department_id FROM management);",
        "parsed_sql": {
            "select": {
                "value": {
                    "count": "*"
                }
            },
            "from": "department",
            "where": {
                "nin": [
                    "department_id",
                    {
                        "select": {
                            "value": "department_id"
                        },
                        "from": "management"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                11
            ]
        ],
        "cypher_query": "MATCH (d:department) MATCH ()-[m:management]-()\nWHERE NOT d.Department_ID in d.Department_ID\nRETURN count(DISTINCT d.Department_ID)",
        "cypher_ans": [
            [
                0
            ]
        ]
    }
][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][
    {
        "db_id": "department_management",
        "question": "Which department has more than 1 head at a time? List the id, name and the number of heads.",
        "sql_query": "SELECT T1.department_id ,  T1.name ,  count(*) FROM management AS T2 JOIN department AS T1 ON T1.department_id  =  T2.department_id GROUP BY T1.department_id HAVING count(*)  >  1",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.department_id"
                },
                {
                    "value": "T1.name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "management",
                    "name": "T2",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T1",
                        "value": "department",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.department_id",
                            "T2.department_id"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.department_id"
            },
            "having": {
                "gt": [
                    {
                        "count": "*"
                    },
                    1
                ]
            }
        },
        "sql_ans": [
            [
                2,
                "Treasury",
                2
            ]
        ],
        "cypher_query": "MATCH ()-[T2:management]-(T1:department)\nWITH T1.Name AS Name, count(\"*\") AS count, T1.Department_ID AS Department_ID\nWHERE count > 1\nRETURN Department_ID,Name,count(\"*\")",
        "cypher_ans": [
            [
                2,
                "Treasury",
                1
            ]
        ]
    }
][
    {
        "db_id": "department_management",
        "question": "Which department has more than 1 head at a time? List the id, name and the number of heads.",
        "sql_query": "SELECT T1.department_id ,  T1.name ,  count(*) FROM management AS T2 JOIN department AS T1 ON T1.department_id  =  T2.department_id GROUP BY T1.department_id HAVING count(*)  >  1",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.department_id"
                },
                {
                    "value": "T1.name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "management",
                    "name": "T2",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T1",
                        "value": "department",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.department_id",
                            "T2.department_id"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.department_id"
            },
            "having": {
                "gt": [
                    {
                        "count": "*"
                    },
                    1
                ]
            }
        },
        "sql_ans": [
            [
                2,
                "Treasury",
                2
            ]
        ],
        "cypher_query": "MATCH ()-[T2:management]-(T1:department)\nWITH count(\"*\") AS count, T1.Department_ID AS Department_ID, T1.Name AS Name\nWHERE count > 1\nRETURN Department_ID,Name,count(\"*\")",
        "cypher_ans": [
            [
                2,
                "Treasury",
                1
            ]
        ]
    }
][
    {
        "db_id": "department_management",
        "question": "Which department has more than 1 head at a time? List the id, name and the number of heads.",
        "sql_query": "SELECT T1.department_id ,  T1.name ,  count(*) FROM management AS T2 JOIN department AS T1 ON T1.department_id  =  T2.department_id GROUP BY T1.department_id HAVING count(*)  >  1",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.department_id"
                },
                {
                    "value": "T1.name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "management",
                    "name": "T2",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T1",
                        "value": "department",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.department_id",
                            "T2.department_id"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.department_id"
            },
            "having": {
                "gt": [
                    {
                        "count": "*"
                    },
                    1
                ]
            }
        },
        "sql_ans": [
            [
                2,
                "Treasury",
                2
            ]
        ],
        "cypher_query": "MATCH ()-[T2:management]-(T1:department)\nWITH T1.Name AS Name, T1.Department_ID AS Department_ID, count(\"*\") AS count\nWHERE count > 1\nRETURN Department_ID,Name,count(\"*\")",
        "cypher_ans": [
            [
                2,
                "Treasury",
                1
            ]
        ]
    }
][
    {
        "db_id": "department_management",
        "question": "Which department has more than 1 head at a time? List the id, name and the number of heads.",
        "sql_query": "SELECT T1.department_id ,  T1.name ,  count(*) FROM management AS T2 JOIN department AS T1 ON T1.department_id  =  T2.department_id GROUP BY T1.department_id HAVING count(*)  >  1",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.department_id"
                },
                {
                    "value": "T1.name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "management",
                    "name": "T2",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T1",
                        "value": "department",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.department_id",
                            "T2.department_id"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.department_id"
            },
            "having": {
                "gt": [
                    {
                        "count": "*"
                    },
                    1
                ]
            }
        },
        "sql_ans": [
            [
                2,
                "Treasury",
                2
            ]
        ],
        "cypher_query": "MATCH ()-[T2:management]-(T1:department)\nWITH T1.Department_ID AS Department_ID, count(\"*\") AS count, T1.Name AS Name\nWHERE count > 1\nRETURN Department_ID,Name,count(\"*\")",
        "cypher_ans": [
            [
                2,
                "Treasury",
                1
            ]
        ]
    }
][
    {
        "db_id": "department_management",
        "question": "Which department has more than 1 head at a time? List the id, name and the number of heads.",
        "sql_query": "SELECT T1.department_id ,  T1.name ,  count(*) FROM management AS T2 JOIN department AS T1 ON T1.department_id  =  T2.department_id GROUP BY T1.department_id HAVING count(*)  >  1",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.department_id"
                },
                {
                    "value": "T1.name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "management",
                    "name": "T2",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T1",
                        "value": "department",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.department_id",
                            "T2.department_id"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.department_id"
            },
            "having": {
                "gt": [
                    {
                        "count": "*"
                    },
                    1
                ]
            }
        },
        "sql_ans": [
            [
                2,
                "Treasury",
                2
            ]
        ],
        "cypher_query": "MATCH ()-[T2:management]-(T1:department)\nWITH T1.Name AS Name, count(\"*\") AS count, T1.Department_ID AS Department_ID\nWHERE count > 1\nRETURN Department_ID,Name,count(\"*\")",
        "cypher_ans": [
            [
                2,
                "Treasury",
                1
            ]
        ]
    }
][
    {
        "db_id": "department_management",
        "question": "Which department has more than 1 head at a time? List the id, name and the number of heads.",
        "sql_query": "SELECT T1.department_id ,  T1.name ,  count(*) FROM management AS T2 JOIN department AS T1 ON T1.department_id  =  T2.department_id GROUP BY T1.department_id HAVING count(*)  >  1",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.department_id"
                },
                {
                    "value": "T1.name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "management",
                    "name": "T2",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T1",
                        "value": "department",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.department_id",
                            "T2.department_id"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.department_id"
            },
            "having": {
                "gt": [
                    {
                        "count": "*"
                    },
                    1
                ]
            }
        },
        "sql_ans": [
            [
                2,
                "Treasury",
                2
            ]
        ],
        "cypher_query": "MATCH ()-[T2:management]-(T1:department)\nWITH T1.Department_ID AS Department_ID, count(\"*\") AS count, T1.Name AS Name\nWHERE count > 1\nRETURN Department_ID,Name,count(\"*\")",
        "cypher_ans": [
            [
                2,
                "Treasury",
                1
            ]
        ]
    }
][
    {
        "db_id": "department_management",
        "question": "Which department has more than 1 head at a time? List the id, name and the number of heads.",
        "sql_query": "SELECT T1.department_id ,  T1.name ,  count(*) FROM management AS T2 JOIN department AS T1 ON T1.department_id  =  T2.department_id GROUP BY T1.department_id HAVING count(*)  >  1",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.department_id"
                },
                {
                    "value": "T1.name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "management",
                    "name": "T2",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T1",
                        "value": "department",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.department_id",
                            "T2.department_id"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.department_id"
            },
            "having": {
                "gt": [
                    {
                        "count": "*"
                    },
                    1
                ]
            }
        },
        "sql_ans": [
            [
                2,
                "Treasury",
                2
            ]
        ],
        "cypher_query": "MATCH ()-[T2:management]-(T1:department)\nWITH count(\"*\") AS count, T1.Department_ID AS Department_ID, T1.Name AS Name\nWHERE count > 1\nRETURN Department_ID,Name",
        "cypher_ans": [
            [
                2,
                "Treasury"
            ]
        ]
    }
][
    {
        "db_id": "department_management",
        "question": "Which department has more than 1 head at a time? List the id, name and the number of heads.",
        "sql_query": "SELECT T1.department_id ,  T1.name ,  count(*) FROM management AS T2 JOIN department AS T1 ON T1.department_id  =  T2.department_id GROUP BY T1.department_id HAVING count(*)  >  1",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.department_id"
                },
                {
                    "value": "T1.name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "management",
                    "name": "T2",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T1",
                        "value": "department",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.department_id",
                            "T2.department_id"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.department_id"
            },
            "having": {
                "gt": [
                    {
                        "count": "*"
                    },
                    1
                ]
            }
        },
        "sql_ans": [
            [
                2,
                "Treasury",
                2
            ]
        ],
        "cypher_query": "MATCH ()-[T2:management]-(T1:department)\nWITH T1.Name AS Name, count(\"*\") AS count, T1.Department_ID AS Department_ID\nWHERE count > 1\nRETURN Department_ID,Name",
        "cypher_ans": [
            [
                2,
                "Treasury"
            ]
        ]
    }
][
    {
        "db_id": "department_management",
        "question": "Which department has more than 1 head at a time? List the id, name and the number of heads.",
        "sql_query": "SELECT T1.department_id ,  T1.name ,  count(*) FROM management AS T2 JOIN department AS T1 ON T1.department_id  =  T2.department_id GROUP BY T1.department_id HAVING count(*)  >  1",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.department_id"
                },
                {
                    "value": "T1.name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "management",
                    "name": "T2",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T1",
                        "value": "department",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.department_id",
                            "T2.department_id"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.department_id"
            },
            "having": {
                "gt": [
                    {
                        "count": "*"
                    },
                    1
                ]
            }
        },
        "sql_ans": [
            [
                2,
                "Treasury",
                2
            ]
        ],
        "cypher_query": "MATCH ()-[T2:management]-(T1:department)\nWITH T1.Name AS Name, T1.Department_ID AS Department_ID, count(\"*\") AS count\nWHERE count > 1\nRETURN Department_ID,Name,count(\"*\")",
        "cypher_ans": [
            [
                2,
                "Treasury",
                1
            ]
        ]
    }
][
    {
        "db_id": "department_management",
        "question": "Which department has more than 1 head at a time? List the id, name and the number of heads.",
        "sql_query": "SELECT T1.department_id ,  T1.name ,  count(*) FROM management AS T2 JOIN department AS T1 ON T1.department_id  =  T2.department_id GROUP BY T1.department_id HAVING count(*)  >  1",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.department_id"
                },
                {
                    "value": "T1.name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "management",
                    "name": "T2",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T1",
                        "value": "department",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.department_id",
                            "T2.department_id"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.department_id"
            },
            "having": {
                "gt": [
                    {
                        "count": "*"
                    },
                    1
                ]
            }
        },
        "sql_ans": [
            [
                2,
                "Treasury",
                2
            ]
        ],
        "cypher_query": "MATCH ()-[T2:management]-(T1:department)\nWITH count(\"*\") AS count, T1.Department_ID AS Department_ID, T1.Name AS Name\nWHERE count > 1\nRETURN Department_ID,Name,count(\"*\")",
        "cypher_ans": [
            [
                2,
                "Treasury",
                1
            ]
        ]
    }
][
    {
        "db_id": "department_management",
        "question": "Which department has more than 1 head at a time? List the id, name and the number of heads.",
        "sql_query": "SELECT T1.department_id ,  T1.name ,  count(*) FROM management AS T2 JOIN department AS T1 ON T1.department_id  =  T2.department_id GROUP BY T1.department_id HAVING count(*)  >  1",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.department_id"
                },
                {
                    "value": "T1.name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "management",
                    "name": "T2",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T1",
                        "value": "department",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.department_id",
                            "T2.department_id"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.department_id"
            },
            "having": {
                "gt": [
                    {
                        "count": "*"
                    },
                    1
                ]
            }
        },
        "sql_ans": [
            [
                2,
                "Treasury",
                2
            ]
        ],
        "cypher_query": "MATCH ()-[T2:management]-(T1:department)\nWITH T1.Department_ID AS Department_ID, T1.Name AS Name, count(\"*\") AS count\nWHERE count > 1\nRETURN Department_ID,Name,count(\"*\")",
        "cypher_ans": [
            [
                2,
                "Treasury",
                1
            ]
        ]
    }
][
    {
        "db_id": "department_management",
        "question": "Which department has more than 1 head at a time? List the id, name and the number of heads.",
        "sql_query": "SELECT T1.department_id ,  T1.name ,  count(*) FROM management AS T2 JOIN department AS T1 ON T1.department_id  =  T2.department_id GROUP BY T1.department_id HAVING count(*)  >  1",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.department_id"
                },
                {
                    "value": "T1.name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "management",
                    "name": "T2",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T1",
                        "value": "department",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.department_id",
                            "T2.department_id"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.department_id"
            },
            "having": {
                "gt": [
                    {
                        "count": "*"
                    },
                    1
                ]
            }
        },
        "sql_ans": [
            [
                2,
                "Treasury",
                2
            ]
        ],
        "cypher_query": "MATCH ()-[T2:management]-(T1:department)\nWITH T1.Name AS Name, count(\"*\") AS count, T1.Department_ID AS Department_ID\nWHERE count > 1\nRETURN Department_ID,Name,count(\"*\"),count",
        "cypher_ans": [
            [
                2,
                "Treasury",
                1,
                2
            ]
        ]
    }
][
    {
        "db_id": "department_management",
        "question": "Which department has more than 1 head at a time? List the id, name and the number of heads.",
        "sql_query": "SELECT T1.department_id ,  T1.name ,  count(*) FROM management AS T2 JOIN department AS T1 ON T1.department_id  =  T2.department_id GROUP BY T1.department_id HAVING count(*)  >  1",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.department_id"
                },
                {
                    "value": "T1.name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "management",
                    "name": "T2",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T1",
                        "value": "department",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.department_id",
                            "T2.department_id"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.department_id"
            },
            "having": {
                "gt": [
                    {
                        "count": "*"
                    },
                    1
                ]
            }
        },
        "sql_ans": [
            [
                2,
                "Treasury",
                2
            ]
        ],
        "cypher_query": "MATCH ()-[T2:management]-(T1:department)\nWITH count(\"*\") AS count, T1.Department_ID AS Department_ID, T1.Name AS Name\nWHERE count > 1\nRETURN Department_ID,Name,count(\"*\")",
        "cypher_ans": [
            [
                2,
                "Treasury",
                1
            ]
        ]
    }
][
    {
        "db_id": "department_management",
        "question": "Which department has more than 1 head at a time? List the id, name and the number of heads.",
        "sql_query": "SELECT T1.department_id ,  T1.name ,  count(*) FROM management AS T2 JOIN department AS T1 ON T1.department_id  =  T2.department_id GROUP BY T1.department_id HAVING count(*)  >  1",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.department_id"
                },
                {
                    "value": "T1.name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "management",
                    "name": "T2",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T1",
                        "value": "department",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.department_id",
                            "T2.department_id"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.department_id"
            },
            "having": {
                "gt": [
                    {
                        "count": "*"
                    },
                    1
                ]
            }
        },
        "sql_ans": [
            [
                2,
                "Treasury",
                2
            ]
        ],
        "cypher_query": "MATCH ()-[T2:management]-(T1:department)\nWITH count(\"*\") AS count, T1.Department_ID AS Department_ID, T1.Name AS Name\nWHERE count > 1\nRETURN Department_ID,Name,count(\"*\")",
        "cypher_ans": [
            [
                2,
                "Treasury",
                1
            ]
        ]
    }
][
    {
        "db_id": "department_management",
        "question": "Which department has more than 1 head at a time? List the id, name and the number of heads.",
        "sql_query": "SELECT T1.department_id ,  T1.name ,  count(*) FROM management AS T2 JOIN department AS T1 ON T1.department_id  =  T2.department_id GROUP BY T1.department_id HAVING count(*)  >  1",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.department_id"
                },
                {
                    "value": "T1.name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "management",
                    "name": "T2",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T1",
                        "value": "department",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.department_id",
                            "T2.department_id"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.department_id"
            },
            "having": {
                "gt": [
                    {
                        "count": "*"
                    },
                    1
                ]
            }
        },
        "sql_ans": [
            [
                2,
                "Treasury",
                2
            ]
        ],
        "cypher_query": "MATCH ()-[T2:management]-(T1:department)\nWITH T1.Name AS Name, T1.Department_ID AS Department_ID, count(\"*\") AS count\nWHERE count > 1\nRETURN Department_ID,Name,count(\"*\")",
        "cypher_ans": [
            [
                2,
                "Treasury",
                1
            ]
        ]
    }
][][][][][][][][][
    {
        "db_id": "department_management",
        "question": "Which department has more than 1 head at a time? List the id, name and the number of heads.",
        "sql_query": "SELECT T1.department_id ,  T1.name ,  count(*) FROM management AS T2 JOIN department AS T1 ON T1.department_id  =  T2.department_id GROUP BY T1.department_id HAVING count(*)  >  1",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.department_id"
                },
                {
                    "value": "T1.name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "management",
                    "name": "T2",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T1",
                        "value": "department",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.department_id",
                            "T2.department_id"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.department_id"
            },
            "having": {
                "gt": [
                    {
                        "count": "*"
                    },
                    1
                ]
            }
        },
        "sql_ans": [
            [
                2,
                "Treasury",
                2
            ]
        ],
        "cypher_query": "MATCH ()-[T2:management]-(T1:department)\nWITH T1.Department_ID AS Department_ID, count(*) AS count, T1.Name AS Name\nWHERE count  > 1\nRETURN Department_ID,Name,count(*)",
        "cypher_ans": [
            [
                2,
                "Treasury",
                1
            ]
        ]
    }
][][
    {
        "db_id": "department_management",
        "question": "Which department has more than 1 head at a time? List the id, name and the number of heads.",
        "sql_query": "SELECT T1.department_id ,  T1.name ,  count(*) FROM management AS T2 JOIN department AS T1 ON T1.department_id  =  T2.department_id GROUP BY T1.department_id HAVING count(*)  >  1",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.department_id"
                },
                {
                    "value": "T1.name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "management",
                    "name": "T2",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T1",
                        "value": "department",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.department_id",
                            "T2.department_id"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.department_id"
            },
            "having": {
                "gt": [
                    {
                        "count": "*"
                    },
                    1
                ]
            }
        },
        "sql_ans": [
            [
                2,
                "Treasury",
                2
            ]
        ],
        "cypher_query": "MATCH ()-[T2:management]-(T1:department)\nWITH T1.Name AS Name, T1.Department_ID AS Department_ID, count(*) AS count\nWHERE count  > 1\nRETURN Department_ID,Name,count(*)",
        "cypher_ans": [
            [
                2,
                "Treasury",
                1
            ]
        ]
    }
][
    {
        "db_id": "department_management",
        "question": "Which department has more than 1 head at a time? List the id, name and the number of heads.",
        "sql_query": "SELECT T1.department_id ,  T1.name ,  count(*) FROM management AS T2 JOIN department AS T1 ON T1.department_id  =  T2.department_id GROUP BY T1.department_id HAVING count(*)  >  1",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.department_id"
                },
                {
                    "value": "T1.name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "management",
                    "name": "T2",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T1",
                        "value": "department",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.department_id",
                            "T2.department_id"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.department_id"
            },
            "having": {
                "gt": [
                    {
                        "count": "*"
                    },
                    1
                ]
            }
        },
        "sql_ans": [
            [
                2,
                "Treasury",
                2
            ]
        ],
        "cypher_query": "MATCH ()-[T2:management]-(T1:department)\nWITH count(*) AS count, T1.Name AS Name, T1.Department_ID AS Department_ID\nWHERE count  > 1\nRETURN Department_ID,Name",
        "cypher_ans": [
            [
                2,
                "Treasury"
            ]
        ]
    }
][
    {
        "db_id": "department_management",
        "question": "Which department has more than 1 head at a time? List the id, name and the number of heads.",
        "sql_query": "SELECT T1.department_id ,  T1.name ,  count(*) FROM management AS T2 JOIN department AS T1 ON T1.department_id  =  T2.department_id GROUP BY T1.department_id HAVING count(*)  >  1",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.department_id"
                },
                {
                    "value": "T1.name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "management",
                    "name": "T2",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T1",
                        "value": "department",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.department_id",
                            "T2.department_id"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.department_id"
            },
            "having": {
                "gt": [
                    {
                        "count": "*"
                    },
                    1
                ]
            }
        },
        "sql_ans": [
            [
                2,
                "Treasury",
                2
            ]
        ],
        "cypher_query": "MATCH ()-[T2:management]-(T1:department)\nWITH count(*) AS count, T1.Department_ID AS Department_ID, T1.Name AS Name\nWHERE count  > 1\nRETURN Department_ID,Name,count(*)",
        "cypher_ans": [
            [
                2,
                "Treasury",
                1
            ]
        ]
    }
][
    {
        "db_id": "department_management",
        "question": "Which department has more than 1 head at a time? List the id, name and the number of heads.",
        "sql_query": "SELECT T1.department_id ,  T1.name ,  count(*) FROM management AS T2 JOIN department AS T1 ON T1.department_id  =  T2.department_id GROUP BY T1.department_id HAVING count(*)  >  1",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.department_id"
                },
                {
                    "value": "T1.name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "management",
                    "name": "T2",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T1",
                        "value": "department",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.department_id",
                            "T2.department_id"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.department_id"
            },
            "having": {
                "gt": [
                    {
                        "count": "*"
                    },
                    1
                ]
            }
        },
        "sql_ans": [
            [
                2,
                "Treasury",
                2
            ]
        ],
        "cypher_query": "MATCH ()-[T2:management]-(T1:department)\nWITH T1.Name AS Name, count(*) AS count, T1.Department_ID AS Department_ID\nWHERE count  > 1\nRETURN Department_ID,Name",
        "cypher_ans": [
            [
                2,
                "Treasury"
            ]
        ]
    }
][
    {
        "db_id": "department_management",
        "question": "Which department has more than 1 head at a time? List the id, name and the number of heads.",
        "sql_query": "SELECT T1.department_id ,  T1.name ,  count(*) FROM management AS T2 JOIN department AS T1 ON T1.department_id  =  T2.department_id GROUP BY T1.department_id HAVING count(*)  >  1",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.department_id"
                },
                {
                    "value": "T1.name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "management",
                    "name": "T2",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T1",
                        "value": "department",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.department_id",
                            "T2.department_id"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.department_id"
            },
            "having": {
                "gt": [
                    {
                        "count": "*"
                    },
                    1
                ]
            }
        },
        "sql_ans": [
            [
                2,
                "Treasury",
                2
            ]
        ],
        "cypher_query": "MATCH ()-[T2:management]-(T1:department)\nWITH T1.Department_ID AS Department_ID, T1.Name AS Name, count(*) AS count\nWHERE count  > 1\nRETURN Department_ID,Name",
        "cypher_ans": [
            [
                2,
                "Treasury"
            ]
        ]
    }
][
    {
        "db_id": "department_management",
        "question": "Which department has more than 1 head at a time? List the id, name and the number of heads.",
        "sql_query": "SELECT T1.department_id ,  T1.name ,  count(*) FROM management AS T2 JOIN department AS T1 ON T1.department_id  =  T2.department_id GROUP BY T1.department_id HAVING count(*)  >  1",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.department_id"
                },
                {
                    "value": "T1.name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "management",
                    "name": "T2",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T1",
                        "value": "department",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.department_id",
                            "T2.department_id"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.department_id"
            },
            "having": {
                "gt": [
                    {
                        "count": "*"
                    },
                    1
                ]
            }
        },
        "sql_ans": [
            [
                2,
                "Treasury",
                2
            ]
        ],
        "cypher_query": "MATCH ()-[T2:management]-(T1:department)\nWITH T1.Name AS Name, count(*) AS count, T1.Department_ID AS Department_ID\nWHERE count  > 1\nRETURN Department_ID,Name,count(*)",
        "cypher_ans": [
            [
                2,
                "Treasury",
                1
            ]
        ]
    }
][
    {
        "db_id": "department_management",
        "question": "Which department has more than 1 head at a time? List the id, name and the number of heads.",
        "sql_query": "SELECT T1.department_id ,  T1.name ,  count(*) FROM management AS T2 JOIN department AS T1 ON T1.department_id  =  T2.department_id GROUP BY T1.department_id HAVING count(*)  >  1",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.department_id"
                },
                {
                    "value": "T1.name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "management",
                    "name": "T2",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T1",
                        "value": "department",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.department_id",
                            "T2.department_id"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.department_id"
            },
            "having": {
                "gt": [
                    {
                        "count": "*"
                    },
                    1
                ]
            }
        },
        "sql_ans": [
            [
                2,
                "Treasury",
                2
            ]
        ],
        "cypher_query": "MATCH ()-[T2:management]-(T1:department)\nWITH count(*) AS count, T1.Department_ID AS Department_ID, T1.Name AS Name\nWHERE count  > 1\nRETURN Department_ID,Name,count(*)",
        "cypher_ans": [
            [
                2,
                "Treasury",
                1
            ]
        ]
    }
][
    {
        "db_id": "department_management",
        "question": "Which department has more than 1 head at a time? List the id, name and the number of heads.",
        "sql_query": "SELECT T1.department_id ,  T1.name ,  count(*) FROM management AS T2 JOIN department AS T1 ON T1.department_id  =  T2.department_id GROUP BY T1.department_id HAVING count(*)  >  1",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.department_id"
                },
                {
                    "value": "T1.name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "management",
                    "name": "T2",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T1",
                        "value": "department",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.department_id",
                            "T2.department_id"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.department_id"
            },
            "having": {
                "gt": [
                    {
                        "count": "*"
                    },
                    1
                ]
            }
        },
        "sql_ans": [
            [
                2,
                "Treasury",
                2
            ]
        ],
        "cypher_query": "MATCH ()-[T2:management]-(T1:department)\nWITH T1.Name AS Name, T1.Department_ID AS Department_ID, count(*) AS count\nWHERE count  > 1\nRETURN Department_ID,Name,count(*)",
        "cypher_ans": [
            [
                2,
                "Treasury",
                1
            ]
        ]
    }
][
    {
        "db_id": "department_management",
        "question": "Which department has more than 1 head at a time? List the id, name and the number of heads.",
        "sql_query": "SELECT T1.department_id ,  T1.name ,  count(*) FROM management AS T2 JOIN department AS T1 ON T1.department_id  =  T2.department_id GROUP BY T1.department_id HAVING count(*)  >  1",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.department_id"
                },
                {
                    "value": "T1.name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "management",
                    "name": "T2",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T1",
                        "value": "department",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.department_id",
                            "T2.department_id"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.department_id"
            },
            "having": {
                "gt": [
                    {
                        "count": "*"
                    },
                    1
                ]
            }
        },
        "sql_ans": [
            [
                2,
                "Treasury",
                2
            ]
        ],
        "cypher_query": "MATCH ()-[T2:management]-(T1:department)\nWITH T1.Department_ID AS Department_ID, T1.Name AS Name, count(*) AS count\nWHERE count  > 1\nRETURN Department_ID,Name,count(*)",
        "cypher_ans": [
            [
                2,
                "Treasury",
                1
            ]
        ]
    }
][
    {
        "db_id": "department_management",
        "question": "Which department has more than 1 head at a time? List the id, name and the number of heads.",
        "sql_query": "SELECT T1.department_id ,  T1.name ,  count(*) FROM management AS T2 JOIN department AS T1 ON T1.department_id  =  T2.department_id GROUP BY T1.department_id HAVING count(*)  >  1",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.department_id"
                },
                {
                    "value": "T1.name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "management",
                    "name": "T2",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T1",
                        "value": "department",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.department_id",
                            "T2.department_id"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.department_id"
            },
            "having": {
                "gt": [
                    {
                        "count": "*"
                    },
                    1
                ]
            }
        },
        "sql_ans": [
            [
                2,
                "Treasury",
                2
            ]
        ],
        "cypher_query": "MATCH ()-[T2:management]-(T1:department)\nWITH T1.Department_ID AS Department_ID, T1.Name AS Name, count(*) AS count\nWHERE count  > 1\nRETURN Department_ID,Name,count(*)",
        "cypher_ans": [
            [
                2,
                "Treasury",
                1
            ]
        ]
    }
][
    {
        "db_id": "department_management",
        "question": "Which department has more than 1 head at a time? List the id, name and the number of heads.",
        "sql_query": "SELECT T1.department_id ,  T1.name ,  count(*) FROM management AS T2 JOIN department AS T1 ON T1.department_id  =  T2.department_id GROUP BY T1.department_id HAVING count(*)  >  1",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.department_id"
                },
                {
                    "value": "T1.name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "management",
                    "name": "T2",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T1",
                        "value": "department",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.department_id",
                            "T2.department_id"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.department_id"
            },
            "having": {
                "gt": [
                    {
                        "count": "*"
                    },
                    1
                ]
            }
        },
        "sql_ans": [
            [
                2,
                "Treasury",
                2
            ]
        ],
        "cypher_query": "MATCH ()-[T2:management]-(T1:department)\nWITH count(*) AS count, T1.Department_ID AS Department_ID, T1.Name AS Name\nWHERE count  > 1\nRETURN Department_ID,Name",
        "cypher_ans": [
            [
                2,
                "Treasury"
            ]
        ]
    }
][
    {
        "db_id": "department_management",
        "question": "Which department has more than 1 head at a time? List the id, name and the number of heads.",
        "sql_query": "SELECT T1.department_id ,  T1.name ,  count(*) FROM management AS T2 JOIN department AS T1 ON T1.department_id  =  T2.department_id GROUP BY T1.department_id HAVING count(*)  >  1",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.department_id"
                },
                {
                    "value": "T1.name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "management",
                    "name": "T2",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T1",
                        "value": "department",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.department_id",
                            "T2.department_id"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.department_id"
            },
            "having": {
                "gt": [
                    {
                        "count": "*"
                    },
                    1
                ]
            }
        },
        "sql_ans": [
            [
                2,
                "Treasury",
                2
            ]
        ],
        "cypher_query": "MATCH ()-[T2:management]-(T1:department)\nWITH T1.Department_ID AS Department_ID, T1.Name AS Name, count(*) AS count\nWHERE count  > 1\nRETURN Department_ID,Name",
        "cypher_ans": [
            [
                2,
                "Treasury"
            ]
        ]
    }
][
    {
        "db_id": "department_management",
        "question": "Which department has more than 1 head at a time? List the id, name and the number of heads.",
        "sql_query": "SELECT T1.department_id ,  T1.name ,  count(*) FROM management AS T2 JOIN department AS T1 ON T1.department_id  =  T2.department_id GROUP BY T1.department_id HAVING count(*)  >  1",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.department_id"
                },
                {
                    "value": "T1.name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "management",
                    "name": "T2",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T1",
                        "value": "department",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.department_id",
                            "T2.department_id"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.department_id"
            },
            "having": {
                "gt": [
                    {
                        "count": "*"
                    },
                    1
                ]
            }
        },
        "sql_ans": [
            [
                2,
                "Treasury",
                2
            ]
        ],
        "cypher_query": "MATCH ()-[T2:management]-(T1:department)\nWITH T1.Name AS Name, T1.Department_ID AS Department_ID, count(*) AS count\nWHERE count  > 1\nRETURN Department_ID,Name",
        "cypher_ans": [
            [
                2,
                "Treasury"
            ]
        ]
    }
][][
    {
        "db_id": "musical",
        "question": "How many actors are there?",
        "sql_query": "SELECT count(*) FROM actor",
        "parsed_sql": {
            "select": {
                "value": {
                    "count": "*"
                }
            },
            "from": "actor"
        },
        "sql_ans": [
            [
                9
            ]
        ],
        "cypher_query": "MATCH (a:actor)\nRETURN count(*)",
        "cypher_ans": [
            [
                0
            ]
        ]
    },
    {
        "db_id": "musical",
        "question": "Count the number of actors.",
        "sql_query": "SELECT count(*) FROM actor",
        "parsed_sql": {
            "select": {
                "value": {
                    "count": "*"
                }
            },
            "from": "actor"
        },
        "sql_ans": [
            [
                9
            ]
        ],
        "cypher_query": "MATCH (a:actor)\nRETURN count(*)",
        "cypher_ans": [
            [
                0
            ]
        ]
    },
    {
        "db_id": "musical",
        "question": "List the name of actors in ascending alphabetical order.",
        "sql_query": "SELECT Name FROM actor ORDER BY Name ASC",
        "parsed_sql": {
            "select": {
                "value": "Name"
            },
            "from": "actor",
            "orderby": {
                "value": "Name",
                "sort": "asc"
            }
        },
        "sql_ans": [
            [
                "Alan Fletcher"
            ],
            [
                "Ian Smith"
            ],
            [
                "Jackie Woodburne"
            ],
            [
                "Kate Ritchie"
            ],
            [
                "Lynne McGranger"
            ],
            [
                "Ray Meagher"
            ],
            [
                "Ryan Moloney"
            ],
            [
                "Stefan Dennis"
            ],
            [
                "Tom Oliver"
            ]
        ],
        "cypher_query": "MATCH (a:actor)\nRETURN a.Name\nORDER BY a.Name ASC",
        "cypher_ans": []
    },
    {
        "db_id": "musical",
        "question": "What are the names of actors, ordered alphabetically?",
        "sql_query": "SELECT Name FROM actor ORDER BY Name ASC",
        "parsed_sql": {
            "select": {
                "value": "Name"
            },
            "from": "actor",
            "orderby": {
                "value": "Name",
                "sort": "asc"
            }
        },
        "sql_ans": [
            [
                "Alan Fletcher"
            ],
            [
                "Ian Smith"
            ],
            [
                "Jackie Woodburne"
            ],
            [
                "Kate Ritchie"
            ],
            [
                "Lynne McGranger"
            ],
            [
                "Ray Meagher"
            ],
            [
                "Ryan Moloney"
            ],
            [
                "Stefan Dennis"
            ],
            [
                "Tom Oliver"
            ]
        ],
        "cypher_query": "MATCH (a:actor)\nRETURN a.Name\nORDER BY a.Name ASC",
        "cypher_ans": []
    },
    {
        "db_id": "musical",
        "question": "What are the characters and duration of actors?",
        "sql_query": "SELECT Character ,  Duration FROM actor",
        "parsed_sql": {
            "select": [
                {
                    "value": "Character"
                },
                {
                    "value": "Duration"
                }
            ],
            "from": "actor"
        },
        "sql_ans": [
            [
                "Alf Stewart",
                "1988\u2014"
            ],
            [
                "Lou Carpenter",
                "1988, 1992\u2014"
            ],
            [
                "Irene Roberts",
                "1993\u2014"
            ],
            [
                "Sally Fletcher",
                "1988\u20132008, 2013"
            ],
            [
                "Karl Kennedy",
                "1994\u2014"
            ],
            [
                "Susan Kennedy",
                "1994\u2014"
            ],
            [
                "Toadfish Rebecchi",
                "1995, 1996\u2014"
            ],
            [
                "Harold Bishop",
                "1987\u20131991, 1996\u20132009, 2011"
            ],
            [
                "Paul Robinson",
                "1985\u20131992, 1993, 2004\u2014"
            ]
        ],
        "cypher_query": "MATCH (a:actor)\nRETURN a.Character,a.Duration",
        "cypher_ans": []
    },
    {
        "db_id": "musical",
        "question": "Return the characters and durations for each actor.",
        "sql_query": "SELECT Character ,  Duration FROM actor",
        "parsed_sql": {
            "select": [
                {
                    "value": "Character"
                },
                {
                    "value": "Duration"
                }
            ],
            "from": "actor"
        },
        "sql_ans": [
            [
                "Alf Stewart",
                "1988\u2014"
            ],
            [
                "Lou Carpenter",
                "1988, 1992\u2014"
            ],
            [
                "Irene Roberts",
                "1993\u2014"
            ],
            [
                "Sally Fletcher",
                "1988\u20132008, 2013"
            ],
            [
                "Karl Kennedy",
                "1994\u2014"
            ],
            [
                "Susan Kennedy",
                "1994\u2014"
            ],
            [
                "Toadfish Rebecchi",
                "1995, 1996\u2014"
            ],
            [
                "Harold Bishop",
                "1987\u20131991, 1996\u20132009, 2011"
            ],
            [
                "Paul Robinson",
                "1985\u20131992, 1993, 2004\u2014"
            ]
        ],
        "cypher_query": "MATCH (a:actor)\nRETURN a.Character,a.Duration",
        "cypher_ans": []
    },
    {
        "db_id": "musical",
        "question": "List the name of actors whose age is not 20.",
        "sql_query": "SELECT Name FROM actor WHERE Age != 20",
        "parsed_sql": {
            "select": {
                "value": "Name"
            },
            "from": "actor",
            "where": {
                "neq": [
                    "Age",
                    20
                ]
            }
        },
        "sql_ans": [
            [
                "Ray Meagher"
            ],
            [
                "Tom Oliver"
            ],
            [
                "Lynne McGranger"
            ],
            [
                "Ryan Moloney"
            ],
            [
                "Ian Smith"
            ],
            [
                "Stefan Dennis"
            ]
        ],
        "cypher_query": "MATCH (a:actor)\nWHERE a.age <> 20\nRETURN a.Name",
        "cypher_ans": []
    },
    {
        "db_id": "musical",
        "question": "What are the names of actors who are not 20 years old?",
        "sql_query": "SELECT Name FROM actor WHERE Age != 20",
        "parsed_sql": {
            "select": {
                "value": "Name"
            },
            "from": "actor",
            "where": {
                "neq": [
                    "Age",
                    20
                ]
            }
        },
        "sql_ans": [
            [
                "Ray Meagher"
            ],
            [
                "Tom Oliver"
            ],
            [
                "Lynne McGranger"
            ],
            [
                "Ryan Moloney"
            ],
            [
                "Ian Smith"
            ],
            [
                "Stefan Dennis"
            ]
        ],
        "cypher_query": "MATCH (a:actor)\nWHERE a.age <> 20\nRETURN a.Name",
        "cypher_ans": []
    },
    {
        "db_id": "musical",
        "question": "What are the characters of actors in descending order of age?",
        "sql_query": "SELECT Character FROM actor ORDER BY age DESC",
        "parsed_sql": {
            "select": {
                "value": "Character"
            },
            "from": "actor",
            "orderby": {
                "value": "age",
                "sort": "desc"
            }
        },
        "sql_ans": [
            [
                "Alf Stewart"
            ],
            [
                "Lou Carpenter"
            ],
            [
                "Irene Roberts"
            ],
            [
                "Sally Fletcher"
            ],
            [
                "Karl Kennedy"
            ],
            [
                "Susan Kennedy"
            ],
            [
                "Toadfish Rebecchi"
            ],
            [
                "Harold Bishop"
            ],
            [
                "Paul Robinson"
            ]
        ],
        "cypher_query": "MATCH (a:actor)\nRETURN a.Character\nORDER BY a.age DESC",
        "cypher_ans": []
    },
    {
        "db_id": "musical",
        "question": "Return the characters for actors, ordered by age descending.",
        "sql_query": "SELECT Character FROM actor ORDER BY age DESC",
        "parsed_sql": {
            "select": {
                "value": "Character"
            },
            "from": "actor",
            "orderby": {
                "value": "age",
                "sort": "desc"
            }
        },
        "sql_ans": [
            [
                "Alf Stewart"
            ],
            [
                "Lou Carpenter"
            ],
            [
                "Irene Roberts"
            ],
            [
                "Sally Fletcher"
            ],
            [
                "Karl Kennedy"
            ],
            [
                "Susan Kennedy"
            ],
            [
                "Toadfish Rebecchi"
            ],
            [
                "Harold Bishop"
            ],
            [
                "Paul Robinson"
            ]
        ],
        "cypher_query": "MATCH (a:actor)\nRETURN a.Character\nORDER BY a.age DESC",
        "cypher_ans": []
    },
    {
        "db_id": "musical",
        "question": "What is the duration of the oldest actor?",
        "sql_query": "SELECT Duration FROM actor ORDER BY Age DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "Duration"
            },
            "from": "actor",
            "orderby": {
                "value": "Age",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "1988\u2014"
            ]
        ],
        "cypher_query": "MATCH (a:actor)\nRETURN a.Duration\nORDER BY a.age DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "musical",
        "question": "Return the duration of the actor with the greatest age.",
        "sql_query": "SELECT Duration FROM actor ORDER BY Age DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "Duration"
            },
            "from": "actor",
            "orderby": {
                "value": "Age",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "1988\u2014"
            ]
        ],
        "cypher_query": "MATCH (a:actor)\nRETURN a.Duration\nORDER BY a.age DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "musical",
        "question": "What are the names of musicals with nominee \"Bob Fosse\"?",
        "sql_query": "SELECT Name FROM musical WHERE Nominee  =  \"Bob Fosse\"",
        "parsed_sql": {
            "select": {
                "value": "Name"
            },
            "from": "musical",
            "where": {
                "eq": [
                    "Nominee",
                    "Bob Fosse"
                ]
            }
        },
        "sql_ans": [
            [
                "The Phantom of the Opera"
            ],
            [
                "Wicked"
            ],
            [
                "West Side Story"
            ],
            [
                "The Book of Mormon"
            ],
            [
                "Chicago"
            ]
        ],
        "cypher_query": "MATCH (m:musical)\nWHERE m.Nominee = \"Bob Fosse\"\nRETURN m.Name",
        "cypher_ans": []
    },
    {
        "db_id": "musical",
        "question": "Return the names of musicals who have the nominee Bob Fosse.",
        "sql_query": "SELECT Name FROM musical WHERE Nominee  =  \"Bob Fosse\"",
        "parsed_sql": {
            "select": {
                "value": "Name"
            },
            "from": "musical",
            "where": {
                "eq": [
                    "Nominee",
                    "Bob Fosse"
                ]
            }
        },
        "sql_ans": [
            [
                "The Phantom of the Opera"
            ],
            [
                "Wicked"
            ],
            [
                "West Side Story"
            ],
            [
                "The Book of Mormon"
            ],
            [
                "Chicago"
            ]
        ],
        "cypher_query": "MATCH (m:musical)\nWHERE m.Nominee = \"Bob Fosse\"\nRETURN m.Name",
        "cypher_ans": []
    },
    {
        "db_id": "musical",
        "question": "What are the distinct nominees of the musicals with the award that is not \"Tony Award\"?",
        "sql_query": "SELECT DISTINCT Nominee FROM musical WHERE Award != \"Tony Award\"",
        "parsed_sql": {
            "select": {
                "value": {
                    "distinct": {
                        "value": "Nominee"
                    }
                }
            },
            "from": "musical",
            "where": {
                "neq": [
                    "Award",
                    "Tony Award"
                ]
            }
        },
        "sql_ans": [
            [
                "Cleavant Derricks"
            ],
            [
                "Bob Fosse"
            ]
        ],
        "cypher_query": "MATCH (m:musical)\nWHERE m.Award <> \"Tony Award\"\nRETURN DISTINCT m.Nominee",
        "cypher_ans": []
    },
    {
        "db_id": "musical",
        "question": "Return the different nominees of musicals that have an award that is not the Tony Award.",
        "sql_query": "SELECT DISTINCT Nominee FROM musical WHERE Award != \"Tony Award\"",
        "parsed_sql": {
            "select": {
                "value": {
                    "distinct": {
                        "value": "Nominee"
                    }
                }
            },
            "from": "musical",
            "where": {
                "neq": [
                    "Award",
                    "Tony Award"
                ]
            }
        },
        "sql_ans": [
            [
                "Cleavant Derricks"
            ],
            [
                "Bob Fosse"
            ]
        ],
        "cypher_query": "MATCH (m:musical)\nWHERE m.Award <> \"Tony Award\"\nRETURN DISTINCT m.Nominee",
        "cypher_ans": []
    },
    {
        "db_id": "musical",
        "question": "Show names of actors and names of musicals they are in.",
        "sql_query": "SELECT T1.Name ,  T2.Name FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.Name"
                },
                {
                    "value": "T2.Name"
                }
            ],
            "from": [
                {
                    "value": "actor",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "musical",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Musical_ID",
                            "T2.Musical_ID"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "Ray Meagher",
                "The Phantom of the Opera"
            ],
            [
                "Tom Oliver",
                "The Phantom of the Opera"
            ],
            [
                "Lynne McGranger",
                "Les Mis\u00e9rables"
            ],
            [
                "Kate Ritchie",
                "Les Mis\u00e9rables"
            ],
            [
                "Alan Fletcher",
                "West Side Story"
            ],
            [
                "Jackie Woodburne",
                "The Book of Mormon"
            ],
            [
                "Ryan Moloney",
                "The Book of Mormon"
            ],
            [
                "Ian Smith",
                "The Book of Mormon"
            ],
            [
                "Stefan Dennis",
                "The Book of Mormon"
            ]
        ],
        "cypher_query": "MATCH (T1:actor) MATCH (T2:musical)\nRETURN T1.Name,T2.Name",
        "cypher_ans": []
    },
    {
        "db_id": "musical",
        "question": "What are the names of actors and the musicals that they are in?",
        "sql_query": "SELECT T1.Name ,  T2.Name FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.Name"
                },
                {
                    "value": "T2.Name"
                }
            ],
            "from": [
                {
                    "value": "actor",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "musical",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Musical_ID",
                            "T2.Musical_ID"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "Ray Meagher",
                "The Phantom of the Opera"
            ],
            [
                "Tom Oliver",
                "The Phantom of the Opera"
            ],
            [
                "Lynne McGranger",
                "Les Mis\u00e9rables"
            ],
            [
                "Kate Ritchie",
                "Les Mis\u00e9rables"
            ],
            [
                "Alan Fletcher",
                "West Side Story"
            ],
            [
                "Jackie Woodburne",
                "The Book of Mormon"
            ],
            [
                "Ryan Moloney",
                "The Book of Mormon"
            ],
            [
                "Ian Smith",
                "The Book of Mormon"
            ],
            [
                "Stefan Dennis",
                "The Book of Mormon"
            ]
        ],
        "cypher_query": "MATCH (T1:actor) MATCH (T2:musical)\nRETURN T1.Name,T2.Name",
        "cypher_ans": []
    },
    {
        "db_id": "musical",
        "question": "Show names of actors that have appeared in musical with name \"The Phantom of the Opera\".",
        "sql_query": "SELECT T1.Name FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID WHERE T2.Name  =  \"The Phantom of the Opera\"",
        "parsed_sql": {
            "select": {
                "value": "T1.Name"
            },
            "from": [
                {
                    "value": "actor",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "musical",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Musical_ID",
                            "T2.Musical_ID"
                        ]
                    }
                }
            ],
            "where": {
                "eq": [
                    "T2.Name",
                    "The Phantom of the Opera"
                ]
            }
        },
        "sql_ans": [
            [
                "Ray Meagher"
            ],
            [
                "Tom Oliver"
            ]
        ],
        "cypher_query": "MATCH (T1:actor) MATCH (T2:musical)\nWHERE T2.Name = \"The Phantom of the Opera\"\nRETURN T1.Name",
        "cypher_ans": []
    },
    {
        "db_id": "musical",
        "question": "What are the names of actors who have been in the musical titled The Phantom of the Opera?",
        "sql_query": "SELECT T1.Name FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID WHERE T2.Name  =  \"The Phantom of the Opera\"",
        "parsed_sql": {
            "select": {
                "value": "T1.Name"
            },
            "from": [
                {
                    "value": "actor",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "musical",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Musical_ID",
                            "T2.Musical_ID"
                        ]
                    }
                }
            ],
            "where": {
                "eq": [
                    "T2.Name",
                    "The Phantom of the Opera"
                ]
            }
        },
        "sql_ans": [
            [
                "Ray Meagher"
            ],
            [
                "Tom Oliver"
            ]
        ],
        "cypher_query": "MATCH (T1:actor) MATCH (T2:musical)\nWHERE T2.Name = \"The Phantom of the Opera\"\nRETURN T1.Name",
        "cypher_ans": []
    },
    {
        "db_id": "musical",
        "question": "Show names of actors in descending order of the year their musical is awarded.",
        "sql_query": "SELECT T1.Name FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID ORDER BY T2.Year DESC",
        "parsed_sql": {
            "select": {
                "value": "T1.Name"
            },
            "from": [
                {
                    "value": "actor",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "musical",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Musical_ID",
                            "T2.Musical_ID"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.Year",
                "sort": "desc"
            }
        },
        "sql_ans": [
            [
                "Ray Meagher"
            ],
            [
                "Tom Oliver"
            ],
            [
                "Lynne McGranger"
            ],
            [
                "Kate Ritchie"
            ],
            [
                "Alan Fletcher"
            ],
            [
                "Jackie Woodburne"
            ],
            [
                "Ryan Moloney"
            ],
            [
                "Ian Smith"
            ],
            [
                "Stefan Dennis"
            ]
        ],
        "cypher_query": "MATCH (T1:actor) MATCH (T2:musical)\nRETURN T1.Name\nORDER BY T2.Year DESC",
        "cypher_ans": []
    },
    {
        "db_id": "musical",
        "question": "What are the names of actors ordered descending by the year in which their musical was awarded?",
        "sql_query": "SELECT T1.Name FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID ORDER BY T2.Year DESC",
        "parsed_sql": {
            "select": {
                "value": "T1.Name"
            },
            "from": [
                {
                    "value": "actor",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "musical",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Musical_ID",
                            "T2.Musical_ID"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.Year",
                "sort": "desc"
            }
        },
        "sql_ans": [
            [
                "Ray Meagher"
            ],
            [
                "Tom Oliver"
            ],
            [
                "Lynne McGranger"
            ],
            [
                "Kate Ritchie"
            ],
            [
                "Alan Fletcher"
            ],
            [
                "Jackie Woodburne"
            ],
            [
                "Ryan Moloney"
            ],
            [
                "Ian Smith"
            ],
            [
                "Stefan Dennis"
            ]
        ],
        "cypher_query": "MATCH (T1:actor) MATCH (T2:musical)\nRETURN T1.Name\nORDER BY T2.Year DESC",
        "cypher_ans": []
    },
    {
        "db_id": "musical",
        "question": "Show names of musicals and the number of actors who have appeared in the musicals.",
        "sql_query": "SELECT T2.Name ,  COUNT(*) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID GROUP BY T1.Musical_ID",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.Name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "actor",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "musical",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Musical_ID",
                            "T2.Musical_ID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.Musical_ID"
            }
        },
        "sql_ans": [
            [
                "The Phantom of the Opera",
                2
            ],
            [
                "Les Mis\u00e9rables",
                2
            ],
            [
                "West Side Story",
                1
            ],
            [
                "The Book of Mormon",
                4
            ]
        ],
        "cypher_query": "MATCH (T1:actor) MATCH (T2:musical)\nWITH T2.Name AS Name, count(T1.Musical_ID) AS count\nRETURN Name",
        "cypher_ans": []
    },
    {
        "db_id": "musical",
        "question": "How many actors have appeared in each musical?",
        "sql_query": "SELECT T2.Name ,  COUNT(*) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID GROUP BY T1.Musical_ID",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.Name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "actor",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "musical",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Musical_ID",
                            "T2.Musical_ID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.Musical_ID"
            }
        },
        "sql_ans": [
            [
                "The Phantom of the Opera",
                2
            ],
            [
                "Les Mis\u00e9rables",
                2
            ],
            [
                "West Side Story",
                1
            ],
            [
                "The Book of Mormon",
                4
            ]
        ],
        "cypher_query": "MATCH (T1:actor) MATCH (T2:musical)\nWITH T2.Name AS Name, count(T1.Musical_ID) AS count\nRETURN Name",
        "cypher_ans": []
    },
    {
        "db_id": "musical",
        "question": "Show names of musicals which have at least three actors.",
        "sql_query": "SELECT T2.Name FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID GROUP BY T1.Musical_ID HAVING COUNT(*)  >=  3",
        "parsed_sql": {
            "select": {
                "value": "T2.Name"
            },
            "from": [
                {
                    "value": "actor",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "musical",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Musical_ID",
                            "T2.Musical_ID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.Musical_ID"
            },
            "having": {
                "gte": [
                    {
                        "count": "*"
                    },
                    3
                ]
            }
        },
        "sql_ans": [
            [
                "The Book of Mormon"
            ]
        ],
        "cypher_query": "MATCH (T1:actor) MATCH (T2:musical)\nWITH T2.Name AS Name, count(*) AS count\nWHERE count  >= 3\nRETURN Name",
        "cypher_ans": []
    },
    {
        "db_id": "musical",
        "question": "What are the names of musicals who have at 3 or more actors?",
        "sql_query": "SELECT T2.Name FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID GROUP BY T1.Musical_ID HAVING COUNT(*)  >=  3",
        "parsed_sql": {
            "select": {
                "value": "T2.Name"
            },
            "from": [
                {
                    "value": "actor",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "musical",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Musical_ID",
                            "T2.Musical_ID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.Musical_ID"
            },
            "having": {
                "gte": [
                    {
                        "count": "*"
                    },
                    3
                ]
            }
        },
        "sql_ans": [
            [
                "The Book of Mormon"
            ]
        ],
        "cypher_query": "MATCH (T1:actor) MATCH (T2:musical)\nWITH T2.Name AS Name, count(*) AS count\nWHERE count  >= 3\nRETURN Name",
        "cypher_ans": []
    },
    {
        "db_id": "musical",
        "question": "Show different nominees and the number of musicals they have been nominated.",
        "sql_query": "SELECT Nominee ,  COUNT(*) FROM musical GROUP BY Nominee",
        "parsed_sql": {
            "select": [
                {
                    "value": "Nominee"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": "musical",
            "groupby": {
                "value": "Nominee"
            }
        },
        "sql_ans": [
            [
                "Bob Fosse",
                5
            ],
            [
                "Cleavant Derricks",
                2
            ]
        ],
        "cypher_query": "MATCH (m:musical)\nWITH m.Nominee AS Nominee, count(m.Nominee) AS count\nRETURN Nominee",
        "cypher_ans": []
    },
    {
        "db_id": "musical",
        "question": "How many musicals has each nominee been nominated for?",
        "sql_query": "SELECT Nominee ,  COUNT(*) FROM musical GROUP BY Nominee",
        "parsed_sql": {
            "select": [
                {
                    "value": "Nominee"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": "musical",
            "groupby": {
                "value": "Nominee"
            }
        },
        "sql_ans": [
            [
                "Bob Fosse",
                5
            ],
            [
                "Cleavant Derricks",
                2
            ]
        ],
        "cypher_query": "MATCH (m:musical)\nWITH m.Nominee AS Nominee, count(m.Nominee) AS count\nRETURN Nominee",
        "cypher_ans": []
    },
    {
        "db_id": "musical",
        "question": "Please show the nominee who has been nominated the greatest number of times.",
        "sql_query": "SELECT Nominee FROM musical GROUP BY Nominee ORDER BY COUNT(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "Nominee"
            },
            "from": "musical",
            "groupby": {
                "value": "Nominee"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Bob Fosse"
            ]
        ],
        "cypher_query": "MATCH (m:musical)\nWITH m.Nominee AS Nominee, count(m.Nominee) AS count\nRETURN Nominee\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "musical",
        "question": "Who is the nominee who has been nominated for the most musicals?",
        "sql_query": "SELECT Nominee FROM musical GROUP BY Nominee ORDER BY COUNT(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "Nominee"
            },
            "from": "musical",
            "groupby": {
                "value": "Nominee"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Bob Fosse"
            ]
        ],
        "cypher_query": "MATCH (m:musical)\nWITH m.Nominee AS Nominee, count(m.Nominee) AS count\nRETURN Nominee\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "musical",
        "question": "List the most common result of the musicals.",
        "sql_query": "SELECT RESULT FROM musical GROUP BY RESULT ORDER BY COUNT(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "RESULT"
            },
            "from": "musical",
            "groupby": {
                "value": "RESULT"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Nominated"
            ]
        ],
        "cypher_query": "MATCH (m:musical)\nWITH m.Result AS Result, count(m.Result) AS count\nRETURN Result\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "musical",
        "question": "Return the most frequent result across all musicals.",
        "sql_query": "SELECT RESULT FROM musical GROUP BY RESULT ORDER BY COUNT(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "RESULT"
            },
            "from": "musical",
            "groupby": {
                "value": "RESULT"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Nominated"
            ]
        ],
        "cypher_query": "MATCH (m:musical)\nWITH m.Result AS Result, count(m.Result) AS count\nRETURN Result\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "musical",
        "question": "List the nominees that have been nominated more than two musicals.",
        "sql_query": "SELECT Nominee FROM musical GROUP BY Nominee HAVING COUNT(*)  >  2",
        "parsed_sql": {
            "select": {
                "value": "Nominee"
            },
            "from": "musical",
            "groupby": {
                "value": "Nominee"
            },
            "having": {
                "gt": [
                    {
                        "count": "*"
                    },
                    2
                ]
            }
        },
        "sql_ans": [
            [
                "Bob Fosse"
            ]
        ],
        "cypher_query": "MATCH (m:musical)\nWITH m.Nominee AS Nominee, count(*) AS count\nWHERE count  > 2\nRETURN Nominee",
        "cypher_ans": []
    },
    {
        "db_id": "musical",
        "question": "Who are the nominees who have been nominated more than two times?",
        "sql_query": "SELECT Nominee FROM musical GROUP BY Nominee HAVING COUNT(*)  >  2",
        "parsed_sql": {
            "select": {
                "value": "Nominee"
            },
            "from": "musical",
            "groupby": {
                "value": "Nominee"
            },
            "having": {
                "gt": [
                    {
                        "count": "*"
                    },
                    2
                ]
            }
        },
        "sql_ans": [
            [
                "Bob Fosse"
            ]
        ],
        "cypher_query": "MATCH (m:musical)\nWITH m.Nominee AS Nominee, count(*) AS count\nWHERE count  > 2\nRETURN Nominee",
        "cypher_ans": []
    },
    {
        "db_id": "musical",
        "question": "List the name of musicals that do not have actors.",
        "sql_query": "SELECT Name FROM musical WHERE Musical_ID NOT IN (SELECT Musical_ID FROM actor)",
        "parsed_sql": {
            "select": {
                "value": "Name"
            },
            "from": "musical",
            "where": {
                "nin": [
                    "Musical_ID",
                    {
                        "select": {
                            "value": "Musical_ID"
                        },
                        "from": "actor"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Wicked"
            ],
            [
                "Rent"
            ],
            [
                "Chicago"
            ]
        ],
        "cypher_query": "MATCH (m:musical) MATCH (a:actor)\nWHERE NOT m.Musical_ID in a.Musical_ID\nRETURN m.Name",
        "cypher_ans": []
    },
    {
        "db_id": "musical",
        "question": "What are the names of musicals who have no actors?",
        "sql_query": "SELECT Name FROM musical WHERE Musical_ID NOT IN (SELECT Musical_ID FROM actor)",
        "parsed_sql": {
            "select": {
                "value": "Name"
            },
            "from": "musical",
            "where": {
                "nin": [
                    "Musical_ID",
                    {
                        "select": {
                            "value": "Musical_ID"
                        },
                        "from": "actor"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Wicked"
            ],
            [
                "Rent"
            ],
            [
                "Chicago"
            ]
        ],
        "cypher_query": "MATCH (m:musical) MATCH (a:actor)\nWHERE NOT m.Musical_ID in a.Musical_ID\nRETURN m.Name",
        "cypher_ans": []
    },
    {
        "db_id": "musical",
        "question": "Show the musical nominee with award \"Bob Fosse\" or \"Cleavant Derricks\".",
        "sql_query": "SELECT Nominee FROM musical WHERE Award  =  \"Tony Award\" OR Award  =  \"Cleavant Derricks\"",
        "parsed_sql": {
            "select": {
                "value": "Nominee"
            },
            "from": "musical",
            "where": {
                "or": [
                    {
                        "eq": [
                            "Award",
                            "Tony Award"
                        ]
                    },
                    {
                        "eq": [
                            "Award",
                            "Cleavant Derricks"
                        ]
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Bob Fosse"
            ],
            [
                "Cleavant Derricks"
            ]
        ],
        "cypher_query": "MATCH (m:musical)\nWHERE m.Award = \"Tony Award\" OR m.Award = \"Cleavant Derricks\"\nRETURN m.Nominee",
        "cypher_ans": []
    },
    {
        "db_id": "musical",
        "question": "Who are the nominees who were nominated for either of the Bob Fosse or Cleavant Derricks awards?",
        "sql_query": "SELECT Nominee FROM musical WHERE Award  =  \"Tony Award\" OR Award  =  \"Cleavant Derricks\"",
        "parsed_sql": {
            "select": {
                "value": "Nominee"
            },
            "from": "musical",
            "where": {
                "or": [
                    {
                        "eq": [
                            "Award",
                            "Tony Award"
                        ]
                    },
                    {
                        "eq": [
                            "Award",
                            "Cleavant Derricks"
                        ]
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Bob Fosse"
            ],
            [
                "Cleavant Derricks"
            ]
        ],
        "cypher_query": "MATCH (m:musical)\nWHERE m.Award = \"Tony Award\" OR m.Award = \"Cleavant Derricks\"\nRETURN m.Nominee",
        "cypher_ans": []
    }
][
    {
        "db_id": "musical",
        "question": "Show names of musicals and the number of actors who have appeared in the musicals.",
        "sql_query": "SELECT T2.Name ,  COUNT(*) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID GROUP BY T1.Musical_ID",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.Name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "actor",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "musical",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Musical_ID",
                            "T2.Musical_ID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.Musical_ID"
            }
        },
        "sql_ans": [
            [
                "The Phantom of the Opera",
                2
            ],
            [
                "Les Mis\u00e9rables",
                2
            ],
            [
                "West Side Story",
                1
            ],
            [
                "The Book of Mormon",
                4
            ]
        ],
        "cypher_query": "MATCH (T1:actor)-[]-(T2:musical)\nWITH count(T1.Musical_ID) AS count, T2.Name AS Name\nRETURN Name",
        "cypher_ans": [
            [
                "The Phantom of the Opera"
            ],
            [
                "Les Mis\u00e9rables"
            ],
            [
                "West Side Story"
            ],
            [
                "The Book of Mormon"
            ]
        ]
    },
    {
        "db_id": "musical",
        "question": "How many actors have appeared in each musical?",
        "sql_query": "SELECT T2.Name ,  COUNT(*) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID GROUP BY T1.Musical_ID",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.Name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "actor",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "musical",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Musical_ID",
                            "T2.Musical_ID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.Musical_ID"
            }
        },
        "sql_ans": [
            [
                "The Phantom of the Opera",
                2
            ],
            [
                "Les Mis\u00e9rables",
                2
            ],
            [
                "West Side Story",
                1
            ],
            [
                "The Book of Mormon",
                4
            ]
        ],
        "cypher_query": "MATCH (T1:actor)-[]-(T2:musical)\nWITH count(T1.Musical_ID) AS count, T2.Name AS Name\nRETURN Name",
        "cypher_ans": [
            [
                "The Phantom of the Opera"
            ],
            [
                "Les Mis\u00e9rables"
            ],
            [
                "West Side Story"
            ],
            [
                "The Book of Mormon"
            ]
        ]
    },
    {
        "db_id": "musical",
        "question": "Show different nominees and the number of musicals they have been nominated.",
        "sql_query": "SELECT Nominee ,  COUNT(*) FROM musical GROUP BY Nominee",
        "parsed_sql": {
            "select": [
                {
                    "value": "Nominee"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": "musical",
            "groupby": {
                "value": "Nominee"
            }
        },
        "sql_ans": [
            [
                "Bob Fosse",
                5
            ],
            [
                "Cleavant Derricks",
                2
            ]
        ],
        "cypher_query": "MATCH (m:musical)\nWITH m.Nominee AS Nominee, count(m.Nominee) AS count\nRETURN Nominee",
        "cypher_ans": [
            [
                "Bob Fosse"
            ],
            [
                "Cleavant Derricks"
            ]
        ]
    },
    {
        "db_id": "musical",
        "question": "How many musicals has each nominee been nominated for?",
        "sql_query": "SELECT Nominee ,  COUNT(*) FROM musical GROUP BY Nominee",
        "parsed_sql": {
            "select": [
                {
                    "value": "Nominee"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": "musical",
            "groupby": {
                "value": "Nominee"
            }
        },
        "sql_ans": [
            [
                "Bob Fosse",
                5
            ],
            [
                "Cleavant Derricks",
                2
            ]
        ],
        "cypher_query": "MATCH (m:musical)\nWITH m.Nominee AS Nominee, count(m.Nominee) AS count\nRETURN Nominee",
        "cypher_ans": [
            [
                "Bob Fosse"
            ],
            [
                "Cleavant Derricks"
            ]
        ]
    },
    {
        "db_id": "musical",
        "question": "List the name of musicals that do not have actors.",
        "sql_query": "SELECT Name FROM musical WHERE Musical_ID NOT IN (SELECT Musical_ID FROM actor)",
        "parsed_sql": {
            "select": {
                "value": "Name"
            },
            "from": "musical",
            "where": {
                "nin": [
                    "Musical_ID",
                    {
                        "select": {
                            "value": "Musical_ID"
                        },
                        "from": "actor"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Wicked"
            ],
            [
                "Rent"
            ],
            [
                "Chicago"
            ]
        ],
        "cypher_query": "MATCH (m:musical) MATCH (a:actor)\nWHERE NOT m.Musical_ID in a.Musical_ID\nRETURN m.Name",
        "cypher_ans": [
            [
                "The Phantom of the Opera"
            ],
            [
                "Les Mis\u00e9rables"
            ],
            [
                "Wicked"
            ],
            [
                "West Side Story"
            ],
            [
                "Rent"
            ],
            [
                "The Book of Mormon"
            ],
            [
                "Chicago"
            ]
        ]
    },
    {
        "db_id": "musical",
        "question": "What are the names of musicals who have no actors?",
        "sql_query": "SELECT Name FROM musical WHERE Musical_ID NOT IN (SELECT Musical_ID FROM actor)",
        "parsed_sql": {
            "select": {
                "value": "Name"
            },
            "from": "musical",
            "where": {
                "nin": [
                    "Musical_ID",
                    {
                        "select": {
                            "value": "Musical_ID"
                        },
                        "from": "actor"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Wicked"
            ],
            [
                "Rent"
            ],
            [
                "Chicago"
            ]
        ],
        "cypher_query": "MATCH (m:musical) MATCH (a:actor)\nWHERE NOT m.Musical_ID in a.Musical_ID\nRETURN m.Name",
        "cypher_ans": [
            [
                "The Phantom of the Opera"
            ],
            [
                "Les Mis\u00e9rables"
            ],
            [
                "Wicked"
            ],
            [
                "West Side Story"
            ],
            [
                "Rent"
            ],
            [
                "The Book of Mormon"
            ],
            [
                "Chicago"
            ]
        ]
    }
][
    {
        "db_id": "musical",
        "question": "Show names of musicals and the number of actors who have appeared in the musicals.",
        "sql_query": "SELECT T2.Name ,  COUNT(*) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID GROUP BY T1.Musical_ID",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.Name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "actor",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "musical",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Musical_ID",
                            "T2.Musical_ID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.Musical_ID"
            }
        },
        "sql_ans": [
            [
                "The Phantom of the Opera",
                2
            ],
            [
                "Les Mis\u00e9rables",
                2
            ],
            [
                "West Side Story",
                1
            ],
            [
                "The Book of Mormon",
                4
            ]
        ],
        "cypher_query": "MATCH (T1:actor)-[]-(T2:musical)\nWITH count(T1.Musical_ID) AS count, T2.Name AS Name\nRETURN Name",
        "cypher_ans": [
            [
                "The Phantom of the Opera"
            ],
            [
                "Les Mis\u00e9rables"
            ],
            [
                "West Side Story"
            ],
            [
                "The Book of Mormon"
            ]
        ]
    },
    {
        "db_id": "musical",
        "question": "How many actors have appeared in each musical?",
        "sql_query": "SELECT T2.Name ,  COUNT(*) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID GROUP BY T1.Musical_ID",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.Name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "actor",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "musical",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Musical_ID",
                            "T2.Musical_ID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.Musical_ID"
            }
        },
        "sql_ans": [
            [
                "The Phantom of the Opera",
                2
            ],
            [
                "Les Mis\u00e9rables",
                2
            ],
            [
                "West Side Story",
                1
            ],
            [
                "The Book of Mormon",
                4
            ]
        ],
        "cypher_query": "MATCH (T1:actor)-[]-(T2:musical)\nWITH count(T1.Musical_ID) AS count, T2.Name AS Name\nRETURN Name",
        "cypher_ans": [
            [
                "The Phantom of the Opera"
            ],
            [
                "Les Mis\u00e9rables"
            ],
            [
                "West Side Story"
            ],
            [
                "The Book of Mormon"
            ]
        ]
    },
    {
        "db_id": "musical",
        "question": "Show different nominees and the number of musicals they have been nominated.",
        "sql_query": "SELECT Nominee ,  COUNT(*) FROM musical GROUP BY Nominee",
        "parsed_sql": {
            "select": [
                {
                    "value": "Nominee"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": "musical",
            "groupby": {
                "value": "Nominee"
            }
        },
        "sql_ans": [
            [
                "Bob Fosse",
                5
            ],
            [
                "Cleavant Derricks",
                2
            ]
        ],
        "cypher_query": "MATCH (m:musical)\nWITH count(m.Nominee) AS count, m.Nominee AS Nominee\nRETURN Nominee",
        "cypher_ans": [
            [
                "Bob Fosse"
            ],
            [
                "Cleavant Derricks"
            ]
        ]
    },
    {
        "db_id": "musical",
        "question": "How many musicals has each nominee been nominated for?",
        "sql_query": "SELECT Nominee ,  COUNT(*) FROM musical GROUP BY Nominee",
        "parsed_sql": {
            "select": [
                {
                    "value": "Nominee"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": "musical",
            "groupby": {
                "value": "Nominee"
            }
        },
        "sql_ans": [
            [
                "Bob Fosse",
                5
            ],
            [
                "Cleavant Derricks",
                2
            ]
        ],
        "cypher_query": "MATCH (m:musical)\nWITH count(m.Nominee) AS count, m.Nominee AS Nominee\nRETURN Nominee",
        "cypher_ans": [
            [
                "Bob Fosse"
            ],
            [
                "Cleavant Derricks"
            ]
        ]
    },
    {
        "db_id": "musical",
        "question": "List the name of musicals that do not have actors.",
        "sql_query": "SELECT Name FROM musical WHERE Musical_ID NOT IN (SELECT Musical_ID FROM actor)",
        "parsed_sql": {
            "select": {
                "value": "Name"
            },
            "from": "musical",
            "where": {
                "nin": [
                    "Musical_ID",
                    {
                        "select": {
                            "value": "Musical_ID"
                        },
                        "from": "actor"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Wicked"
            ],
            [
                "Rent"
            ],
            [
                "Chicago"
            ]
        ],
        "cypher_query": "MATCH (m:musical) MATCH (a:actor)\nWHERE NOT m.Musical_ID in a.Musical_ID\nRETURN m.Name",
        "cypher_ans": [
            [
                "The Phantom of the Opera"
            ],
            [
                "Les Mis\u00e9rables"
            ],
            [
                "Wicked"
            ],
            [
                "West Side Story"
            ],
            [
                "Rent"
            ],
            [
                "The Book of Mormon"
            ],
            [
                "Chicago"
            ]
        ]
    },
    {
        "db_id": "musical",
        "question": "What are the names of musicals who have no actors?",
        "sql_query": "SELECT Name FROM musical WHERE Musical_ID NOT IN (SELECT Musical_ID FROM actor)",
        "parsed_sql": {
            "select": {
                "value": "Name"
            },
            "from": "musical",
            "where": {
                "nin": [
                    "Musical_ID",
                    {
                        "select": {
                            "value": "Musical_ID"
                        },
                        "from": "actor"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Wicked"
            ],
            [
                "Rent"
            ],
            [
                "Chicago"
            ]
        ],
        "cypher_query": "MATCH (m:musical) MATCH (a:actor)\nWHERE NOT m.Musical_ID in a.Musical_ID\nRETURN m.Name",
        "cypher_ans": [
            [
                "The Phantom of the Opera"
            ],
            [
                "Les Mis\u00e9rables"
            ],
            [
                "Wicked"
            ],
            [
                "West Side Story"
            ],
            [
                "Rent"
            ],
            [
                "The Book of Mormon"
            ],
            [
                "Chicago"
            ]
        ]
    }
][
    {
        "db_id": "musical",
        "question": "Show names of musicals and the number of actors who have appeared in the musicals.",
        "sql_query": "SELECT T2.Name ,  COUNT(*) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID GROUP BY T1.Musical_ID",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.Name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "actor",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "musical",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Musical_ID",
                            "T2.Musical_ID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.Musical_ID"
            }
        },
        "sql_ans": [
            [
                "The Phantom of the Opera",
                2
            ],
            [
                "Les Mis\u00e9rables",
                2
            ],
            [
                "West Side Story",
                1
            ],
            [
                "The Book of Mormon",
                4
            ]
        ],
        "cypher_query": "MATCH (T1:actor)-[]-(T2:musical)\nWITH T2.Name AS Name, count(T1.Musical_ID) AS count\nRETURN Name",
        "cypher_ans": [
            [
                "The Phantom of the Opera"
            ],
            [
                "Les Mis\u00e9rables"
            ],
            [
                "West Side Story"
            ],
            [
                "The Book of Mormon"
            ]
        ]
    },
    {
        "db_id": "musical",
        "question": "How many actors have appeared in each musical?",
        "sql_query": "SELECT T2.Name ,  COUNT(*) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID GROUP BY T1.Musical_ID",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.Name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "actor",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "musical",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Musical_ID",
                            "T2.Musical_ID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.Musical_ID"
            }
        },
        "sql_ans": [
            [
                "The Phantom of the Opera",
                2
            ],
            [
                "Les Mis\u00e9rables",
                2
            ],
            [
                "West Side Story",
                1
            ],
            [
                "The Book of Mormon",
                4
            ]
        ],
        "cypher_query": "MATCH (T1:actor)-[]-(T2:musical)\nWITH T2.Name AS Name, count(T1.Musical_ID) AS count\nRETURN Name",
        "cypher_ans": [
            [
                "The Phantom of the Opera"
            ],
            [
                "Les Mis\u00e9rables"
            ],
            [
                "West Side Story"
            ],
            [
                "The Book of Mormon"
            ]
        ]
    },
    {
        "db_id": "musical",
        "question": "Show different nominees and the number of musicals they have been nominated.",
        "sql_query": "SELECT Nominee ,  COUNT(*) FROM musical GROUP BY Nominee",
        "parsed_sql": {
            "select": [
                {
                    "value": "Nominee"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": "musical",
            "groupby": {
                "value": "Nominee"
            }
        },
        "sql_ans": [
            [
                "Bob Fosse",
                5
            ],
            [
                "Cleavant Derricks",
                2
            ]
        ],
        "cypher_query": "MATCH (m:musical)\nWITH m.Nominee AS Nominee, count(m.Nominee) AS count\nRETURN Nominee",
        "cypher_ans": [
            [
                "Bob Fosse"
            ],
            [
                "Cleavant Derricks"
            ]
        ]
    },
    {
        "db_id": "musical",
        "question": "How many musicals has each nominee been nominated for?",
        "sql_query": "SELECT Nominee ,  COUNT(*) FROM musical GROUP BY Nominee",
        "parsed_sql": {
            "select": [
                {
                    "value": "Nominee"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": "musical",
            "groupby": {
                "value": "Nominee"
            }
        },
        "sql_ans": [
            [
                "Bob Fosse",
                5
            ],
            [
                "Cleavant Derricks",
                2
            ]
        ],
        "cypher_query": "MATCH (m:musical)\nWITH m.Nominee AS Nominee, count(m.Nominee) AS count\nRETURN Nominee",
        "cypher_ans": [
            [
                "Bob Fosse"
            ],
            [
                "Cleavant Derricks"
            ]
        ]
    },
    {
        "db_id": "musical",
        "question": "List the name of musicals that do not have actors.",
        "sql_query": "SELECT Name FROM musical WHERE Musical_ID NOT IN (SELECT Musical_ID FROM actor)",
        "parsed_sql": {
            "select": {
                "value": "Name"
            },
            "from": "musical",
            "where": {
                "nin": [
                    "Musical_ID",
                    {
                        "select": {
                            "value": "Musical_ID"
                        },
                        "from": "actor"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Wicked"
            ],
            [
                "Rent"
            ],
            [
                "Chicago"
            ]
        ],
        "cypher_query": "MATCH (m:musical) MATCH (a:actor)\nWHERE NOT m.Musical_ID in a.Musical_ID\nRETURN m.Name",
        "cypher_ans": [
            [
                "The Phantom of the Opera"
            ],
            [
                "Les Mis\u00e9rables"
            ],
            [
                "Wicked"
            ],
            [
                "West Side Story"
            ],
            [
                "Rent"
            ],
            [
                "The Book of Mormon"
            ],
            [
                "Chicago"
            ]
        ]
    },
    {
        "db_id": "musical",
        "question": "What are the names of musicals who have no actors?",
        "sql_query": "SELECT Name FROM musical WHERE Musical_ID NOT IN (SELECT Musical_ID FROM actor)",
        "parsed_sql": {
            "select": {
                "value": "Name"
            },
            "from": "musical",
            "where": {
                "nin": [
                    "Musical_ID",
                    {
                        "select": {
                            "value": "Musical_ID"
                        },
                        "from": "actor"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Wicked"
            ],
            [
                "Rent"
            ],
            [
                "Chicago"
            ]
        ],
        "cypher_query": "MATCH (m:musical) MATCH (a:actor)\nWHERE NOT m.Musical_ID in a.Musical_ID\nRETURN m.Name",
        "cypher_ans": [
            [
                "The Phantom of the Opera"
            ],
            [
                "Les Mis\u00e9rables"
            ],
            [
                "Wicked"
            ],
            [
                "West Side Story"
            ],
            [
                "Rent"
            ],
            [
                "The Book of Mormon"
            ],
            [
                "Chicago"
            ]
        ]
    }
][
    {
        "db_id": "musical",
        "question": "Show names of musicals and the number of actors who have appeared in the musicals.",
        "sql_query": "SELECT T2.Name ,  COUNT(*) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID GROUP BY T1.Musical_ID",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.Name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "actor",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "musical",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Musical_ID",
                            "T2.Musical_ID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.Musical_ID"
            }
        },
        "sql_ans": [
            [
                "The Phantom of the Opera",
                2
            ],
            [
                "Les Mis\u00e9rables",
                2
            ],
            [
                "West Side Story",
                1
            ],
            [
                "The Book of Mormon",
                4
            ]
        ],
        "cypher_query": "MATCH (T1:actor)-[]-(T2:musical)\nWITH count(T1.Musical_ID) AS count, T2.Name AS Name\nRETURN Name",
        "cypher_ans": [
            [
                "The Phantom of the Opera"
            ],
            [
                "Les Mis\u00e9rables"
            ],
            [
                "West Side Story"
            ],
            [
                "The Book of Mormon"
            ]
        ]
    },
    {
        "db_id": "musical",
        "question": "How many actors have appeared in each musical?",
        "sql_query": "SELECT T2.Name ,  COUNT(*) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID GROUP BY T1.Musical_ID",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.Name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "actor",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "musical",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Musical_ID",
                            "T2.Musical_ID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.Musical_ID"
            }
        },
        "sql_ans": [
            [
                "The Phantom of the Opera",
                2
            ],
            [
                "Les Mis\u00e9rables",
                2
            ],
            [
                "West Side Story",
                1
            ],
            [
                "The Book of Mormon",
                4
            ]
        ],
        "cypher_query": "MATCH (T1:actor)-[]-(T2:musical)\nWITH count(T1.Musical_ID) AS count, T2.Name AS Name\nRETURN Name",
        "cypher_ans": [
            [
                "The Phantom of the Opera"
            ],
            [
                "Les Mis\u00e9rables"
            ],
            [
                "West Side Story"
            ],
            [
                "The Book of Mormon"
            ]
        ]
    },
    {
        "db_id": "musical",
        "question": "Show different nominees and the number of musicals they have been nominated.",
        "sql_query": "SELECT Nominee ,  COUNT(*) FROM musical GROUP BY Nominee",
        "parsed_sql": {
            "select": [
                {
                    "value": "Nominee"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": "musical",
            "groupby": {
                "value": "Nominee"
            }
        },
        "sql_ans": [
            [
                "Bob Fosse",
                5
            ],
            [
                "Cleavant Derricks",
                2
            ]
        ],
        "cypher_query": "MATCH (m:musical)\nWITH count(m.Nominee) AS count, m.Nominee AS Nominee\nRETURN Nominee",
        "cypher_ans": [
            [
                "Bob Fosse"
            ],
            [
                "Cleavant Derricks"
            ]
        ]
    },
    {
        "db_id": "musical",
        "question": "How many musicals has each nominee been nominated for?",
        "sql_query": "SELECT Nominee ,  COUNT(*) FROM musical GROUP BY Nominee",
        "parsed_sql": {
            "select": [
                {
                    "value": "Nominee"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": "musical",
            "groupby": {
                "value": "Nominee"
            }
        },
        "sql_ans": [
            [
                "Bob Fosse",
                5
            ],
            [
                "Cleavant Derricks",
                2
            ]
        ],
        "cypher_query": "MATCH (m:musical)\nWITH count(m.Nominee) AS count, m.Nominee AS Nominee\nRETURN Nominee",
        "cypher_ans": [
            [
                "Bob Fosse"
            ],
            [
                "Cleavant Derricks"
            ]
        ]
    }
][
    {
        "db_id": "musical",
        "question": "Show names of musicals and the number of actors who have appeared in the musicals.",
        "sql_query": "SELECT T2.Name ,  COUNT(*) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID GROUP BY T1.Musical_ID",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.Name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "actor",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "musical",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Musical_ID",
                            "T2.Musical_ID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.Musical_ID"
            }
        },
        "sql_ans": [
            [
                "The Phantom of the Opera",
                2
            ],
            [
                "Les Mis\u00e9rables",
                2
            ],
            [
                "West Side Story",
                1
            ],
            [
                "The Book of Mormon",
                4
            ]
        ],
        "cypher_query": "MATCH (T1:actor)-[]-(T2:musical)\nWITH T2.Name AS Name, count(T1.Musical_ID) AS count\nRETURN Name",
        "cypher_ans": [
            [
                "The Phantom of the Opera"
            ],
            [
                "Les Mis\u00e9rables"
            ],
            [
                "West Side Story"
            ],
            [
                "The Book of Mormon"
            ]
        ]
    },
    {
        "db_id": "musical",
        "question": "How many actors have appeared in each musical?",
        "sql_query": "SELECT T2.Name ,  COUNT(*) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID GROUP BY T1.Musical_ID",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.Name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "actor",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "musical",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Musical_ID",
                            "T2.Musical_ID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.Musical_ID"
            }
        },
        "sql_ans": [
            [
                "The Phantom of the Opera",
                2
            ],
            [
                "Les Mis\u00e9rables",
                2
            ],
            [
                "West Side Story",
                1
            ],
            [
                "The Book of Mormon",
                4
            ]
        ],
        "cypher_query": "MATCH (T1:actor)-[]-(T2:musical)\nWITH T2.Name AS Name, count(T1.Musical_ID) AS count\nRETURN Name",
        "cypher_ans": [
            [
                "The Phantom of the Opera"
            ],
            [
                "Les Mis\u00e9rables"
            ],
            [
                "West Side Story"
            ],
            [
                "The Book of Mormon"
            ]
        ]
    },
    {
        "db_id": "musical",
        "question": "Show different nominees and the number of musicals they have been nominated.",
        "sql_query": "SELECT Nominee ,  COUNT(*) FROM musical GROUP BY Nominee",
        "parsed_sql": {
            "select": [
                {
                    "value": "Nominee"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": "musical",
            "groupby": {
                "value": "Nominee"
            }
        },
        "sql_ans": [
            [
                "Bob Fosse",
                5
            ],
            [
                "Cleavant Derricks",
                2
            ]
        ],
        "cypher_query": "MATCH (m:musical)\nWITH m.Nominee AS Nominee, count(m.Nominee) AS count\nRETURN Nominee",
        "cypher_ans": [
            [
                "Bob Fosse"
            ],
            [
                "Cleavant Derricks"
            ]
        ]
    },
    {
        "db_id": "musical",
        "question": "How many musicals has each nominee been nominated for?",
        "sql_query": "SELECT Nominee ,  COUNT(*) FROM musical GROUP BY Nominee",
        "parsed_sql": {
            "select": [
                {
                    "value": "Nominee"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": "musical",
            "groupby": {
                "value": "Nominee"
            }
        },
        "sql_ans": [
            [
                "Bob Fosse",
                5
            ],
            [
                "Cleavant Derricks",
                2
            ]
        ],
        "cypher_query": "MATCH (m:musical)\nWITH m.Nominee AS Nominee, count(m.Nominee) AS count\nRETURN Nominee",
        "cypher_ans": [
            [
                "Bob Fosse"
            ],
            [
                "Cleavant Derricks"
            ]
        ]
    }
][
    {
        "db_id": "musical",
        "question": "Show names of musicals and the number of actors who have appeared in the musicals.",
        "sql_query": "SELECT T2.Name ,  COUNT(*) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID GROUP BY T1.Musical_ID",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.Name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "actor",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "musical",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Musical_ID",
                            "T2.Musical_ID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.Musical_ID"
            }
        },
        "sql_ans": [
            [
                "The Phantom of the Opera",
                2
            ],
            [
                "Les Mis\u00e9rables",
                2
            ],
            [
                "West Side Story",
                1
            ],
            [
                "The Book of Mormon",
                4
            ]
        ],
        "cypher_query": "MATCH (T1:actor)-[]-(T2:musical)\nWITH count(T1.Musical_ID) AS count, T2.Name AS Name\nRETURN Name",
        "cypher_ans": [
            [
                "The Phantom of the Opera"
            ],
            [
                "Les Mis\u00e9rables"
            ],
            [
                "West Side Story"
            ],
            [
                "The Book of Mormon"
            ]
        ]
    },
    {
        "db_id": "musical",
        "question": "How many actors have appeared in each musical?",
        "sql_query": "SELECT T2.Name ,  COUNT(*) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID GROUP BY T1.Musical_ID",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.Name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "actor",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "musical",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Musical_ID",
                            "T2.Musical_ID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.Musical_ID"
            }
        },
        "sql_ans": [
            [
                "The Phantom of the Opera",
                2
            ],
            [
                "Les Mis\u00e9rables",
                2
            ],
            [
                "West Side Story",
                1
            ],
            [
                "The Book of Mormon",
                4
            ]
        ],
        "cypher_query": "MATCH (T1:actor)-[]-(T2:musical)\nWITH count(T1.Musical_ID) AS count, T2.Name AS Name\nRETURN Name",
        "cypher_ans": [
            [
                "The Phantom of the Opera"
            ],
            [
                "Les Mis\u00e9rables"
            ],
            [
                "West Side Story"
            ],
            [
                "The Book of Mormon"
            ]
        ]
    },
    {
        "db_id": "musical",
        "question": "Show different nominees and the number of musicals they have been nominated.",
        "sql_query": "SELECT Nominee ,  COUNT(*) FROM musical GROUP BY Nominee",
        "parsed_sql": {
            "select": [
                {
                    "value": "Nominee"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": "musical",
            "groupby": {
                "value": "Nominee"
            }
        },
        "sql_ans": [
            [
                "Bob Fosse",
                5
            ],
            [
                "Cleavant Derricks",
                2
            ]
        ],
        "cypher_query": "MATCH (m:musical)\nWITH count(m.Nominee) AS count, m.Nominee AS Nominee\nRETURN Nominee",
        "cypher_ans": [
            [
                "Bob Fosse"
            ],
            [
                "Cleavant Derricks"
            ]
        ]
    },
    {
        "db_id": "musical",
        "question": "How many musicals has each nominee been nominated for?",
        "sql_query": "SELECT Nominee ,  COUNT(*) FROM musical GROUP BY Nominee",
        "parsed_sql": {
            "select": [
                {
                    "value": "Nominee"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": "musical",
            "groupby": {
                "value": "Nominee"
            }
        },
        "sql_ans": [
            [
                "Bob Fosse",
                5
            ],
            [
                "Cleavant Derricks",
                2
            ]
        ],
        "cypher_query": "MATCH (m:musical)\nWITH count(m.Nominee) AS count, m.Nominee AS Nominee\nRETURN Nominee",
        "cypher_ans": [
            [
                "Bob Fosse"
            ],
            [
                "Cleavant Derricks"
            ]
        ]
    }
][
    {
        "db_id": "musical",
        "question": "Show names of musicals and the number of actors who have appeared in the musicals.",
        "sql_query": "SELECT T2.Name ,  COUNT(*) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID GROUP BY T1.Musical_ID",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.Name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "actor",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "musical",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Musical_ID",
                            "T2.Musical_ID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.Musical_ID"
            }
        },
        "sql_ans": [
            [
                "The Phantom of the Opera",
                2
            ],
            [
                "Les Mis\u00e9rables",
                2
            ],
            [
                "West Side Story",
                1
            ],
            [
                "The Book of Mormon",
                4
            ]
        ],
        "cypher_query": "MATCH (T1:actor)-[]-(T2:musical)\nWITH count(T1.Musical_ID) AS count, T2.Name AS Name\nRETURN Name,count(*)",
        "cypher_ans": [
            [
                "The Phantom of the Opera",
                1
            ],
            [
                "Les Mis\u00e9rables",
                1
            ],
            [
                "West Side Story",
                1
            ],
            [
                "The Book of Mormon",
                1
            ]
        ]
    },
    {
        "db_id": "musical",
        "question": "How many actors have appeared in each musical?",
        "sql_query": "SELECT T2.Name ,  COUNT(*) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID GROUP BY T1.Musical_ID",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.Name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "actor",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "musical",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Musical_ID",
                            "T2.Musical_ID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.Musical_ID"
            }
        },
        "sql_ans": [
            [
                "The Phantom of the Opera",
                2
            ],
            [
                "Les Mis\u00e9rables",
                2
            ],
            [
                "West Side Story",
                1
            ],
            [
                "The Book of Mormon",
                4
            ]
        ],
        "cypher_query": "MATCH (T1:actor)-[]-(T2:musical)\nWITH count(T1.Musical_ID) AS count, T2.Name AS Name\nRETURN Name,count(*)",
        "cypher_ans": [
            [
                "The Phantom of the Opera",
                1
            ],
            [
                "Les Mis\u00e9rables",
                1
            ],
            [
                "West Side Story",
                1
            ],
            [
                "The Book of Mormon",
                1
            ]
        ]
    },
    {
        "db_id": "musical",
        "question": "Show different nominees and the number of musicals they have been nominated.",
        "sql_query": "SELECT Nominee ,  COUNT(*) FROM musical GROUP BY Nominee",
        "parsed_sql": {
            "select": [
                {
                    "value": "Nominee"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": "musical",
            "groupby": {
                "value": "Nominee"
            }
        },
        "sql_ans": [
            [
                "Bob Fosse",
                5
            ],
            [
                "Cleavant Derricks",
                2
            ]
        ],
        "cypher_query": "MATCH (m:musical)\nWITH count(m.Nominee) AS count, m.Nominee AS Nominee\nRETURN Nominee,count(*)",
        "cypher_ans": [
            [
                "Bob Fosse",
                1
            ],
            [
                "Cleavant Derricks",
                1
            ]
        ]
    },
    {
        "db_id": "musical",
        "question": "How many musicals has each nominee been nominated for?",
        "sql_query": "SELECT Nominee ,  COUNT(*) FROM musical GROUP BY Nominee",
        "parsed_sql": {
            "select": [
                {
                    "value": "Nominee"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": "musical",
            "groupby": {
                "value": "Nominee"
            }
        },
        "sql_ans": [
            [
                "Bob Fosse",
                5
            ],
            [
                "Cleavant Derricks",
                2
            ]
        ],
        "cypher_query": "MATCH (m:musical)\nWITH count(m.Nominee) AS count, m.Nominee AS Nominee\nRETURN Nominee,count(*)",
        "cypher_ans": [
            [
                "Bob Fosse",
                1
            ],
            [
                "Cleavant Derricks",
                1
            ]
        ]
    }
][][][][
    {
        "db_id": "hospital_1",
        "question": "what is the name and position of the head whose department has least number of employees?",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH T2.Name AS Name, T2.Position AS Position, count(T2.departmentID) AS count\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk",
                "Surgical Attending Physician"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name and position of the head of the department with the least employees.",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH T2.Name AS Name, T2.Position AS Position, count(T2.departmentID) AS count\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk",
                "Surgical Attending Physician"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the patient who made the most recent appointment?",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the patient who made the appointment with the most recent start date.",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the nurse has the most appointments?",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH T1.Name AS Name, count(T1.EmployeeID) AS count\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the nurse who has the largest number of appointments.",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH T1.Name AS Name, count(T1.EmployeeID) AS count\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms located on each block floor.",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockFloor AS BlockFloor, count(T1.BlockFloor) AS count\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms does each block floor have?",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockFloor AS BlockFloor, count(T1.BlockFloor) AS count\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms for different block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockCode) AS count, T1.BlockCode AS BlockCode\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms are located for each block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockCode) AS count, T1.BlockCode AS BlockCode\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of medications prescribed for each brand.",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH count(T1.Brand) AS count, T1.Name AS Name\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many medications are prescribed for each brand?",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH count(T1.Brand) AS count, T1.Name AS Name\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians whose position title contains the word 'senior'.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of the physicians who have 'senior' in their titles.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of patients who are not using the medication of Procrastin-X.",
        "sql_query": "SELECT count(*) FROM patient WHERE SSN NOT IN ( SELECT T1.patient FROM Prescribes AS T1 JOIN Medication AS T2 ON T1.Medication  =  T2.Code WHERE T2.name  =  'Procrastin-X' )",
        "parsed_sql": {
            "select": {
                "value": {
                    "count": "*"
                }
            },
            "from": "patient",
            "where": {
                "nin": [
                    "SSN",
                    {
                        "select": {
                            "value": "T1.patient"
                        },
                        "from": [
                            {
                                "value": "Prescribes",
                                "name": "T1",
                                "is_table": true
                            },
                            {
                                "join": {
                                    "name": "T2",
                                    "value": "Medication",
                                    "is_table": true
                                },
                                "on": {
                                    "eq": [
                                        "T1.Medication",
                                        "T2.Code"
                                    ]
                                }
                            }
                        ],
                        "where": {
                            "eq": [
                                "T2.name",
                                {
                                    "literal": "Procrastin-X"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "sql_ans": [
            [
                3
            ]
        ],
        "cypher_query": "MATCH (p:Patient)\nWHERE NOT (p:Patient)-[]-(:Prescribes)-[]-(:Medication)\nRETURN count(*)",
        "cypher_ans": [
            [
                2
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many patients are not using Procrastin-X as medication?",
        "sql_query": "SELECT count(*) FROM patient WHERE SSN NOT IN ( SELECT T1.patient FROM Prescribes AS T1 JOIN Medication AS T2 ON T1.Medication  =  T2.Code WHERE T2.name  =  'Procrastin-X' )",
        "parsed_sql": {
            "select": {
                "value": {
                    "count": "*"
                }
            },
            "from": "patient",
            "where": {
                "nin": [
                    "SSN",
                    {
                        "select": {
                            "value": "T1.patient"
                        },
                        "from": [
                            {
                                "value": "Prescribes",
                                "name": "T1",
                                "is_table": true
                            },
                            {
                                "join": {
                                    "name": "T2",
                                    "value": "Medication",
                                    "is_table": true
                                },
                                "on": {
                                    "eq": [
                                        "T1.Medication",
                                        "T2.Code"
                                    ]
                                }
                            }
                        ],
                        "where": {
                            "eq": [
                                "T2.name",
                                {
                                    "literal": "Procrastin-X"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "sql_ans": [
            [
                3
            ]
        ],
        "cypher_query": "MATCH (p:Patient)\nWHERE NOT (p:Patient)-[]-(:Prescribes)-[]-(:Medication)\nRETURN count(*)",
        "cypher_ans": [
            [
                2
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "what is the name and position of the head whose department has least number of employees?",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH T2.Position AS Position, T2.Name AS Name, count(T2.departmentID) AS count\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Bob Kelso",
                "Head Chief of Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name and position of the head of the department with the least employees.",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH T2.Position AS Position, T2.Name AS Name, count(T2.departmentID) AS count\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Bob Kelso",
                "Head Chief of Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the patient who made the most recent appointment?",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the patient who made the appointment with the most recent start date.",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the nurse has the most appointments?",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH count(T1.EmployeeID) AS count, T1.Name AS Name\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the nurse who has the largest number of appointments.",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH count(T1.EmployeeID) AS count, T1.Name AS Name\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms located on each block floor.",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockFloor) AS count, T1.BlockFloor AS BlockFloor\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms does each block floor have?",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockFloor) AS count, T1.BlockFloor AS BlockFloor\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms for different block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockCode) AS count, T1.BlockCode AS BlockCode\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms are located for each block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockCode) AS count, T1.BlockCode AS BlockCode\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of medications prescribed for each brand.",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH count(T1.Brand) AS count, T1.Name AS Name\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many medications are prescribed for each brand?",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH count(T1.Brand) AS count, T1.Name AS Name\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians whose position title contains the word 'senior'.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of the physicians who have 'senior' in their titles.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the physician who was trained in the most expensive procedure?",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which physician was trained in the procedure that costs the most.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of patients who are not using the medication of Procrastin-X.",
        "sql_query": "SELECT count(*) FROM patient WHERE SSN NOT IN ( SELECT T1.patient FROM Prescribes AS T1 JOIN Medication AS T2 ON T1.Medication  =  T2.Code WHERE T2.name  =  'Procrastin-X' )",
        "parsed_sql": {
            "select": {
                "value": {
                    "count": "*"
                }
            },
            "from": "patient",
            "where": {
                "nin": [
                    "SSN",
                    {
                        "select": {
                            "value": "T1.patient"
                        },
                        "from": [
                            {
                                "value": "Prescribes",
                                "name": "T1",
                                "is_table": true
                            },
                            {
                                "join": {
                                    "name": "T2",
                                    "value": "Medication",
                                    "is_table": true
                                },
                                "on": {
                                    "eq": [
                                        "T1.Medication",
                                        "T2.Code"
                                    ]
                                }
                            }
                        ],
                        "where": {
                            "eq": [
                                "T2.name",
                                {
                                    "literal": "Procrastin-X"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "sql_ans": [
            [
                3
            ]
        ],
        "cypher_query": "MATCH (p:Patient)\nWHERE NOT (p:Patient)-[]-(:Prescribes)-[]-(:Medication)\nRETURN count(*)",
        "cypher_ans": [
            [
                2
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many patients are not using Procrastin-X as medication?",
        "sql_query": "SELECT count(*) FROM patient WHERE SSN NOT IN ( SELECT T1.patient FROM Prescribes AS T1 JOIN Medication AS T2 ON T1.Medication  =  T2.Code WHERE T2.name  =  'Procrastin-X' )",
        "parsed_sql": {
            "select": {
                "value": {
                    "count": "*"
                }
            },
            "from": "patient",
            "where": {
                "nin": [
                    "SSN",
                    {
                        "select": {
                            "value": "T1.patient"
                        },
                        "from": [
                            {
                                "value": "Prescribes",
                                "name": "T1",
                                "is_table": true
                            },
                            {
                                "join": {
                                    "name": "T2",
                                    "value": "Medication",
                                    "is_table": true
                                },
                                "on": {
                                    "eq": [
                                        "T1.Medication",
                                        "T2.Code"
                                    ]
                                }
                            }
                        ],
                        "where": {
                            "eq": [
                                "T2.name",
                                {
                                    "literal": "Procrastin-X"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "sql_ans": [
            [
                3
            ]
        ],
        "cypher_query": "MATCH (p:Patient)\nWHERE NOT (p:Patient)-[]-(:Prescribes)-[]-(:Medication)\nRETURN count(*)",
        "cypher_ans": [
            [
                2
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "what is the name and position of the head whose department has least number of employees?",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH T2.Position AS Position, count(T2.departmentID) AS count, T2.Name AS Name\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Bob Kelso",
                "Head Chief of Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name and position of the head of the department with the least employees.",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH T2.Position AS Position, count(T2.departmentID) AS count, T2.Name AS Name\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Bob Kelso",
                "Head Chief of Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the patient who made the most recent appointment?",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the patient who made the appointment with the most recent start date.",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the nurse has the most appointments?",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH count(T1.EmployeeID) AS count, T1.Name AS Name\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the nurse who has the largest number of appointments.",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH count(T1.EmployeeID) AS count, T1.Name AS Name\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms located on each block floor.",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockFloor) AS count, T1.BlockFloor AS BlockFloor\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms does each block floor have?",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockFloor) AS count, T1.BlockFloor AS BlockFloor\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms for different block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockCode AS BlockCode, count(T1.BlockCode) AS count\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms are located for each block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockCode AS BlockCode, count(T1.BlockCode) AS count\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of medications prescribed for each brand.",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH count(T1.Brand) AS count, T1.Name AS Name\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many medications are prescribed for each brand?",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH count(T1.Brand) AS count, T1.Name AS Name\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians whose position title contains the word 'senior'.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of the physicians who have 'senior' in their titles.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the physician who was trained in the most expensive procedure?",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which physician was trained in the procedure that costs the most.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of patients who are not using the medication of Procrastin-X.",
        "sql_query": "SELECT count(*) FROM patient WHERE SSN NOT IN ( SELECT T1.patient FROM Prescribes AS T1 JOIN Medication AS T2 ON T1.Medication  =  T2.Code WHERE T2.name  =  'Procrastin-X' )",
        "parsed_sql": {
            "select": {
                "value": {
                    "count": "*"
                }
            },
            "from": "patient",
            "where": {
                "nin": [
                    "SSN",
                    {
                        "select": {
                            "value": "T1.patient"
                        },
                        "from": [
                            {
                                "value": "Prescribes",
                                "name": "T1",
                                "is_table": true
                            },
                            {
                                "join": {
                                    "name": "T2",
                                    "value": "Medication",
                                    "is_table": true
                                },
                                "on": {
                                    "eq": [
                                        "T1.Medication",
                                        "T2.Code"
                                    ]
                                }
                            }
                        ],
                        "where": {
                            "eq": [
                                "T2.name",
                                {
                                    "literal": "Procrastin-X"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "sql_ans": [
            [
                3
            ]
        ],
        "cypher_query": "MATCH (p:Patient)\nWHERE NOT (p:Patient)-[]-(:Prescribes)-[]-(:Medication)\nRETURN count(*)",
        "cypher_ans": [
            [
                2
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many patients are not using Procrastin-X as medication?",
        "sql_query": "SELECT count(*) FROM patient WHERE SSN NOT IN ( SELECT T1.patient FROM Prescribes AS T1 JOIN Medication AS T2 ON T1.Medication  =  T2.Code WHERE T2.name  =  'Procrastin-X' )",
        "parsed_sql": {
            "select": {
                "value": {
                    "count": "*"
                }
            },
            "from": "patient",
            "where": {
                "nin": [
                    "SSN",
                    {
                        "select": {
                            "value": "T1.patient"
                        },
                        "from": [
                            {
                                "value": "Prescribes",
                                "name": "T1",
                                "is_table": true
                            },
                            {
                                "join": {
                                    "name": "T2",
                                    "value": "Medication",
                                    "is_table": true
                                },
                                "on": {
                                    "eq": [
                                        "T1.Medication",
                                        "T2.Code"
                                    ]
                                }
                            }
                        ],
                        "where": {
                            "eq": [
                                "T2.name",
                                {
                                    "literal": "Procrastin-X"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "sql_ans": [
            [
                3
            ]
        ],
        "cypher_query": "MATCH (p:Patient)\nWHERE NOT (p:Patient)-[]-(:Prescribes)-[]-(:Medication)\nRETURN count(*)",
        "cypher_ans": [
            [
                2
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "what is the name and position of the head whose department has least number of employees?",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH T2.Name AS Name, T2.Position AS Position, count(T2.departmentID) AS count\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Bob Kelso",
                "Head Chief of Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name and position of the head of the department with the least employees.",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH T2.Name AS Name, T2.Position AS Position, count(T2.departmentID) AS count\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Bob Kelso",
                "Head Chief of Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the patient who made the most recent appointment?",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the patient who made the appointment with the most recent start date.",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the nurse has the most appointments?",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH T1.Name AS Name, count(T1.EmployeeID) AS count\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the nurse who has the largest number of appointments.",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH T1.Name AS Name, count(T1.EmployeeID) AS count\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms located on each block floor.",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockFloor) AS count, T1.BlockFloor AS BlockFloor\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms does each block floor have?",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockFloor) AS count, T1.BlockFloor AS BlockFloor\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms for different block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockCode) AS count, T1.BlockCode AS BlockCode\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms are located for each block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockCode) AS count, T1.BlockCode AS BlockCode\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of medications prescribed for each brand.",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH T1.Name AS Name, count(T1.Brand) AS count\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many medications are prescribed for each brand?",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH T1.Name AS Name, count(T1.Brand) AS count\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians whose position title contains the word 'senior'.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of the physicians who have 'senior' in their titles.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the physician who was trained in the most expensive procedure?",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which physician was trained in the procedure that costs the most.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of patients who are not using the medication of Procrastin-X.",
        "sql_query": "SELECT count(*) FROM patient WHERE SSN NOT IN ( SELECT T1.patient FROM Prescribes AS T1 JOIN Medication AS T2 ON T1.Medication  =  T2.Code WHERE T2.name  =  'Procrastin-X' )",
        "parsed_sql": {
            "select": {
                "value": {
                    "count": "*"
                }
            },
            "from": "patient",
            "where": {
                "nin": [
                    "SSN",
                    {
                        "select": {
                            "value": "T1.patient"
                        },
                        "from": [
                            {
                                "value": "Prescribes",
                                "name": "T1",
                                "is_table": true
                            },
                            {
                                "join": {
                                    "name": "T2",
                                    "value": "Medication",
                                    "is_table": true
                                },
                                "on": {
                                    "eq": [
                                        "T1.Medication",
                                        "T2.Code"
                                    ]
                                }
                            }
                        ],
                        "where": {
                            "eq": [
                                "T2.name",
                                {
                                    "literal": "Procrastin-X"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "sql_ans": [
            [
                3
            ]
        ],
        "cypher_query": "MATCH (p:Patient)\nWHERE NOT (p:Patient)-[]-(:Prescribes)-[]-(:Medication)\nRETURN count(*)",
        "cypher_ans": [
            [
                2
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many patients are not using Procrastin-X as medication?",
        "sql_query": "SELECT count(*) FROM patient WHERE SSN NOT IN ( SELECT T1.patient FROM Prescribes AS T1 JOIN Medication AS T2 ON T1.Medication  =  T2.Code WHERE T2.name  =  'Procrastin-X' )",
        "parsed_sql": {
            "select": {
                "value": {
                    "count": "*"
                }
            },
            "from": "patient",
            "where": {
                "nin": [
                    "SSN",
                    {
                        "select": {
                            "value": "T1.patient"
                        },
                        "from": [
                            {
                                "value": "Prescribes",
                                "name": "T1",
                                "is_table": true
                            },
                            {
                                "join": {
                                    "name": "T2",
                                    "value": "Medication",
                                    "is_table": true
                                },
                                "on": {
                                    "eq": [
                                        "T1.Medication",
                                        "T2.Code"
                                    ]
                                }
                            }
                        ],
                        "where": {
                            "eq": [
                                "T2.name",
                                {
                                    "literal": "Procrastin-X"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "sql_ans": [
            [
                3
            ]
        ],
        "cypher_query": "MATCH (p:Patient)\nWHERE NOT (p:Patient)-[]-(:Prescribes)-[]-(:Medication)\nRETURN count(*)",
        "cypher_ans": [
            [
                2
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "what is the name and position of the head whose department has least number of employees?",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH T2.Position AS Position, T2.Name AS Name, count(T2.departmentID) AS count\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Bob Kelso",
                "Head Chief of Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name and position of the head of the department with the least employees.",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH T2.Position AS Position, T2.Name AS Name, count(T2.departmentID) AS count\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Bob Kelso",
                "Head Chief of Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the patient who made the most recent appointment?",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the patient who made the appointment with the most recent start date.",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the nurse has the most appointments?",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH T1.Name AS Name, count(T1.EmployeeID) AS count\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the nurse who has the largest number of appointments.",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH T1.Name AS Name, count(T1.EmployeeID) AS count\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms located on each block floor.",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockFloor AS BlockFloor, count(T1.BlockFloor) AS count\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms does each block floor have?",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockFloor AS BlockFloor, count(T1.BlockFloor) AS count\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms for different block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockCode AS BlockCode, count(T1.BlockCode) AS count\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms are located for each block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockCode AS BlockCode, count(T1.BlockCode) AS count\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of medications prescribed for each brand.",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH count(T1.Brand) AS count, T1.Name AS Name\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many medications are prescribed for each brand?",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH count(T1.Brand) AS count, T1.Name AS Name\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians whose position title contains the word 'senior'.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of the physicians who have 'senior' in their titles.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the physician who was trained in the most expensive procedure?",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which physician was trained in the procedure that costs the most.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of patients who are not using the medication of Procrastin-X.",
        "sql_query": "SELECT count(*) FROM patient WHERE SSN NOT IN ( SELECT T1.patient FROM Prescribes AS T1 JOIN Medication AS T2 ON T1.Medication  =  T2.Code WHERE T2.name  =  'Procrastin-X' )",
        "parsed_sql": {
            "select": {
                "value": {
                    "count": "*"
                }
            },
            "from": "patient",
            "where": {
                "nin": [
                    "SSN",
                    {
                        "select": {
                            "value": "T1.patient"
                        },
                        "from": [
                            {
                                "value": "Prescribes",
                                "name": "T1",
                                "is_table": true
                            },
                            {
                                "join": {
                                    "name": "T2",
                                    "value": "Medication",
                                    "is_table": true
                                },
                                "on": {
                                    "eq": [
                                        "T1.Medication",
                                        "T2.Code"
                                    ]
                                }
                            }
                        ],
                        "where": {
                            "eq": [
                                "T2.name",
                                {
                                    "literal": "Procrastin-X"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "sql_ans": [
            [
                3
            ]
        ],
        "cypher_query": "MATCH (p:Patient)\nWHERE NOT (p:Patient)-[]-(:Prescribes)-[]-(:Medication)\nRETURN count(*)",
        "cypher_ans": [
            [
                2
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many patients are not using Procrastin-X as medication?",
        "sql_query": "SELECT count(*) FROM patient WHERE SSN NOT IN ( SELECT T1.patient FROM Prescribes AS T1 JOIN Medication AS T2 ON T1.Medication  =  T2.Code WHERE T2.name  =  'Procrastin-X' )",
        "parsed_sql": {
            "select": {
                "value": {
                    "count": "*"
                }
            },
            "from": "patient",
            "where": {
                "nin": [
                    "SSN",
                    {
                        "select": {
                            "value": "T1.patient"
                        },
                        "from": [
                            {
                                "value": "Prescribes",
                                "name": "T1",
                                "is_table": true
                            },
                            {
                                "join": {
                                    "name": "T2",
                                    "value": "Medication",
                                    "is_table": true
                                },
                                "on": {
                                    "eq": [
                                        "T1.Medication",
                                        "T2.Code"
                                    ]
                                }
                            }
                        ],
                        "where": {
                            "eq": [
                                "T2.name",
                                {
                                    "literal": "Procrastin-X"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "sql_ans": [
            [
                3
            ]
        ],
        "cypher_query": "MATCH (p:Patient)\nWHERE NOT (p:Patient)-[]-(:Prescribes)-[]-(:Medication)\nRETURN count(*)",
        "cypher_ans": [
            [
                2
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "what is the name and position of the head whose department has least number of employees?",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH T2.Position AS Position, T2.Name AS Name, count(T2.departmentID) AS count\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Bob Kelso",
                "Head Chief of Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name and position of the head of the department with the least employees.",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH T2.Position AS Position, T2.Name AS Name, count(T2.departmentID) AS count\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Bob Kelso",
                "Head Chief of Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the patient who made the most recent appointment?",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the patient who made the appointment with the most recent start date.",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the nurse has the most appointments?",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH T1.Name AS Name, count(T1.EmployeeID) AS count\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the nurse who has the largest number of appointments.",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH T1.Name AS Name, count(T1.EmployeeID) AS count\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms located on each block floor.",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockFloor) AS count, T1.BlockFloor AS BlockFloor\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms does each block floor have?",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockFloor) AS count, T1.BlockFloor AS BlockFloor\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms for different block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockCode) AS count, T1.BlockCode AS BlockCode\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms are located for each block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockCode) AS count, T1.BlockCode AS BlockCode\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of medications prescribed for each brand.",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH count(T1.Brand) AS count, T1.Name AS Name\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many medications are prescribed for each brand?",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH count(T1.Brand) AS count, T1.Name AS Name\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians whose position title contains the word 'senior'.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of the physicians who have 'senior' in their titles.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the physician who was trained in the most expensive procedure?",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which physician was trained in the procedure that costs the most.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of patients who are not using the medication of Procrastin-X.",
        "sql_query": "SELECT count(*) FROM patient WHERE SSN NOT IN ( SELECT T1.patient FROM Prescribes AS T1 JOIN Medication AS T2 ON T1.Medication  =  T2.Code WHERE T2.name  =  'Procrastin-X' )",
        "parsed_sql": {
            "select": {
                "value": {
                    "count": "*"
                }
            },
            "from": "patient",
            "where": {
                "nin": [
                    "SSN",
                    {
                        "select": {
                            "value": "T1.patient"
                        },
                        "from": [
                            {
                                "value": "Prescribes",
                                "name": "T1",
                                "is_table": true
                            },
                            {
                                "join": {
                                    "name": "T2",
                                    "value": "Medication",
                                    "is_table": true
                                },
                                "on": {
                                    "eq": [
                                        "T1.Medication",
                                        "T2.Code"
                                    ]
                                }
                            }
                        ],
                        "where": {
                            "eq": [
                                "T2.name",
                                {
                                    "literal": "Procrastin-X"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "sql_ans": [
            [
                3
            ]
        ],
        "cypher_query": "MATCH (p:Patient)\nWHERE NOT (p:Patient)-[]-(:Prescribes)-[]-(:Medication)\nRETURN count(*)",
        "cypher_ans": [
            [
                2
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many patients are not using Procrastin-X as medication?",
        "sql_query": "SELECT count(*) FROM patient WHERE SSN NOT IN ( SELECT T1.patient FROM Prescribes AS T1 JOIN Medication AS T2 ON T1.Medication  =  T2.Code WHERE T2.name  =  'Procrastin-X' )",
        "parsed_sql": {
            "select": {
                "value": {
                    "count": "*"
                }
            },
            "from": "patient",
            "where": {
                "nin": [
                    "SSN",
                    {
                        "select": {
                            "value": "T1.patient"
                        },
                        "from": [
                            {
                                "value": "Prescribes",
                                "name": "T1",
                                "is_table": true
                            },
                            {
                                "join": {
                                    "name": "T2",
                                    "value": "Medication",
                                    "is_table": true
                                },
                                "on": {
                                    "eq": [
                                        "T1.Medication",
                                        "T2.Code"
                                    ]
                                }
                            }
                        ],
                        "where": {
                            "eq": [
                                "T2.name",
                                {
                                    "literal": "Procrastin-X"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "sql_ans": [
            [
                3
            ]
        ],
        "cypher_query": "MATCH (p:Patient)\nWHERE NOT (p:Patient)-[]-(:Prescribes)-[]-(:Medication)\nRETURN count(*)",
        "cypher_ans": [
            [
                2
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "what is the name and position of the head whose department has least number of employees?",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH count(T2.departmentID) AS count, T2.Position AS Position, T2.Name AS Name\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Bob Kelso",
                "Head Chief of Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name and position of the head of the department with the least employees.",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH count(T2.departmentID) AS count, T2.Position AS Position, T2.Name AS Name\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Bob Kelso",
                "Head Chief of Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the patient who made the most recent appointment?",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the patient who made the appointment with the most recent start date.",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the nurse has the most appointments?",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH count(T1.EmployeeID) AS count, T1.Name AS Name\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the nurse who has the largest number of appointments.",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH count(T1.EmployeeID) AS count, T1.Name AS Name\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms located on each block floor.",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockFloor) AS count, T1.BlockFloor AS BlockFloor\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms does each block floor have?",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockFloor) AS count, T1.BlockFloor AS BlockFloor\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms for different block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockCode) AS count, T1.BlockCode AS BlockCode\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms are located for each block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockCode) AS count, T1.BlockCode AS BlockCode\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of medications prescribed for each brand.",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH count(T1.Brand) AS count, T1.Name AS Name\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many medications are prescribed for each brand?",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH count(T1.Brand) AS count, T1.Name AS Name\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians whose position title contains the word 'senior'.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of the physicians who have 'senior' in their titles.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the physician who was trained in the most expensive procedure?",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which physician was trained in the procedure that costs the most.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of patients who are not using the medication of Procrastin-X.",
        "sql_query": "SELECT count(*) FROM patient WHERE SSN NOT IN ( SELECT T1.patient FROM Prescribes AS T1 JOIN Medication AS T2 ON T1.Medication  =  T2.Code WHERE T2.name  =  'Procrastin-X' )",
        "parsed_sql": {
            "select": {
                "value": {
                    "count": "*"
                }
            },
            "from": "patient",
            "where": {
                "nin": [
                    "SSN",
                    {
                        "select": {
                            "value": "T1.patient"
                        },
                        "from": [
                            {
                                "value": "Prescribes",
                                "name": "T1",
                                "is_table": true
                            },
                            {
                                "join": {
                                    "name": "T2",
                                    "value": "Medication",
                                    "is_table": true
                                },
                                "on": {
                                    "eq": [
                                        "T1.Medication",
                                        "T2.Code"
                                    ]
                                }
                            }
                        ],
                        "where": {
                            "eq": [
                                "T2.name",
                                {
                                    "literal": "Procrastin-X"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "sql_ans": [
            [
                3
            ]
        ],
        "cypher_query": "MATCH (p:Patient)\nWHERE NOT (p:Patient)-[]-(:Prescribes)-[]-(:Medication)\nRETURN count(*)",
        "cypher_ans": [
            [
                2
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many patients are not using Procrastin-X as medication?",
        "sql_query": "SELECT count(*) FROM patient WHERE SSN NOT IN ( SELECT T1.patient FROM Prescribes AS T1 JOIN Medication AS T2 ON T1.Medication  =  T2.Code WHERE T2.name  =  'Procrastin-X' )",
        "parsed_sql": {
            "select": {
                "value": {
                    "count": "*"
                }
            },
            "from": "patient",
            "where": {
                "nin": [
                    "SSN",
                    {
                        "select": {
                            "value": "T1.patient"
                        },
                        "from": [
                            {
                                "value": "Prescribes",
                                "name": "T1",
                                "is_table": true
                            },
                            {
                                "join": {
                                    "name": "T2",
                                    "value": "Medication",
                                    "is_table": true
                                },
                                "on": {
                                    "eq": [
                                        "T1.Medication",
                                        "T2.Code"
                                    ]
                                }
                            }
                        ],
                        "where": {
                            "eq": [
                                "T2.name",
                                {
                                    "literal": "Procrastin-X"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "sql_ans": [
            [
                3
            ]
        ],
        "cypher_query": "MATCH (p:Patient)\nWHERE NOT (p:Patient)-[]-(:Prescribes)-[]-(:Medication)\nRETURN count(*)",
        "cypher_ans": [
            [
                2
            ]
        ]
    }
][][
    {
        "db_id": "hospital_1",
        "question": "what is the name and position of the head whose department has least number of employees?",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH count(T2.departmentID) AS count, T2.Position AS Position, T2.Name AS Name\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Bob Kelso",
                "Head Chief of Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name and position of the head of the department with the least employees.",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH count(T2.departmentID) AS count, T2.Position AS Position, T2.Name AS Name\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Bob Kelso",
                "Head Chief of Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the patient who made the most recent appointment?",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the patient who made the appointment with the most recent start date.",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the nurse has the most appointments?",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH count(T1.EmployeeID) AS count, T1.Name AS Name\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the nurse who has the largest number of appointments.",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH count(T1.EmployeeID) AS count, T1.Name AS Name\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms located on each block floor.",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockFloor) AS count, T1.BlockFloor AS BlockFloor\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms does each block floor have?",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockFloor) AS count, T1.BlockFloor AS BlockFloor\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms for different block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockCode AS BlockCode, count(T1.BlockCode) AS count\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms are located for each block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockCode AS BlockCode, count(T1.BlockCode) AS count\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of medications prescribed for each brand.",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH count(T1.Brand) AS count, T1.Name AS Name\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many medications are prescribed for each brand?",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH count(T1.Brand) AS count, T1.Name AS Name\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians whose position title contains the word 'senior'.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of the physicians who have 'senior' in their titles.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the physician who was trained in the most expensive procedure?",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which physician was trained in the procedure that costs the most.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of patients who are not using the medication of Procrastin-X.",
        "sql_query": "SELECT count(*) FROM patient WHERE SSN NOT IN ( SELECT T1.patient FROM Prescribes AS T1 JOIN Medication AS T2 ON T1.Medication  =  T2.Code WHERE T2.name  =  'Procrastin-X' )",
        "parsed_sql": {
            "select": {
                "value": {
                    "count": "*"
                }
            },
            "from": "patient",
            "where": {
                "nin": [
                    "SSN",
                    {
                        "select": {
                            "value": "T1.patient"
                        },
                        "from": [
                            {
                                "value": "Prescribes",
                                "name": "T1",
                                "is_table": true
                            },
                            {
                                "join": {
                                    "name": "T2",
                                    "value": "Medication",
                                    "is_table": true
                                },
                                "on": {
                                    "eq": [
                                        "T1.Medication",
                                        "T2.Code"
                                    ]
                                }
                            }
                        ],
                        "where": {
                            "eq": [
                                "T2.name",
                                {
                                    "literal": "Procrastin-X"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "sql_ans": [
            [
                3
            ]
        ],
        "cypher_query": "MATCH (p:Patient)\nWHERE NOT (p:Patient)-[]-(:Prescribes)-[]-(:Medication)\nRETURN count(*)",
        "cypher_ans": [
            [
                2
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many patients are not using Procrastin-X as medication?",
        "sql_query": "SELECT count(*) FROM patient WHERE SSN NOT IN ( SELECT T1.patient FROM Prescribes AS T1 JOIN Medication AS T2 ON T1.Medication  =  T2.Code WHERE T2.name  =  'Procrastin-X' )",
        "parsed_sql": {
            "select": {
                "value": {
                    "count": "*"
                }
            },
            "from": "patient",
            "where": {
                "nin": [
                    "SSN",
                    {
                        "select": {
                            "value": "T1.patient"
                        },
                        "from": [
                            {
                                "value": "Prescribes",
                                "name": "T1",
                                "is_table": true
                            },
                            {
                                "join": {
                                    "name": "T2",
                                    "value": "Medication",
                                    "is_table": true
                                },
                                "on": {
                                    "eq": [
                                        "T1.Medication",
                                        "T2.Code"
                                    ]
                                }
                            }
                        ],
                        "where": {
                            "eq": [
                                "T2.name",
                                {
                                    "literal": "Procrastin-X"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "sql_ans": [
            [
                3
            ]
        ],
        "cypher_query": "MATCH (p:Patient)\nWHERE NOT (p:Patient)-[]-(:Prescribes)-[]-(:Medication)\nRETURN count(*)",
        "cypher_ans": [
            [
                2
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "what is the name and position of the head whose department has least number of employees?",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH T2.Position AS Position, count(T2.departmentID) AS count, T2.Name AS Name\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Bob Kelso",
                "Head Chief of Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name and position of the head of the department with the least employees.",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH T2.Position AS Position, count(T2.departmentID) AS count, T2.Name AS Name\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Bob Kelso",
                "Head Chief of Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the patient who made the most recent appointment?",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the patient who made the appointment with the most recent start date.",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the nurse has the most appointments?",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH T1.Name AS Name, count(T1.EmployeeID) AS count\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the nurse who has the largest number of appointments.",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH T1.Name AS Name, count(T1.EmployeeID) AS count\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms located on each block floor.",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockFloor) AS count, T1.BlockFloor AS BlockFloor\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms does each block floor have?",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockFloor) AS count, T1.BlockFloor AS BlockFloor\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms for different block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockCode) AS count, T1.BlockCode AS BlockCode\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms are located for each block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockCode) AS count, T1.BlockCode AS BlockCode\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of medications prescribed for each brand.",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH T1.Name AS Name, count(T1.Brand) AS count\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many medications are prescribed for each brand?",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH T1.Name AS Name, count(T1.Brand) AS count\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians whose position title contains the word 'senior'.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of the physicians who have 'senior' in their titles.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the physician who was trained in the most expensive procedure?",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which physician was trained in the procedure that costs the most.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of patients who are not using the medication of Procrastin-X.",
        "sql_query": "SELECT count(*) FROM patient WHERE SSN NOT IN ( SELECT T1.patient FROM Prescribes AS T1 JOIN Medication AS T2 ON T1.Medication  =  T2.Code WHERE T2.name  =  'Procrastin-X' )",
        "parsed_sql": {
            "select": {
                "value": {
                    "count": "*"
                }
            },
            "from": "patient",
            "where": {
                "nin": [
                    "SSN",
                    {
                        "select": {
                            "value": "T1.patient"
                        },
                        "from": [
                            {
                                "value": "Prescribes",
                                "name": "T1",
                                "is_table": true
                            },
                            {
                                "join": {
                                    "name": "T2",
                                    "value": "Medication",
                                    "is_table": true
                                },
                                "on": {
                                    "eq": [
                                        "T1.Medication",
                                        "T2.Code"
                                    ]
                                }
                            }
                        ],
                        "where": {
                            "eq": [
                                "T2.name",
                                {
                                    "literal": "Procrastin-X"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "sql_ans": [
            [
                3
            ]
        ],
        "cypher_query": "MATCH (p:Patient)\nWHERE NOT (p:Patient)-[]-(:Prescribes)-[]-(:Medication)\nRETURN count(*)",
        "cypher_ans": [
            [
                2
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many patients are not using Procrastin-X as medication?",
        "sql_query": "SELECT count(*) FROM patient WHERE SSN NOT IN ( SELECT T1.patient FROM Prescribes AS T1 JOIN Medication AS T2 ON T1.Medication  =  T2.Code WHERE T2.name  =  'Procrastin-X' )",
        "parsed_sql": {
            "select": {
                "value": {
                    "count": "*"
                }
            },
            "from": "patient",
            "where": {
                "nin": [
                    "SSN",
                    {
                        "select": {
                            "value": "T1.patient"
                        },
                        "from": [
                            {
                                "value": "Prescribes",
                                "name": "T1",
                                "is_table": true
                            },
                            {
                                "join": {
                                    "name": "T2",
                                    "value": "Medication",
                                    "is_table": true
                                },
                                "on": {
                                    "eq": [
                                        "T1.Medication",
                                        "T2.Code"
                                    ]
                                }
                            }
                        ],
                        "where": {
                            "eq": [
                                "T2.name",
                                {
                                    "literal": "Procrastin-X"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "sql_ans": [
            [
                3
            ]
        ],
        "cypher_query": "MATCH (p:Patient)\nWHERE NOT (p:Patient)-[]-(:Prescribes)-[]-(:Medication)\nRETURN count(*)",
        "cypher_ans": [
            [
                2
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "what is the name and position of the head whose department has least number of employees?",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH T2.Name AS Name, T2.Position AS Position, count(T2.departmentID) AS count\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Bob Kelso",
                "Head Chief of Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name and position of the head of the department with the least employees.",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH T2.Name AS Name, T2.Position AS Position, count(T2.departmentID) AS count\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Bob Kelso",
                "Head Chief of Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the patient who made the most recent appointment?",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the patient who made the appointment with the most recent start date.",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the nurse has the most appointments?",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH count(T1.EmployeeID) AS count, T1.Name AS Name\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the nurse who has the largest number of appointments.",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH count(T1.EmployeeID) AS count, T1.Name AS Name\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms located on each block floor.",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockFloor AS BlockFloor, count(T1.BlockFloor) AS count\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms does each block floor have?",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockFloor AS BlockFloor, count(T1.BlockFloor) AS count\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms for different block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockCode) AS count, T1.BlockCode AS BlockCode\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms are located for each block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockCode) AS count, T1.BlockCode AS BlockCode\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of medications prescribed for each brand.",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH T1.Name AS Name, count(T1.Brand) AS count\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many medications are prescribed for each brand?",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH T1.Name AS Name, count(T1.Brand) AS count\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians whose position title contains the word 'senior'.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of the physicians who have 'senior' in their titles.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the physician who was trained in the most expensive procedure?",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which physician was trained in the procedure that costs the most.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of patients who are not using the medication of Procrastin-X.",
        "sql_query": "SELECT count(*) FROM patient WHERE SSN NOT IN ( SELECT T1.patient FROM Prescribes AS T1 JOIN Medication AS T2 ON T1.Medication  =  T2.Code WHERE T2.name  =  'Procrastin-X' )",
        "parsed_sql": {
            "select": {
                "value": {
                    "count": "*"
                }
            },
            "from": "patient",
            "where": {
                "nin": [
                    "SSN",
                    {
                        "select": {
                            "value": "T1.patient"
                        },
                        "from": [
                            {
                                "value": "Prescribes",
                                "name": "T1",
                                "is_table": true
                            },
                            {
                                "join": {
                                    "name": "T2",
                                    "value": "Medication",
                                    "is_table": true
                                },
                                "on": {
                                    "eq": [
                                        "T1.Medication",
                                        "T2.Code"
                                    ]
                                }
                            }
                        ],
                        "where": {
                            "eq": [
                                "T2.name",
                                {
                                    "literal": "Procrastin-X"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "sql_ans": [
            [
                3
            ]
        ],
        "cypher_query": "MATCH (p:Patient)\nWHERE NOT (p:Patient)-[]-(:Prescribes)-[]-(:Medication)\nRETURN count(*)",
        "cypher_ans": [
            [
                2
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many patients are not using Procrastin-X as medication?",
        "sql_query": "SELECT count(*) FROM patient WHERE SSN NOT IN ( SELECT T1.patient FROM Prescribes AS T1 JOIN Medication AS T2 ON T1.Medication  =  T2.Code WHERE T2.name  =  'Procrastin-X' )",
        "parsed_sql": {
            "select": {
                "value": {
                    "count": "*"
                }
            },
            "from": "patient",
            "where": {
                "nin": [
                    "SSN",
                    {
                        "select": {
                            "value": "T1.patient"
                        },
                        "from": [
                            {
                                "value": "Prescribes",
                                "name": "T1",
                                "is_table": true
                            },
                            {
                                "join": {
                                    "name": "T2",
                                    "value": "Medication",
                                    "is_table": true
                                },
                                "on": {
                                    "eq": [
                                        "T1.Medication",
                                        "T2.Code"
                                    ]
                                }
                            }
                        ],
                        "where": {
                            "eq": [
                                "T2.name",
                                {
                                    "literal": "Procrastin-X"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "sql_ans": [
            [
                3
            ]
        ],
        "cypher_query": "MATCH (p:Patient)\nWHERE NOT (p:Patient)-[]-(:Prescribes)-[]-(:Medication)\nRETURN count(*)",
        "cypher_ans": [
            [
                2
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "what is the name and position of the head whose department has least number of employees?",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH count(T2.departmentID) AS count, T2.Position AS Position, T2.Name AS Name\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Bob Kelso",
                "Head Chief of Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name and position of the head of the department with the least employees.",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH count(T2.departmentID) AS count, T2.Position AS Position, T2.Name AS Name\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Bob Kelso",
                "Head Chief of Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the patient who made the most recent appointment?",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the patient who made the appointment with the most recent start date.",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the nurse has the most appointments?",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH T1.Name AS Name, count(T1.EmployeeID) AS count\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the nurse who has the largest number of appointments.",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH T1.Name AS Name, count(T1.EmployeeID) AS count\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms located on each block floor.",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockFloor AS BlockFloor, count(T1.BlockFloor) AS count\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms does each block floor have?",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockFloor AS BlockFloor, count(T1.BlockFloor) AS count\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms for different block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockCode) AS count, T1.BlockCode AS BlockCode\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms are located for each block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockCode) AS count, T1.BlockCode AS BlockCode\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of medications prescribed for each brand.",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH count(T1.Brand) AS count, T1.Name AS Name\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many medications are prescribed for each brand?",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH count(T1.Brand) AS count, T1.Name AS Name\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians whose position title contains the word 'senior'.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of the physicians who have 'senior' in their titles.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the physician who was trained in the most expensive procedure?",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which physician was trained in the procedure that costs the most.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of patients who are not using the medication of Procrastin-X.",
        "sql_query": "SELECT count(*) FROM patient WHERE SSN NOT IN ( SELECT T1.patient FROM Prescribes AS T1 JOIN Medication AS T2 ON T1.Medication  =  T2.Code WHERE T2.name  =  'Procrastin-X' )",
        "parsed_sql": {
            "select": {
                "value": {
                    "count": "*"
                }
            },
            "from": "patient",
            "where": {
                "nin": [
                    "SSN",
                    {
                        "select": {
                            "value": "T1.patient"
                        },
                        "from": [
                            {
                                "value": "Prescribes",
                                "name": "T1",
                                "is_table": true
                            },
                            {
                                "join": {
                                    "name": "T2",
                                    "value": "Medication",
                                    "is_table": true
                                },
                                "on": {
                                    "eq": [
                                        "T1.Medication",
                                        "T2.Code"
                                    ]
                                }
                            }
                        ],
                        "where": {
                            "eq": [
                                "T2.name",
                                {
                                    "literal": "Procrastin-X"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "sql_ans": [
            [
                3
            ]
        ],
        "cypher_query": "MATCH (p:Patient)\nWHERE NOT (p:Patient)-[]-(:Prescribes)-[]-(:Medication)\nRETURN count(*)",
        "cypher_ans": [
            [
                2
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many patients are not using Procrastin-X as medication?",
        "sql_query": "SELECT count(*) FROM patient WHERE SSN NOT IN ( SELECT T1.patient FROM Prescribes AS T1 JOIN Medication AS T2 ON T1.Medication  =  T2.Code WHERE T2.name  =  'Procrastin-X' )",
        "parsed_sql": {
            "select": {
                "value": {
                    "count": "*"
                }
            },
            "from": "patient",
            "where": {
                "nin": [
                    "SSN",
                    {
                        "select": {
                            "value": "T1.patient"
                        },
                        "from": [
                            {
                                "value": "Prescribes",
                                "name": "T1",
                                "is_table": true
                            },
                            {
                                "join": {
                                    "name": "T2",
                                    "value": "Medication",
                                    "is_table": true
                                },
                                "on": {
                                    "eq": [
                                        "T1.Medication",
                                        "T2.Code"
                                    ]
                                }
                            }
                        ],
                        "where": {
                            "eq": [
                                "T2.name",
                                {
                                    "literal": "Procrastin-X"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "sql_ans": [
            [
                3
            ]
        ],
        "cypher_query": "MATCH (p:Patient)\nWHERE NOT (p:Patient)-[]-(:Prescribes)-[]-(:Medication)\nRETURN count(*)",
        "cypher_ans": [
            [
                2
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "what is the name and position of the head whose department has least number of employees?",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH count(T2.departmentID) AS count, T2.Name AS Name, T2.Position AS Position\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Bob Kelso",
                "Head Chief of Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name and position of the head of the department with the least employees.",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH count(T2.departmentID) AS count, T2.Name AS Name, T2.Position AS Position\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Bob Kelso",
                "Head Chief of Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the patient who made the most recent appointment?",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the patient who made the appointment with the most recent start date.",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the nurse has the most appointments?",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH count(T1.EmployeeID) AS count, T1.Name AS Name\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the nurse who has the largest number of appointments.",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH count(T1.EmployeeID) AS count, T1.Name AS Name\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms located on each block floor.",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockFloor) AS count, T1.BlockFloor AS BlockFloor\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms does each block floor have?",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockFloor) AS count, T1.BlockFloor AS BlockFloor\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms for different block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockCode) AS count, T1.BlockCode AS BlockCode\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms are located for each block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockCode) AS count, T1.BlockCode AS BlockCode\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of medications prescribed for each brand.",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH count(T1.Brand) AS count, T1.Name AS Name\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many medications are prescribed for each brand?",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH count(T1.Brand) AS count, T1.Name AS Name\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians whose position title contains the word 'senior'.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of the physicians who have 'senior' in their titles.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the physician who was trained in the most expensive procedure?",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which physician was trained in the procedure that costs the most.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of patients who are not using the medication of Procrastin-X.",
        "sql_query": "SELECT count(*) FROM patient WHERE SSN NOT IN ( SELECT T1.patient FROM Prescribes AS T1 JOIN Medication AS T2 ON T1.Medication  =  T2.Code WHERE T2.name  =  'Procrastin-X' )",
        "parsed_sql": {
            "select": {
                "value": {
                    "count": "*"
                }
            },
            "from": "patient",
            "where": {
                "nin": [
                    "SSN",
                    {
                        "select": {
                            "value": "T1.patient"
                        },
                        "from": [
                            {
                                "value": "Prescribes",
                                "name": "T1",
                                "is_table": true
                            },
                            {
                                "join": {
                                    "name": "T2",
                                    "value": "Medication",
                                    "is_table": true
                                },
                                "on": {
                                    "eq": [
                                        "T1.Medication",
                                        "T2.Code"
                                    ]
                                }
                            }
                        ],
                        "where": {
                            "eq": [
                                "T2.name",
                                {
                                    "literal": "Procrastin-X"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "sql_ans": [
            [
                3
            ]
        ],
        "cypher_query": "MATCH (p:Patient)\nWHERE NOT (p:Patient)-[]-(:Prescribes)-[]-(:Medication)\nRETURN count(*)",
        "cypher_ans": [
            [
                2
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many patients are not using Procrastin-X as medication?",
        "sql_query": "SELECT count(*) FROM patient WHERE SSN NOT IN ( SELECT T1.patient FROM Prescribes AS T1 JOIN Medication AS T2 ON T1.Medication  =  T2.Code WHERE T2.name  =  'Procrastin-X' )",
        "parsed_sql": {
            "select": {
                "value": {
                    "count": "*"
                }
            },
            "from": "patient",
            "where": {
                "nin": [
                    "SSN",
                    {
                        "select": {
                            "value": "T1.patient"
                        },
                        "from": [
                            {
                                "value": "Prescribes",
                                "name": "T1",
                                "is_table": true
                            },
                            {
                                "join": {
                                    "name": "T2",
                                    "value": "Medication",
                                    "is_table": true
                                },
                                "on": {
                                    "eq": [
                                        "T1.Medication",
                                        "T2.Code"
                                    ]
                                }
                            }
                        ],
                        "where": {
                            "eq": [
                                "T2.name",
                                {
                                    "literal": "Procrastin-X"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "sql_ans": [
            [
                3
            ]
        ],
        "cypher_query": "MATCH (p:Patient)\nWHERE NOT (p:Patient)-[]-(:Prescribes)-[]-(:Medication)\nRETURN count(*)",
        "cypher_ans": [
            [
                2
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "what is the name and position of the head whose department has least number of employees?",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH T2.Name AS Name, count(T2.departmentID) AS count, T2.Position AS Position\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Bob Kelso",
                "Head Chief of Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name and position of the head of the department with the least employees.",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH T2.Name AS Name, count(T2.departmentID) AS count, T2.Position AS Position\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Bob Kelso",
                "Head Chief of Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the patient who made the most recent appointment?",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the patient who made the appointment with the most recent start date.",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the nurse has the most appointments?",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH T1.Name AS Name, count(T1.EmployeeID) AS count\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the nurse who has the largest number of appointments.",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH T1.Name AS Name, count(T1.EmployeeID) AS count\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms located on each block floor.",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockFloor AS BlockFloor, count(T1.BlockFloor) AS count\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms does each block floor have?",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockFloor AS BlockFloor, count(T1.BlockFloor) AS count\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms for different block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockCode) AS count, T1.BlockCode AS BlockCode\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms are located for each block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockCode) AS count, T1.BlockCode AS BlockCode\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of medications prescribed for each brand.",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH count(T1.Brand) AS count, T1.Name AS Name\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many medications are prescribed for each brand?",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH count(T1.Brand) AS count, T1.Name AS Name\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians whose position title contains the word 'senior'.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of the physicians who have 'senior' in their titles.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the physician who was trained in the most expensive procedure?",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which physician was trained in the procedure that costs the most.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of patients who are not using the medication of Procrastin-X.",
        "sql_query": "SELECT count(*) FROM patient WHERE SSN NOT IN ( SELECT T1.patient FROM Prescribes AS T1 JOIN Medication AS T2 ON T1.Medication  =  T2.Code WHERE T2.name  =  'Procrastin-X' )",
        "parsed_sql": {
            "select": {
                "value": {
                    "count": "*"
                }
            },
            "from": "patient",
            "where": {
                "nin": [
                    "SSN",
                    {
                        "select": {
                            "value": "T1.patient"
                        },
                        "from": [
                            {
                                "value": "Prescribes",
                                "name": "T1",
                                "is_table": true
                            },
                            {
                                "join": {
                                    "name": "T2",
                                    "value": "Medication",
                                    "is_table": true
                                },
                                "on": {
                                    "eq": [
                                        "T1.Medication",
                                        "T2.Code"
                                    ]
                                }
                            }
                        ],
                        "where": {
                            "eq": [
                                "T2.name",
                                {
                                    "literal": "Procrastin-X"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "sql_ans": [
            [
                3
            ]
        ],
        "cypher_query": "MATCH (p:Patient)\nWHERE NOT (p:Patient)-[]-(:Prescribes)-[]-(:Medication)\nRETURN count(*)",
        "cypher_ans": [
            [
                2
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many patients are not using Procrastin-X as medication?",
        "sql_query": "SELECT count(*) FROM patient WHERE SSN NOT IN ( SELECT T1.patient FROM Prescribes AS T1 JOIN Medication AS T2 ON T1.Medication  =  T2.Code WHERE T2.name  =  'Procrastin-X' )",
        "parsed_sql": {
            "select": {
                "value": {
                    "count": "*"
                }
            },
            "from": "patient",
            "where": {
                "nin": [
                    "SSN",
                    {
                        "select": {
                            "value": "T1.patient"
                        },
                        "from": [
                            {
                                "value": "Prescribes",
                                "name": "T1",
                                "is_table": true
                            },
                            {
                                "join": {
                                    "name": "T2",
                                    "value": "Medication",
                                    "is_table": true
                                },
                                "on": {
                                    "eq": [
                                        "T1.Medication",
                                        "T2.Code"
                                    ]
                                }
                            }
                        ],
                        "where": {
                            "eq": [
                                "T2.name",
                                {
                                    "literal": "Procrastin-X"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "sql_ans": [
            [
                3
            ]
        ],
        "cypher_query": "MATCH (p:Patient)\nWHERE NOT (p:Patient)-[]-(:Prescribes)-[]-(:Medication)\nRETURN count(*)",
        "cypher_ans": [
            [
                2
            ]
        ]
    }
]
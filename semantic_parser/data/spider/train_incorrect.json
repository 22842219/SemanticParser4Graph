[
    {
        "db_id": "assets_maintenance",
        "question": "How many assets does each maintenance contract contain? List the number and the contract id.",
        "sql_query": "SELECT count(*) ,  T1.maintenance_contract_id FROM Maintenance_Contracts AS T1 JOIN Assets AS T2 ON T1.maintenance_contract_id  =  T2.maintenance_contract_id GROUP BY T1.maintenance_contract_id",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.maintenance_contract_id"
                }
            ],
            "from": [
                {
                    "value": "Maintenance_Contracts",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "Assets",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.maintenance_contract_id",
                            "T2.maintenance_contract_id"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.maintenance_contract_id"
            }
        },
        "sql_ans": [
            [
                2,
                2
            ],
            [
                2,
                6
            ],
            [
                2,
                7
            ],
            [
                2,
                8
            ],
            [
                1,
                10
            ],
            [
                2,
                11
            ],
            [
                1,
                12
            ],
            [
                1,
                13
            ],
            [
                1,
                14
            ],
            [
                1,
                15
            ]
        ],
        "cypher_query": "MATCH (T1:Maintenance_Contracts)-[]-(T2:Assets)\nWITH count(T1.maintenance_contract_id) AS count, T1.maintenance_contract_id AS maintenance_contract_id\nRETURN count,maintenance_contract_id",
        "cypher_ans": []
    },
    {
        "db_id": "assets_maintenance",
        "question": "How many assets does each third party company supply? List the count and the company id.",
        "sql_query": "SELECT count(*) ,  T1.company_id FROM Third_Party_Companies AS T1 JOIN Assets AS T2 ON T1.company_id  =  T2.supplier_company_id GROUP BY T1.company_id",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.company_id"
                }
            ],
            "from": [
                {
                    "value": "Third_Party_Companies",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "Assets",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.company_id",
                            "T2.supplier_company_id"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.company_id"
            }
        },
        "sql_ans": [
            [
                1,
                1
            ],
            [
                3,
                2
            ],
            [
                2,
                5
            ],
            [
                3,
                6
            ],
            [
                1,
                7
            ],
            [
                1,
                8
            ],
            [
                1,
                11
            ],
            [
                1,
                12
            ],
            [
                1,
                13
            ],
            [
                1,
                14
            ]
        ],
        "cypher_query": "MATCH (T1:Third_Party_Companies)-[]-(T2:Assets)\nWITH T1.company_id AS company_id, count(T1.company_id) AS count\nRETURN count,company_id",
        "cypher_ans": []
    },
    {
        "db_id": "assets_maintenance",
        "question": "Which third party companies have at least 2 maintenance engineers or have at least 2 maintenance contracts? List the company id and name.",
        "sql_query": "SELECT T1.company_id ,  T1.company_name FROM Third_Party_Companies AS T1 JOIN Maintenance_Engineers AS T2 ON T1.company_id  =  T2.company_id GROUP BY T1.company_id HAVING count(*)  >=  2 UNION SELECT T3.company_id ,  T3.company_name FROM Third_Party_Companies AS T3 JOIN Maintenance_Contracts AS T4 ON T3.company_id  =  T4.maintenance_contract_company_id GROUP BY T3.company_id HAVING count(*)  >=  2",
        "parsed_sql": {
            "union": [
                {
                    "select": [
                        {
                            "value": "T1.company_id"
                        },
                        {
                            "value": "T1.company_name"
                        }
                    ],
                    "from": [
                        {
                            "value": "Third_Party_Companies",
                            "name": "T1",
                            "is_table": true
                        },
                        {
                            "join": {
                                "name": "T2",
                                "value": "Maintenance_Engineers",
                                "is_table": true
                            },
                            "on": {
                                "eq": [
                                    "T1.company_id",
                                    "T2.company_id"
                                ]
                            }
                        }
                    ],
                    "groupby": {
                        "value": "T1.company_id"
                    },
                    "having": {
                        "gte": [
                            {
                                "count": "*"
                            },
                            2
                        ]
                    }
                },
                {
                    "select": [
                        {
                            "value": "T3.company_id"
                        },
                        {
                            "value": "T3.company_name"
                        }
                    ],
                    "from": [
                        {
                            "value": "Third_Party_Companies",
                            "name": "T3",
                            "is_table": true
                        },
                        {
                            "join": {
                                "name": "T4",
                                "value": "Maintenance_Contracts",
                                "is_table": true
                            },
                            "on": {
                                "eq": [
                                    "T3.company_id",
                                    "T4.maintenance_contract_company_id"
                                ]
                            }
                        }
                    ],
                    "groupby": {
                        "value": "T3.company_id"
                    },
                    "having": {
                        "gte": [
                            {
                                "count": "*"
                            },
                            2
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                2,
                "McDermott Group"
            ],
            [
                3,
                "Schuppe-Carroll"
            ],
            [
                4,
                "Dooley-Langosh"
            ],
            [
                6,
                "Grimes, Mosciski and Renner"
            ],
            [
                11,
                "Kuvalis, Boehm and Hettinger"
            ],
            [
                13,
                "Greenholt-D'Amore"
            ],
            [
                15,
                "Rau, Ullrich and King"
            ]
        ],
        "cypher_query": "MATCH (T1:Third_Party_Companies)-[]-(T2:Maintenance_Engineers)\nWITH count(*) AS count, T1.company_name AS company_name, T1.company_id AS company_id\nWHERE count  >= 2\nRETURN company_id,company_name \nUNION\nMATCH (T3:Third_Party_Companies)-[]-(T4:Maintenance_Contracts)\nWITH T3.company_id AS company_id, T3.company_name AS company_name, count(*) AS count\nWHERE count  >= 2\nRETURN company_id,company_name",
        "cypher_ans": []
    },
    {
        "db_id": "assets_maintenance",
        "question": "Which parts have more than 2 faults? Show the part name and id.",
        "sql_query": "SELECT T1.part_name ,  T1.part_id FROM Parts AS T1 JOIN Part_Faults AS T2 ON T1.part_id  =  T2.part_id GROUP BY T1.part_id HAVING count(*)  >  2",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.part_name"
                },
                {
                    "value": "T1.part_id"
                }
            ],
            "from": [
                {
                    "value": "Parts",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "Part_Faults",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.part_id",
                            "T2.part_id"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.part_id"
            },
            "having": {
                "gt": [
                    {
                        "count": "*"
                    },
                    2
                ]
            }
        },
        "sql_ans": [
            [
                "top",
                1
            ],
            [
                "package",
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Parts)-[]-(T2:Part_Faults)\nWITH T1.part_name AS part_name, T1.part_id AS part_id, count(*) AS count\nWHERE count  > 2\nRETURN part_name,part_id",
        "cypher_ans": []
    },
    {
        "db_id": "assets_maintenance",
        "question": "List all every engineer's first name, last name, details and coresponding skill description.",
        "sql_query": "SELECT T1.first_name ,  T1.last_name ,  T1.other_details ,  T3.skill_description FROM Maintenance_Engineers AS T1 JOIN Engineer_Skills AS T2 ON T1.engineer_id  =  T2.engineer_id JOIN Skills AS T3 ON T2.skill_id  =  T3.skill_id",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.first_name"
                },
                {
                    "value": "T1.last_name"
                },
                {
                    "value": "T1.other_details"
                },
                {
                    "value": "T3.skill_description"
                }
            ],
            "from": [
                {
                    "value": "Maintenance_Engineers",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "Engineer_Skills",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.engineer_id",
                            "T2.engineer_id"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "Skills",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T2.skill_id",
                            "T3.skill_id"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "Naomi",
                "Price",
                null,
                "Mechanical"
            ],
            [
                "Naomi",
                "Price",
                null,
                "Electrical"
            ],
            [
                "Archibald",
                "Streich",
                null,
                "Electrical"
            ],
            [
                "Courtney",
                "Adams",
                null,
                "Electrical"
            ],
            [
                "Weston",
                "Hahn",
                null,
                "Electrical"
            ],
            [
                "Courtney",
                "Adams",
                null,
                "TV, Video"
            ],
            [
                "Weston",
                "Hahn",
                null,
                "Mechanical"
            ],
            [
                "Josie",
                "Harvey",
                "Skilled",
                "TV, Video"
            ],
            [
                "Manley",
                "Grady",
                null,
                "Mechanical"
            ],
            [
                "Nellie",
                "Hirthe",
                null,
                "TV, Video"
            ],
            [
                "Archibald",
                "Streich",
                null,
                "TV, Video"
            ],
            [
                "Manley",
                "Grady",
                null,
                "Electrical"
            ],
            [
                "Brian",
                "Stamm",
                null,
                "TV, Video"
            ],
            [
                "Samanta",
                "Hauck",
                null,
                "Electrical"
            ],
            [
                "Cullen",
                "Kunde",
                null,
                "Mechanical"
            ],
            [
                "Alexys",
                "Simonis",
                null,
                "Mechanical"
            ],
            [
                "Clemens",
                "Orn",
                null,
                "Mechanical"
            ],
            [
                "Nellie",
                "Hirthe",
                null,
                "Electrical"
            ],
            [
                "Lorine",
                "Morar",
                null,
                "Electrical"
            ]
        ],
        "cypher_query": "MATCH (T1:Maintenance_Engineers)-[T2:Engineer_Skills]-(T3:Skills)\nRETURN T1.first_name,T1.last_name,T1.other_details,T3.skill_description",
        "cypher_ans": []
    },
    {
        "db_id": "assets_maintenance",
        "question": "For all the faults of different parts, what are all the decriptions of the skills required to fix them? List the name of the faults and the skill description.",
        "sql_query": "SELECT T1.fault_short_name ,  T3.skill_description FROM Part_Faults AS T1 JOIN Skills_Required_To_Fix AS T2 ON T1.part_fault_id  =  T2.part_fault_id JOIN Skills AS T3 ON T2.skill_id  =  T3.skill_id",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.fault_short_name"
                },
                {
                    "value": "T3.skill_description"
                }
            ],
            "from": [
                {
                    "value": "Part_Faults",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "Skills_Required_To_Fix",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.part_fault_id",
                            "T2.part_fault_id"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "Skills",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T2.skill_id",
                            "T3.skill_id"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "TW",
                "Mechanical"
            ],
            [
                "MW",
                "TV, Video"
            ],
            [
                "PW",
                "Electrical"
            ],
            [
                "PW",
                "TV, Video"
            ],
            [
                "TW",
                "TV, Video"
            ],
            [
                "PW",
                "Mechanical"
            ],
            [
                "MW",
                "Mechanical"
            ]
        ],
        "cypher_query": "MATCH (T1:Part_Faults)-[T2:Skills_Required_To_Fix]-(T3:Skills)\nRETURN T1.fault_short_name,T3.skill_description",
        "cypher_ans": []
    },
    {
        "db_id": "assets_maintenance",
        "question": "How many assets can each parts be used in? List the part name and the number.",
        "sql_query": "SELECT T1.part_name ,  count(*) FROM Parts AS T1 JOIN Asset_Parts AS T2 ON T1.part_id  =  T2.part_id GROUP BY T1.part_name",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.part_name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "Parts",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "Asset_Parts",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.part_id",
                            "T2.part_id"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.part_name"
            }
        },
        "sql_ans": [
            [
                "middle",
                5
            ],
            [
                "package",
                6
            ],
            [
                "top",
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Parts)-[T2:Asset_Parts]-()\nWITH T1.part_name AS part_name, count(T1.part_name) AS count\nRETURN part_name,count",
        "cypher_ans": []
    },
    {
        "db_id": "assets_maintenance",
        "question": "How many engineer visits are required at most for a single fault log? List the number and the log entry id.",
        "sql_query": "SELECT count(*) ,  T1.fault_log_entry_id FROM Fault_Log AS T1 JOIN Engineer_Visits AS T2 ON T1.fault_log_entry_id  =  T2.fault_log_entry_id GROUP BY T1.fault_log_entry_id ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.fault_log_entry_id"
                }
            ],
            "from": [
                {
                    "value": "Fault_Log",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "Engineer_Visits",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.fault_log_entry_id",
                            "T2.fault_log_entry_id"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.fault_log_entry_id"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                5,
                13
            ]
        ],
        "cypher_query": "MATCH (T1:Fault_Log)-[]-(T2:Engineer_Visits)\nWITH count(T1.fault_log_entry_id) AS count, T1.fault_log_entry_id AS fault_log_entry_id\nRETURN count,fault_log_entry_id\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "assets_maintenance",
        "question": "What are all the distinct last names of all the engineers?",
        "sql_query": "SELECT DISTINCT last_name FROM Maintenance_Engineers",
        "parsed_sql": {
            "select": {
                "value": {
                    "distinct": {
                        "value": "last_name"
                    }
                }
            },
            "from": "Maintenance_Engineers"
        },
        "sql_ans": [
            [
                "Reinger"
            ],
            [
                "Orn"
            ],
            [
                "Hauck"
            ],
            [
                "Morar"
            ],
            [
                "Grady"
            ],
            [
                "Adams"
            ],
            [
                "Harvey"
            ],
            [
                "Hirthe"
            ],
            [
                "Stamm"
            ],
            [
                "Price"
            ],
            [
                "Kunde"
            ],
            [
                "Simonis"
            ],
            [
                "Hahn"
            ],
            [
                "Goldner"
            ],
            [
                "Streich"
            ]
        ],
        "cypher_query": "MATCH (ma:Maintenance_Engineers)\nRETURN DISTINCT ma.last_name",
        "cypher_ans": []
    },
    {
        "db_id": "assets_maintenance",
        "question": "How many fault status codes are recorded in the fault log parts table?",
        "sql_query": "SELECT DISTINCT fault_status FROM Fault_Log_Parts",
        "parsed_sql": {
            "select": {
                "value": {
                    "distinct": {
                        "value": "fault_status"
                    }
                }
            },
            "from": "Fault_Log_Parts"
        },
        "sql_ans": [
            [
                "Reported"
            ],
            [
                "Return"
            ],
            [
                "Fixed"
            ],
            [
                "Waiting"
            ]
        ],
        "cypher_query": "MATCH ()-[fa:Fault_Log_Parts]-()\nRETURN DISTINCT fa.fault_status",
        "cypher_ans": []
    },
    {
        "db_id": "assets_maintenance",
        "question": "Which engineers have never visited to maintain the assets? List the engineer first name and last name.",
        "sql_query": "SELECT first_name ,  last_name FROM Maintenance_Engineers WHERE engineer_id NOT IN (SELECT engineer_id FROM Engineer_Visits)",
        "parsed_sql": {
            "select": [
                {
                    "value": "first_name"
                },
                {
                    "value": "last_name"
                }
            ],
            "from": "Maintenance_Engineers",
            "where": {
                "nin": [
                    "engineer_id",
                    {
                        "select": {
                            "value": "engineer_id"
                        },
                        "from": "Engineer_Visits"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Clemens",
                "Orn"
            ],
            [
                "Samanta",
                "Hauck"
            ],
            [
                "Manley",
                "Grady"
            ],
            [
                "Josie",
                "Harvey"
            ],
            [
                "Brian",
                "Stamm"
            ],
            [
                "Weston",
                "Hahn"
            ],
            [
                "Jules",
                "Goldner"
            ]
        ],
        "cypher_query": "MATCH (ma:Maintenance_Engineers)\nWHERE NOT (ma:Maintenance_Engineers)-[]-(:Engineer_Visits)\nRETURN ma.first_name,ma.last_name",
        "cypher_ans": []
    },
    {
        "db_id": "assets_maintenance",
        "question": "List the asset id, details, make and model for every asset.",
        "sql_query": "SELECT asset_id ,  asset_details ,  asset_make ,  asset_model FROM Assets",
        "parsed_sql": {
            "select": [
                {
                    "value": "asset_id"
                },
                {
                    "value": "asset_details"
                },
                {
                    "value": "asset_make"
                },
                {
                    "value": "asset_model"
                }
            ],
            "from": "Assets"
        },
        "sql_ans": [
            [
                1,
                "dell laptop1",
                "PT",
                "58 ub"
            ],
            [
                2,
                "dell laptop2",
                "IN",
                "35 xt"
            ],
            [
                3,
                "dell laptop3",
                "IT",
                "63 ok"
            ],
            [
                4,
                "dell laptop4",
                "RU",
                "69 uv"
            ],
            [
                5,
                "dell laptop5",
                "DE",
                "90 oq"
            ],
            [
                6,
                "monitor1",
                "CN",
                "91 ub"
            ],
            [
                7,
                "monitor2",
                "CN",
                "27 du"
            ],
            [
                8,
                "monitor3",
                "GB",
                "94 kg"
            ],
            [
                9,
                "machine1",
                "RU",
                "07 yt"
            ],
            [
                10,
                "machine2",
                "FR",
                "20 tl"
            ],
            [
                11,
                "machine3",
                "FR",
                "11 wi"
            ],
            [
                12,
                "machine4",
                "RU",
                "95 vn"
            ],
            [
                13,
                "system1",
                "DE",
                "08 yy"
            ],
            [
                14,
                "system2",
                "IN",
                "66 xm"
            ],
            [
                15,
                "system3",
                "IE",
                "24 ak"
            ]
        ],
        "cypher_query": "MATCH (as:Assets)\nRETURN as.asset_id,as.asset_details,as.asset_make,as.asset_model",
        "cypher_ans": [
            [
                null,
                null,
                null,
                null
            ]
        ]
    },
    {
        "db_id": "assets_maintenance",
        "question": "When was the first asset acquired?",
        "sql_query": "SELECT asset_acquired_date FROM Assets ORDER BY asset_acquired_date ASC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "asset_acquired_date"
            },
            "from": "Assets",
            "orderby": {
                "value": "asset_acquired_date",
                "sort": "asc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "2017-04-16 12:19:25"
            ]
        ],
        "cypher_query": "MATCH (as:Assets)\nRETURN as.asset_acquired_date\nORDER BY as.asset_acquired_date ASC\nLIMIT 1",
        "cypher_ans": [
            [
                null
            ]
        ]
    },
    {
        "db_id": "assets_maintenance",
        "question": "Which part fault requires the most number of skills to fix? List part id and name.",
        "sql_query": "SELECT T1.part_id ,  T1.part_name FROM Parts AS T1 JOIN Part_Faults AS T2 ON T1.part_id  =  T2.part_id JOIN Skills_Required_To_Fix AS T3 ON T2.part_fault_id  =  T3.part_fault_id GROUP BY T1.part_id ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.part_id"
                },
                {
                    "value": "T1.part_name"
                }
            ],
            "from": [
                {
                    "value": "Parts",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "Part_Faults",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.part_id",
                            "T2.part_id"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "Skills_Required_To_Fix",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T2.part_fault_id",
                            "T3.part_fault_id"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.part_id"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                1,
                "top"
            ]
        ],
        "cypher_query": "MATCH (T1:Parts)-[]-(T2:Part_Faults)-[T3:Skills_Required_To_Fix]-()\nWITH count(T1.part_id) AS count, T1.part_name AS part_name, T1.part_id AS part_id\nRETURN part_id,part_name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "assets_maintenance",
        "question": "Which kind of part has the least number of faults? List the part name.",
        "sql_query": "SELECT T1.part_name FROM Parts AS T1 JOIN Part_Faults AS T2 ON T1.part_id  =  T2.part_id GROUP BY T1.part_name ORDER BY count(*) ASC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.part_name"
            },
            "from": [
                {
                    "value": "Parts",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "Part_Faults",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.part_id",
                            "T2.part_id"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.part_name"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "asc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "middle"
            ]
        ],
        "cypher_query": "MATCH (T1:Parts)-[]-(T2:Part_Faults)\nWITH T1.part_name AS part_name, count(T1.part_name) AS count\nRETURN part_name\nORDER BY count ASC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "assets_maintenance",
        "question": "Among those engineers who have visited, which engineer makes the least number of visits? List the engineer id, first name and last name.",
        "sql_query": "SELECT T1.engineer_id ,  T1.first_name ,  T1.last_name FROM Maintenance_Engineers AS T1 JOIN Engineer_Visits AS T2 ON T1.engineer_id  =  T2.engineer_id GROUP BY T1.engineer_id ORDER BY count(*) ASC LIMIT 1",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.engineer_id"
                },
                {
                    "value": "T1.first_name"
                },
                {
                    "value": "T1.last_name"
                }
            ],
            "from": [
                {
                    "value": "Maintenance_Engineers",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "Engineer_Visits",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.engineer_id",
                            "T2.engineer_id"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.engineer_id"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "asc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                1,
                "Etha",
                "Reinger"
            ]
        ],
        "cypher_query": "MATCH (T1:Maintenance_Engineers)-[]-(T2:Engineer_Visits)\nWITH T1.engineer_id AS engineer_id, T1.first_name AS first_name, T1.last_name AS last_name, count(T1.engineer_id) AS count\nRETURN engineer_id,first_name,last_name\nORDER BY count ASC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "assets_maintenance",
        "question": "Which staff have contacted which engineers? List the staff name and the engineer first name and last name.",
        "sql_query": "SELECT T1.staff_name ,  T3.first_name ,  T3.last_name FROM Staff AS T1 JOIN Engineer_Visits AS T2 ON T1.staff_id  =  T2.contact_staff_id JOIN Maintenance_Engineers AS T3 ON T2.engineer_id  =  T3.engineer_id",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.staff_name"
                },
                {
                    "value": "T3.first_name"
                },
                {
                    "value": "T3.last_name"
                }
            ],
            "from": [
                {
                    "value": "Staff",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "Engineer_Visits",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.staff_id",
                            "T2.contact_staff_id"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "Maintenance_Engineers",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T2.engineer_id",
                            "T3.engineer_id"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "Christophe",
                "Nellie",
                "Hirthe"
            ],
            [
                "Kadin",
                "Archibald",
                "Streich"
            ],
            [
                "Oren",
                "Alexys",
                "Simonis"
            ],
            [
                "Berneice",
                "Lorine",
                "Morar"
            ],
            [
                "Edmond",
                "Archibald",
                "Streich"
            ],
            [
                "Rodger",
                "Archibald",
                "Streich"
            ],
            [
                "Cyrus",
                "Naomi",
                "Price"
            ],
            [
                "Bernice",
                "Courtney",
                "Adams"
            ],
            [
                "Berneice",
                "Etha",
                "Reinger"
            ],
            [
                "Edmond",
                "Naomi",
                "Price"
            ],
            [
                "Bernice",
                "Lorine",
                "Morar"
            ],
            [
                "Edmond",
                "Cullen",
                "Kunde"
            ]
        ],
        "cypher_query": "MATCH (T1:Staff)-[]-(T3:Maintenance_Engineers)-[]-(T2:Engineer_Visits)\nRETURN T1.staff_name,T3.first_name,T3.last_name",
        "cypher_ans": []
    },
    {
        "db_id": "assets_maintenance",
        "question": "Which fault log included the most number of faulty parts? List the fault log id, description and record time.",
        "sql_query": "SELECT T1.fault_log_entry_id ,  T1.fault_description ,  T1.fault_log_entry_datetime FROM Fault_Log AS T1 JOIN Fault_Log_Parts AS T2 ON T1.fault_log_entry_id  =  T2.fault_log_entry_id GROUP BY T1.fault_log_entry_id ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.fault_log_entry_id"
                },
                {
                    "value": "T1.fault_description"
                },
                {
                    "value": "T1.fault_log_entry_datetime"
                }
            ],
            "from": [
                {
                    "value": "Fault_Log",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "Fault_Log_Parts",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.fault_log_entry_id",
                            "T2.fault_log_entry_id"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.fault_log_entry_id"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                1,
                "system error",
                "2018-03-21 04:25:00"
            ]
        ],
        "cypher_query": "MATCH (T1:Fault_Log)-[T2:Fault_Log_Parts]-()\nWITH count(T1.fault_log_entry_id) AS count, T1.fault_log_entry_datetime AS fault_log_entry_datetime, T1.fault_description AS fault_description, T1.fault_log_entry_id AS fault_log_entry_id\nRETURN fault_log_entry_id,fault_description,fault_log_entry_datetime\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "assets_maintenance",
        "question": "Which skill is used in fixing the most number of faults? List the skill id and description.",
        "sql_query": "SELECT T1.skill_id ,  T1.skill_description FROM Skills AS T1 JOIN Skills_Required_To_Fix AS T2 ON T1.skill_id  =  T2.skill_id GROUP BY T1.skill_id ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.skill_id"
                },
                {
                    "value": "T1.skill_description"
                }
            ],
            "from": [
                {
                    "value": "Skills",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "Skills_Required_To_Fix",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.skill_id",
                            "T2.skill_id"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.skill_id"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                3,
                "TV, Video"
            ]
        ],
        "cypher_query": "MATCH (T1:Skills)-[T2:Skills_Required_To_Fix]-()\nWITH T1.skill_description AS skill_description, T1.skill_id AS skill_id, count(T1.skill_id) AS count\nRETURN skill_id,skill_description\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "assets_maintenance",
        "question": "What are all the distinct asset models?",
        "sql_query": "SELECT DISTINCT asset_model FROM Assets",
        "parsed_sql": {
            "select": {
                "value": {
                    "distinct": {
                        "value": "asset_model"
                    }
                }
            },
            "from": "Assets"
        },
        "sql_ans": [
            [
                "58 ub"
            ],
            [
                "35 xt"
            ],
            [
                "63 ok"
            ],
            [
                "69 uv"
            ],
            [
                "90 oq"
            ],
            [
                "91 ub"
            ],
            [
                "27 du"
            ],
            [
                "94 kg"
            ],
            [
                "07 yt"
            ],
            [
                "20 tl"
            ],
            [
                "11 wi"
            ],
            [
                "95 vn"
            ],
            [
                "08 yy"
            ],
            [
                "66 xm"
            ],
            [
                "24 ak"
            ]
        ],
        "cypher_query": "MATCH (as:Assets)\nRETURN DISTINCT as.asset_model",
        "cypher_ans": [
            [
                null
            ]
        ]
    },
    {
        "db_id": "assets_maintenance",
        "question": "List the all the assets make, model, details by the disposed date ascendingly.",
        "sql_query": "SELECT asset_make ,  asset_model ,  asset_details FROM Assets ORDER BY asset_disposed_date ASC",
        "parsed_sql": {
            "select": [
                {
                    "value": "asset_make"
                },
                {
                    "value": "asset_model"
                },
                {
                    "value": "asset_details"
                }
            ],
            "from": "Assets",
            "orderby": {
                "value": "asset_disposed_date",
                "sort": "asc"
            }
        },
        "sql_ans": [
            [
                "IE",
                "24 ak",
                "system3"
            ],
            [
                "DE",
                "90 oq",
                "dell laptop5"
            ],
            [
                "RU",
                "95 vn",
                "machine4"
            ],
            [
                "GB",
                "94 kg",
                "monitor3"
            ],
            [
                "FR",
                "20 tl",
                "machine2"
            ],
            [
                "DE",
                "08 yy",
                "system1"
            ],
            [
                "RU",
                "07 yt",
                "machine1"
            ],
            [
                "IT",
                "63 ok",
                "dell laptop3"
            ],
            [
                "CN",
                "91 ub",
                "monitor1"
            ],
            [
                "PT",
                "58 ub",
                "dell laptop1"
            ],
            [
                "RU",
                "69 uv",
                "dell laptop4"
            ],
            [
                "FR",
                "11 wi",
                "machine3"
            ],
            [
                "IN",
                "35 xt",
                "dell laptop2"
            ],
            [
                "CN",
                "27 du",
                "monitor2"
            ],
            [
                "IN",
                "66 xm",
                "system2"
            ]
        ],
        "cypher_query": "MATCH (as:Assets)\nRETURN as.asset_make,as.asset_model,as.asset_details\nORDER BY as.asset_disposed_date ASC",
        "cypher_ans": [
            [
                null,
                null,
                null
            ]
        ]
    },
    {
        "db_id": "assets_maintenance",
        "question": "Which part has the least chargeable amount? List the part id and amount.",
        "sql_query": "SELECT part_id ,  chargeable_amount FROM Parts ORDER BY chargeable_amount ASC LIMIT 1",
        "parsed_sql": {
            "select": [
                {
                    "value": "part_id"
                },
                {
                    "value": "chargeable_amount"
                }
            ],
            "from": "Parts",
            "orderby": {
                "value": "chargeable_amount",
                "sort": "asc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                1,
                "4"
            ]
        ],
        "cypher_query": "MATCH (pa:Parts)\nRETURN pa.part_id,pa.chargeable_amount\nORDER BY pa.chargeable_amount ASC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "assets_maintenance",
        "question": "Which company started the earliest the maintenance contract? Show the company name.",
        "sql_query": "SELECT T1.company_name FROM Third_Party_Companies AS T1 JOIN Maintenance_Contracts AS T2 ON T1.company_id  =  T2.maintenance_contract_company_id ORDER BY T2.contract_start_date ASC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.company_name"
            },
            "from": [
                {
                    "value": "Third_Party_Companies",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "Maintenance_Contracts",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.company_id",
                            "T2.maintenance_contract_company_id"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.contract_start_date",
                "sort": "asc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Grimes, Mosciski and Renner"
            ]
        ],
        "cypher_query": "MATCH (T1:Third_Party_Companies)-[]-(T2:Maintenance_Contracts)\nRETURN T1.company_name\nORDER BY T2.contract_start_date ASC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "assets_maintenance",
        "question": "Which gender makes up the majority of the staff?",
        "sql_query": "SELECT gender FROM staff GROUP BY gender ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "gender"
            },
            "from": "staff",
            "groupby": {
                "value": "gender"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "1"
            ]
        ],
        "cypher_query": "MATCH (st:Staff)\nWITH st.gender AS gender, count(st.gender) AS count\nRETURN gender\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": [
            [
                null
            ]
        ]
    },
    {
        "db_id": "assets_maintenance",
        "question": "How many engineers did each staff contact? List both the contact staff name and number of engineers contacted.",
        "sql_query": "SELECT T1.staff_name ,  count(*) FROM Staff AS T1 JOIN Engineer_Visits AS T2 ON T1.staff_id  =  T2.contact_staff_id GROUP BY T1.staff_name",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.staff_name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "Staff",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "Engineer_Visits",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.staff_id",
                            "T2.contact_staff_id"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.staff_name"
            }
        },
        "sql_ans": [
            [
                "Berneice",
                2
            ],
            [
                "Bernice",
                2
            ],
            [
                "Christophe",
                1
            ],
            [
                "Cyrus",
                1
            ],
            [
                "Edmond",
                3
            ],
            [
                "Kadin",
                4
            ],
            [
                "Oren",
                1
            ],
            [
                "Rodger",
                1
            ]
        ],
        "cypher_query": "MATCH (T1:Staff)-[]-(T2:Engineer_Visits)\nWITH T1.staff_name AS staff_name, count(T1.staff_name) AS count\nRETURN staff_name,count",
        "cypher_ans": []
    },
    {
        "db_id": "assets_maintenance",
        "question": "Which assets did not incur any fault log? List the asset model.",
        "sql_query": "SELECT asset_model FROM Assets WHERE asset_id NOT IN (SELECT asset_id FROM Fault_Log)",
        "parsed_sql": {
            "select": {
                "value": "asset_model"
            },
            "from": "Assets",
            "where": {
                "nin": [
                    "asset_id",
                    {
                        "select": {
                            "value": "asset_id"
                        },
                        "from": "Fault_Log"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "58 ub"
            ],
            [
                "69 uv"
            ],
            [
                "20 tl"
            ],
            [
                "11 wi"
            ],
            [
                "08 yy"
            ],
            [
                "66 xm"
            ]
        ],
        "cypher_query": "MATCH (as:Assets)\nWHERE NOT (as:Assets)-[]-(:Fault_Log)\nRETURN as.asset_model",
        "cypher_ans": [
            [
                null
            ]
        ]
    }
][
    {
        "db_id": "assets_maintenance",
        "question": "List all every engineer's first name, last name, details and coresponding skill description.",
        "sql_query": "SELECT T1.first_name ,  T1.last_name ,  T1.other_details ,  T3.skill_description FROM Maintenance_Engineers AS T1 JOIN Engineer_Skills AS T2 ON T1.engineer_id  =  T2.engineer_id JOIN Skills AS T3 ON T2.skill_id  =  T3.skill_id",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.first_name"
                },
                {
                    "value": "T1.last_name"
                },
                {
                    "value": "T1.other_details"
                },
                {
                    "value": "T3.skill_description"
                }
            ],
            "from": [
                {
                    "value": "Maintenance_Engineers",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "Engineer_Skills",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.engineer_id",
                            "T2.engineer_id"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "Skills",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T2.skill_id",
                            "T3.skill_id"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "Naomi",
                "Price",
                null,
                "Mechanical"
            ],
            [
                "Naomi",
                "Price",
                null,
                "Electrical"
            ],
            [
                "Archibald",
                "Streich",
                null,
                "Electrical"
            ],
            [
                "Courtney",
                "Adams",
                null,
                "Electrical"
            ],
            [
                "Weston",
                "Hahn",
                null,
                "Electrical"
            ],
            [
                "Courtney",
                "Adams",
                null,
                "TV, Video"
            ],
            [
                "Weston",
                "Hahn",
                null,
                "Mechanical"
            ],
            [
                "Josie",
                "Harvey",
                "Skilled",
                "TV, Video"
            ],
            [
                "Manley",
                "Grady",
                null,
                "Mechanical"
            ],
            [
                "Nellie",
                "Hirthe",
                null,
                "TV, Video"
            ],
            [
                "Archibald",
                "Streich",
                null,
                "TV, Video"
            ],
            [
                "Manley",
                "Grady",
                null,
                "Electrical"
            ],
            [
                "Brian",
                "Stamm",
                null,
                "TV, Video"
            ],
            [
                "Samanta",
                "Hauck",
                null,
                "Electrical"
            ],
            [
                "Cullen",
                "Kunde",
                null,
                "Mechanical"
            ],
            [
                "Alexys",
                "Simonis",
                null,
                "Mechanical"
            ],
            [
                "Clemens",
                "Orn",
                null,
                "Mechanical"
            ],
            [
                "Nellie",
                "Hirthe",
                null,
                "Electrical"
            ],
            [
                "Lorine",
                "Morar",
                null,
                "Electrical"
            ]
        ],
        "cypher_query": "MATCH (T1:Maintenance_Engineers)-[T2:Engineer_Skills]-(T3:Skills)\nRETURN T1.first_name,T1.last_name,T1.other_details,T3.skill_description",
        "cypher_ans": [
            [
                "Nellie",
                "Hirthe",
                null,
                "Electrical"
            ],
            [
                "Archibald",
                "Streich",
                null,
                "Electrical"
            ],
            [
                "Courtney",
                "Adams",
                null,
                "Electrical"
            ],
            [
                "Weston",
                "Hahn",
                null,
                "Electrical"
            ],
            [
                "Manley",
                "Grady",
                null,
                "Electrical"
            ],
            [
                "Samanta",
                "Hauck",
                null,
                "Electrical"
            ],
            [
                "Naomi",
                "Price",
                null,
                "Electrical"
            ],
            [
                "Lorine",
                "Morar",
                null,
                "Electrical"
            ],
            [
                "Manley",
                "Grady",
                null,
                "Mechanical"
            ],
            [
                "Cullen",
                "Kunde",
                null,
                "Mechanical"
            ],
            [
                "Weston",
                "Hahn",
                null,
                "Mechanical"
            ],
            [
                "Naomi",
                "Price",
                null,
                "Mechanical"
            ],
            [
                "Alexys",
                "Simonis",
                null,
                "Mechanical"
            ],
            [
                "Clemens",
                "Orn",
                null,
                "Mechanical"
            ],
            [
                "Josie",
                "Harvey",
                "Skilled",
                "TV, Video"
            ],
            [
                "Archibald",
                "Streich",
                null,
                "TV, Video"
            ],
            [
                "Nellie",
                "Hirthe",
                null,
                "TV, Video"
            ],
            [
                "Courtney",
                "Adams",
                null,
                "TV, Video"
            ],
            [
                "Brian",
                "Stamm",
                null,
                "TV, Video"
            ]
        ]
    },
    {
        "db_id": "assets_maintenance",
        "question": "For all the faults of different parts, what are all the decriptions of the skills required to fix them? List the name of the faults and the skill description.",
        "sql_query": "SELECT T1.fault_short_name ,  T3.skill_description FROM Part_Faults AS T1 JOIN Skills_Required_To_Fix AS T2 ON T1.part_fault_id  =  T2.part_fault_id JOIN Skills AS T3 ON T2.skill_id  =  T3.skill_id",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.fault_short_name"
                },
                {
                    "value": "T3.skill_description"
                }
            ],
            "from": [
                {
                    "value": "Part_Faults",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "Skills_Required_To_Fix",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.part_fault_id",
                            "T2.part_fault_id"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "Skills",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T2.skill_id",
                            "T3.skill_id"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "TW",
                "Mechanical"
            ],
            [
                "MW",
                "TV, Video"
            ],
            [
                "PW",
                "Electrical"
            ],
            [
                "PW",
                "TV, Video"
            ],
            [
                "TW",
                "TV, Video"
            ],
            [
                "PW",
                "Mechanical"
            ],
            [
                "MW",
                "Mechanical"
            ]
        ],
        "cypher_query": "MATCH (T1:Part_Faults)-[T2:Skills_Required_To_Fix]-(T3:Skills)\nRETURN T1.fault_short_name,T3.skill_description",
        "cypher_ans": [
            [
                "PW",
                "Electrical"
            ],
            [
                "TW",
                "Mechanical"
            ],
            [
                "PW",
                "Mechanical"
            ],
            [
                "MW",
                "Mechanical"
            ],
            [
                "PW",
                "TV, Video"
            ],
            [
                "TW",
                "TV, Video"
            ],
            [
                "MW",
                "TV, Video"
            ]
        ]
    },
    {
        "db_id": "assets_maintenance",
        "question": "How many assets can each parts be used in? List the part name and the number.",
        "sql_query": "SELECT T1.part_name ,  count(*) FROM Parts AS T1 JOIN Asset_Parts AS T2 ON T1.part_id  =  T2.part_id GROUP BY T1.part_name",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.part_name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "Parts",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "Asset_Parts",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.part_id",
                            "T2.part_id"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.part_name"
            }
        },
        "sql_ans": [
            [
                "middle",
                5
            ],
            [
                "package",
                6
            ],
            [
                "top",
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Parts)-[T2:Asset_Parts]-()\nWITH T1.part_name AS part_name, count(T1.part_name) AS count\nRETURN part_name,count",
        "cypher_ans": [
            [
                "top",
                4
            ],
            [
                "middle",
                5
            ],
            [
                "package",
                5
            ]
        ]
    },
    {
        "db_id": "assets_maintenance",
        "question": "Among those engineers who have visited, which engineer makes the least number of visits? List the engineer id, first name and last name.",
        "sql_query": "SELECT T1.engineer_id ,  T1.first_name ,  T1.last_name FROM Maintenance_Engineers AS T1 JOIN Engineer_Visits AS T2 ON T1.engineer_id  =  T2.engineer_id GROUP BY T1.engineer_id ORDER BY count(*) ASC LIMIT 1",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.engineer_id"
                },
                {
                    "value": "T1.first_name"
                },
                {
                    "value": "T1.last_name"
                }
            ],
            "from": [
                {
                    "value": "Maintenance_Engineers",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "Engineer_Visits",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.engineer_id",
                            "T2.engineer_id"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.engineer_id"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "asc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                1,
                "Etha",
                "Reinger"
            ]
        ],
        "cypher_query": "MATCH (T1:Maintenance_Engineers)-[]-(T2:Engineer_Visits)\nWITH T1.first_name AS first_name, T1.engineer_id AS engineer_id, T1.last_name AS last_name, count(T1.engineer_id) AS count\nRETURN engineer_id,first_name,last_name\nORDER BY count ASC\nLIMIT 1",
        "cypher_ans": [
            [
                8,
                "Nellie",
                "Hirthe"
            ]
        ]
    },
    {
        "db_id": "assets_maintenance",
        "question": "Which staff have contacted which engineers? List the staff name and the engineer first name and last name.",
        "sql_query": "SELECT T1.staff_name ,  T3.first_name ,  T3.last_name FROM Staff AS T1 JOIN Engineer_Visits AS T2 ON T1.staff_id  =  T2.contact_staff_id JOIN Maintenance_Engineers AS T3 ON T2.engineer_id  =  T3.engineer_id",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.staff_name"
                },
                {
                    "value": "T3.first_name"
                },
                {
                    "value": "T3.last_name"
                }
            ],
            "from": [
                {
                    "value": "Staff",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "Engineer_Visits",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.staff_id",
                            "T2.contact_staff_id"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "Maintenance_Engineers",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T2.engineer_id",
                            "T3.engineer_id"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "Christophe",
                "Nellie",
                "Hirthe"
            ],
            [
                "Kadin",
                "Archibald",
                "Streich"
            ],
            [
                "Oren",
                "Alexys",
                "Simonis"
            ],
            [
                "Berneice",
                "Lorine",
                "Morar"
            ],
            [
                "Edmond",
                "Archibald",
                "Streich"
            ],
            [
                "Rodger",
                "Archibald",
                "Streich"
            ],
            [
                "Cyrus",
                "Naomi",
                "Price"
            ],
            [
                "Bernice",
                "Courtney",
                "Adams"
            ],
            [
                "Berneice",
                "Etha",
                "Reinger"
            ],
            [
                "Edmond",
                "Naomi",
                "Price"
            ],
            [
                "Bernice",
                "Lorine",
                "Morar"
            ],
            [
                "Edmond",
                "Cullen",
                "Kunde"
            ]
        ],
        "cypher_query": "MATCH (T1:Staff)-[]-(T3:Maintenance_Engineers)-[]-(T2:Engineer_Visits)\nRETURN T1.staff_name,T3.first_name,T3.last_name",
        "cypher_ans": []
    },
    {
        "db_id": "assets_maintenance",
        "question": "Which skill is used in fixing the most number of faults? List the skill id and description.",
        "sql_query": "SELECT T1.skill_id ,  T1.skill_description FROM Skills AS T1 JOIN Skills_Required_To_Fix AS T2 ON T1.skill_id  =  T2.skill_id GROUP BY T1.skill_id ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.skill_id"
                },
                {
                    "value": "T1.skill_description"
                }
            ],
            "from": [
                {
                    "value": "Skills",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "Skills_Required_To_Fix",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.skill_id",
                            "T2.skill_id"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.skill_id"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                3,
                "TV, Video"
            ]
        ],
        "cypher_query": "MATCH (T1:Skills)-[T2:Skills_Required_To_Fix]-()\nWITH T1.skill_id AS skill_id, T1.skill_description AS skill_description, count(T1.skill_id) AS count\nRETURN skill_id,skill_description\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": [
            [
                2,
                "Mechanical"
            ]
        ]
    }
][][
    {
        "db_id": "assets_maintenance",
        "question": "List all every engineer's first name, last name, details and coresponding skill description.",
        "sql_query": "SELECT T1.first_name ,  T1.last_name ,  T1.other_details ,  T3.skill_description FROM Maintenance_Engineers AS T1 JOIN Engineer_Skills AS T2 ON T1.engineer_id  =  T2.engineer_id JOIN Skills AS T3 ON T2.skill_id  =  T3.skill_id",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.first_name"
                },
                {
                    "value": "T1.last_name"
                },
                {
                    "value": "T1.other_details"
                },
                {
                    "value": "T3.skill_description"
                }
            ],
            "from": [
                {
                    "value": "Maintenance_Engineers",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "Engineer_Skills",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.engineer_id",
                            "T2.engineer_id"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "Skills",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T2.skill_id",
                            "T3.skill_id"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "Naomi",
                "Price",
                null,
                "Mechanical"
            ],
            [
                "Naomi",
                "Price",
                null,
                "Electrical"
            ],
            [
                "Archibald",
                "Streich",
                null,
                "Electrical"
            ],
            [
                "Courtney",
                "Adams",
                null,
                "Electrical"
            ],
            [
                "Weston",
                "Hahn",
                null,
                "Electrical"
            ],
            [
                "Courtney",
                "Adams",
                null,
                "TV, Video"
            ],
            [
                "Weston",
                "Hahn",
                null,
                "Mechanical"
            ],
            [
                "Josie",
                "Harvey",
                "Skilled",
                "TV, Video"
            ],
            [
                "Manley",
                "Grady",
                null,
                "Mechanical"
            ],
            [
                "Nellie",
                "Hirthe",
                null,
                "TV, Video"
            ],
            [
                "Archibald",
                "Streich",
                null,
                "TV, Video"
            ],
            [
                "Manley",
                "Grady",
                null,
                "Electrical"
            ],
            [
                "Brian",
                "Stamm",
                null,
                "TV, Video"
            ],
            [
                "Samanta",
                "Hauck",
                null,
                "Electrical"
            ],
            [
                "Cullen",
                "Kunde",
                null,
                "Mechanical"
            ],
            [
                "Alexys",
                "Simonis",
                null,
                "Mechanical"
            ],
            [
                "Clemens",
                "Orn",
                null,
                "Mechanical"
            ],
            [
                "Nellie",
                "Hirthe",
                null,
                "Electrical"
            ],
            [
                "Lorine",
                "Morar",
                null,
                "Electrical"
            ]
        ],
        "cypher_query": "MATCH (T1:Maintenance_Engineers)-[T2:Engineer_Skills]-(T3:Skills)\nRETURN T1.first_name,T1.last_name,T1.other_details,T3.skill_description",
        "cypher_ans": [
            [
                "Nellie",
                "Hirthe",
                null,
                "Electrical"
            ],
            [
                "Archibald",
                "Streich",
                null,
                "Electrical"
            ],
            [
                "Courtney",
                "Adams",
                null,
                "Electrical"
            ],
            [
                "Weston",
                "Hahn",
                null,
                "Electrical"
            ],
            [
                "Manley",
                "Grady",
                null,
                "Electrical"
            ],
            [
                "Samanta",
                "Hauck",
                null,
                "Electrical"
            ],
            [
                "Naomi",
                "Price",
                null,
                "Electrical"
            ],
            [
                "Lorine",
                "Morar",
                null,
                "Electrical"
            ],
            [
                "Manley",
                "Grady",
                null,
                "Mechanical"
            ],
            [
                "Cullen",
                "Kunde",
                null,
                "Mechanical"
            ],
            [
                "Weston",
                "Hahn",
                null,
                "Mechanical"
            ],
            [
                "Naomi",
                "Price",
                null,
                "Mechanical"
            ],
            [
                "Alexys",
                "Simonis",
                null,
                "Mechanical"
            ],
            [
                "Clemens",
                "Orn",
                null,
                "Mechanical"
            ],
            [
                "Josie",
                "Harvey",
                "Skilled",
                "TV, Video"
            ],
            [
                "Archibald",
                "Streich",
                null,
                "TV, Video"
            ],
            [
                "Nellie",
                "Hirthe",
                null,
                "TV, Video"
            ],
            [
                "Courtney",
                "Adams",
                null,
                "TV, Video"
            ],
            [
                "Brian",
                "Stamm",
                null,
                "TV, Video"
            ]
        ]
    },
    {
        "db_id": "assets_maintenance",
        "question": "For all the faults of different parts, what are all the decriptions of the skills required to fix them? List the name of the faults and the skill description.",
        "sql_query": "SELECT T1.fault_short_name ,  T3.skill_description FROM Part_Faults AS T1 JOIN Skills_Required_To_Fix AS T2 ON T1.part_fault_id  =  T2.part_fault_id JOIN Skills AS T3 ON T2.skill_id  =  T3.skill_id",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.fault_short_name"
                },
                {
                    "value": "T3.skill_description"
                }
            ],
            "from": [
                {
                    "value": "Part_Faults",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "Skills_Required_To_Fix",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.part_fault_id",
                            "T2.part_fault_id"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "Skills",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T2.skill_id",
                            "T3.skill_id"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "TW",
                "Mechanical"
            ],
            [
                "MW",
                "TV, Video"
            ],
            [
                "PW",
                "Electrical"
            ],
            [
                "PW",
                "TV, Video"
            ],
            [
                "TW",
                "TV, Video"
            ],
            [
                "PW",
                "Mechanical"
            ],
            [
                "MW",
                "Mechanical"
            ]
        ],
        "cypher_query": "MATCH (T1:Part_Faults)-[T2:Skills_Required_To_Fix]-(T3:Skills)\nRETURN T1.fault_short_name,T3.skill_description",
        "cypher_ans": [
            [
                "PW",
                "Electrical"
            ],
            [
                "TW",
                "Mechanical"
            ],
            [
                "PW",
                "Mechanical"
            ],
            [
                "MW",
                "Mechanical"
            ],
            [
                "PW",
                "TV, Video"
            ],
            [
                "TW",
                "TV, Video"
            ],
            [
                "MW",
                "TV, Video"
            ]
        ]
    },
    {
        "db_id": "assets_maintenance",
        "question": "How many assets can each parts be used in? List the part name and the number.",
        "sql_query": "SELECT T1.part_name ,  count(*) FROM Parts AS T1 JOIN Asset_Parts AS T2 ON T1.part_id  =  T2.part_id GROUP BY T1.part_name",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.part_name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "Parts",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "Asset_Parts",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.part_id",
                            "T2.part_id"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.part_name"
            }
        },
        "sql_ans": [
            [
                "middle",
                5
            ],
            [
                "package",
                6
            ],
            [
                "top",
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Parts)-[T2:Asset_Parts]-()\nWITH count(T1.part_name) AS count, T1.part_name AS part_name\nRETURN part_name,count",
        "cypher_ans": [
            [
                "top",
                4
            ],
            [
                "middle",
                5
            ],
            [
                "package",
                5
            ]
        ]
    },
    {
        "db_id": "assets_maintenance",
        "question": "Among those engineers who have visited, which engineer makes the least number of visits? List the engineer id, first name and last name.",
        "sql_query": "SELECT T1.engineer_id ,  T1.first_name ,  T1.last_name FROM Maintenance_Engineers AS T1 JOIN Engineer_Visits AS T2 ON T1.engineer_id  =  T2.engineer_id GROUP BY T1.engineer_id ORDER BY count(*) ASC LIMIT 1",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.engineer_id"
                },
                {
                    "value": "T1.first_name"
                },
                {
                    "value": "T1.last_name"
                }
            ],
            "from": [
                {
                    "value": "Maintenance_Engineers",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "Engineer_Visits",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.engineer_id",
                            "T2.engineer_id"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.engineer_id"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "asc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                1,
                "Etha",
                "Reinger"
            ]
        ],
        "cypher_query": "MATCH (T1:Maintenance_Engineers)-[]-(T2:Engineer_Visits)\nWITH count(T1.engineer_id) AS count, T1.first_name AS first_name, T1.engineer_id AS engineer_id, T1.last_name AS last_name\nRETURN engineer_id,first_name,last_name\nORDER BY count ASC\nLIMIT 1",
        "cypher_ans": [
            [
                8,
                "Nellie",
                "Hirthe"
            ]
        ]
    },
    {
        "db_id": "assets_maintenance",
        "question": "Which staff have contacted which engineers? List the staff name and the engineer first name and last name.",
        "sql_query": "SELECT T1.staff_name ,  T3.first_name ,  T3.last_name FROM Staff AS T1 JOIN Engineer_Visits AS T2 ON T1.staff_id  =  T2.contact_staff_id JOIN Maintenance_Engineers AS T3 ON T2.engineer_id  =  T3.engineer_id",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.staff_name"
                },
                {
                    "value": "T3.first_name"
                },
                {
                    "value": "T3.last_name"
                }
            ],
            "from": [
                {
                    "value": "Staff",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "Engineer_Visits",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.staff_id",
                            "T2.contact_staff_id"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "Maintenance_Engineers",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T2.engineer_id",
                            "T3.engineer_id"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "Christophe",
                "Nellie",
                "Hirthe"
            ],
            [
                "Kadin",
                "Archibald",
                "Streich"
            ],
            [
                "Oren",
                "Alexys",
                "Simonis"
            ],
            [
                "Berneice",
                "Lorine",
                "Morar"
            ],
            [
                "Edmond",
                "Archibald",
                "Streich"
            ],
            [
                "Rodger",
                "Archibald",
                "Streich"
            ],
            [
                "Cyrus",
                "Naomi",
                "Price"
            ],
            [
                "Bernice",
                "Courtney",
                "Adams"
            ],
            [
                "Berneice",
                "Etha",
                "Reinger"
            ],
            [
                "Edmond",
                "Naomi",
                "Price"
            ],
            [
                "Bernice",
                "Lorine",
                "Morar"
            ],
            [
                "Edmond",
                "Cullen",
                "Kunde"
            ]
        ],
        "cypher_query": "MATCH (T1:Staff)-[]-(T3:Maintenance_Engineers)-[]-(T2:Engineer_Visits)\nRETURN T1.staff_name,T3.first_name,T3.last_name",
        "cypher_ans": []
    },
    {
        "db_id": "assets_maintenance",
        "question": "Which skill is used in fixing the most number of faults? List the skill id and description.",
        "sql_query": "SELECT T1.skill_id ,  T1.skill_description FROM Skills AS T1 JOIN Skills_Required_To_Fix AS T2 ON T1.skill_id  =  T2.skill_id GROUP BY T1.skill_id ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.skill_id"
                },
                {
                    "value": "T1.skill_description"
                }
            ],
            "from": [
                {
                    "value": "Skills",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "Skills_Required_To_Fix",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.skill_id",
                            "T2.skill_id"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.skill_id"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                3,
                "TV, Video"
            ]
        ],
        "cypher_query": "MATCH (T1:Skills)-[T2:Skills_Required_To_Fix]-()\nWITH T1.skill_id AS skill_id, T1.skill_description AS skill_description, count(T1.skill_id) AS count\nRETURN skill_id,skill_description\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": [
            [
                2,
                "Mechanical"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of medication used on the patient who stays in room 111?",
        "sql_query": "SELECT T4.name FROM stay AS T1 JOIN patient AS T2 ON T1.Patient  =  T2.SSN JOIN Prescribes AS T3 ON T3.Patient  =  T2.SSN JOIN Medication AS T4 ON T3.Medication  =  T4.Code WHERE room  =  111",
        "parsed_sql": {
            "select": {
                "value": "T4.name"
            },
            "from": [
                {
                    "value": "stay",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Patient",
                            "T2.SSN"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "Prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.Patient",
                            "T2.SSN"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T4",
                        "value": "Medication",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.Medication",
                            "T4.Code"
                        ]
                    }
                }
            ],
            "where": {
                "eq": [
                    "room",
                    111
                ]
            }
        },
        "sql_ans": [
            [
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Stay)-[]-(T4:Medication)-[]-(T3:Prescribes)-[]-(T2:Patient)-[]-(T3:Prescribes)\nWHERE T1.Room = 111\nRETURN T4.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the medication used for the patient staying in room 111?",
        "sql_query": "SELECT T4.name FROM stay AS T1 JOIN patient AS T2 ON T1.Patient  =  T2.SSN JOIN Prescribes AS T3 ON T3.Patient  =  T2.SSN JOIN Medication AS T4 ON T3.Medication  =  T4.Code WHERE room  =  111",
        "parsed_sql": {
            "select": {
                "value": "T4.name"
            },
            "from": [
                {
                    "value": "stay",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Patient",
                            "T2.SSN"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "Prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.Patient",
                            "T2.SSN"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T4",
                        "value": "Medication",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.Medication",
                            "T4.Code"
                        ]
                    }
                }
            ],
            "where": {
                "eq": [
                    "room",
                    111
                ]
            }
        },
        "sql_ans": [
            [
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Stay)-[]-(T4:Medication)-[]-(T3:Prescribes)-[]-(T2:Patient)-[]-(T3:Prescribes)\nWHERE T1.Room = 111\nRETURN T4.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the nurse has the most appointments?",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH T1.Name AS Name, count(T1.EmployeeID) AS count\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the nurse who has the largest number of appointments.",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH T1.Name AS Name, count(T1.EmployeeID) AS count\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of medications prescribed for each brand.",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH count(T1.Brand) AS count, T1.Name AS Name\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many medications are prescribed for each brand?",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH count(T1.Brand) AS count, T1.Name AS Name\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    }
][
    {
        "db_id": "assets_maintenance",
        "question": "List all every engineer's first name, last name, details and coresponding skill description.",
        "sql_query": "SELECT T1.first_name ,  T1.last_name ,  T1.other_details ,  T3.skill_description FROM Maintenance_Engineers AS T1 JOIN Engineer_Skills AS T2 ON T1.engineer_id  =  T2.engineer_id JOIN Skills AS T3 ON T2.skill_id  =  T3.skill_id",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.first_name"
                },
                {
                    "value": "T1.last_name"
                },
                {
                    "value": "T1.other_details"
                },
                {
                    "value": "T3.skill_description"
                }
            ],
            "from": [
                {
                    "value": "Maintenance_Engineers",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "Engineer_Skills",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.engineer_id",
                            "T2.engineer_id"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "Skills",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T2.skill_id",
                            "T3.skill_id"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "Naomi",
                "Price",
                null,
                "Mechanical"
            ],
            [
                "Naomi",
                "Price",
                null,
                "Electrical"
            ],
            [
                "Archibald",
                "Streich",
                null,
                "Electrical"
            ],
            [
                "Courtney",
                "Adams",
                null,
                "Electrical"
            ],
            [
                "Weston",
                "Hahn",
                null,
                "Electrical"
            ],
            [
                "Courtney",
                "Adams",
                null,
                "TV, Video"
            ],
            [
                "Weston",
                "Hahn",
                null,
                "Mechanical"
            ],
            [
                "Josie",
                "Harvey",
                "Skilled",
                "TV, Video"
            ],
            [
                "Manley",
                "Grady",
                null,
                "Mechanical"
            ],
            [
                "Nellie",
                "Hirthe",
                null,
                "TV, Video"
            ],
            [
                "Archibald",
                "Streich",
                null,
                "TV, Video"
            ],
            [
                "Manley",
                "Grady",
                null,
                "Electrical"
            ],
            [
                "Brian",
                "Stamm",
                null,
                "TV, Video"
            ],
            [
                "Samanta",
                "Hauck",
                null,
                "Electrical"
            ],
            [
                "Cullen",
                "Kunde",
                null,
                "Mechanical"
            ],
            [
                "Alexys",
                "Simonis",
                null,
                "Mechanical"
            ],
            [
                "Clemens",
                "Orn",
                null,
                "Mechanical"
            ],
            [
                "Nellie",
                "Hirthe",
                null,
                "Electrical"
            ],
            [
                "Lorine",
                "Morar",
                null,
                "Electrical"
            ]
        ],
        "cypher_query": "MATCH (T1:Maintenance_Engineers)-[T2:Engineer_Skills]-(T3:Skills)\nRETURN T1.first_name,T1.last_name,T1.other_details,T3.skill_description",
        "cypher_ans": [
            [
                "Nellie",
                "Hirthe",
                null,
                "Electrical"
            ],
            [
                "Archibald",
                "Streich",
                null,
                "Electrical"
            ],
            [
                "Courtney",
                "Adams",
                null,
                "Electrical"
            ],
            [
                "Weston",
                "Hahn",
                null,
                "Electrical"
            ],
            [
                "Manley",
                "Grady",
                null,
                "Electrical"
            ],
            [
                "Samanta",
                "Hauck",
                null,
                "Electrical"
            ],
            [
                "Naomi",
                "Price",
                null,
                "Electrical"
            ],
            [
                "Lorine",
                "Morar",
                null,
                "Electrical"
            ],
            [
                "Manley",
                "Grady",
                null,
                "Mechanical"
            ],
            [
                "Cullen",
                "Kunde",
                null,
                "Mechanical"
            ],
            [
                "Weston",
                "Hahn",
                null,
                "Mechanical"
            ],
            [
                "Naomi",
                "Price",
                null,
                "Mechanical"
            ],
            [
                "Alexys",
                "Simonis",
                null,
                "Mechanical"
            ],
            [
                "Clemens",
                "Orn",
                null,
                "Mechanical"
            ],
            [
                "Josie",
                "Harvey",
                "Skilled",
                "TV, Video"
            ],
            [
                "Archibald",
                "Streich",
                null,
                "TV, Video"
            ],
            [
                "Nellie",
                "Hirthe",
                null,
                "TV, Video"
            ],
            [
                "Courtney",
                "Adams",
                null,
                "TV, Video"
            ],
            [
                "Brian",
                "Stamm",
                null,
                "TV, Video"
            ]
        ]
    },
    {
        "db_id": "assets_maintenance",
        "question": "For all the faults of different parts, what are all the decriptions of the skills required to fix them? List the name of the faults and the skill description.",
        "sql_query": "SELECT T1.fault_short_name ,  T3.skill_description FROM Part_Faults AS T1 JOIN Skills_Required_To_Fix AS T2 ON T1.part_fault_id  =  T2.part_fault_id JOIN Skills AS T3 ON T2.skill_id  =  T3.skill_id",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.fault_short_name"
                },
                {
                    "value": "T3.skill_description"
                }
            ],
            "from": [
                {
                    "value": "Part_Faults",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "Skills_Required_To_Fix",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.part_fault_id",
                            "T2.part_fault_id"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "Skills",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T2.skill_id",
                            "T3.skill_id"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "TW",
                "Mechanical"
            ],
            [
                "MW",
                "TV, Video"
            ],
            [
                "PW",
                "Electrical"
            ],
            [
                "PW",
                "TV, Video"
            ],
            [
                "TW",
                "TV, Video"
            ],
            [
                "PW",
                "Mechanical"
            ],
            [
                "MW",
                "Mechanical"
            ]
        ],
        "cypher_query": "MATCH (T1:Part_Faults)-[T2:Skills_Required_To_Fix]-(T3:Skills)\nRETURN T1.fault_short_name,T3.skill_description",
        "cypher_ans": [
            [
                "PW",
                "Electrical"
            ],
            [
                "TW",
                "Mechanical"
            ],
            [
                "PW",
                "Mechanical"
            ],
            [
                "MW",
                "Mechanical"
            ],
            [
                "PW",
                "TV, Video"
            ],
            [
                "TW",
                "TV, Video"
            ],
            [
                "MW",
                "TV, Video"
            ]
        ]
    },
    {
        "db_id": "assets_maintenance",
        "question": "How many assets can each parts be used in? List the part name and the number.",
        "sql_query": "SELECT T1.part_name ,  count(*) FROM Parts AS T1 JOIN Asset_Parts AS T2 ON T1.part_id  =  T2.part_id GROUP BY T1.part_name",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.part_name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "Parts",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "Asset_Parts",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.part_id",
                            "T2.part_id"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.part_name"
            }
        },
        "sql_ans": [
            [
                "middle",
                5
            ],
            [
                "package",
                6
            ],
            [
                "top",
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Parts)-[T2:Asset_Parts]-()\nWITH count(T1.part_name) AS count, T1.part_name AS part_name\nRETURN part_name,count",
        "cypher_ans": [
            [
                "top",
                4
            ],
            [
                "middle",
                5
            ],
            [
                "package",
                5
            ]
        ]
    },
    {
        "db_id": "assets_maintenance",
        "question": "Among those engineers who have visited, which engineer makes the least number of visits? List the engineer id, first name and last name.",
        "sql_query": "SELECT T1.engineer_id ,  T1.first_name ,  T1.last_name FROM Maintenance_Engineers AS T1 JOIN Engineer_Visits AS T2 ON T1.engineer_id  =  T2.engineer_id GROUP BY T1.engineer_id ORDER BY count(*) ASC LIMIT 1",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.engineer_id"
                },
                {
                    "value": "T1.first_name"
                },
                {
                    "value": "T1.last_name"
                }
            ],
            "from": [
                {
                    "value": "Maintenance_Engineers",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "Engineer_Visits",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.engineer_id",
                            "T2.engineer_id"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.engineer_id"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "asc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                1,
                "Etha",
                "Reinger"
            ]
        ],
        "cypher_query": "MATCH (T1:Maintenance_Engineers)-[]-(T2:Engineer_Visits)\nWITH T1.last_name AS last_name, count(T1.engineer_id) AS count, T1.first_name AS first_name, T1.engineer_id AS engineer_id\nRETURN engineer_id,first_name,last_name\nORDER BY count ASC\nLIMIT 1",
        "cypher_ans": [
            [
                8,
                "Nellie",
                "Hirthe"
            ]
        ]
    },
    {
        "db_id": "assets_maintenance",
        "question": "Which staff have contacted which engineers? List the staff name and the engineer first name and last name.",
        "sql_query": "SELECT T1.staff_name ,  T3.first_name ,  T3.last_name FROM Staff AS T1 JOIN Engineer_Visits AS T2 ON T1.staff_id  =  T2.contact_staff_id JOIN Maintenance_Engineers AS T3 ON T2.engineer_id  =  T3.engineer_id",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.staff_name"
                },
                {
                    "value": "T3.first_name"
                },
                {
                    "value": "T3.last_name"
                }
            ],
            "from": [
                {
                    "value": "Staff",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "Engineer_Visits",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.staff_id",
                            "T2.contact_staff_id"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "Maintenance_Engineers",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T2.engineer_id",
                            "T3.engineer_id"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "Christophe",
                "Nellie",
                "Hirthe"
            ],
            [
                "Kadin",
                "Archibald",
                "Streich"
            ],
            [
                "Oren",
                "Alexys",
                "Simonis"
            ],
            [
                "Berneice",
                "Lorine",
                "Morar"
            ],
            [
                "Edmond",
                "Archibald",
                "Streich"
            ],
            [
                "Rodger",
                "Archibald",
                "Streich"
            ],
            [
                "Cyrus",
                "Naomi",
                "Price"
            ],
            [
                "Bernice",
                "Courtney",
                "Adams"
            ],
            [
                "Berneice",
                "Etha",
                "Reinger"
            ],
            [
                "Edmond",
                "Naomi",
                "Price"
            ],
            [
                "Bernice",
                "Lorine",
                "Morar"
            ],
            [
                "Edmond",
                "Cullen",
                "Kunde"
            ]
        ],
        "cypher_query": "MATCH (T1:Staff)-[]-(T3:Maintenance_Engineers)-[]-(T2:Engineer_Visits)\nRETURN T1.staff_name,T3.first_name,T3.last_name",
        "cypher_ans": []
    },
    {
        "db_id": "assets_maintenance",
        "question": "Which skill is used in fixing the most number of faults? List the skill id and description.",
        "sql_query": "SELECT T1.skill_id ,  T1.skill_description FROM Skills AS T1 JOIN Skills_Required_To_Fix AS T2 ON T1.skill_id  =  T2.skill_id GROUP BY T1.skill_id ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.skill_id"
                },
                {
                    "value": "T1.skill_description"
                }
            ],
            "from": [
                {
                    "value": "Skills",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "Skills_Required_To_Fix",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.skill_id",
                            "T2.skill_id"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.skill_id"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                3,
                "TV, Video"
            ]
        ],
        "cypher_query": "MATCH (T1:Skills)-[T2:Skills_Required_To_Fix]-()\nWITH T1.skill_id AS skill_id, count(T1.skill_id) AS count, T1.skill_description AS skill_description\nRETURN skill_id,skill_description\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": [
            [
                2,
                "Mechanical"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of medication used on the patient who stays in room 111?",
        "sql_query": "SELECT T4.name FROM stay AS T1 JOIN patient AS T2 ON T1.Patient  =  T2.SSN JOIN Prescribes AS T3 ON T3.Patient  =  T2.SSN JOIN Medication AS T4 ON T3.Medication  =  T4.Code WHERE room  =  111",
        "parsed_sql": {
            "select": {
                "value": "T4.name"
            },
            "from": [
                {
                    "value": "stay",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Patient",
                            "T2.SSN"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "Prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.Patient",
                            "T2.SSN"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T4",
                        "value": "Medication",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.Medication",
                            "T4.Code"
                        ]
                    }
                }
            ],
            "where": {
                "eq": [
                    "room",
                    111
                ]
            }
        },
        "sql_ans": [
            [
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Stay)-[]-(T4:Medication)-[]-(T3:Prescribes)-[]-(T2:Patient)-[]-(T3:Prescribes)\nWHERE T1.Room = 111\nRETURN T4.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the medication used for the patient staying in room 111?",
        "sql_query": "SELECT T4.name FROM stay AS T1 JOIN patient AS T2 ON T1.Patient  =  T2.SSN JOIN Prescribes AS T3 ON T3.Patient  =  T2.SSN JOIN Medication AS T4 ON T3.Medication  =  T4.Code WHERE room  =  111",
        "parsed_sql": {
            "select": {
                "value": "T4.name"
            },
            "from": [
                {
                    "value": "stay",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Patient",
                            "T2.SSN"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "Prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.Patient",
                            "T2.SSN"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T4",
                        "value": "Medication",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.Medication",
                            "T4.Code"
                        ]
                    }
                }
            ],
            "where": {
                "eq": [
                    "room",
                    111
                ]
            }
        },
        "sql_ans": [
            [
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Stay)-[]-(T4:Medication)-[]-(T3:Prescribes)-[]-(T2:Patient)-[]-(T3:Prescribes)\nWHERE T1.Room = 111\nRETURN T4.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the nurse has the most appointments?",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH T1.Name AS Name, count(T1.EmployeeID) AS count\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the nurse who has the largest number of appointments.",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH T1.Name AS Name, count(T1.EmployeeID) AS count\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of medications prescribed for each brand.",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH T1.Name AS Name, count(T1.Brand) AS count\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many medications are prescribed for each brand?",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH T1.Name AS Name, count(T1.Brand) AS count\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    }
][][][][][][][][][][][][][
    {
        "db_id": "assets_maintenance",
        "question": "List all every engineer's first name, last name, details and coresponding skill description.",
        "sql_query": "SELECT T1.first_name ,  T1.last_name ,  T1.other_details ,  T3.skill_description FROM Maintenance_Engineers AS T1 JOIN Engineer_Skills AS T2 ON T1.engineer_id  =  T2.engineer_id JOIN Skills AS T3 ON T2.skill_id  =  T3.skill_id",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.first_name"
                },
                {
                    "value": "T1.last_name"
                },
                {
                    "value": "T1.other_details"
                },
                {
                    "value": "T3.skill_description"
                }
            ],
            "from": [
                {
                    "value": "Maintenance_Engineers",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "Engineer_Skills",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.engineer_id",
                            "T2.engineer_id"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "Skills",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T2.skill_id",
                            "T3.skill_id"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "Naomi",
                "Price",
                null,
                "Mechanical"
            ],
            [
                "Naomi",
                "Price",
                null,
                "Electrical"
            ],
            [
                "Archibald",
                "Streich",
                null,
                "Electrical"
            ],
            [
                "Courtney",
                "Adams",
                null,
                "Electrical"
            ],
            [
                "Weston",
                "Hahn",
                null,
                "Electrical"
            ],
            [
                "Courtney",
                "Adams",
                null,
                "TV, Video"
            ],
            [
                "Weston",
                "Hahn",
                null,
                "Mechanical"
            ],
            [
                "Josie",
                "Harvey",
                "Skilled",
                "TV, Video"
            ],
            [
                "Manley",
                "Grady",
                null,
                "Mechanical"
            ],
            [
                "Nellie",
                "Hirthe",
                null,
                "TV, Video"
            ],
            [
                "Archibald",
                "Streich",
                null,
                "TV, Video"
            ],
            [
                "Manley",
                "Grady",
                null,
                "Electrical"
            ],
            [
                "Brian",
                "Stamm",
                null,
                "TV, Video"
            ],
            [
                "Samanta",
                "Hauck",
                null,
                "Electrical"
            ],
            [
                "Cullen",
                "Kunde",
                null,
                "Mechanical"
            ],
            [
                "Alexys",
                "Simonis",
                null,
                "Mechanical"
            ],
            [
                "Clemens",
                "Orn",
                null,
                "Mechanical"
            ],
            [
                "Nellie",
                "Hirthe",
                null,
                "Electrical"
            ],
            [
                "Lorine",
                "Morar",
                null,
                "Electrical"
            ]
        ],
        "cypher_query": "MATCH (T1:`assets_maintenance.Maintenance_Engineers`)-[T2:`assets_maintenance.Engineer_Skills`]-(T3:`assets_maintenance.Skills`)\nRETURN T1.first_name,T1.last_name,T1.other_details,T3.skill_description",
        "cypher_ans": [
            [
                "Manley",
                "Grady",
                null,
                "Electrical"
            ],
            [
                "Nellie",
                "Hirthe",
                null,
                "Electrical"
            ],
            [
                "Samanta",
                "Hauck",
                null,
                "Electrical"
            ],
            [
                "Courtney",
                "Adams",
                null,
                "Electrical"
            ],
            [
                "Lorine",
                "Morar",
                null,
                "Electrical"
            ],
            [
                "Naomi",
                "Price",
                null,
                "Electrical"
            ],
            [
                "Weston",
                "Hahn",
                null,
                "Electrical"
            ],
            [
                "Archibald",
                "Streich",
                null,
                "Electrical"
            ],
            [
                "Cullen",
                "Kunde",
                null,
                "Mechanical"
            ],
            [
                "Weston",
                "Hahn",
                null,
                "Mechanical"
            ],
            [
                "Alexys",
                "Simonis",
                null,
                "Mechanical"
            ],
            [
                "Clemens",
                "Orn",
                null,
                "Mechanical"
            ],
            [
                "Manley",
                "Grady",
                null,
                "Mechanical"
            ],
            [
                "Naomi",
                "Price",
                null,
                "Mechanical"
            ],
            [
                "Courtney",
                "Adams",
                null,
                "TV, Video"
            ],
            [
                "Brian",
                "Stamm",
                null,
                "TV, Video"
            ],
            [
                "Josie",
                "Harvey",
                "Skilled",
                "TV, Video"
            ],
            [
                "Nellie",
                "Hirthe",
                null,
                "TV, Video"
            ],
            [
                "Archibald",
                "Streich",
                null,
                "TV, Video"
            ]
        ]
    },
    {
        "db_id": "assets_maintenance",
        "question": "For all the faults of different parts, what are all the decriptions of the skills required to fix them? List the name of the faults and the skill description.",
        "sql_query": "SELECT T1.fault_short_name ,  T3.skill_description FROM Part_Faults AS T1 JOIN Skills_Required_To_Fix AS T2 ON T1.part_fault_id  =  T2.part_fault_id JOIN Skills AS T3 ON T2.skill_id  =  T3.skill_id",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.fault_short_name"
                },
                {
                    "value": "T3.skill_description"
                }
            ],
            "from": [
                {
                    "value": "Part_Faults",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "Skills_Required_To_Fix",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.part_fault_id",
                            "T2.part_fault_id"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "Skills",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T2.skill_id",
                            "T3.skill_id"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "TW",
                "Mechanical"
            ],
            [
                "MW",
                "TV, Video"
            ],
            [
                "PW",
                "Electrical"
            ],
            [
                "PW",
                "TV, Video"
            ],
            [
                "TW",
                "TV, Video"
            ],
            [
                "PW",
                "Mechanical"
            ],
            [
                "MW",
                "Mechanical"
            ]
        ],
        "cypher_query": "MATCH (T1:`assets_maintenance.Part_Faults`)-[T2:`assets_maintenance.Skills_Required_To_Fix`]-(T3:`assets_maintenance.Skills`)\nRETURN T1.fault_short_name,T3.skill_description",
        "cypher_ans": [
            [
                "PW",
                "Electrical"
            ],
            [
                "TW",
                "Mechanical"
            ],
            [
                "PW",
                "Mechanical"
            ],
            [
                "MW",
                "Mechanical"
            ],
            [
                "TW",
                "TV, Video"
            ],
            [
                "MW",
                "TV, Video"
            ],
            [
                "PW",
                "TV, Video"
            ]
        ]
    },
    {
        "db_id": "assets_maintenance",
        "question": "How many assets can each parts be used in? List the part name and the number.",
        "sql_query": "SELECT T1.part_name ,  count(*) FROM Parts AS T1 JOIN Asset_Parts AS T2 ON T1.part_id  =  T2.part_id GROUP BY T1.part_name",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.part_name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "Parts",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "Asset_Parts",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.part_id",
                            "T2.part_id"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.part_name"
            }
        },
        "sql_ans": [
            [
                "middle",
                5
            ],
            [
                "package",
                6
            ],
            [
                "top",
                4
            ]
        ],
        "cypher_query": "MATCH (T1:`assets_maintenance.Parts`)-[T2:`assets_maintenance.Asset_Parts`]-()\nWITH count(T1.part_name) AS count, T1.part_name AS part_name\nRETURN part_name,count",
        "cypher_ans": [
            [
                "top",
                4
            ],
            [
                "middle",
                5
            ],
            [
                "package",
                5
            ]
        ]
    },
    {
        "db_id": "assets_maintenance",
        "question": "Among those engineers who have visited, which engineer makes the least number of visits? List the engineer id, first name and last name.",
        "sql_query": "SELECT T1.engineer_id ,  T1.first_name ,  T1.last_name FROM Maintenance_Engineers AS T1 JOIN Engineer_Visits AS T2 ON T1.engineer_id  =  T2.engineer_id GROUP BY T1.engineer_id ORDER BY count(*) ASC LIMIT 1",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.engineer_id"
                },
                {
                    "value": "T1.first_name"
                },
                {
                    "value": "T1.last_name"
                }
            ],
            "from": [
                {
                    "value": "Maintenance_Engineers",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "Engineer_Visits",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.engineer_id",
                            "T2.engineer_id"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.engineer_id"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "asc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                1,
                "Etha",
                "Reinger"
            ]
        ],
        "cypher_query": "MATCH (T1:`assets_maintenance.Maintenance_Engineers`)-[]-(T2:`assets_maintenance.Engineer_Visits`)\nWITH count(T1.engineer_id) AS count, T1.engineer_id AS engineer_id, T1.last_name AS last_name, T1.first_name AS first_name\nRETURN engineer_id,first_name,last_name\nORDER BY count ASC\nLIMIT 1",
        "cypher_ans": [
            [
                8,
                "Nellie",
                "Hirthe"
            ]
        ]
    },
    {
        "db_id": "assets_maintenance",
        "question": "Which staff have contacted which engineers? List the staff name and the engineer first name and last name.",
        "sql_query": "SELECT T1.staff_name ,  T3.first_name ,  T3.last_name FROM Staff AS T1 JOIN Engineer_Visits AS T2 ON T1.staff_id  =  T2.contact_staff_id JOIN Maintenance_Engineers AS T3 ON T2.engineer_id  =  T3.engineer_id",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.staff_name"
                },
                {
                    "value": "T3.first_name"
                },
                {
                    "value": "T3.last_name"
                }
            ],
            "from": [
                {
                    "value": "Staff",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "Engineer_Visits",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.staff_id",
                            "T2.contact_staff_id"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "Maintenance_Engineers",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T2.engineer_id",
                            "T3.engineer_id"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "Christophe",
                "Nellie",
                "Hirthe"
            ],
            [
                "Kadin",
                "Archibald",
                "Streich"
            ],
            [
                "Oren",
                "Alexys",
                "Simonis"
            ],
            [
                "Berneice",
                "Lorine",
                "Morar"
            ],
            [
                "Edmond",
                "Archibald",
                "Streich"
            ],
            [
                "Rodger",
                "Archibald",
                "Streich"
            ],
            [
                "Cyrus",
                "Naomi",
                "Price"
            ],
            [
                "Bernice",
                "Courtney",
                "Adams"
            ],
            [
                "Berneice",
                "Etha",
                "Reinger"
            ],
            [
                "Edmond",
                "Naomi",
                "Price"
            ],
            [
                "Bernice",
                "Lorine",
                "Morar"
            ],
            [
                "Edmond",
                "Cullen",
                "Kunde"
            ]
        ],
        "cypher_query": "MATCH (T1:`assets_maintenance.Staff`)-[]-(T3:`assets_maintenance.Maintenance_Engineers`)-[]-(T2:`assets_maintenance.Engineer_Visits`)\nRETURN T1.staff_name,T3.first_name,T3.last_name",
        "cypher_ans": []
    },
    {
        "db_id": "assets_maintenance",
        "question": "Which skill is used in fixing the most number of faults? List the skill id and description.",
        "sql_query": "SELECT T1.skill_id ,  T1.skill_description FROM Skills AS T1 JOIN Skills_Required_To_Fix AS T2 ON T1.skill_id  =  T2.skill_id GROUP BY T1.skill_id ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.skill_id"
                },
                {
                    "value": "T1.skill_description"
                }
            ],
            "from": [
                {
                    "value": "Skills",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "Skills_Required_To_Fix",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.skill_id",
                            "T2.skill_id"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.skill_id"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                3,
                "TV, Video"
            ]
        ],
        "cypher_query": "MATCH (T1:`assets_maintenance.Skills`)-[T2:`assets_maintenance.Skills_Required_To_Fix`]-()\nWITH count(T1.skill_id) AS count, T1.skill_id AS skill_id, T1.skill_description AS skill_description\nRETURN skill_id,skill_description\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": [
            [
                2,
                "Mechanical"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of medication used on the patient who stays in room 111?",
        "sql_query": "SELECT T4.name FROM stay AS T1 JOIN patient AS T2 ON T1.Patient  =  T2.SSN JOIN Prescribes AS T3 ON T3.Patient  =  T2.SSN JOIN Medication AS T4 ON T3.Medication  =  T4.Code WHERE room  =  111",
        "parsed_sql": {
            "select": {
                "value": "T4.name"
            },
            "from": [
                {
                    "value": "stay",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Patient",
                            "T2.SSN"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "Prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.Patient",
                            "T2.SSN"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T4",
                        "value": "Medication",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.Medication",
                            "T4.Code"
                        ]
                    }
                }
            ],
            "where": {
                "eq": [
                    "room",
                    111
                ]
            }
        },
        "sql_ans": [
            [
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:`hospital_1.Stay`)-[]-(T4:`hospital_1.Medication`)-[]-(T3:`hospital_1.Prescribes`)-[]-(T2:`hospital_1.Patient`)-[]-(T3:`hospital_1.Prescribes`)\nWHERE T1.Room = 111\nRETURN T4.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the medication used for the patient staying in room 111?",
        "sql_query": "SELECT T4.name FROM stay AS T1 JOIN patient AS T2 ON T1.Patient  =  T2.SSN JOIN Prescribes AS T3 ON T3.Patient  =  T2.SSN JOIN Medication AS T4 ON T3.Medication  =  T4.Code WHERE room  =  111",
        "parsed_sql": {
            "select": {
                "value": "T4.name"
            },
            "from": [
                {
                    "value": "stay",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Patient",
                            "T2.SSN"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "Prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.Patient",
                            "T2.SSN"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T4",
                        "value": "Medication",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.Medication",
                            "T4.Code"
                        ]
                    }
                }
            ],
            "where": {
                "eq": [
                    "room",
                    111
                ]
            }
        },
        "sql_ans": [
            [
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:`hospital_1.Stay`)-[]-(T4:`hospital_1.Medication`)-[]-(T3:`hospital_1.Prescribes`)-[]-(T2:`hospital_1.Patient`)-[]-(T3:`hospital_1.Prescribes`)\nWHERE T1.Room = 111\nRETURN T4.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the nurse has the most appointments?",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:`hospital_1.Nurse`)-[]-(T2:`hospital_1.Appointment`)\nWITH T1.Name AS Name, count(T1.EmployeeID) AS count\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the nurse who has the largest number of appointments.",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:`hospital_1.Nurse`)-[]-(T2:`hospital_1.Appointment`)\nWITH T1.Name AS Name, count(T1.EmployeeID) AS count\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of medications prescribed for each brand.",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:`hospital_1.Medication`)-[]-(T2:`hospital_1.Prescribes`)\nWITH count(T1.Brand) AS count, T1.Name AS Name\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many medications are prescribed for each brand?",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:`hospital_1.Medication`)-[]-(T2:`hospital_1.Prescribes`)\nWITH count(T1.Brand) AS count, T1.Name AS Name\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of patients who are not using the medication of Procrastin-X.",
        "sql_query": "SELECT count(*) FROM patient WHERE SSN NOT IN ( SELECT T1.patient FROM Prescribes AS T1 JOIN Medication AS T2 ON T1.Medication  =  T2.Code WHERE T2.name  =  'Procrastin-X' )",
        "parsed_sql": {
            "select": {
                "value": {
                    "count": "*"
                }
            },
            "from": "patient",
            "where": {
                "nin": [
                    "SSN",
                    {
                        "select": {
                            "value": "T1.patient"
                        },
                        "from": [
                            {
                                "value": "Prescribes",
                                "name": "T1",
                                "is_table": true
                            },
                            {
                                "join": {
                                    "name": "T2",
                                    "value": "Medication",
                                    "is_table": true
                                },
                                "on": {
                                    "eq": [
                                        "T1.Medication",
                                        "T2.Code"
                                    ]
                                }
                            }
                        ],
                        "where": {
                            "eq": [
                                "T2.name",
                                {
                                    "literal": "Procrastin-X"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "sql_ans": [
            [
                3
            ]
        ],
        "cypher_query": "MATCH (patient:`hospital_1.Patient`)\nWHERE NOT (patient:`hospital_1.Patient`)-[]-(:`hospital_1.Prescribes`)-[]-(:`hospital_1.Medication { Name : 'Procrastin-X' }`)\nRETURN count(*)",
        "cypher_ans": [
            [
                4
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many patients are not using Procrastin-X as medication?",
        "sql_query": "SELECT count(*) FROM patient WHERE SSN NOT IN ( SELECT T1.patient FROM Prescribes AS T1 JOIN Medication AS T2 ON T1.Medication  =  T2.Code WHERE T2.name  =  'Procrastin-X' )",
        "parsed_sql": {
            "select": {
                "value": {
                    "count": "*"
                }
            },
            "from": "patient",
            "where": {
                "nin": [
                    "SSN",
                    {
                        "select": {
                            "value": "T1.patient"
                        },
                        "from": [
                            {
                                "value": "Prescribes",
                                "name": "T1",
                                "is_table": true
                            },
                            {
                                "join": {
                                    "name": "T2",
                                    "value": "Medication",
                                    "is_table": true
                                },
                                "on": {
                                    "eq": [
                                        "T1.Medication",
                                        "T2.Code"
                                    ]
                                }
                            }
                        ],
                        "where": {
                            "eq": [
                                "T2.name",
                                {
                                    "literal": "Procrastin-X"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "sql_ans": [
            [
                3
            ]
        ],
        "cypher_query": "MATCH (patient:`hospital_1.Patient`)\nWHERE NOT (patient:`hospital_1.Patient`)-[]-(:`hospital_1.Prescribes`)-[]-(:`hospital_1.Medication { Name : 'Procrastin-X' }`)\nRETURN count(*)",
        "cypher_ans": [
            [
                4
            ]
        ]
    }
][
    {
        "db_id": "assets_maintenance",
        "question": "List all every engineer's first name, last name, details and coresponding skill description.",
        "sql_query": "SELECT T1.first_name ,  T1.last_name ,  T1.other_details ,  T3.skill_description FROM Maintenance_Engineers AS T1 JOIN Engineer_Skills AS T2 ON T1.engineer_id  =  T2.engineer_id JOIN Skills AS T3 ON T2.skill_id  =  T3.skill_id",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.first_name"
                },
                {
                    "value": "T1.last_name"
                },
                {
                    "value": "T1.other_details"
                },
                {
                    "value": "T3.skill_description"
                }
            ],
            "from": [
                {
                    "value": "Maintenance_Engineers",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "Engineer_Skills",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.engineer_id",
                            "T2.engineer_id"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "Skills",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T2.skill_id",
                            "T3.skill_id"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "Naomi",
                "Price",
                null,
                "Mechanical"
            ],
            [
                "Naomi",
                "Price",
                null,
                "Electrical"
            ],
            [
                "Archibald",
                "Streich",
                null,
                "Electrical"
            ],
            [
                "Courtney",
                "Adams",
                null,
                "Electrical"
            ],
            [
                "Weston",
                "Hahn",
                null,
                "Electrical"
            ],
            [
                "Courtney",
                "Adams",
                null,
                "TV, Video"
            ],
            [
                "Weston",
                "Hahn",
                null,
                "Mechanical"
            ],
            [
                "Josie",
                "Harvey",
                "Skilled",
                "TV, Video"
            ],
            [
                "Manley",
                "Grady",
                null,
                "Mechanical"
            ],
            [
                "Nellie",
                "Hirthe",
                null,
                "TV, Video"
            ],
            [
                "Archibald",
                "Streich",
                null,
                "TV, Video"
            ],
            [
                "Manley",
                "Grady",
                null,
                "Electrical"
            ],
            [
                "Brian",
                "Stamm",
                null,
                "TV, Video"
            ],
            [
                "Samanta",
                "Hauck",
                null,
                "Electrical"
            ],
            [
                "Cullen",
                "Kunde",
                null,
                "Mechanical"
            ],
            [
                "Alexys",
                "Simonis",
                null,
                "Mechanical"
            ],
            [
                "Clemens",
                "Orn",
                null,
                "Mechanical"
            ],
            [
                "Nellie",
                "Hirthe",
                null,
                "Electrical"
            ],
            [
                "Lorine",
                "Morar",
                null,
                "Electrical"
            ]
        ],
        "cypher_query": "MATCH (T1:`assets_maintenance.Maintenance_Engineers`)-[T2:`assets_maintenance.Engineer_Skills`]-(T3:`assets_maintenance.Skills`)\nRETURN T1.first_name,T1.last_name,T1.other_details,T3.skill_description",
        "cypher_ans": [
            [
                "Manley",
                "Grady",
                null,
                "Electrical"
            ],
            [
                "Nellie",
                "Hirthe",
                null,
                "Electrical"
            ],
            [
                "Samanta",
                "Hauck",
                null,
                "Electrical"
            ],
            [
                "Courtney",
                "Adams",
                null,
                "Electrical"
            ],
            [
                "Lorine",
                "Morar",
                null,
                "Electrical"
            ],
            [
                "Naomi",
                "Price",
                null,
                "Electrical"
            ],
            [
                "Weston",
                "Hahn",
                null,
                "Electrical"
            ],
            [
                "Archibald",
                "Streich",
                null,
                "Electrical"
            ],
            [
                "Cullen",
                "Kunde",
                null,
                "Mechanical"
            ],
            [
                "Weston",
                "Hahn",
                null,
                "Mechanical"
            ],
            [
                "Alexys",
                "Simonis",
                null,
                "Mechanical"
            ],
            [
                "Clemens",
                "Orn",
                null,
                "Mechanical"
            ],
            [
                "Manley",
                "Grady",
                null,
                "Mechanical"
            ],
            [
                "Naomi",
                "Price",
                null,
                "Mechanical"
            ],
            [
                "Courtney",
                "Adams",
                null,
                "TV, Video"
            ],
            [
                "Brian",
                "Stamm",
                null,
                "TV, Video"
            ],
            [
                "Josie",
                "Harvey",
                "Skilled",
                "TV, Video"
            ],
            [
                "Nellie",
                "Hirthe",
                null,
                "TV, Video"
            ],
            [
                "Archibald",
                "Streich",
                null,
                "TV, Video"
            ]
        ]
    },
    {
        "db_id": "assets_maintenance",
        "question": "For all the faults of different parts, what are all the decriptions of the skills required to fix them? List the name of the faults and the skill description.",
        "sql_query": "SELECT T1.fault_short_name ,  T3.skill_description FROM Part_Faults AS T1 JOIN Skills_Required_To_Fix AS T2 ON T1.part_fault_id  =  T2.part_fault_id JOIN Skills AS T3 ON T2.skill_id  =  T3.skill_id",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.fault_short_name"
                },
                {
                    "value": "T3.skill_description"
                }
            ],
            "from": [
                {
                    "value": "Part_Faults",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "Skills_Required_To_Fix",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.part_fault_id",
                            "T2.part_fault_id"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "Skills",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T2.skill_id",
                            "T3.skill_id"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "TW",
                "Mechanical"
            ],
            [
                "MW",
                "TV, Video"
            ],
            [
                "PW",
                "Electrical"
            ],
            [
                "PW",
                "TV, Video"
            ],
            [
                "TW",
                "TV, Video"
            ],
            [
                "PW",
                "Mechanical"
            ],
            [
                "MW",
                "Mechanical"
            ]
        ],
        "cypher_query": "MATCH (T1:`assets_maintenance.Part_Faults`)-[T2:`assets_maintenance.Skills_Required_To_Fix`]-(T3:`assets_maintenance.Skills`)\nRETURN T1.fault_short_name,T3.skill_description",
        "cypher_ans": [
            [
                "PW",
                "Electrical"
            ],
            [
                "TW",
                "Mechanical"
            ],
            [
                "PW",
                "Mechanical"
            ],
            [
                "MW",
                "Mechanical"
            ],
            [
                "TW",
                "TV, Video"
            ],
            [
                "MW",
                "TV, Video"
            ],
            [
                "PW",
                "TV, Video"
            ]
        ]
    },
    {
        "db_id": "assets_maintenance",
        "question": "How many assets can each parts be used in? List the part name and the number.",
        "sql_query": "SELECT T1.part_name ,  count(*) FROM Parts AS T1 JOIN Asset_Parts AS T2 ON T1.part_id  =  T2.part_id GROUP BY T1.part_name",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.part_name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "Parts",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "Asset_Parts",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.part_id",
                            "T2.part_id"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.part_name"
            }
        },
        "sql_ans": [
            [
                "middle",
                5
            ],
            [
                "package",
                6
            ],
            [
                "top",
                4
            ]
        ],
        "cypher_query": "MATCH (T1:`assets_maintenance.Parts`)-[T2:`assets_maintenance.Asset_Parts`]-()\nWITH count(T1.part_name) AS count, T1.part_name AS part_name\nRETURN part_name,count",
        "cypher_ans": [
            [
                "top",
                4
            ],
            [
                "middle",
                5
            ],
            [
                "package",
                5
            ]
        ]
    },
    {
        "db_id": "assets_maintenance",
        "question": "Among those engineers who have visited, which engineer makes the least number of visits? List the engineer id, first name and last name.",
        "sql_query": "SELECT T1.engineer_id ,  T1.first_name ,  T1.last_name FROM Maintenance_Engineers AS T1 JOIN Engineer_Visits AS T2 ON T1.engineer_id  =  T2.engineer_id GROUP BY T1.engineer_id ORDER BY count(*) ASC LIMIT 1",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.engineer_id"
                },
                {
                    "value": "T1.first_name"
                },
                {
                    "value": "T1.last_name"
                }
            ],
            "from": [
                {
                    "value": "Maintenance_Engineers",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "Engineer_Visits",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.engineer_id",
                            "T2.engineer_id"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.engineer_id"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "asc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                1,
                "Etha",
                "Reinger"
            ]
        ],
        "cypher_query": "MATCH (T1:`assets_maintenance.Maintenance_Engineers`)-[]-(T2:`assets_maintenance.Engineer_Visits`)\nWITH T1.engineer_id AS engineer_id, T1.first_name AS first_name, count(T1.engineer_id) AS count, T1.last_name AS last_name\nRETURN engineer_id,first_name,last_name\nORDER BY count ASC\nLIMIT 1",
        "cypher_ans": [
            [
                8,
                "Nellie",
                "Hirthe"
            ]
        ]
    },
    {
        "db_id": "assets_maintenance",
        "question": "Which staff have contacted which engineers? List the staff name and the engineer first name and last name.",
        "sql_query": "SELECT T1.staff_name ,  T3.first_name ,  T3.last_name FROM Staff AS T1 JOIN Engineer_Visits AS T2 ON T1.staff_id  =  T2.contact_staff_id JOIN Maintenance_Engineers AS T3 ON T2.engineer_id  =  T3.engineer_id",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.staff_name"
                },
                {
                    "value": "T3.first_name"
                },
                {
                    "value": "T3.last_name"
                }
            ],
            "from": [
                {
                    "value": "Staff",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "Engineer_Visits",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.staff_id",
                            "T2.contact_staff_id"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "Maintenance_Engineers",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T2.engineer_id",
                            "T3.engineer_id"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "Christophe",
                "Nellie",
                "Hirthe"
            ],
            [
                "Kadin",
                "Archibald",
                "Streich"
            ],
            [
                "Oren",
                "Alexys",
                "Simonis"
            ],
            [
                "Berneice",
                "Lorine",
                "Morar"
            ],
            [
                "Edmond",
                "Archibald",
                "Streich"
            ],
            [
                "Rodger",
                "Archibald",
                "Streich"
            ],
            [
                "Cyrus",
                "Naomi",
                "Price"
            ],
            [
                "Bernice",
                "Courtney",
                "Adams"
            ],
            [
                "Berneice",
                "Etha",
                "Reinger"
            ],
            [
                "Edmond",
                "Naomi",
                "Price"
            ],
            [
                "Bernice",
                "Lorine",
                "Morar"
            ],
            [
                "Edmond",
                "Cullen",
                "Kunde"
            ]
        ],
        "cypher_query": "MATCH (T1:`assets_maintenance.Staff`)-[]-(T3:`assets_maintenance.Maintenance_Engineers`)-[]-(T2:`assets_maintenance.Engineer_Visits`)\nRETURN T1.staff_name,T3.first_name,T3.last_name",
        "cypher_ans": []
    },
    {
        "db_id": "assets_maintenance",
        "question": "Which skill is used in fixing the most number of faults? List the skill id and description.",
        "sql_query": "SELECT T1.skill_id ,  T1.skill_description FROM Skills AS T1 JOIN Skills_Required_To_Fix AS T2 ON T1.skill_id  =  T2.skill_id GROUP BY T1.skill_id ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.skill_id"
                },
                {
                    "value": "T1.skill_description"
                }
            ],
            "from": [
                {
                    "value": "Skills",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "Skills_Required_To_Fix",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.skill_id",
                            "T2.skill_id"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.skill_id"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                3,
                "TV, Video"
            ]
        ],
        "cypher_query": "MATCH (T1:`assets_maintenance.Skills`)-[T2:`assets_maintenance.Skills_Required_To_Fix`]-()\nWITH count(T1.skill_id) AS count, T1.skill_description AS skill_description, T1.skill_id AS skill_id\nRETURN skill_id,skill_description\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": [
            [
                2,
                "Mechanical"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of medication used on the patient who stays in room 111?",
        "sql_query": "SELECT T4.name FROM stay AS T1 JOIN patient AS T2 ON T1.Patient  =  T2.SSN JOIN Prescribes AS T3 ON T3.Patient  =  T2.SSN JOIN Medication AS T4 ON T3.Medication  =  T4.Code WHERE room  =  111",
        "parsed_sql": {
            "select": {
                "value": "T4.name"
            },
            "from": [
                {
                    "value": "stay",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Patient",
                            "T2.SSN"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "Prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.Patient",
                            "T2.SSN"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T4",
                        "value": "Medication",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.Medication",
                            "T4.Code"
                        ]
                    }
                }
            ],
            "where": {
                "eq": [
                    "room",
                    111
                ]
            }
        },
        "sql_ans": [
            [
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:`hospital_1.Stay`)-[]-(T4:`hospital_1.Medication`)-[]-(T3:`hospital_1.Prescribes`)-[]-(T2:`hospital_1.Patient`)-[]-(T3:`hospital_1.Prescribes`)\nWHERE T1.Room = 111\nRETURN T4.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the medication used for the patient staying in room 111?",
        "sql_query": "SELECT T4.name FROM stay AS T1 JOIN patient AS T2 ON T1.Patient  =  T2.SSN JOIN Prescribes AS T3 ON T3.Patient  =  T2.SSN JOIN Medication AS T4 ON T3.Medication  =  T4.Code WHERE room  =  111",
        "parsed_sql": {
            "select": {
                "value": "T4.name"
            },
            "from": [
                {
                    "value": "stay",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Patient",
                            "T2.SSN"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "Prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.Patient",
                            "T2.SSN"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T4",
                        "value": "Medication",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.Medication",
                            "T4.Code"
                        ]
                    }
                }
            ],
            "where": {
                "eq": [
                    "room",
                    111
                ]
            }
        },
        "sql_ans": [
            [
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:`hospital_1.Stay`)-[]-(T4:`hospital_1.Medication`)-[]-(T3:`hospital_1.Prescribes`)-[]-(T2:`hospital_1.Patient`)-[]-(T3:`hospital_1.Prescribes`)\nWHERE T1.Room = 111\nRETURN T4.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the nurse has the most appointments?",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:`hospital_1.Nurse`)-[]-(T2:`hospital_1.Appointment`)\nWITH T1.Name AS Name, count(T1.EmployeeID) AS count\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the nurse who has the largest number of appointments.",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:`hospital_1.Nurse`)-[]-(T2:`hospital_1.Appointment`)\nWITH T1.Name AS Name, count(T1.EmployeeID) AS count\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of medications prescribed for each brand.",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:`hospital_1.Medication`)-[]-(T2:`hospital_1.Prescribes`)\nWITH T1.Name AS Name, count(T1.Brand) AS count\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many medications are prescribed for each brand?",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:`hospital_1.Medication`)-[]-(T2:`hospital_1.Prescribes`)\nWITH T1.Name AS Name, count(T1.Brand) AS count\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of patients who are not using the medication of Procrastin-X.",
        "sql_query": "SELECT count(*) FROM patient WHERE SSN NOT IN ( SELECT T1.patient FROM Prescribes AS T1 JOIN Medication AS T2 ON T1.Medication  =  T2.Code WHERE T2.name  =  'Procrastin-X' )",
        "parsed_sql": {
            "select": {
                "value": {
                    "count": "*"
                }
            },
            "from": "patient",
            "where": {
                "nin": [
                    "SSN",
                    {
                        "select": {
                            "value": "T1.patient"
                        },
                        "from": [
                            {
                                "value": "Prescribes",
                                "name": "T1",
                                "is_table": true
                            },
                            {
                                "join": {
                                    "name": "T2",
                                    "value": "Medication",
                                    "is_table": true
                                },
                                "on": {
                                    "eq": [
                                        "T1.Medication",
                                        "T2.Code"
                                    ]
                                }
                            }
                        ],
                        "where": {
                            "eq": [
                                "T2.name",
                                {
                                    "literal": "Procrastin-X"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "sql_ans": [
            [
                3
            ]
        ],
        "cypher_query": "MATCH (patient:`hospital_1.Patient`)\nWHERE NOT (patient:`hospital_1.Patient`)-[]-(:`hospital_1.Prescribes`)-[]-(:`hospital_1.Medication { Name : 'Procrastin-X' }`)\nRETURN count(*)",
        "cypher_ans": [
            [
                4
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many patients are not using Procrastin-X as medication?",
        "sql_query": "SELECT count(*) FROM patient WHERE SSN NOT IN ( SELECT T1.patient FROM Prescribes AS T1 JOIN Medication AS T2 ON T1.Medication  =  T2.Code WHERE T2.name  =  'Procrastin-X' )",
        "parsed_sql": {
            "select": {
                "value": {
                    "count": "*"
                }
            },
            "from": "patient",
            "where": {
                "nin": [
                    "SSN",
                    {
                        "select": {
                            "value": "T1.patient"
                        },
                        "from": [
                            {
                                "value": "Prescribes",
                                "name": "T1",
                                "is_table": true
                            },
                            {
                                "join": {
                                    "name": "T2",
                                    "value": "Medication",
                                    "is_table": true
                                },
                                "on": {
                                    "eq": [
                                        "T1.Medication",
                                        "T2.Code"
                                    ]
                                }
                            }
                        ],
                        "where": {
                            "eq": [
                                "T2.name",
                                {
                                    "literal": "Procrastin-X"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "sql_ans": [
            [
                3
            ]
        ],
        "cypher_query": "MATCH (patient:`hospital_1.Patient`)\nWHERE NOT (patient:`hospital_1.Patient`)-[]-(:`hospital_1.Prescribes`)-[]-(:`hospital_1.Medication { Name : 'Procrastin-X' }`)\nRETURN count(*)",
        "cypher_ans": [
            [
                4
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "Find the name of medication used on the patient who stays in room 111?",
        "sql_query": "SELECT T4.name FROM stay AS T1 JOIN patient AS T2 ON T1.Patient  =  T2.SSN JOIN Prescribes AS T3 ON T3.Patient  =  T2.SSN JOIN Medication AS T4 ON T3.Medication  =  T4.Code WHERE room  =  111",
        "parsed_sql": {
            "select": {
                "value": "T4.name"
            },
            "from": [
                {
                    "value": "stay",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Patient",
                            "T2.SSN"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "Prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.Patient",
                            "T2.SSN"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T4",
                        "value": "Medication",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.Medication",
                            "T4.Code"
                        ]
                    }
                }
            ],
            "where": {
                "eq": [
                    "room",
                    111
                ]
            }
        },
        "sql_ans": [
            [
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:`hospital_1.Stay`)-[]-(T4:`hospital_1.Medication`)-[]-(T3:`hospital_1.Prescribes`)-[]-(T2:`hospital_1.Patient`)-[]-(T3:`hospital_1.Prescribes`)\nWHERE T1.Room = 111\nRETURN T4.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the medication used for the patient staying in room 111?",
        "sql_query": "SELECT T4.name FROM stay AS T1 JOIN patient AS T2 ON T1.Patient  =  T2.SSN JOIN Prescribes AS T3 ON T3.Patient  =  T2.SSN JOIN Medication AS T4 ON T3.Medication  =  T4.Code WHERE room  =  111",
        "parsed_sql": {
            "select": {
                "value": "T4.name"
            },
            "from": [
                {
                    "value": "stay",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "patient",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.Patient",
                            "T2.SSN"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "Prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.Patient",
                            "T2.SSN"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T4",
                        "value": "Medication",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.Medication",
                            "T4.Code"
                        ]
                    }
                }
            ],
            "where": {
                "eq": [
                    "room",
                    111
                ]
            }
        },
        "sql_ans": [
            [
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:`hospital_1.Stay`)-[]-(T4:`hospital_1.Medication`)-[]-(T3:`hospital_1.Prescribes`)-[]-(T2:`hospital_1.Patient`)-[]-(T3:`hospital_1.Prescribes`)\nWHERE T1.Room = 111\nRETURN T4.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the nurse has the most appointments?",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:`hospital_1.Nurse`)-[]-(T2:`hospital_1.Appointment`)\nWITH count(T1.EmployeeID) AS count, T1.Name AS Name\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the nurse who has the largest number of appointments.",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:`hospital_1.Nurse`)-[]-(T2:`hospital_1.Appointment`)\nWITH count(T1.EmployeeID) AS count, T1.Name AS Name\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of medications prescribed for each brand.",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:`hospital_1.Medication`)-[]-(T2:`hospital_1.Prescribes`)\nWITH count(T1.Brand) AS count, T1.Name AS Name\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many medications are prescribed for each brand?",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:`hospital_1.Medication`)-[]-(T2:`hospital_1.Prescribes`)\nWITH count(T1.Brand) AS count, T1.Name AS Name\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of patients who are not using the medication of Procrastin-X.",
        "sql_query": "SELECT count(*) FROM patient WHERE SSN NOT IN ( SELECT T1.patient FROM Prescribes AS T1 JOIN Medication AS T2 ON T1.Medication  =  T2.Code WHERE T2.name  =  'Procrastin-X' )",
        "parsed_sql": {
            "select": {
                "value": {
                    "count": "*"
                }
            },
            "from": "patient",
            "where": {
                "nin": [
                    "SSN",
                    {
                        "select": {
                            "value": "T1.patient"
                        },
                        "from": [
                            {
                                "value": "Prescribes",
                                "name": "T1",
                                "is_table": true
                            },
                            {
                                "join": {
                                    "name": "T2",
                                    "value": "Medication",
                                    "is_table": true
                                },
                                "on": {
                                    "eq": [
                                        "T1.Medication",
                                        "T2.Code"
                                    ]
                                }
                            }
                        ],
                        "where": {
                            "eq": [
                                "T2.name",
                                {
                                    "literal": "Procrastin-X"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "sql_ans": [
            [
                3
            ]
        ],
        "cypher_query": "MATCH (patient:`hospital_1.Patient`)\nWHERE NOT (patient:`hospital_1.Patient`)-[]-(:`hospital_1.Prescribes`)-[]-(:`hospital_1.Medication { Name : 'Procrastin-X' }`)\nRETURN count(*)",
        "cypher_ans": [
            [
                4
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many patients are not using Procrastin-X as medication?",
        "sql_query": "SELECT count(*) FROM patient WHERE SSN NOT IN ( SELECT T1.patient FROM Prescribes AS T1 JOIN Medication AS T2 ON T1.Medication  =  T2.Code WHERE T2.name  =  'Procrastin-X' )",
        "parsed_sql": {
            "select": {
                "value": {
                    "count": "*"
                }
            },
            "from": "patient",
            "where": {
                "nin": [
                    "SSN",
                    {
                        "select": {
                            "value": "T1.patient"
                        },
                        "from": [
                            {
                                "value": "Prescribes",
                                "name": "T1",
                                "is_table": true
                            },
                            {
                                "join": {
                                    "name": "T2",
                                    "value": "Medication",
                                    "is_table": true
                                },
                                "on": {
                                    "eq": [
                                        "T1.Medication",
                                        "T2.Code"
                                    ]
                                }
                            }
                        ],
                        "where": {
                            "eq": [
                                "T2.name",
                                {
                                    "literal": "Procrastin-X"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "sql_ans": [
            [
                3
            ]
        ],
        "cypher_query": "MATCH (patient:`hospital_1.Patient`)\nWHERE NOT (patient:`hospital_1.Patient`)-[]-(:`hospital_1.Prescribes`)-[]-(:`hospital_1.Medication { Name : 'Procrastin-X' }`)\nRETURN count(*)",
        "cypher_ans": [
            [
                4
            ]
        ]
    }
][][][
    {
        "db_id": "assets_maintenance",
        "question": "List all every engineer's first name, last name, details and coresponding skill description.",
        "sql_query": "SELECT T1.first_name ,  T1.last_name ,  T1.other_details ,  T3.skill_description FROM Maintenance_Engineers AS T1 JOIN Engineer_Skills AS T2 ON T1.engineer_id  =  T2.engineer_id JOIN Skills AS T3 ON T2.skill_id  =  T3.skill_id",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.first_name"
                },
                {
                    "value": "T1.last_name"
                },
                {
                    "value": "T1.other_details"
                },
                {
                    "value": "T3.skill_description"
                }
            ],
            "from": [
                {
                    "value": "Maintenance_Engineers",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "Engineer_Skills",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.engineer_id",
                            "T2.engineer_id"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "Skills",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T2.skill_id",
                            "T3.skill_id"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "Naomi",
                "Price",
                null,
                "Mechanical"
            ],
            [
                "Naomi",
                "Price",
                null,
                "Electrical"
            ],
            [
                "Archibald",
                "Streich",
                null,
                "Electrical"
            ],
            [
                "Courtney",
                "Adams",
                null,
                "Electrical"
            ],
            [
                "Weston",
                "Hahn",
                null,
                "Electrical"
            ],
            [
                "Courtney",
                "Adams",
                null,
                "TV, Video"
            ],
            [
                "Weston",
                "Hahn",
                null,
                "Mechanical"
            ],
            [
                "Josie",
                "Harvey",
                "Skilled",
                "TV, Video"
            ],
            [
                "Manley",
                "Grady",
                null,
                "Mechanical"
            ],
            [
                "Nellie",
                "Hirthe",
                null,
                "TV, Video"
            ],
            [
                "Archibald",
                "Streich",
                null,
                "TV, Video"
            ],
            [
                "Manley",
                "Grady",
                null,
                "Electrical"
            ],
            [
                "Brian",
                "Stamm",
                null,
                "TV, Video"
            ],
            [
                "Samanta",
                "Hauck",
                null,
                "Electrical"
            ],
            [
                "Cullen",
                "Kunde",
                null,
                "Mechanical"
            ],
            [
                "Alexys",
                "Simonis",
                null,
                "Mechanical"
            ],
            [
                "Clemens",
                "Orn",
                null,
                "Mechanical"
            ],
            [
                "Nellie",
                "Hirthe",
                null,
                "Electrical"
            ],
            [
                "Lorine",
                "Morar",
                null,
                "Electrical"
            ]
        ],
        "cypher_query": "MATCH (T1:`assets_maintenance.Maintenance_Engineers`)-[T2:`assets_maintenance.Engineer_Skills`]-(T3:`assets_maintenance.Skills`)\nRETURN T1.first_name,T1.last_name,T1.other_details,T3.skill_description",
        "cypher_ans": [
            [
                "Manley",
                "Grady",
                null,
                "Electrical"
            ],
            [
                "Nellie",
                "Hirthe",
                null,
                "Electrical"
            ],
            [
                "Samanta",
                "Hauck",
                null,
                "Electrical"
            ],
            [
                "Courtney",
                "Adams",
                null,
                "Electrical"
            ],
            [
                "Lorine",
                "Morar",
                null,
                "Electrical"
            ],
            [
                "Naomi",
                "Price",
                null,
                "Electrical"
            ],
            [
                "Weston",
                "Hahn",
                null,
                "Electrical"
            ],
            [
                "Archibald",
                "Streich",
                null,
                "Electrical"
            ],
            [
                "Cullen",
                "Kunde",
                null,
                "Mechanical"
            ],
            [
                "Weston",
                "Hahn",
                null,
                "Mechanical"
            ],
            [
                "Alexys",
                "Simonis",
                null,
                "Mechanical"
            ],
            [
                "Clemens",
                "Orn",
                null,
                "Mechanical"
            ],
            [
                "Manley",
                "Grady",
                null,
                "Mechanical"
            ],
            [
                "Naomi",
                "Price",
                null,
                "Mechanical"
            ],
            [
                "Courtney",
                "Adams",
                null,
                "TV, Video"
            ],
            [
                "Brian",
                "Stamm",
                null,
                "TV, Video"
            ],
            [
                "Josie",
                "Harvey",
                "Skilled",
                "TV, Video"
            ],
            [
                "Nellie",
                "Hirthe",
                null,
                "TV, Video"
            ],
            [
                "Archibald",
                "Streich",
                null,
                "TV, Video"
            ]
        ]
    },
    {
        "db_id": "assets_maintenance",
        "question": "For all the faults of different parts, what are all the decriptions of the skills required to fix them? List the name of the faults and the skill description.",
        "sql_query": "SELECT T1.fault_short_name ,  T3.skill_description FROM Part_Faults AS T1 JOIN Skills_Required_To_Fix AS T2 ON T1.part_fault_id  =  T2.part_fault_id JOIN Skills AS T3 ON T2.skill_id  =  T3.skill_id",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.fault_short_name"
                },
                {
                    "value": "T3.skill_description"
                }
            ],
            "from": [
                {
                    "value": "Part_Faults",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "Skills_Required_To_Fix",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.part_fault_id",
                            "T2.part_fault_id"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "Skills",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T2.skill_id",
                            "T3.skill_id"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "TW",
                "Mechanical"
            ],
            [
                "MW",
                "TV, Video"
            ],
            [
                "PW",
                "Electrical"
            ],
            [
                "PW",
                "TV, Video"
            ],
            [
                "TW",
                "TV, Video"
            ],
            [
                "PW",
                "Mechanical"
            ],
            [
                "MW",
                "Mechanical"
            ]
        ],
        "cypher_query": "MATCH (T1:`assets_maintenance.Part_Faults`)-[T2:`assets_maintenance.Skills_Required_To_Fix`]-(T3:`assets_maintenance.Skills`)\nRETURN T1.fault_short_name,T3.skill_description",
        "cypher_ans": [
            [
                "PW",
                "Electrical"
            ],
            [
                "TW",
                "Mechanical"
            ],
            [
                "PW",
                "Mechanical"
            ],
            [
                "MW",
                "Mechanical"
            ],
            [
                "TW",
                "TV, Video"
            ],
            [
                "MW",
                "TV, Video"
            ],
            [
                "PW",
                "TV, Video"
            ]
        ]
    },
    {
        "db_id": "assets_maintenance",
        "question": "How many assets can each parts be used in? List the part name and the number.",
        "sql_query": "SELECT T1.part_name ,  count(*) FROM Parts AS T1 JOIN Asset_Parts AS T2 ON T1.part_id  =  T2.part_id GROUP BY T1.part_name",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.part_name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "Parts",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "Asset_Parts",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.part_id",
                            "T2.part_id"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.part_name"
            }
        },
        "sql_ans": [
            [
                "middle",
                5
            ],
            [
                "package",
                6
            ],
            [
                "top",
                4
            ]
        ],
        "cypher_query": "MATCH (T1:`assets_maintenance.Parts`)-[T2:`assets_maintenance.Asset_Parts`]-()\nWITH count(T1.part_name) AS count, T1.part_name AS part_name\nRETURN part_name,count",
        "cypher_ans": [
            [
                "top",
                4
            ],
            [
                "middle",
                5
            ],
            [
                "package",
                5
            ]
        ]
    },
    {
        "db_id": "assets_maintenance",
        "question": "Among those engineers who have visited, which engineer makes the least number of visits? List the engineer id, first name and last name.",
        "sql_query": "SELECT T1.engineer_id ,  T1.first_name ,  T1.last_name FROM Maintenance_Engineers AS T1 JOIN Engineer_Visits AS T2 ON T1.engineer_id  =  T2.engineer_id GROUP BY T1.engineer_id ORDER BY count(*) ASC LIMIT 1",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.engineer_id"
                },
                {
                    "value": "T1.first_name"
                },
                {
                    "value": "T1.last_name"
                }
            ],
            "from": [
                {
                    "value": "Maintenance_Engineers",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "Engineer_Visits",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.engineer_id",
                            "T2.engineer_id"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.engineer_id"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "asc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                1,
                "Etha",
                "Reinger"
            ]
        ],
        "cypher_query": "MATCH (T1:`assets_maintenance.Maintenance_Engineers`)-[]-(T2:`assets_maintenance.Engineer_Visits`)\nWITH T1.engineer_id AS engineer_id, count(T1.engineer_id) AS count, T1.last_name AS last_name, T1.first_name AS first_name\nRETURN engineer_id,first_name,last_name\nORDER BY count ASC\nLIMIT 1",
        "cypher_ans": [
            [
                8,
                "Nellie",
                "Hirthe"
            ]
        ]
    },
    {
        "db_id": "assets_maintenance",
        "question": "Which staff have contacted which engineers? List the staff name and the engineer first name and last name.",
        "sql_query": "SELECT T1.staff_name ,  T3.first_name ,  T3.last_name FROM Staff AS T1 JOIN Engineer_Visits AS T2 ON T1.staff_id  =  T2.contact_staff_id JOIN Maintenance_Engineers AS T3 ON T2.engineer_id  =  T3.engineer_id",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.staff_name"
                },
                {
                    "value": "T3.first_name"
                },
                {
                    "value": "T3.last_name"
                }
            ],
            "from": [
                {
                    "value": "Staff",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "Engineer_Visits",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.staff_id",
                            "T2.contact_staff_id"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "Maintenance_Engineers",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T2.engineer_id",
                            "T3.engineer_id"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "Christophe",
                "Nellie",
                "Hirthe"
            ],
            [
                "Kadin",
                "Archibald",
                "Streich"
            ],
            [
                "Oren",
                "Alexys",
                "Simonis"
            ],
            [
                "Berneice",
                "Lorine",
                "Morar"
            ],
            [
                "Edmond",
                "Archibald",
                "Streich"
            ],
            [
                "Rodger",
                "Archibald",
                "Streich"
            ],
            [
                "Cyrus",
                "Naomi",
                "Price"
            ],
            [
                "Bernice",
                "Courtney",
                "Adams"
            ],
            [
                "Berneice",
                "Etha",
                "Reinger"
            ],
            [
                "Edmond",
                "Naomi",
                "Price"
            ],
            [
                "Bernice",
                "Lorine",
                "Morar"
            ],
            [
                "Edmond",
                "Cullen",
                "Kunde"
            ]
        ],
        "cypher_query": "MATCH (T1:`assets_maintenance.Staff`)-[]-(T3:`assets_maintenance.Maintenance_Engineers`)-[]-(T2:`assets_maintenance.Engineer_Visits`)\nRETURN T1.staff_name,T3.first_name,T3.last_name",
        "cypher_ans": []
    },
    {
        "db_id": "assets_maintenance",
        "question": "Which skill is used in fixing the most number of faults? List the skill id and description.",
        "sql_query": "SELECT T1.skill_id ,  T1.skill_description FROM Skills AS T1 JOIN Skills_Required_To_Fix AS T2 ON T1.skill_id  =  T2.skill_id GROUP BY T1.skill_id ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.skill_id"
                },
                {
                    "value": "T1.skill_description"
                }
            ],
            "from": [
                {
                    "value": "Skills",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "Skills_Required_To_Fix",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.skill_id",
                            "T2.skill_id"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.skill_id"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                3,
                "TV, Video"
            ]
        ],
        "cypher_query": "MATCH (T1:`assets_maintenance.Skills`)-[T2:`assets_maintenance.Skills_Required_To_Fix`]-()\nWITH T1.skill_id AS skill_id, count(T1.skill_id) AS count, T1.skill_description AS skill_description\nRETURN skill_id,skill_description\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": [
            [
                2,
                "Mechanical"
            ]
        ]
    }
][
    {
        "db_id": "assets_maintenance",
        "question": "List all every engineer's first name, last name, details and coresponding skill description.",
        "sql_query": "SELECT T1.first_name ,  T1.last_name ,  T1.other_details ,  T3.skill_description FROM Maintenance_Engineers AS T1 JOIN Engineer_Skills AS T2 ON T1.engineer_id  =  T2.engineer_id JOIN Skills AS T3 ON T2.skill_id  =  T3.skill_id",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.first_name"
                },
                {
                    "value": "T1.last_name"
                },
                {
                    "value": "T1.other_details"
                },
                {
                    "value": "T3.skill_description"
                }
            ],
            "from": [
                {
                    "value": "Maintenance_Engineers",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "Engineer_Skills",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.engineer_id",
                            "T2.engineer_id"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "Skills",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T2.skill_id",
                            "T3.skill_id"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "Naomi",
                "Price",
                null,
                "Mechanical"
            ],
            [
                "Naomi",
                "Price",
                null,
                "Electrical"
            ],
            [
                "Archibald",
                "Streich",
                null,
                "Electrical"
            ],
            [
                "Courtney",
                "Adams",
                null,
                "Electrical"
            ],
            [
                "Weston",
                "Hahn",
                null,
                "Electrical"
            ],
            [
                "Courtney",
                "Adams",
                null,
                "TV, Video"
            ],
            [
                "Weston",
                "Hahn",
                null,
                "Mechanical"
            ],
            [
                "Josie",
                "Harvey",
                "Skilled",
                "TV, Video"
            ],
            [
                "Manley",
                "Grady",
                null,
                "Mechanical"
            ],
            [
                "Nellie",
                "Hirthe",
                null,
                "TV, Video"
            ],
            [
                "Archibald",
                "Streich",
                null,
                "TV, Video"
            ],
            [
                "Manley",
                "Grady",
                null,
                "Electrical"
            ],
            [
                "Brian",
                "Stamm",
                null,
                "TV, Video"
            ],
            [
                "Samanta",
                "Hauck",
                null,
                "Electrical"
            ],
            [
                "Cullen",
                "Kunde",
                null,
                "Mechanical"
            ],
            [
                "Alexys",
                "Simonis",
                null,
                "Mechanical"
            ],
            [
                "Clemens",
                "Orn",
                null,
                "Mechanical"
            ],
            [
                "Nellie",
                "Hirthe",
                null,
                "Electrical"
            ],
            [
                "Lorine",
                "Morar",
                null,
                "Electrical"
            ]
        ],
        "cypher_query": "MATCH (T1:`assets_maintenance.Maintenance_Engineers`)-[T2:`assets_maintenance.Engineer_Skills`]-(T3:`assets_maintenance.Skills`)\nRETURN T1.first_name,T1.last_name,T1.other_details,T3.skill_description",
        "cypher_ans": [
            [
                "Manley",
                "Grady",
                null,
                "Electrical"
            ],
            [
                "Nellie",
                "Hirthe",
                null,
                "Electrical"
            ],
            [
                "Samanta",
                "Hauck",
                null,
                "Electrical"
            ],
            [
                "Courtney",
                "Adams",
                null,
                "Electrical"
            ],
            [
                "Lorine",
                "Morar",
                null,
                "Electrical"
            ],
            [
                "Naomi",
                "Price",
                null,
                "Electrical"
            ],
            [
                "Weston",
                "Hahn",
                null,
                "Electrical"
            ],
            [
                "Archibald",
                "Streich",
                null,
                "Electrical"
            ],
            [
                "Cullen",
                "Kunde",
                null,
                "Mechanical"
            ],
            [
                "Weston",
                "Hahn",
                null,
                "Mechanical"
            ],
            [
                "Alexys",
                "Simonis",
                null,
                "Mechanical"
            ],
            [
                "Clemens",
                "Orn",
                null,
                "Mechanical"
            ],
            [
                "Manley",
                "Grady",
                null,
                "Mechanical"
            ],
            [
                "Naomi",
                "Price",
                null,
                "Mechanical"
            ],
            [
                "Courtney",
                "Adams",
                null,
                "TV, Video"
            ],
            [
                "Brian",
                "Stamm",
                null,
                "TV, Video"
            ],
            [
                "Josie",
                "Harvey",
                "Skilled",
                "TV, Video"
            ],
            [
                "Nellie",
                "Hirthe",
                null,
                "TV, Video"
            ],
            [
                "Archibald",
                "Streich",
                null,
                "TV, Video"
            ]
        ]
    },
    {
        "db_id": "assets_maintenance",
        "question": "For all the faults of different parts, what are all the decriptions of the skills required to fix them? List the name of the faults and the skill description.",
        "sql_query": "SELECT T1.fault_short_name ,  T3.skill_description FROM Part_Faults AS T1 JOIN Skills_Required_To_Fix AS T2 ON T1.part_fault_id  =  T2.part_fault_id JOIN Skills AS T3 ON T2.skill_id  =  T3.skill_id",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.fault_short_name"
                },
                {
                    "value": "T3.skill_description"
                }
            ],
            "from": [
                {
                    "value": "Part_Faults",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "Skills_Required_To_Fix",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.part_fault_id",
                            "T2.part_fault_id"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "Skills",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T2.skill_id",
                            "T3.skill_id"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "TW",
                "Mechanical"
            ],
            [
                "MW",
                "TV, Video"
            ],
            [
                "PW",
                "Electrical"
            ],
            [
                "PW",
                "TV, Video"
            ],
            [
                "TW",
                "TV, Video"
            ],
            [
                "PW",
                "Mechanical"
            ],
            [
                "MW",
                "Mechanical"
            ]
        ],
        "cypher_query": "MATCH (T1:`assets_maintenance.Part_Faults`)-[T2:`assets_maintenance.Skills_Required_To_Fix`]-(T3:`assets_maintenance.Skills`)\nRETURN T1.fault_short_name,T3.skill_description",
        "cypher_ans": [
            [
                "PW",
                "Electrical"
            ],
            [
                "TW",
                "Mechanical"
            ],
            [
                "PW",
                "Mechanical"
            ],
            [
                "MW",
                "Mechanical"
            ],
            [
                "TW",
                "TV, Video"
            ],
            [
                "MW",
                "TV, Video"
            ],
            [
                "PW",
                "TV, Video"
            ]
        ]
    },
    {
        "db_id": "assets_maintenance",
        "question": "How many assets can each parts be used in? List the part name and the number.",
        "sql_query": "SELECT T1.part_name ,  count(*) FROM Parts AS T1 JOIN Asset_Parts AS T2 ON T1.part_id  =  T2.part_id GROUP BY T1.part_name",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.part_name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "Parts",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "Asset_Parts",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.part_id",
                            "T2.part_id"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.part_name"
            }
        },
        "sql_ans": [
            [
                "middle",
                5
            ],
            [
                "package",
                6
            ],
            [
                "top",
                4
            ]
        ],
        "cypher_query": "MATCH (T1:`assets_maintenance.Parts`)-[T2:`assets_maintenance.Asset_Parts`]-()\nWITH count(T1.part_name) AS count, T1.part_name AS part_name\nRETURN part_name,count",
        "cypher_ans": [
            [
                "top",
                4
            ],
            [
                "middle",
                5
            ],
            [
                "package",
                5
            ]
        ]
    },
    {
        "db_id": "assets_maintenance",
        "question": "Among those engineers who have visited, which engineer makes the least number of visits? List the engineer id, first name and last name.",
        "sql_query": "SELECT T1.engineer_id ,  T1.first_name ,  T1.last_name FROM Maintenance_Engineers AS T1 JOIN Engineer_Visits AS T2 ON T1.engineer_id  =  T2.engineer_id GROUP BY T1.engineer_id ORDER BY count(*) ASC LIMIT 1",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.engineer_id"
                },
                {
                    "value": "T1.first_name"
                },
                {
                    "value": "T1.last_name"
                }
            ],
            "from": [
                {
                    "value": "Maintenance_Engineers",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "Engineer_Visits",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.engineer_id",
                            "T2.engineer_id"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.engineer_id"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "asc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                1,
                "Etha",
                "Reinger"
            ]
        ],
        "cypher_query": "MATCH (T1:`assets_maintenance.Maintenance_Engineers`)-[]-(T2:`assets_maintenance.Engineer_Visits`)\nWITH T1.first_name AS first_name, T1.last_name AS last_name, count(T1.engineer_id) AS count, T1.engineer_id AS engineer_id\nRETURN engineer_id,first_name,last_name\nORDER BY count ASC\nLIMIT 1",
        "cypher_ans": [
            [
                8,
                "Nellie",
                "Hirthe"
            ]
        ]
    },
    {
        "db_id": "assets_maintenance",
        "question": "Which staff have contacted which engineers? List the staff name and the engineer first name and last name.",
        "sql_query": "SELECT T1.staff_name ,  T3.first_name ,  T3.last_name FROM Staff AS T1 JOIN Engineer_Visits AS T2 ON T1.staff_id  =  T2.contact_staff_id JOIN Maintenance_Engineers AS T3 ON T2.engineer_id  =  T3.engineer_id",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.staff_name"
                },
                {
                    "value": "T3.first_name"
                },
                {
                    "value": "T3.last_name"
                }
            ],
            "from": [
                {
                    "value": "Staff",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "Engineer_Visits",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.staff_id",
                            "T2.contact_staff_id"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "Maintenance_Engineers",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T2.engineer_id",
                            "T3.engineer_id"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "Christophe",
                "Nellie",
                "Hirthe"
            ],
            [
                "Kadin",
                "Archibald",
                "Streich"
            ],
            [
                "Oren",
                "Alexys",
                "Simonis"
            ],
            [
                "Berneice",
                "Lorine",
                "Morar"
            ],
            [
                "Edmond",
                "Archibald",
                "Streich"
            ],
            [
                "Rodger",
                "Archibald",
                "Streich"
            ],
            [
                "Cyrus",
                "Naomi",
                "Price"
            ],
            [
                "Bernice",
                "Courtney",
                "Adams"
            ],
            [
                "Berneice",
                "Etha",
                "Reinger"
            ],
            [
                "Edmond",
                "Naomi",
                "Price"
            ],
            [
                "Bernice",
                "Lorine",
                "Morar"
            ],
            [
                "Edmond",
                "Cullen",
                "Kunde"
            ]
        ],
        "cypher_query": "MATCH (T1:`assets_maintenance.Staff`)-[]-(T3:`assets_maintenance.Maintenance_Engineers`)-[]-(T2:`assets_maintenance.Engineer_Visits`)\nRETURN T1.staff_name,T3.first_name,T3.last_name",
        "cypher_ans": []
    },
    {
        "db_id": "assets_maintenance",
        "question": "Which skill is used in fixing the most number of faults? List the skill id and description.",
        "sql_query": "SELECT T1.skill_id ,  T1.skill_description FROM Skills AS T1 JOIN Skills_Required_To_Fix AS T2 ON T1.skill_id  =  T2.skill_id GROUP BY T1.skill_id ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.skill_id"
                },
                {
                    "value": "T1.skill_description"
                }
            ],
            "from": [
                {
                    "value": "Skills",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "Skills_Required_To_Fix",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.skill_id",
                            "T2.skill_id"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.skill_id"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                3,
                "TV, Video"
            ]
        ],
        "cypher_query": "MATCH (T1:`assets_maintenance.Skills`)-[T2:`assets_maintenance.Skills_Required_To_Fix`]-()\nWITH T1.skill_description AS skill_description, count(T1.skill_id) AS count, T1.skill_id AS skill_id\nRETURN skill_id,skill_description\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": [
            [
                2,
                "Mechanical"
            ]
        ]
    }
][
    {
        "db_id": "assets_maintenance",
        "question": "List all every engineer's first name, last name, details and coresponding skill description.",
        "sql_query": "SELECT T1.first_name ,  T1.last_name ,  T1.other_details ,  T3.skill_description FROM Maintenance_Engineers AS T1 JOIN Engineer_Skills AS T2 ON T1.engineer_id  =  T2.engineer_id JOIN Skills AS T3 ON T2.skill_id  =  T3.skill_id",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.first_name"
                },
                {
                    "value": "T1.last_name"
                },
                {
                    "value": "T1.other_details"
                },
                {
                    "value": "T3.skill_description"
                }
            ],
            "from": [
                {
                    "value": "Maintenance_Engineers",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "Engineer_Skills",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.engineer_id",
                            "T2.engineer_id"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "Skills",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T2.skill_id",
                            "T3.skill_id"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "Naomi",
                "Price",
                null,
                "Mechanical"
            ],
            [
                "Naomi",
                "Price",
                null,
                "Electrical"
            ],
            [
                "Archibald",
                "Streich",
                null,
                "Electrical"
            ],
            [
                "Courtney",
                "Adams",
                null,
                "Electrical"
            ],
            [
                "Weston",
                "Hahn",
                null,
                "Electrical"
            ],
            [
                "Courtney",
                "Adams",
                null,
                "TV, Video"
            ],
            [
                "Weston",
                "Hahn",
                null,
                "Mechanical"
            ],
            [
                "Josie",
                "Harvey",
                "Skilled",
                "TV, Video"
            ],
            [
                "Manley",
                "Grady",
                null,
                "Mechanical"
            ],
            [
                "Nellie",
                "Hirthe",
                null,
                "TV, Video"
            ],
            [
                "Archibald",
                "Streich",
                null,
                "TV, Video"
            ],
            [
                "Manley",
                "Grady",
                null,
                "Electrical"
            ],
            [
                "Brian",
                "Stamm",
                null,
                "TV, Video"
            ],
            [
                "Samanta",
                "Hauck",
                null,
                "Electrical"
            ],
            [
                "Cullen",
                "Kunde",
                null,
                "Mechanical"
            ],
            [
                "Alexys",
                "Simonis",
                null,
                "Mechanical"
            ],
            [
                "Clemens",
                "Orn",
                null,
                "Mechanical"
            ],
            [
                "Nellie",
                "Hirthe",
                null,
                "Electrical"
            ],
            [
                "Lorine",
                "Morar",
                null,
                "Electrical"
            ]
        ],
        "cypher_query": "MATCH (T1:`assets_maintenance.Maintenance_Engineers`)-[T2:`assets_maintenance.Engineer_Skills`]-(T3:`assets_maintenance.Skills`)\nRETURN T1.first_name,T1.last_name,T1.other_details,T3.skill_description",
        "cypher_ans": [
            [
                "Archibald",
                "Streich",
                null,
                "Electrical"
            ],
            [
                "Manley",
                "Grady",
                null,
                "Electrical"
            ],
            [
                "Weston",
                "Hahn",
                null,
                "Electrical"
            ],
            [
                "Naomi",
                "Price",
                null,
                "Electrical"
            ],
            [
                "Samanta",
                "Hauck",
                null,
                "Electrical"
            ],
            [
                "Lorine",
                "Morar",
                null,
                "Electrical"
            ],
            [
                "Courtney",
                "Adams",
                null,
                "Electrical"
            ],
            [
                "Nellie",
                "Hirthe",
                null,
                "Electrical"
            ],
            [
                "Manley",
                "Grady",
                null,
                "Mechanical"
            ],
            [
                "Clemens",
                "Orn",
                null,
                "Mechanical"
            ],
            [
                "Cullen",
                "Kunde",
                null,
                "Mechanical"
            ],
            [
                "Alexys",
                "Simonis",
                null,
                "Mechanical"
            ],
            [
                "Naomi",
                "Price",
                null,
                "Mechanical"
            ],
            [
                "Weston",
                "Hahn",
                null,
                "Mechanical"
            ],
            [
                "Brian",
                "Stamm",
                null,
                "TV, Video"
            ],
            [
                "Nellie",
                "Hirthe",
                null,
                "TV, Video"
            ],
            [
                "Archibald",
                "Streich",
                null,
                "TV, Video"
            ],
            [
                "Josie",
                "Harvey",
                "Skilled",
                "TV, Video"
            ],
            [
                "Courtney",
                "Adams",
                null,
                "TV, Video"
            ]
        ]
    },
    {
        "db_id": "assets_maintenance",
        "question": "For all the faults of different parts, what are all the decriptions of the skills required to fix them? List the name of the faults and the skill description.",
        "sql_query": "SELECT T1.fault_short_name ,  T3.skill_description FROM Part_Faults AS T1 JOIN Skills_Required_To_Fix AS T2 ON T1.part_fault_id  =  T2.part_fault_id JOIN Skills AS T3 ON T2.skill_id  =  T3.skill_id",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.fault_short_name"
                },
                {
                    "value": "T3.skill_description"
                }
            ],
            "from": [
                {
                    "value": "Part_Faults",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "Skills_Required_To_Fix",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.part_fault_id",
                            "T2.part_fault_id"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "Skills",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T2.skill_id",
                            "T3.skill_id"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "TW",
                "Mechanical"
            ],
            [
                "MW",
                "TV, Video"
            ],
            [
                "PW",
                "Electrical"
            ],
            [
                "PW",
                "TV, Video"
            ],
            [
                "TW",
                "TV, Video"
            ],
            [
                "PW",
                "Mechanical"
            ],
            [
                "MW",
                "Mechanical"
            ]
        ],
        "cypher_query": "MATCH (T1:`assets_maintenance.Part_Faults`)-[T2:`assets_maintenance.Skills_Required_To_Fix`]-(T3:`assets_maintenance.Skills`)\nRETURN T1.fault_short_name,T3.skill_description",
        "cypher_ans": [
            [
                "PW",
                "Electrical"
            ],
            [
                "TW",
                "Mechanical"
            ],
            [
                "PW",
                "Mechanical"
            ],
            [
                "MW",
                "Mechanical"
            ],
            [
                "MW",
                "TV, Video"
            ],
            [
                "TW",
                "TV, Video"
            ],
            [
                "PW",
                "TV, Video"
            ]
        ]
    },
    {
        "db_id": "assets_maintenance",
        "question": "How many assets can each parts be used in? List the part name and the number.",
        "sql_query": "SELECT T1.part_name ,  count(*) FROM Parts AS T1 JOIN Asset_Parts AS T2 ON T1.part_id  =  T2.part_id GROUP BY T1.part_name",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.part_name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "Parts",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "Asset_Parts",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.part_id",
                            "T2.part_id"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.part_name"
            }
        },
        "sql_ans": [
            [
                "middle",
                5
            ],
            [
                "package",
                6
            ],
            [
                "top",
                4
            ]
        ],
        "cypher_query": "MATCH (T1:`assets_maintenance.Parts`)-[T2:`assets_maintenance.Asset_Parts`]-()\nWITH T1.part_name AS part_name, count(T1.part_name) AS count\nRETURN part_name,count",
        "cypher_ans": [
            [
                "top",
                4
            ],
            [
                "middle",
                5
            ],
            [
                "package",
                5
            ]
        ]
    },
    {
        "db_id": "assets_maintenance",
        "question": "Among those engineers who have visited, which engineer makes the least number of visits? List the engineer id, first name and last name.",
        "sql_query": "SELECT T1.engineer_id ,  T1.first_name ,  T1.last_name FROM Maintenance_Engineers AS T1 JOIN Engineer_Visits AS T2 ON T1.engineer_id  =  T2.engineer_id GROUP BY T1.engineer_id ORDER BY count(*) ASC LIMIT 1",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.engineer_id"
                },
                {
                    "value": "T1.first_name"
                },
                {
                    "value": "T1.last_name"
                }
            ],
            "from": [
                {
                    "value": "Maintenance_Engineers",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "Engineer_Visits",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.engineer_id",
                            "T2.engineer_id"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.engineer_id"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "asc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                1,
                "Etha",
                "Reinger"
            ]
        ],
        "cypher_query": "MATCH (T1:`assets_maintenance.Maintenance_Engineers`)-[]-(T2:`assets_maintenance.Engineer_Visits`)\nWITH T1.first_name AS first_name, count(T1.engineer_id) AS count, T1.engineer_id AS engineer_id, T1.last_name AS last_name\nRETURN engineer_id,first_name,last_name\nORDER BY count ASC\nLIMIT 1",
        "cypher_ans": [
            [
                8,
                "Nellie",
                "Hirthe"
            ]
        ]
    },
    {
        "db_id": "assets_maintenance",
        "question": "Which staff have contacted which engineers? List the staff name and the engineer first name and last name.",
        "sql_query": "SELECT T1.staff_name ,  T3.first_name ,  T3.last_name FROM Staff AS T1 JOIN Engineer_Visits AS T2 ON T1.staff_id  =  T2.contact_staff_id JOIN Maintenance_Engineers AS T3 ON T2.engineer_id  =  T3.engineer_id",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.staff_name"
                },
                {
                    "value": "T3.first_name"
                },
                {
                    "value": "T3.last_name"
                }
            ],
            "from": [
                {
                    "value": "Staff",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "Engineer_Visits",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.staff_id",
                            "T2.contact_staff_id"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "Maintenance_Engineers",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T2.engineer_id",
                            "T3.engineer_id"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "Christophe",
                "Nellie",
                "Hirthe"
            ],
            [
                "Kadin",
                "Archibald",
                "Streich"
            ],
            [
                "Oren",
                "Alexys",
                "Simonis"
            ],
            [
                "Berneice",
                "Lorine",
                "Morar"
            ],
            [
                "Edmond",
                "Archibald",
                "Streich"
            ],
            [
                "Rodger",
                "Archibald",
                "Streich"
            ],
            [
                "Cyrus",
                "Naomi",
                "Price"
            ],
            [
                "Bernice",
                "Courtney",
                "Adams"
            ],
            [
                "Berneice",
                "Etha",
                "Reinger"
            ],
            [
                "Edmond",
                "Naomi",
                "Price"
            ],
            [
                "Bernice",
                "Lorine",
                "Morar"
            ],
            [
                "Edmond",
                "Cullen",
                "Kunde"
            ]
        ],
        "cypher_query": "MATCH (T1:`assets_maintenance.Staff`)-[]-(T3:`assets_maintenance.Maintenance_Engineers`)-[]-(T2:`assets_maintenance.Engineer_Visits`)\nRETURN T1.staff_name,T3.first_name,T3.last_name",
        "cypher_ans": []
    },
    {
        "db_id": "assets_maintenance",
        "question": "Which skill is used in fixing the most number of faults? List the skill id and description.",
        "sql_query": "SELECT T1.skill_id ,  T1.skill_description FROM Skills AS T1 JOIN Skills_Required_To_Fix AS T2 ON T1.skill_id  =  T2.skill_id GROUP BY T1.skill_id ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.skill_id"
                },
                {
                    "value": "T1.skill_description"
                }
            ],
            "from": [
                {
                    "value": "Skills",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "Skills_Required_To_Fix",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.skill_id",
                            "T2.skill_id"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.skill_id"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                3,
                "TV, Video"
            ]
        ],
        "cypher_query": "MATCH (T1:`assets_maintenance.Skills`)-[T2:`assets_maintenance.Skills_Required_To_Fix`]-()\nWITH T1.skill_description AS skill_description, count(T1.skill_id) AS count, T1.skill_id AS skill_id\nRETURN skill_id,skill_description\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": [
            [
                2,
                "Mechanical"
            ]
        ]
    }
][
    {
        "db_id": "assets_maintenance",
        "question": "List all every engineer's first name, last name, details and coresponding skill description.",
        "sql_query": "SELECT T1.first_name ,  T1.last_name ,  T1.other_details ,  T3.skill_description FROM Maintenance_Engineers AS T1 JOIN Engineer_Skills AS T2 ON T1.engineer_id  =  T2.engineer_id JOIN Skills AS T3 ON T2.skill_id  =  T3.skill_id",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.first_name"
                },
                {
                    "value": "T1.last_name"
                },
                {
                    "value": "T1.other_details"
                },
                {
                    "value": "T3.skill_description"
                }
            ],
            "from": [
                {
                    "value": "Maintenance_Engineers",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "Engineer_Skills",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.engineer_id",
                            "T2.engineer_id"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "Skills",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T2.skill_id",
                            "T3.skill_id"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "Naomi",
                "Price",
                null,
                "Mechanical"
            ],
            [
                "Naomi",
                "Price",
                null,
                "Electrical"
            ],
            [
                "Archibald",
                "Streich",
                null,
                "Electrical"
            ],
            [
                "Courtney",
                "Adams",
                null,
                "Electrical"
            ],
            [
                "Weston",
                "Hahn",
                null,
                "Electrical"
            ],
            [
                "Courtney",
                "Adams",
                null,
                "TV, Video"
            ],
            [
                "Weston",
                "Hahn",
                null,
                "Mechanical"
            ],
            [
                "Josie",
                "Harvey",
                "Skilled",
                "TV, Video"
            ],
            [
                "Manley",
                "Grady",
                null,
                "Mechanical"
            ],
            [
                "Nellie",
                "Hirthe",
                null,
                "TV, Video"
            ],
            [
                "Archibald",
                "Streich",
                null,
                "TV, Video"
            ],
            [
                "Manley",
                "Grady",
                null,
                "Electrical"
            ],
            [
                "Brian",
                "Stamm",
                null,
                "TV, Video"
            ],
            [
                "Samanta",
                "Hauck",
                null,
                "Electrical"
            ],
            [
                "Cullen",
                "Kunde",
                null,
                "Mechanical"
            ],
            [
                "Alexys",
                "Simonis",
                null,
                "Mechanical"
            ],
            [
                "Clemens",
                "Orn",
                null,
                "Mechanical"
            ],
            [
                "Nellie",
                "Hirthe",
                null,
                "Electrical"
            ],
            [
                "Lorine",
                "Morar",
                null,
                "Electrical"
            ]
        ],
        "cypher_query": "MATCH (T1:`assets_maintenance.Maintenance_Engineers`)-[T2:`assets_maintenance.Engineer_Skills`]-(T3:`assets_maintenance.Skills`)\nRETURN T1.first_name,T1.last_name,T1.other_details,T3.skill_description",
        "cypher_ans": [
            [
                "Archibald",
                "Streich",
                null,
                "Electrical"
            ],
            [
                "Manley",
                "Grady",
                null,
                "Electrical"
            ],
            [
                "Weston",
                "Hahn",
                null,
                "Electrical"
            ],
            [
                "Naomi",
                "Price",
                null,
                "Electrical"
            ],
            [
                "Samanta",
                "Hauck",
                null,
                "Electrical"
            ],
            [
                "Lorine",
                "Morar",
                null,
                "Electrical"
            ],
            [
                "Courtney",
                "Adams",
                null,
                "Electrical"
            ],
            [
                "Nellie",
                "Hirthe",
                null,
                "Electrical"
            ],
            [
                "Manley",
                "Grady",
                null,
                "Mechanical"
            ],
            [
                "Clemens",
                "Orn",
                null,
                "Mechanical"
            ],
            [
                "Cullen",
                "Kunde",
                null,
                "Mechanical"
            ],
            [
                "Alexys",
                "Simonis",
                null,
                "Mechanical"
            ],
            [
                "Naomi",
                "Price",
                null,
                "Mechanical"
            ],
            [
                "Weston",
                "Hahn",
                null,
                "Mechanical"
            ],
            [
                "Brian",
                "Stamm",
                null,
                "TV, Video"
            ],
            [
                "Nellie",
                "Hirthe",
                null,
                "TV, Video"
            ],
            [
                "Archibald",
                "Streich",
                null,
                "TV, Video"
            ],
            [
                "Josie",
                "Harvey",
                "Skilled",
                "TV, Video"
            ],
            [
                "Courtney",
                "Adams",
                null,
                "TV, Video"
            ]
        ]
    },
    {
        "db_id": "assets_maintenance",
        "question": "For all the faults of different parts, what are all the decriptions of the skills required to fix them? List the name of the faults and the skill description.",
        "sql_query": "SELECT T1.fault_short_name ,  T3.skill_description FROM Part_Faults AS T1 JOIN Skills_Required_To_Fix AS T2 ON T1.part_fault_id  =  T2.part_fault_id JOIN Skills AS T3 ON T2.skill_id  =  T3.skill_id",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.fault_short_name"
                },
                {
                    "value": "T3.skill_description"
                }
            ],
            "from": [
                {
                    "value": "Part_Faults",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "Skills_Required_To_Fix",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.part_fault_id",
                            "T2.part_fault_id"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "Skills",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T2.skill_id",
                            "T3.skill_id"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "TW",
                "Mechanical"
            ],
            [
                "MW",
                "TV, Video"
            ],
            [
                "PW",
                "Electrical"
            ],
            [
                "PW",
                "TV, Video"
            ],
            [
                "TW",
                "TV, Video"
            ],
            [
                "PW",
                "Mechanical"
            ],
            [
                "MW",
                "Mechanical"
            ]
        ],
        "cypher_query": "MATCH (T1:`assets_maintenance.Part_Faults`)-[T2:`assets_maintenance.Skills_Required_To_Fix`]-(T3:`assets_maintenance.Skills`)\nRETURN T1.fault_short_name,T3.skill_description",
        "cypher_ans": [
            [
                "PW",
                "Electrical"
            ],
            [
                "TW",
                "Mechanical"
            ],
            [
                "PW",
                "Mechanical"
            ],
            [
                "MW",
                "Mechanical"
            ],
            [
                "MW",
                "TV, Video"
            ],
            [
                "TW",
                "TV, Video"
            ],
            [
                "PW",
                "TV, Video"
            ]
        ]
    },
    {
        "db_id": "assets_maintenance",
        "question": "How many assets can each parts be used in? List the part name and the number.",
        "sql_query": "SELECT T1.part_name ,  count(*) FROM Parts AS T1 JOIN Asset_Parts AS T2 ON T1.part_id  =  T2.part_id GROUP BY T1.part_name",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.part_name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "Parts",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "Asset_Parts",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.part_id",
                            "T2.part_id"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.part_name"
            }
        },
        "sql_ans": [
            [
                "middle",
                5
            ],
            [
                "package",
                6
            ],
            [
                "top",
                4
            ]
        ],
        "cypher_query": "MATCH (T1:`assets_maintenance.Parts`)-[T2:`assets_maintenance.Asset_Parts`]-()\nWITH count(T1.part_name) AS count, T1.part_name AS part_name\nRETURN part_name,count",
        "cypher_ans": [
            [
                "top",
                4
            ],
            [
                "middle",
                5
            ],
            [
                "package",
                5
            ]
        ]
    },
    {
        "db_id": "assets_maintenance",
        "question": "Among those engineers who have visited, which engineer makes the least number of visits? List the engineer id, first name and last name.",
        "sql_query": "SELECT T1.engineer_id ,  T1.first_name ,  T1.last_name FROM Maintenance_Engineers AS T1 JOIN Engineer_Visits AS T2 ON T1.engineer_id  =  T2.engineer_id GROUP BY T1.engineer_id ORDER BY count(*) ASC LIMIT 1",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.engineer_id"
                },
                {
                    "value": "T1.first_name"
                },
                {
                    "value": "T1.last_name"
                }
            ],
            "from": [
                {
                    "value": "Maintenance_Engineers",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "Engineer_Visits",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.engineer_id",
                            "T2.engineer_id"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.engineer_id"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "asc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                1,
                "Etha",
                "Reinger"
            ]
        ],
        "cypher_query": "MATCH (T1:`assets_maintenance.Maintenance_Engineers`)-[]-(T2:`assets_maintenance.Engineer_Visits`)\nWITH T1.engineer_id AS engineer_id, count(T1.engineer_id) AS count, T1.first_name AS first_name, T1.last_name AS last_name\nRETURN engineer_id,first_name,last_name\nORDER BY count ASC\nLIMIT 1",
        "cypher_ans": [
            [
                8,
                "Nellie",
                "Hirthe"
            ]
        ]
    },
    {
        "db_id": "assets_maintenance",
        "question": "Which staff have contacted which engineers? List the staff name and the engineer first name and last name.",
        "sql_query": "SELECT T1.staff_name ,  T3.first_name ,  T3.last_name FROM Staff AS T1 JOIN Engineer_Visits AS T2 ON T1.staff_id  =  T2.contact_staff_id JOIN Maintenance_Engineers AS T3 ON T2.engineer_id  =  T3.engineer_id",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.staff_name"
                },
                {
                    "value": "T3.first_name"
                },
                {
                    "value": "T3.last_name"
                }
            ],
            "from": [
                {
                    "value": "Staff",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "Engineer_Visits",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.staff_id",
                            "T2.contact_staff_id"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "Maintenance_Engineers",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T2.engineer_id",
                            "T3.engineer_id"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "Christophe",
                "Nellie",
                "Hirthe"
            ],
            [
                "Kadin",
                "Archibald",
                "Streich"
            ],
            [
                "Oren",
                "Alexys",
                "Simonis"
            ],
            [
                "Berneice",
                "Lorine",
                "Morar"
            ],
            [
                "Edmond",
                "Archibald",
                "Streich"
            ],
            [
                "Rodger",
                "Archibald",
                "Streich"
            ],
            [
                "Cyrus",
                "Naomi",
                "Price"
            ],
            [
                "Bernice",
                "Courtney",
                "Adams"
            ],
            [
                "Berneice",
                "Etha",
                "Reinger"
            ],
            [
                "Edmond",
                "Naomi",
                "Price"
            ],
            [
                "Bernice",
                "Lorine",
                "Morar"
            ],
            [
                "Edmond",
                "Cullen",
                "Kunde"
            ]
        ],
        "cypher_query": "MATCH (T1:`assets_maintenance.Staff`)-[]-(T3:`assets_maintenance.Maintenance_Engineers`)-[]-(T2:`assets_maintenance.Engineer_Visits`)\nRETURN T1.staff_name,T3.first_name,T3.last_name",
        "cypher_ans": []
    },
    {
        "db_id": "assets_maintenance",
        "question": "Which skill is used in fixing the most number of faults? List the skill id and description.",
        "sql_query": "SELECT T1.skill_id ,  T1.skill_description FROM Skills AS T1 JOIN Skills_Required_To_Fix AS T2 ON T1.skill_id  =  T2.skill_id GROUP BY T1.skill_id ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.skill_id"
                },
                {
                    "value": "T1.skill_description"
                }
            ],
            "from": [
                {
                    "value": "Skills",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "Skills_Required_To_Fix",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.skill_id",
                            "T2.skill_id"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.skill_id"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                3,
                "TV, Video"
            ]
        ],
        "cypher_query": "MATCH (T1:`assets_maintenance.Skills`)-[T2:`assets_maintenance.Skills_Required_To_Fix`]-()\nWITH T1.skill_description AS skill_description, count(T1.skill_id) AS count, T1.skill_id AS skill_id\nRETURN skill_id,skill_description\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": [
            [
                2,
                "Mechanical"
            ]
        ]
    }
][
    {
        "db_id": "assets_maintenance",
        "question": "List all every engineer's first name, last name, details and coresponding skill description.",
        "sql_query": "SELECT T1.first_name ,  T1.last_name ,  T1.other_details ,  T3.skill_description FROM Maintenance_Engineers AS T1 JOIN Engineer_Skills AS T2 ON T1.engineer_id  =  T2.engineer_id JOIN Skills AS T3 ON T2.skill_id  =  T3.skill_id",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.first_name"
                },
                {
                    "value": "T1.last_name"
                },
                {
                    "value": "T1.other_details"
                },
                {
                    "value": "T3.skill_description"
                }
            ],
            "from": [
                {
                    "value": "Maintenance_Engineers",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "Engineer_Skills",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.engineer_id",
                            "T2.engineer_id"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "Skills",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T2.skill_id",
                            "T3.skill_id"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "Naomi",
                "Price",
                null,
                "Mechanical"
            ],
            [
                "Naomi",
                "Price",
                null,
                "Electrical"
            ],
            [
                "Archibald",
                "Streich",
                null,
                "Electrical"
            ],
            [
                "Courtney",
                "Adams",
                null,
                "Electrical"
            ],
            [
                "Weston",
                "Hahn",
                null,
                "Electrical"
            ],
            [
                "Courtney",
                "Adams",
                null,
                "TV, Video"
            ],
            [
                "Weston",
                "Hahn",
                null,
                "Mechanical"
            ],
            [
                "Josie",
                "Harvey",
                "Skilled",
                "TV, Video"
            ],
            [
                "Manley",
                "Grady",
                null,
                "Mechanical"
            ],
            [
                "Nellie",
                "Hirthe",
                null,
                "TV, Video"
            ],
            [
                "Archibald",
                "Streich",
                null,
                "TV, Video"
            ],
            [
                "Manley",
                "Grady",
                null,
                "Electrical"
            ],
            [
                "Brian",
                "Stamm",
                null,
                "TV, Video"
            ],
            [
                "Samanta",
                "Hauck",
                null,
                "Electrical"
            ],
            [
                "Cullen",
                "Kunde",
                null,
                "Mechanical"
            ],
            [
                "Alexys",
                "Simonis",
                null,
                "Mechanical"
            ],
            [
                "Clemens",
                "Orn",
                null,
                "Mechanical"
            ],
            [
                "Nellie",
                "Hirthe",
                null,
                "Electrical"
            ],
            [
                "Lorine",
                "Morar",
                null,
                "Electrical"
            ]
        ],
        "cypher_query": "MATCH (T1:`assets_maintenance.Maintenance_Engineers`)-[T2:`assets_maintenance.Engineer_Skills`]-(T3:`assets_maintenance.Skills`)\nRETURN T1.first_name,T1.last_name,T1.other_details,T3.skill_description",
        "cypher_ans": [
            [
                "Archibald",
                "Streich",
                null,
                "Electrical"
            ],
            [
                "Manley",
                "Grady",
                null,
                "Electrical"
            ],
            [
                "Weston",
                "Hahn",
                null,
                "Electrical"
            ],
            [
                "Naomi",
                "Price",
                null,
                "Electrical"
            ],
            [
                "Samanta",
                "Hauck",
                null,
                "Electrical"
            ],
            [
                "Lorine",
                "Morar",
                null,
                "Electrical"
            ],
            [
                "Courtney",
                "Adams",
                null,
                "Electrical"
            ],
            [
                "Nellie",
                "Hirthe",
                null,
                "Electrical"
            ],
            [
                "Manley",
                "Grady",
                null,
                "Mechanical"
            ],
            [
                "Clemens",
                "Orn",
                null,
                "Mechanical"
            ],
            [
                "Cullen",
                "Kunde",
                null,
                "Mechanical"
            ],
            [
                "Alexys",
                "Simonis",
                null,
                "Mechanical"
            ],
            [
                "Naomi",
                "Price",
                null,
                "Mechanical"
            ],
            [
                "Weston",
                "Hahn",
                null,
                "Mechanical"
            ],
            [
                "Brian",
                "Stamm",
                null,
                "TV, Video"
            ],
            [
                "Nellie",
                "Hirthe",
                null,
                "TV, Video"
            ],
            [
                "Archibald",
                "Streich",
                null,
                "TV, Video"
            ],
            [
                "Josie",
                "Harvey",
                "Skilled",
                "TV, Video"
            ],
            [
                "Courtney",
                "Adams",
                null,
                "TV, Video"
            ]
        ]
    },
    {
        "db_id": "assets_maintenance",
        "question": "For all the faults of different parts, what are all the decriptions of the skills required to fix them? List the name of the faults and the skill description.",
        "sql_query": "SELECT T1.fault_short_name ,  T3.skill_description FROM Part_Faults AS T1 JOIN Skills_Required_To_Fix AS T2 ON T1.part_fault_id  =  T2.part_fault_id JOIN Skills AS T3 ON T2.skill_id  =  T3.skill_id",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.fault_short_name"
                },
                {
                    "value": "T3.skill_description"
                }
            ],
            "from": [
                {
                    "value": "Part_Faults",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "Skills_Required_To_Fix",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.part_fault_id",
                            "T2.part_fault_id"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "Skills",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T2.skill_id",
                            "T3.skill_id"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "TW",
                "Mechanical"
            ],
            [
                "MW",
                "TV, Video"
            ],
            [
                "PW",
                "Electrical"
            ],
            [
                "PW",
                "TV, Video"
            ],
            [
                "TW",
                "TV, Video"
            ],
            [
                "PW",
                "Mechanical"
            ],
            [
                "MW",
                "Mechanical"
            ]
        ],
        "cypher_query": "MATCH (T1:`assets_maintenance.Part_Faults`)-[T2:`assets_maintenance.Skills_Required_To_Fix`]-(T3:`assets_maintenance.Skills`)\nRETURN T1.fault_short_name,T3.skill_description",
        "cypher_ans": [
            [
                "PW",
                "Electrical"
            ],
            [
                "TW",
                "Mechanical"
            ],
            [
                "PW",
                "Mechanical"
            ],
            [
                "MW",
                "Mechanical"
            ],
            [
                "MW",
                "TV, Video"
            ],
            [
                "TW",
                "TV, Video"
            ],
            [
                "PW",
                "TV, Video"
            ]
        ]
    },
    {
        "db_id": "assets_maintenance",
        "question": "How many assets can each parts be used in? List the part name and the number.",
        "sql_query": "SELECT T1.part_name ,  count(*) FROM Parts AS T1 JOIN Asset_Parts AS T2 ON T1.part_id  =  T2.part_id GROUP BY T1.part_name",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.part_name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "Parts",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "Asset_Parts",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.part_id",
                            "T2.part_id"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.part_name"
            }
        },
        "sql_ans": [
            [
                "middle",
                5
            ],
            [
                "package",
                6
            ],
            [
                "top",
                4
            ]
        ],
        "cypher_query": "MATCH (T1:`assets_maintenance.Parts`)-[T2:`assets_maintenance.Asset_Parts`]-()\nWITH T1.part_name AS part_name, count(T1.part_name) AS count\nRETURN part_name,count",
        "cypher_ans": [
            [
                "top",
                4
            ],
            [
                "middle",
                5
            ],
            [
                "package",
                5
            ]
        ]
    },
    {
        "db_id": "assets_maintenance",
        "question": "Among those engineers who have visited, which engineer makes the least number of visits? List the engineer id, first name and last name.",
        "sql_query": "SELECT T1.engineer_id ,  T1.first_name ,  T1.last_name FROM Maintenance_Engineers AS T1 JOIN Engineer_Visits AS T2 ON T1.engineer_id  =  T2.engineer_id GROUP BY T1.engineer_id ORDER BY count(*) ASC LIMIT 1",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.engineer_id"
                },
                {
                    "value": "T1.first_name"
                },
                {
                    "value": "T1.last_name"
                }
            ],
            "from": [
                {
                    "value": "Maintenance_Engineers",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "Engineer_Visits",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.engineer_id",
                            "T2.engineer_id"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.engineer_id"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "asc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                1,
                "Etha",
                "Reinger"
            ]
        ],
        "cypher_query": "MATCH (T1:`assets_maintenance.Maintenance_Engineers`)-[]-(T2:`assets_maintenance.Engineer_Visits`)\nWITH T1.first_name AS first_name, T1.engineer_id AS engineer_id, count(T1.engineer_id) AS count, T1.last_name AS last_name\nRETURN engineer_id,first_name,last_name\nORDER BY count ASC\nLIMIT 1",
        "cypher_ans": [
            [
                8,
                "Nellie",
                "Hirthe"
            ]
        ]
    },
    {
        "db_id": "assets_maintenance",
        "question": "Which staff have contacted which engineers? List the staff name and the engineer first name and last name.",
        "sql_query": "SELECT T1.staff_name ,  T3.first_name ,  T3.last_name FROM Staff AS T1 JOIN Engineer_Visits AS T2 ON T1.staff_id  =  T2.contact_staff_id JOIN Maintenance_Engineers AS T3 ON T2.engineer_id  =  T3.engineer_id",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.staff_name"
                },
                {
                    "value": "T3.first_name"
                },
                {
                    "value": "T3.last_name"
                }
            ],
            "from": [
                {
                    "value": "Staff",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "Engineer_Visits",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.staff_id",
                            "T2.contact_staff_id"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "Maintenance_Engineers",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T2.engineer_id",
                            "T3.engineer_id"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "Christophe",
                "Nellie",
                "Hirthe"
            ],
            [
                "Kadin",
                "Archibald",
                "Streich"
            ],
            [
                "Oren",
                "Alexys",
                "Simonis"
            ],
            [
                "Berneice",
                "Lorine",
                "Morar"
            ],
            [
                "Edmond",
                "Archibald",
                "Streich"
            ],
            [
                "Rodger",
                "Archibald",
                "Streich"
            ],
            [
                "Cyrus",
                "Naomi",
                "Price"
            ],
            [
                "Bernice",
                "Courtney",
                "Adams"
            ],
            [
                "Berneice",
                "Etha",
                "Reinger"
            ],
            [
                "Edmond",
                "Naomi",
                "Price"
            ],
            [
                "Bernice",
                "Lorine",
                "Morar"
            ],
            [
                "Edmond",
                "Cullen",
                "Kunde"
            ]
        ],
        "cypher_query": "MATCH (T1:`assets_maintenance.Staff`)-[]-(T3:`assets_maintenance.Maintenance_Engineers`)-[]-(T2:`assets_maintenance.Engineer_Visits`)\nRETURN T1.staff_name,T3.first_name,T3.last_name",
        "cypher_ans": []
    },
    {
        "db_id": "assets_maintenance",
        "question": "Which skill is used in fixing the most number of faults? List the skill id and description.",
        "sql_query": "SELECT T1.skill_id ,  T1.skill_description FROM Skills AS T1 JOIN Skills_Required_To_Fix AS T2 ON T1.skill_id  =  T2.skill_id GROUP BY T1.skill_id ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.skill_id"
                },
                {
                    "value": "T1.skill_description"
                }
            ],
            "from": [
                {
                    "value": "Skills",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "Skills_Required_To_Fix",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.skill_id",
                            "T2.skill_id"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.skill_id"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                3,
                "TV, Video"
            ]
        ],
        "cypher_query": "MATCH (T1:`assets_maintenance.Skills`)-[T2:`assets_maintenance.Skills_Required_To_Fix`]-()\nWITH T1.skill_id AS skill_id, count(T1.skill_id) AS count, T1.skill_description AS skill_description\nRETURN skill_id,skill_description\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": [
            [
                2,
                "Mechanical"
            ]
        ]
    }
][
    {
        "db_id": "assets_maintenance",
        "question": "List all every engineer's first name, last name, details and coresponding skill description.",
        "sql_query": "SELECT T1.first_name ,  T1.last_name ,  T1.other_details ,  T3.skill_description FROM Maintenance_Engineers AS T1 JOIN Engineer_Skills AS T2 ON T1.engineer_id  =  T2.engineer_id JOIN Skills AS T3 ON T2.skill_id  =  T3.skill_id",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.first_name"
                },
                {
                    "value": "T1.last_name"
                },
                {
                    "value": "T1.other_details"
                },
                {
                    "value": "T3.skill_description"
                }
            ],
            "from": [
                {
                    "value": "Maintenance_Engineers",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "Engineer_Skills",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.engineer_id",
                            "T2.engineer_id"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "Skills",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T2.skill_id",
                            "T3.skill_id"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "Naomi",
                "Price",
                null,
                "Mechanical"
            ],
            [
                "Naomi",
                "Price",
                null,
                "Electrical"
            ],
            [
                "Archibald",
                "Streich",
                null,
                "Electrical"
            ],
            [
                "Courtney",
                "Adams",
                null,
                "Electrical"
            ],
            [
                "Weston",
                "Hahn",
                null,
                "Electrical"
            ],
            [
                "Courtney",
                "Adams",
                null,
                "TV, Video"
            ],
            [
                "Weston",
                "Hahn",
                null,
                "Mechanical"
            ],
            [
                "Josie",
                "Harvey",
                "Skilled",
                "TV, Video"
            ],
            [
                "Manley",
                "Grady",
                null,
                "Mechanical"
            ],
            [
                "Nellie",
                "Hirthe",
                null,
                "TV, Video"
            ],
            [
                "Archibald",
                "Streich",
                null,
                "TV, Video"
            ],
            [
                "Manley",
                "Grady",
                null,
                "Electrical"
            ],
            [
                "Brian",
                "Stamm",
                null,
                "TV, Video"
            ],
            [
                "Samanta",
                "Hauck",
                null,
                "Electrical"
            ],
            [
                "Cullen",
                "Kunde",
                null,
                "Mechanical"
            ],
            [
                "Alexys",
                "Simonis",
                null,
                "Mechanical"
            ],
            [
                "Clemens",
                "Orn",
                null,
                "Mechanical"
            ],
            [
                "Nellie",
                "Hirthe",
                null,
                "Electrical"
            ],
            [
                "Lorine",
                "Morar",
                null,
                "Electrical"
            ]
        ],
        "cypher_query": "MATCH (T1:`assets_maintenance.Maintenance_Engineers`)-[T2:`assets_maintenance.Engineer_Skills`]-(T3:`assets_maintenance.Skills`)\nRETURN T1.first_name,T1.last_name,T1.other_details,T3.skill_description",
        "cypher_ans": [
            [
                "Archibald",
                "Streich",
                null,
                "Electrical"
            ],
            [
                "Manley",
                "Grady",
                null,
                "Electrical"
            ],
            [
                "Weston",
                "Hahn",
                null,
                "Electrical"
            ],
            [
                "Naomi",
                "Price",
                null,
                "Electrical"
            ],
            [
                "Samanta",
                "Hauck",
                null,
                "Electrical"
            ],
            [
                "Lorine",
                "Morar",
                null,
                "Electrical"
            ],
            [
                "Courtney",
                "Adams",
                null,
                "Electrical"
            ],
            [
                "Nellie",
                "Hirthe",
                null,
                "Electrical"
            ],
            [
                "Manley",
                "Grady",
                null,
                "Mechanical"
            ],
            [
                "Clemens",
                "Orn",
                null,
                "Mechanical"
            ],
            [
                "Cullen",
                "Kunde",
                null,
                "Mechanical"
            ],
            [
                "Alexys",
                "Simonis",
                null,
                "Mechanical"
            ],
            [
                "Naomi",
                "Price",
                null,
                "Mechanical"
            ],
            [
                "Weston",
                "Hahn",
                null,
                "Mechanical"
            ],
            [
                "Brian",
                "Stamm",
                null,
                "TV, Video"
            ],
            [
                "Nellie",
                "Hirthe",
                null,
                "TV, Video"
            ],
            [
                "Archibald",
                "Streich",
                null,
                "TV, Video"
            ],
            [
                "Josie",
                "Harvey",
                "Skilled",
                "TV, Video"
            ],
            [
                "Courtney",
                "Adams",
                null,
                "TV, Video"
            ]
        ]
    },
    {
        "db_id": "assets_maintenance",
        "question": "For all the faults of different parts, what are all the decriptions of the skills required to fix them? List the name of the faults and the skill description.",
        "sql_query": "SELECT T1.fault_short_name ,  T3.skill_description FROM Part_Faults AS T1 JOIN Skills_Required_To_Fix AS T2 ON T1.part_fault_id  =  T2.part_fault_id JOIN Skills AS T3 ON T2.skill_id  =  T3.skill_id",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.fault_short_name"
                },
                {
                    "value": "T3.skill_description"
                }
            ],
            "from": [
                {
                    "value": "Part_Faults",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "Skills_Required_To_Fix",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.part_fault_id",
                            "T2.part_fault_id"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "Skills",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T2.skill_id",
                            "T3.skill_id"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "TW",
                "Mechanical"
            ],
            [
                "MW",
                "TV, Video"
            ],
            [
                "PW",
                "Electrical"
            ],
            [
                "PW",
                "TV, Video"
            ],
            [
                "TW",
                "TV, Video"
            ],
            [
                "PW",
                "Mechanical"
            ],
            [
                "MW",
                "Mechanical"
            ]
        ],
        "cypher_query": "MATCH (T1:`assets_maintenance.Part_Faults`)-[T2:`assets_maintenance.Skills_Required_To_Fix`]-(T3:`assets_maintenance.Skills`)\nRETURN T1.fault_short_name,T3.skill_description",
        "cypher_ans": [
            [
                "PW",
                "Electrical"
            ],
            [
                "TW",
                "Mechanical"
            ],
            [
                "PW",
                "Mechanical"
            ],
            [
                "MW",
                "Mechanical"
            ],
            [
                "MW",
                "TV, Video"
            ],
            [
                "TW",
                "TV, Video"
            ],
            [
                "PW",
                "TV, Video"
            ]
        ]
    },
    {
        "db_id": "assets_maintenance",
        "question": "How many assets can each parts be used in? List the part name and the number.",
        "sql_query": "SELECT T1.part_name ,  count(*) FROM Parts AS T1 JOIN Asset_Parts AS T2 ON T1.part_id  =  T2.part_id GROUP BY T1.part_name",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.part_name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "Parts",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "Asset_Parts",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.part_id",
                            "T2.part_id"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.part_name"
            }
        },
        "sql_ans": [
            [
                "middle",
                5
            ],
            [
                "package",
                6
            ],
            [
                "top",
                4
            ]
        ],
        "cypher_query": "MATCH (T1:`assets_maintenance.Parts`)-[T2:`assets_maintenance.Asset_Parts`]-()\nWITH T1.part_name AS part_name, count(T1.part_name) AS count\nRETURN part_name,count",
        "cypher_ans": [
            [
                "top",
                4
            ],
            [
                "middle",
                5
            ],
            [
                "package",
                5
            ]
        ]
    },
    {
        "db_id": "assets_maintenance",
        "question": "Among those engineers who have visited, which engineer makes the least number of visits? List the engineer id, first name and last name.",
        "sql_query": "SELECT T1.engineer_id ,  T1.first_name ,  T1.last_name FROM Maintenance_Engineers AS T1 JOIN Engineer_Visits AS T2 ON T1.engineer_id  =  T2.engineer_id GROUP BY T1.engineer_id ORDER BY count(*) ASC LIMIT 1",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.engineer_id"
                },
                {
                    "value": "T1.first_name"
                },
                {
                    "value": "T1.last_name"
                }
            ],
            "from": [
                {
                    "value": "Maintenance_Engineers",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "Engineer_Visits",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.engineer_id",
                            "T2.engineer_id"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.engineer_id"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "asc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                1,
                "Etha",
                "Reinger"
            ]
        ],
        "cypher_query": "MATCH (T1:`assets_maintenance.Maintenance_Engineers`)-[]-(T2:`assets_maintenance.Engineer_Visits`)\nWITH count(T1.engineer_id) AS count, T1.last_name AS last_name, T1.first_name AS first_name, T1.engineer_id AS engineer_id\nRETURN engineer_id,first_name,last_name\nORDER BY count ASC\nLIMIT 1",
        "cypher_ans": [
            [
                8,
                "Nellie",
                "Hirthe"
            ]
        ]
    },
    {
        "db_id": "assets_maintenance",
        "question": "Which staff have contacted which engineers? List the staff name and the engineer first name and last name.",
        "sql_query": "SELECT T1.staff_name ,  T3.first_name ,  T3.last_name FROM Staff AS T1 JOIN Engineer_Visits AS T2 ON T1.staff_id  =  T2.contact_staff_id JOIN Maintenance_Engineers AS T3 ON T2.engineer_id  =  T3.engineer_id",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.staff_name"
                },
                {
                    "value": "T3.first_name"
                },
                {
                    "value": "T3.last_name"
                }
            ],
            "from": [
                {
                    "value": "Staff",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "Engineer_Visits",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.staff_id",
                            "T2.contact_staff_id"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "Maintenance_Engineers",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T2.engineer_id",
                            "T3.engineer_id"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "Christophe",
                "Nellie",
                "Hirthe"
            ],
            [
                "Kadin",
                "Archibald",
                "Streich"
            ],
            [
                "Oren",
                "Alexys",
                "Simonis"
            ],
            [
                "Berneice",
                "Lorine",
                "Morar"
            ],
            [
                "Edmond",
                "Archibald",
                "Streich"
            ],
            [
                "Rodger",
                "Archibald",
                "Streich"
            ],
            [
                "Cyrus",
                "Naomi",
                "Price"
            ],
            [
                "Bernice",
                "Courtney",
                "Adams"
            ],
            [
                "Berneice",
                "Etha",
                "Reinger"
            ],
            [
                "Edmond",
                "Naomi",
                "Price"
            ],
            [
                "Bernice",
                "Lorine",
                "Morar"
            ],
            [
                "Edmond",
                "Cullen",
                "Kunde"
            ]
        ],
        "cypher_query": "MATCH (T1:`assets_maintenance.Staff`)-[]-(T2:`assets_maintenance.Engineer_Visits`)-[]-(T3:`assets_maintenance.Maintenance_Engineers`)\nRETURN T1.staff_name,T3.first_name,T3.last_name",
        "cypher_ans": [
            [
                "Berneice",
                "Etha",
                "Reinger"
            ],
            [
                "Berneice",
                "Lorine",
                "Morar"
            ],
            [
                "Edmond",
                "Archibald",
                "Streich"
            ],
            [
                "Edmond",
                "Cullen",
                "Kunde"
            ],
            [
                "Edmond",
                "Naomi",
                "Price"
            ],
            [
                "Rodger",
                "Archibald",
                "Streich"
            ],
            [
                "Kadin",
                "Archibald",
                "Streich"
            ],
            [
                "Christophe",
                "Nellie",
                "Hirthe"
            ],
            [
                "Bernice",
                "Courtney",
                "Adams"
            ],
            [
                "Bernice",
                "Lorine",
                "Morar"
            ],
            [
                "Oren",
                "Alexys",
                "Simonis"
            ],
            [
                "Cyrus",
                "Naomi",
                "Price"
            ]
        ]
    },
    {
        "db_id": "assets_maintenance",
        "question": "Which skill is used in fixing the most number of faults? List the skill id and description.",
        "sql_query": "SELECT T1.skill_id ,  T1.skill_description FROM Skills AS T1 JOIN Skills_Required_To_Fix AS T2 ON T1.skill_id  =  T2.skill_id GROUP BY T1.skill_id ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.skill_id"
                },
                {
                    "value": "T1.skill_description"
                }
            ],
            "from": [
                {
                    "value": "Skills",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "Skills_Required_To_Fix",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.skill_id",
                            "T2.skill_id"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.skill_id"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                3,
                "TV, Video"
            ]
        ],
        "cypher_query": "MATCH (T1:`assets_maintenance.Skills`)-[T2:`assets_maintenance.Skills_Required_To_Fix`]-()\nWITH count(T1.skill_id) AS count, T1.skill_id AS skill_id, T1.skill_description AS skill_description\nRETURN skill_id,skill_description\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": [
            [
                2,
                "Mechanical"
            ]
        ]
    }
][
    {
        "db_id": "assets_maintenance",
        "question": "List all every engineer's first name, last name, details and coresponding skill description.",
        "sql_query": "SELECT T1.first_name ,  T1.last_name ,  T1.other_details ,  T3.skill_description FROM Maintenance_Engineers AS T1 JOIN Engineer_Skills AS T2 ON T1.engineer_id  =  T2.engineer_id JOIN Skills AS T3 ON T2.skill_id  =  T3.skill_id",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.first_name"
                },
                {
                    "value": "T1.last_name"
                },
                {
                    "value": "T1.other_details"
                },
                {
                    "value": "T3.skill_description"
                }
            ],
            "from": [
                {
                    "value": "Maintenance_Engineers",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "Engineer_Skills",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.engineer_id",
                            "T2.engineer_id"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "Skills",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T2.skill_id",
                            "T3.skill_id"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "Naomi",
                "Price",
                null,
                "Mechanical"
            ],
            [
                "Naomi",
                "Price",
                null,
                "Electrical"
            ],
            [
                "Archibald",
                "Streich",
                null,
                "Electrical"
            ],
            [
                "Courtney",
                "Adams",
                null,
                "Electrical"
            ],
            [
                "Weston",
                "Hahn",
                null,
                "Electrical"
            ],
            [
                "Courtney",
                "Adams",
                null,
                "TV, Video"
            ],
            [
                "Weston",
                "Hahn",
                null,
                "Mechanical"
            ],
            [
                "Josie",
                "Harvey",
                "Skilled",
                "TV, Video"
            ],
            [
                "Manley",
                "Grady",
                null,
                "Mechanical"
            ],
            [
                "Nellie",
                "Hirthe",
                null,
                "TV, Video"
            ],
            [
                "Archibald",
                "Streich",
                null,
                "TV, Video"
            ],
            [
                "Manley",
                "Grady",
                null,
                "Electrical"
            ],
            [
                "Brian",
                "Stamm",
                null,
                "TV, Video"
            ],
            [
                "Samanta",
                "Hauck",
                null,
                "Electrical"
            ],
            [
                "Cullen",
                "Kunde",
                null,
                "Mechanical"
            ],
            [
                "Alexys",
                "Simonis",
                null,
                "Mechanical"
            ],
            [
                "Clemens",
                "Orn",
                null,
                "Mechanical"
            ],
            [
                "Naomi",
                "Price",
                null,
                "Electrical"
            ],
            [
                "Nellie",
                "Hirthe",
                null,
                "Electrical"
            ],
            [
                "Lorine",
                "Morar",
                null,
                "Electrical"
            ]
        ],
        "cypher_query": "MATCH (T1:`assets_maintenance.Maintenance_Engineers`)-[T2:`assets_maintenance.Engineer_Skills`]-(T3:`assets_maintenance.Skills`)\nRETURN T1.first_name,T1.last_name,T1.other_details,T3.skill_description",
        "cypher_ans": [
            [
                "Archibald",
                "Streich",
                null,
                "Electrical"
            ],
            [
                "Manley",
                "Grady",
                null,
                "Electrical"
            ],
            [
                "Weston",
                "Hahn",
                null,
                "Electrical"
            ],
            [
                "Naomi",
                "Price",
                null,
                "Electrical"
            ],
            [
                "Samanta",
                "Hauck",
                null,
                "Electrical"
            ],
            [
                "Lorine",
                "Morar",
                null,
                "Electrical"
            ],
            [
                "Courtney",
                "Adams",
                null,
                "Electrical"
            ],
            [
                "Nellie",
                "Hirthe",
                null,
                "Electrical"
            ],
            [
                "Manley",
                "Grady",
                null,
                "Mechanical"
            ],
            [
                "Clemens",
                "Orn",
                null,
                "Mechanical"
            ],
            [
                "Cullen",
                "Kunde",
                null,
                "Mechanical"
            ],
            [
                "Alexys",
                "Simonis",
                null,
                "Mechanical"
            ],
            [
                "Naomi",
                "Price",
                null,
                "Mechanical"
            ],
            [
                "Weston",
                "Hahn",
                null,
                "Mechanical"
            ],
            [
                "Brian",
                "Stamm",
                null,
                "TV, Video"
            ],
            [
                "Nellie",
                "Hirthe",
                null,
                "TV, Video"
            ],
            [
                "Archibald",
                "Streich",
                null,
                "TV, Video"
            ],
            [
                "Josie",
                "Harvey",
                "Skilled",
                "TV, Video"
            ],
            [
                "Courtney",
                "Adams",
                null,
                "TV, Video"
            ]
        ]
    },
    {
        "db_id": "assets_maintenance",
        "question": "For all the faults of different parts, what are all the decriptions of the skills required to fix them? List the name of the faults and the skill description.",
        "sql_query": "SELECT T1.fault_short_name ,  T3.skill_description FROM Part_Faults AS T1 JOIN Skills_Required_To_Fix AS T2 ON T1.part_fault_id  =  T2.part_fault_id JOIN Skills AS T3 ON T2.skill_id  =  T3.skill_id",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.fault_short_name"
                },
                {
                    "value": "T3.skill_description"
                }
            ],
            "from": [
                {
                    "value": "Part_Faults",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "Skills_Required_To_Fix",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.part_fault_id",
                            "T2.part_fault_id"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "Skills",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T2.skill_id",
                            "T3.skill_id"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "TW",
                "Mechanical"
            ],
            [
                "MW",
                "TV, Video"
            ],
            [
                "PW",
                "Electrical"
            ],
            [
                "MW",
                "TV, Video"
            ],
            [
                "PW",
                "TV, Video"
            ],
            [
                "PW",
                "Electrical"
            ],
            [
                "MW",
                "TV, Video"
            ],
            [
                "TW",
                "Mechanical"
            ],
            [
                "TW",
                "TV, Video"
            ],
            [
                "PW",
                "Mechanical"
            ],
            [
                "PW",
                "Electrical"
            ],
            [
                "PW",
                "Mechanical"
            ],
            [
                "PW",
                "TV, Video"
            ],
            [
                "MW",
                "TV, Video"
            ],
            [
                "MW",
                "Mechanical"
            ]
        ],
        "cypher_query": "MATCH (T1:`assets_maintenance.Part_Faults`)-[T2:`assets_maintenance.Skills_Required_To_Fix`]-(T3:`assets_maintenance.Skills`)\nRETURN T1.fault_short_name,T3.skill_description",
        "cypher_ans": [
            [
                "PW",
                "Electrical"
            ],
            [
                "TW",
                "Mechanical"
            ],
            [
                "PW",
                "Mechanical"
            ],
            [
                "MW",
                "Mechanical"
            ],
            [
                "MW",
                "TV, Video"
            ],
            [
                "TW",
                "TV, Video"
            ],
            [
                "PW",
                "TV, Video"
            ]
        ]
    },
    {
        "db_id": "assets_maintenance",
        "question": "How many assets can each parts be used in? List the part name and the number.",
        "sql_query": "SELECT T1.part_name ,  count(*) FROM Parts AS T1 JOIN Asset_Parts AS T2 ON T1.part_id  =  T2.part_id GROUP BY T1.part_name",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.part_name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "Parts",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "Asset_Parts",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.part_id",
                            "T2.part_id"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.part_name"
            }
        },
        "sql_ans": [
            [
                "middle",
                5
            ],
            [
                "package",
                6
            ],
            [
                "top",
                4
            ]
        ],
        "cypher_query": "MATCH (T1:`assets_maintenance.Parts`)-[T2:`assets_maintenance.Asset_Parts`]-()\nWITH count(T1.part_name) AS count, T1.part_name AS part_name\nRETURN part_name,count",
        "cypher_ans": [
            [
                "top",
                4
            ],
            [
                "middle",
                5
            ],
            [
                "package",
                5
            ]
        ]
    },
    {
        "db_id": "assets_maintenance",
        "question": "Among those engineers who have visited, which engineer makes the least number of visits? List the engineer id, first name and last name.",
        "sql_query": "SELECT T1.engineer_id ,  T1.first_name ,  T1.last_name FROM Maintenance_Engineers AS T1 JOIN Engineer_Visits AS T2 ON T1.engineer_id  =  T2.engineer_id GROUP BY T1.engineer_id ORDER BY count(*) ASC LIMIT 1",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.engineer_id"
                },
                {
                    "value": "T1.first_name"
                },
                {
                    "value": "T1.last_name"
                }
            ],
            "from": [
                {
                    "value": "Maintenance_Engineers",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "Engineer_Visits",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.engineer_id",
                            "T2.engineer_id"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.engineer_id"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "asc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                1,
                "Etha",
                "Reinger"
            ]
        ],
        "cypher_query": "MATCH (T1:`assets_maintenance.Maintenance_Engineers`)-[]-(T2:`assets_maintenance.Engineer_Visits`)\nWITH T1.first_name AS first_name, T1.engineer_id AS engineer_id, count(T1.engineer_id) AS count, T1.last_name AS last_name\nRETURN engineer_id,first_name,last_name\nORDER BY count ASC\nLIMIT 1",
        "cypher_ans": [
            [
                8,
                "Nellie",
                "Hirthe"
            ]
        ]
    },
    {
        "db_id": "assets_maintenance",
        "question": "Which staff have contacted which engineers? List the staff name and the engineer first name and last name.",
        "sql_query": "SELECT T1.staff_name ,  T3.first_name ,  T3.last_name FROM Staff AS T1 JOIN Engineer_Visits AS T2 ON T1.staff_id  =  T2.contact_staff_id JOIN Maintenance_Engineers AS T3 ON T2.engineer_id  =  T3.engineer_id",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.staff_name"
                },
                {
                    "value": "T3.first_name"
                },
                {
                    "value": "T3.last_name"
                }
            ],
            "from": [
                {
                    "value": "Staff",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "Engineer_Visits",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.staff_id",
                            "T2.contact_staff_id"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "Maintenance_Engineers",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T2.engineer_id",
                            "T3.engineer_id"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "Christophe",
                "Nellie",
                "Hirthe"
            ],
            [
                "Kadin",
                "Archibald",
                "Streich"
            ],
            [
                "Kadin",
                "Archibald",
                "Streich"
            ],
            [
                "Oren",
                "Alexys",
                "Simonis"
            ],
            [
                "Berneice",
                "Lorine",
                "Morar"
            ],
            [
                "Edmond",
                "Archibald",
                "Streich"
            ],
            [
                "Kadin",
                "Archibald",
                "Streich"
            ],
            [
                "Rodger",
                "Archibald",
                "Streich"
            ],
            [
                "Kadin",
                "Archibald",
                "Streich"
            ],
            [
                "Cyrus",
                "Naomi",
                "Price"
            ],
            [
                "Bernice",
                "Courtney",
                "Adams"
            ],
            [
                "Berneice",
                "Etha",
                "Reinger"
            ],
            [
                "Edmond",
                "Naomi",
                "Price"
            ],
            [
                "Bernice",
                "Lorine",
                "Morar"
            ],
            [
                "Edmond",
                "Cullen",
                "Kunde"
            ]
        ],
        "cypher_query": "MATCH (T1:`assets_maintenance.Staff`)-[]-(T2:`assets_maintenance.Engineer_Visits`)-[]-(T3:`assets_maintenance.Maintenance_Engineers`)\nRETURN T1.staff_name,T3.first_name,T3.last_name",
        "cypher_ans": [
            [
                "Berneice",
                "Etha",
                "Reinger"
            ],
            [
                "Berneice",
                "Lorine",
                "Morar"
            ],
            [
                "Edmond",
                "Archibald",
                "Streich"
            ],
            [
                "Edmond",
                "Cullen",
                "Kunde"
            ],
            [
                "Edmond",
                "Naomi",
                "Price"
            ],
            [
                "Rodger",
                "Archibald",
                "Streich"
            ],
            [
                "Kadin",
                "Archibald",
                "Streich"
            ],
            [
                "Christophe",
                "Nellie",
                "Hirthe"
            ],
            [
                "Bernice",
                "Courtney",
                "Adams"
            ],
            [
                "Bernice",
                "Lorine",
                "Morar"
            ],
            [
                "Oren",
                "Alexys",
                "Simonis"
            ],
            [
                "Cyrus",
                "Naomi",
                "Price"
            ]
        ]
    },
    {
        "db_id": "assets_maintenance",
        "question": "Which skill is used in fixing the most number of faults? List the skill id and description.",
        "sql_query": "SELECT T1.skill_id ,  T1.skill_description FROM Skills AS T1 JOIN Skills_Required_To_Fix AS T2 ON T1.skill_id  =  T2.skill_id GROUP BY T1.skill_id ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.skill_id"
                },
                {
                    "value": "T1.skill_description"
                }
            ],
            "from": [
                {
                    "value": "Skills",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "Skills_Required_To_Fix",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.skill_id",
                            "T2.skill_id"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.skill_id"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                3,
                "TV, Video"
            ]
        ],
        "cypher_query": "MATCH (T1:`assets_maintenance.Skills`)-[T2:`assets_maintenance.Skills_Required_To_Fix`]-()\nWITH T1.skill_id AS skill_id, count(T1.skill_id) AS count, T1.skill_description AS skill_description\nRETURN skill_id,skill_description\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": [
            [
                2,
                "Mechanical"
            ]
        ]
    }
][
    {
        "db_id": "assets_maintenance",
        "question": "List all every engineer's first name, last name, details and coresponding skill description.",
        "sql_query": "SELECT T1.first_name ,  T1.last_name ,  T1.other_details ,  T3.skill_description FROM Maintenance_Engineers AS T1 JOIN Engineer_Skills AS T2 ON T1.engineer_id  =  T2.engineer_id JOIN Skills AS T3 ON T2.skill_id  =  T3.skill_id",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.first_name"
                },
                {
                    "value": "T1.last_name"
                },
                {
                    "value": "T1.other_details"
                },
                {
                    "value": "T3.skill_description"
                }
            ],
            "from": [
                {
                    "value": "Maintenance_Engineers",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "Engineer_Skills",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.engineer_id",
                            "T2.engineer_id"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "Skills",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T2.skill_id",
                            "T3.skill_id"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "Naomi",
                "Price",
                null,
                "Mechanical"
            ],
            [
                "Naomi",
                "Price",
                null,
                "Electrical"
            ],
            [
                "Archibald",
                "Streich",
                null,
                "Electrical"
            ],
            [
                "Courtney",
                "Adams",
                null,
                "Electrical"
            ],
            [
                "Weston",
                "Hahn",
                null,
                "Electrical"
            ],
            [
                "Courtney",
                "Adams",
                null,
                "TV, Video"
            ],
            [
                "Weston",
                "Hahn",
                null,
                "Mechanical"
            ],
            [
                "Josie",
                "Harvey",
                "Skilled",
                "TV, Video"
            ],
            [
                "Manley",
                "Grady",
                null,
                "Mechanical"
            ],
            [
                "Nellie",
                "Hirthe",
                null,
                "TV, Video"
            ],
            [
                "Archibald",
                "Streich",
                null,
                "TV, Video"
            ],
            [
                "Manley",
                "Grady",
                null,
                "Electrical"
            ],
            [
                "Brian",
                "Stamm",
                null,
                "TV, Video"
            ],
            [
                "Samanta",
                "Hauck",
                null,
                "Electrical"
            ],
            [
                "Cullen",
                "Kunde",
                null,
                "Mechanical"
            ],
            [
                "Alexys",
                "Simonis",
                null,
                "Mechanical"
            ],
            [
                "Clemens",
                "Orn",
                null,
                "Mechanical"
            ],
            [
                "Naomi",
                "Price",
                null,
                "Electrical"
            ],
            [
                "Nellie",
                "Hirthe",
                null,
                "Electrical"
            ],
            [
                "Lorine",
                "Morar",
                null,
                "Electrical"
            ]
        ],
        "cypher_query": "MATCH (T1:`assets_maintenance.Maintenance_Engineers`)-[T2:`assets_maintenance.Engineer_Skills`]-(T3:`assets_maintenance.Skills`)\nRETURN T1.first_name,T1.last_name,T1.other_details,T3.skill_description",
        "cypher_ans": [
            [
                "Archibald",
                "Streich",
                null,
                "Electrical"
            ],
            [
                "Manley",
                "Grady",
                null,
                "Electrical"
            ],
            [
                "Weston",
                "Hahn",
                null,
                "Electrical"
            ],
            [
                "Naomi",
                "Price",
                null,
                "Electrical"
            ],
            [
                "Samanta",
                "Hauck",
                null,
                "Electrical"
            ],
            [
                "Lorine",
                "Morar",
                null,
                "Electrical"
            ],
            [
                "Courtney",
                "Adams",
                null,
                "Electrical"
            ],
            [
                "Nellie",
                "Hirthe",
                null,
                "Electrical"
            ],
            [
                "Manley",
                "Grady",
                null,
                "Mechanical"
            ],
            [
                "Clemens",
                "Orn",
                null,
                "Mechanical"
            ],
            [
                "Cullen",
                "Kunde",
                null,
                "Mechanical"
            ],
            [
                "Alexys",
                "Simonis",
                null,
                "Mechanical"
            ],
            [
                "Naomi",
                "Price",
                null,
                "Mechanical"
            ],
            [
                "Weston",
                "Hahn",
                null,
                "Mechanical"
            ],
            [
                "Brian",
                "Stamm",
                null,
                "TV, Video"
            ],
            [
                "Nellie",
                "Hirthe",
                null,
                "TV, Video"
            ],
            [
                "Archibald",
                "Streich",
                null,
                "TV, Video"
            ],
            [
                "Josie",
                "Harvey",
                "Skilled",
                "TV, Video"
            ],
            [
                "Courtney",
                "Adams",
                null,
                "TV, Video"
            ]
        ]
    },
    {
        "db_id": "assets_maintenance",
        "question": "For all the faults of different parts, what are all the decriptions of the skills required to fix them? List the name of the faults and the skill description.",
        "sql_query": "SELECT T1.fault_short_name ,  T3.skill_description FROM Part_Faults AS T1 JOIN Skills_Required_To_Fix AS T2 ON T1.part_fault_id  =  T2.part_fault_id JOIN Skills AS T3 ON T2.skill_id  =  T3.skill_id",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.fault_short_name"
                },
                {
                    "value": "T3.skill_description"
                }
            ],
            "from": [
                {
                    "value": "Part_Faults",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "Skills_Required_To_Fix",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.part_fault_id",
                            "T2.part_fault_id"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "Skills",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T2.skill_id",
                            "T3.skill_id"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "TW",
                "Mechanical"
            ],
            [
                "MW",
                "TV, Video"
            ],
            [
                "PW",
                "Electrical"
            ],
            [
                "MW",
                "TV, Video"
            ],
            [
                "PW",
                "TV, Video"
            ],
            [
                "PW",
                "Electrical"
            ],
            [
                "MW",
                "TV, Video"
            ],
            [
                "TW",
                "Mechanical"
            ],
            [
                "TW",
                "TV, Video"
            ],
            [
                "PW",
                "Mechanical"
            ],
            [
                "PW",
                "Electrical"
            ],
            [
                "PW",
                "Mechanical"
            ],
            [
                "PW",
                "TV, Video"
            ],
            [
                "MW",
                "TV, Video"
            ],
            [
                "MW",
                "Mechanical"
            ]
        ],
        "cypher_query": "MATCH (T1:`assets_maintenance.Part_Faults`)-[T2:`assets_maintenance.Skills_Required_To_Fix`]-(T3:`assets_maintenance.Skills`)\nRETURN T1.fault_short_name,T3.skill_description",
        "cypher_ans": [
            [
                "PW",
                "Electrical"
            ],
            [
                "TW",
                "Mechanical"
            ],
            [
                "PW",
                "Mechanical"
            ],
            [
                "MW",
                "Mechanical"
            ],
            [
                "MW",
                "TV, Video"
            ],
            [
                "TW",
                "TV, Video"
            ],
            [
                "PW",
                "TV, Video"
            ]
        ]
    },
    {
        "db_id": "assets_maintenance",
        "question": "How many assets can each parts be used in? List the part name and the number.",
        "sql_query": "SELECT T1.part_name ,  count(*) FROM Parts AS T1 JOIN Asset_Parts AS T2 ON T1.part_id  =  T2.part_id GROUP BY T1.part_name",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.part_name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "Parts",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "Asset_Parts",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.part_id",
                            "T2.part_id"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.part_name"
            }
        },
        "sql_ans": [
            [
                "middle",
                5
            ],
            [
                "package",
                6
            ],
            [
                "top",
                4
            ]
        ],
        "cypher_query": "MATCH (T1:`assets_maintenance.Parts`)-[T2:`assets_maintenance.Asset_Parts`]-()\nWITH count(T1.part_name) AS count, T1.part_name AS part_name\nRETURN part_name,count",
        "cypher_ans": [
            [
                "top",
                4
            ],
            [
                "middle",
                5
            ],
            [
                "package",
                5
            ]
        ]
    },
    {
        "db_id": "assets_maintenance",
        "question": "Among those engineers who have visited, which engineer makes the least number of visits? List the engineer id, first name and last name.",
        "sql_query": "SELECT T1.engineer_id ,  T1.first_name ,  T1.last_name FROM Maintenance_Engineers AS T1 JOIN Engineer_Visits AS T2 ON T1.engineer_id  =  T2.engineer_id GROUP BY T1.engineer_id ORDER BY count(*) ASC LIMIT 1",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.engineer_id"
                },
                {
                    "value": "T1.first_name"
                },
                {
                    "value": "T1.last_name"
                }
            ],
            "from": [
                {
                    "value": "Maintenance_Engineers",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "Engineer_Visits",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.engineer_id",
                            "T2.engineer_id"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.engineer_id"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "asc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                1,
                "Etha",
                "Reinger"
            ]
        ],
        "cypher_query": "MATCH (T1:`assets_maintenance.Maintenance_Engineers`)-[]-(T2:`assets_maintenance.Engineer_Visits`)\nWITH T1.first_name AS first_name, T1.engineer_id AS engineer_id, T1.last_name AS last_name, count(T1.engineer_id) AS count\nRETURN engineer_id,first_name,last_name\nORDER BY count ASC\nLIMIT 1",
        "cypher_ans": [
            [
                8,
                "Nellie",
                "Hirthe"
            ]
        ]
    },
    {
        "db_id": "assets_maintenance",
        "question": "Which staff have contacted which engineers? List the staff name and the engineer first name and last name.",
        "sql_query": "SELECT T1.staff_name ,  T3.first_name ,  T3.last_name FROM Staff AS T1 JOIN Engineer_Visits AS T2 ON T1.staff_id  =  T2.contact_staff_id JOIN Maintenance_Engineers AS T3 ON T2.engineer_id  =  T3.engineer_id",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.staff_name"
                },
                {
                    "value": "T3.first_name"
                },
                {
                    "value": "T3.last_name"
                }
            ],
            "from": [
                {
                    "value": "Staff",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "Engineer_Visits",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.staff_id",
                            "T2.contact_staff_id"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "Maintenance_Engineers",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T2.engineer_id",
                            "T3.engineer_id"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "Christophe",
                "Nellie",
                "Hirthe"
            ],
            [
                "Kadin",
                "Archibald",
                "Streich"
            ],
            [
                "Kadin",
                "Archibald",
                "Streich"
            ],
            [
                "Oren",
                "Alexys",
                "Simonis"
            ],
            [
                "Berneice",
                "Lorine",
                "Morar"
            ],
            [
                "Edmond",
                "Archibald",
                "Streich"
            ],
            [
                "Kadin",
                "Archibald",
                "Streich"
            ],
            [
                "Rodger",
                "Archibald",
                "Streich"
            ],
            [
                "Kadin",
                "Archibald",
                "Streich"
            ],
            [
                "Cyrus",
                "Naomi",
                "Price"
            ],
            [
                "Bernice",
                "Courtney",
                "Adams"
            ],
            [
                "Berneice",
                "Etha",
                "Reinger"
            ],
            [
                "Edmond",
                "Naomi",
                "Price"
            ],
            [
                "Bernice",
                "Lorine",
                "Morar"
            ],
            [
                "Edmond",
                "Cullen",
                "Kunde"
            ]
        ],
        "cypher_query": "MATCH (T1:`assets_maintenance.Staff`)-[]-(T2:`assets_maintenance.Engineer_Visits`)-[]-(T3:`assets_maintenance.Maintenance_Engineers`)\nRETURN T1.staff_name,T3.first_name,T3.last_name",
        "cypher_ans": [
            [
                "Berneice",
                "Etha",
                "Reinger"
            ],
            [
                "Berneice",
                "Lorine",
                "Morar"
            ],
            [
                "Edmond",
                "Archibald",
                "Streich"
            ],
            [
                "Edmond",
                "Cullen",
                "Kunde"
            ],
            [
                "Edmond",
                "Naomi",
                "Price"
            ],
            [
                "Rodger",
                "Archibald",
                "Streich"
            ],
            [
                "Kadin",
                "Archibald",
                "Streich"
            ],
            [
                "Christophe",
                "Nellie",
                "Hirthe"
            ],
            [
                "Bernice",
                "Courtney",
                "Adams"
            ],
            [
                "Bernice",
                "Lorine",
                "Morar"
            ],
            [
                "Oren",
                "Alexys",
                "Simonis"
            ],
            [
                "Cyrus",
                "Naomi",
                "Price"
            ]
        ]
    },
    {
        "db_id": "assets_maintenance",
        "question": "Which skill is used in fixing the most number of faults? List the skill id and description.",
        "sql_query": "SELECT T1.skill_id ,  T1.skill_description FROM Skills AS T1 JOIN Skills_Required_To_Fix AS T2 ON T1.skill_id  =  T2.skill_id GROUP BY T1.skill_id ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.skill_id"
                },
                {
                    "value": "T1.skill_description"
                }
            ],
            "from": [
                {
                    "value": "Skills",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "Skills_Required_To_Fix",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.skill_id",
                            "T2.skill_id"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.skill_id"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                3,
                "TV, Video"
            ]
        ],
        "cypher_query": "MATCH (T1:`assets_maintenance.Skills`)-[T2:`assets_maintenance.Skills_Required_To_Fix`]-()\nWITH T1.skill_id AS skill_id, count(T1.skill_id) AS count, T1.skill_description AS skill_description\nRETURN skill_id,skill_description\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": [
            [
                2,
                "Mechanical"
            ]
        ]
    }
][
    {
        "db_id": "assets_maintenance",
        "question": "List all every engineer's first name, last name, details and coresponding skill description.",
        "sql_query": "SELECT T1.first_name ,  T1.last_name ,  T1.other_details ,  T3.skill_description FROM Maintenance_Engineers AS T1 JOIN Engineer_Skills AS T2 ON T1.engineer_id  =  T2.engineer_id JOIN Skills AS T3 ON T2.skill_id  =  T3.skill_id",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.first_name"
                },
                {
                    "value": "T1.last_name"
                },
                {
                    "value": "T1.other_details"
                },
                {
                    "value": "T3.skill_description"
                }
            ],
            "from": [
                {
                    "value": "Maintenance_Engineers",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "Engineer_Skills",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.engineer_id",
                            "T2.engineer_id"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "Skills",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T2.skill_id",
                            "T3.skill_id"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "Naomi",
                "Price",
                null,
                "Mechanical"
            ],
            [
                "Naomi",
                "Price",
                null,
                "Electrical"
            ],
            [
                "Archibald",
                "Streich",
                null,
                "Electrical"
            ],
            [
                "Courtney",
                "Adams",
                null,
                "Electrical"
            ],
            [
                "Weston",
                "Hahn",
                null,
                "Electrical"
            ],
            [
                "Courtney",
                "Adams",
                null,
                "TV, Video"
            ],
            [
                "Weston",
                "Hahn",
                null,
                "Mechanical"
            ],
            [
                "Josie",
                "Harvey",
                "Skilled",
                "TV, Video"
            ],
            [
                "Manley",
                "Grady",
                null,
                "Mechanical"
            ],
            [
                "Nellie",
                "Hirthe",
                null,
                "TV, Video"
            ],
            [
                "Archibald",
                "Streich",
                null,
                "TV, Video"
            ],
            [
                "Manley",
                "Grady",
                null,
                "Electrical"
            ],
            [
                "Brian",
                "Stamm",
                null,
                "TV, Video"
            ],
            [
                "Samanta",
                "Hauck",
                null,
                "Electrical"
            ],
            [
                "Cullen",
                "Kunde",
                null,
                "Mechanical"
            ],
            [
                "Alexys",
                "Simonis",
                null,
                "Mechanical"
            ],
            [
                "Clemens",
                "Orn",
                null,
                "Mechanical"
            ],
            [
                "Naomi",
                "Price",
                null,
                "Electrical"
            ],
            [
                "Nellie",
                "Hirthe",
                null,
                "Electrical"
            ],
            [
                "Lorine",
                "Morar",
                null,
                "Electrical"
            ]
        ],
        "cypher_query": "MATCH (T1:`assets_maintenance.Maintenance_Engineers`)-[T2:`assets_maintenance.Engineer_Skills`]-(T3:`assets_maintenance.Skills`)\nRETURN T1.first_name,T1.last_name,T1.other_details,T3.skill_description",
        "cypher_ans": [
            [
                "Archibald",
                "Streich",
                null,
                "Electrical"
            ],
            [
                "Manley",
                "Grady",
                null,
                "Electrical"
            ],
            [
                "Weston",
                "Hahn",
                null,
                "Electrical"
            ],
            [
                "Naomi",
                "Price",
                null,
                "Electrical"
            ],
            [
                "Samanta",
                "Hauck",
                null,
                "Electrical"
            ],
            [
                "Lorine",
                "Morar",
                null,
                "Electrical"
            ],
            [
                "Courtney",
                "Adams",
                null,
                "Electrical"
            ],
            [
                "Nellie",
                "Hirthe",
                null,
                "Electrical"
            ],
            [
                "Manley",
                "Grady",
                null,
                "Mechanical"
            ],
            [
                "Clemens",
                "Orn",
                null,
                "Mechanical"
            ],
            [
                "Cullen",
                "Kunde",
                null,
                "Mechanical"
            ],
            [
                "Alexys",
                "Simonis",
                null,
                "Mechanical"
            ],
            [
                "Naomi",
                "Price",
                null,
                "Mechanical"
            ],
            [
                "Weston",
                "Hahn",
                null,
                "Mechanical"
            ],
            [
                "Brian",
                "Stamm",
                null,
                "TV, Video"
            ],
            [
                "Nellie",
                "Hirthe",
                null,
                "TV, Video"
            ],
            [
                "Archibald",
                "Streich",
                null,
                "TV, Video"
            ],
            [
                "Josie",
                "Harvey",
                "Skilled",
                "TV, Video"
            ],
            [
                "Courtney",
                "Adams",
                null,
                "TV, Video"
            ]
        ]
    },
    {
        "db_id": "assets_maintenance",
        "question": "For all the faults of different parts, what are all the decriptions of the skills required to fix them? List the name of the faults and the skill description.",
        "sql_query": "SELECT T1.fault_short_name ,  T3.skill_description FROM Part_Faults AS T1 JOIN Skills_Required_To_Fix AS T2 ON T1.part_fault_id  =  T2.part_fault_id JOIN Skills AS T3 ON T2.skill_id  =  T3.skill_id",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.fault_short_name"
                },
                {
                    "value": "T3.skill_description"
                }
            ],
            "from": [
                {
                    "value": "Part_Faults",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "Skills_Required_To_Fix",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.part_fault_id",
                            "T2.part_fault_id"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "Skills",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T2.skill_id",
                            "T3.skill_id"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "TW",
                "Mechanical"
            ],
            [
                "MW",
                "TV, Video"
            ],
            [
                "PW",
                "Electrical"
            ],
            [
                "MW",
                "TV, Video"
            ],
            [
                "PW",
                "TV, Video"
            ],
            [
                "PW",
                "Electrical"
            ],
            [
                "MW",
                "TV, Video"
            ],
            [
                "TW",
                "Mechanical"
            ],
            [
                "TW",
                "TV, Video"
            ],
            [
                "PW",
                "Mechanical"
            ],
            [
                "PW",
                "Electrical"
            ],
            [
                "PW",
                "Mechanical"
            ],
            [
                "PW",
                "TV, Video"
            ],
            [
                "MW",
                "TV, Video"
            ],
            [
                "MW",
                "Mechanical"
            ]
        ],
        "cypher_query": "MATCH (T1:`assets_maintenance.Part_Faults`)-[T2:`assets_maintenance.Skills_Required_To_Fix`]-(T3:`assets_maintenance.Skills`)\nRETURN T1.fault_short_name,T3.skill_description",
        "cypher_ans": [
            [
                "PW",
                "Electrical"
            ],
            [
                "TW",
                "Mechanical"
            ],
            [
                "PW",
                "Mechanical"
            ],
            [
                "MW",
                "Mechanical"
            ],
            [
                "MW",
                "TV, Video"
            ],
            [
                "TW",
                "TV, Video"
            ],
            [
                "PW",
                "TV, Video"
            ]
        ]
    },
    {
        "db_id": "assets_maintenance",
        "question": "How many assets can each parts be used in? List the part name and the number.",
        "sql_query": "SELECT T1.part_name ,  count(*) FROM Parts AS T1 JOIN Asset_Parts AS T2 ON T1.part_id  =  T2.part_id GROUP BY T1.part_name",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.part_name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "Parts",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "Asset_Parts",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.part_id",
                            "T2.part_id"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.part_name"
            }
        },
        "sql_ans": [
            [
                "middle",
                5
            ],
            [
                "package",
                6
            ],
            [
                "top",
                4
            ]
        ],
        "cypher_query": "MATCH (T1:`assets_maintenance.Parts`)-[T2:`assets_maintenance.Asset_Parts`]-()\nWITH T1.part_name AS part_name, count(T1.part_name) AS count\nRETURN part_name,count",
        "cypher_ans": [
            [
                "top",
                4
            ],
            [
                "middle",
                5
            ],
            [
                "package",
                5
            ]
        ]
    },
    {
        "db_id": "assets_maintenance",
        "question": "Among those engineers who have visited, which engineer makes the least number of visits? List the engineer id, first name and last name.",
        "sql_query": "SELECT T1.engineer_id ,  T1.first_name ,  T1.last_name FROM Maintenance_Engineers AS T1 JOIN Engineer_Visits AS T2 ON T1.engineer_id  =  T2.engineer_id GROUP BY T1.engineer_id ORDER BY count(*) ASC LIMIT 1",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.engineer_id"
                },
                {
                    "value": "T1.first_name"
                },
                {
                    "value": "T1.last_name"
                }
            ],
            "from": [
                {
                    "value": "Maintenance_Engineers",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "Engineer_Visits",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.engineer_id",
                            "T2.engineer_id"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.engineer_id"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "asc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                1,
                "Etha",
                "Reinger"
            ]
        ],
        "cypher_query": "MATCH (T1:`assets_maintenance.Maintenance_Engineers`)-[]-(T2:`assets_maintenance.Engineer_Visits`)\nWITH count(T1.engineer_id) AS count, T1.first_name AS first_name, T1.last_name AS last_name, T1.engineer_id AS engineer_id\nRETURN engineer_id,first_name,last_name\nORDER BY count ASC\nLIMIT 1",
        "cypher_ans": [
            [
                8,
                "Nellie",
                "Hirthe"
            ]
        ]
    },
    {
        "db_id": "assets_maintenance",
        "question": "Which staff have contacted which engineers? List the staff name and the engineer first name and last name.",
        "sql_query": "SELECT T1.staff_name ,  T3.first_name ,  T3.last_name FROM Staff AS T1 JOIN Engineer_Visits AS T2 ON T1.staff_id  =  T2.contact_staff_id JOIN Maintenance_Engineers AS T3 ON T2.engineer_id  =  T3.engineer_id",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.staff_name"
                },
                {
                    "value": "T3.first_name"
                },
                {
                    "value": "T3.last_name"
                }
            ],
            "from": [
                {
                    "value": "Staff",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "Engineer_Visits",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.staff_id",
                            "T2.contact_staff_id"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "Maintenance_Engineers",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T2.engineer_id",
                            "T3.engineer_id"
                        ]
                    }
                }
            ]
        },
        "sql_ans": [
            [
                "Christophe",
                "Nellie",
                "Hirthe"
            ],
            [
                "Kadin",
                "Archibald",
                "Streich"
            ],
            [
                "Kadin",
                "Archibald",
                "Streich"
            ],
            [
                "Oren",
                "Alexys",
                "Simonis"
            ],
            [
                "Berneice",
                "Lorine",
                "Morar"
            ],
            [
                "Edmond",
                "Archibald",
                "Streich"
            ],
            [
                "Kadin",
                "Archibald",
                "Streich"
            ],
            [
                "Rodger",
                "Archibald",
                "Streich"
            ],
            [
                "Kadin",
                "Archibald",
                "Streich"
            ],
            [
                "Cyrus",
                "Naomi",
                "Price"
            ],
            [
                "Bernice",
                "Courtney",
                "Adams"
            ],
            [
                "Berneice",
                "Etha",
                "Reinger"
            ],
            [
                "Edmond",
                "Naomi",
                "Price"
            ],
            [
                "Bernice",
                "Lorine",
                "Morar"
            ],
            [
                "Edmond",
                "Cullen",
                "Kunde"
            ]
        ],
        "cypher_query": "MATCH (T1:`assets_maintenance.Staff`)-[]-(T2:`assets_maintenance.Engineer_Visits`)-[]-(T3:`assets_maintenance.Maintenance_Engineers`)\nRETURN T1.staff_name,T3.first_name,T3.last_name",
        "cypher_ans": [
            [
                "Berneice",
                "Etha",
                "Reinger"
            ],
            [
                "Berneice",
                "Lorine",
                "Morar"
            ],
            [
                "Edmond",
                "Archibald",
                "Streich"
            ],
            [
                "Edmond",
                "Cullen",
                "Kunde"
            ],
            [
                "Edmond",
                "Naomi",
                "Price"
            ],
            [
                "Rodger",
                "Archibald",
                "Streich"
            ],
            [
                "Kadin",
                "Archibald",
                "Streich"
            ],
            [
                "Christophe",
                "Nellie",
                "Hirthe"
            ],
            [
                "Bernice",
                "Courtney",
                "Adams"
            ],
            [
                "Bernice",
                "Lorine",
                "Morar"
            ],
            [
                "Oren",
                "Alexys",
                "Simonis"
            ],
            [
                "Cyrus",
                "Naomi",
                "Price"
            ]
        ]
    },
    {
        "db_id": "assets_maintenance",
        "question": "Which skill is used in fixing the most number of faults? List the skill id and description.",
        "sql_query": "SELECT T1.skill_id ,  T1.skill_description FROM Skills AS T1 JOIN Skills_Required_To_Fix AS T2 ON T1.skill_id  =  T2.skill_id GROUP BY T1.skill_id ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.skill_id"
                },
                {
                    "value": "T1.skill_description"
                }
            ],
            "from": [
                {
                    "value": "Skills",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "Skills_Required_To_Fix",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.skill_id",
                            "T2.skill_id"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.skill_id"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                3,
                "TV, Video"
            ]
        ],
        "cypher_query": "MATCH (T1:`assets_maintenance.Skills`)-[T2:`assets_maintenance.Skills_Required_To_Fix`]-()\nWITH count(T1.skill_id) AS count, T1.skill_description AS skill_description, T1.skill_id AS skill_id\nRETURN skill_id,skill_description\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": [
            [
                2,
                "Mechanical"
            ]
        ]
    }
][
    {
        "db_id": "assets_maintenance",
        "question": "How many assets can each parts be used in? List the part name and the number.",
        "sql_query": "SELECT T1.part_name ,  count(*) FROM Parts AS T1 JOIN Asset_Parts AS T2 ON T1.part_id  =  T2.part_id GROUP BY T1.part_name",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.part_name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "Parts",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "Asset_Parts",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.part_id",
                            "T2.part_id"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.part_name"
            }
        },
        "sql_ans": [
            [
                "middle",
                5
            ],
            [
                "package",
                6
            ],
            [
                "top",
                4
            ]
        ],
        "cypher_query": "MATCH (T1:`assets_maintenance.Parts`)-[T2:`assets_maintenance.Asset_Parts`]-()\nWITH T1.part_name AS part_name, count(T1.part_name) AS count\nRETURN part_name,count",
        "cypher_ans": [
            [
                "top",
                4
            ],
            [
                "middle",
                5
            ],
            [
                "package",
                5
            ]
        ]
    },
    {
        "db_id": "assets_maintenance",
        "question": "Among those engineers who have visited, which engineer makes the least number of visits? List the engineer id, first name and last name.",
        "sql_query": "SELECT T1.engineer_id ,  T1.first_name ,  T1.last_name FROM Maintenance_Engineers AS T1 JOIN Engineer_Visits AS T2 ON T1.engineer_id  =  T2.engineer_id GROUP BY T1.engineer_id ORDER BY count(*) ASC LIMIT 1",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.engineer_id"
                },
                {
                    "value": "T1.first_name"
                },
                {
                    "value": "T1.last_name"
                }
            ],
            "from": [
                {
                    "value": "Maintenance_Engineers",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "Engineer_Visits",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.engineer_id",
                            "T2.engineer_id"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.engineer_id"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "asc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                1,
                "Etha",
                "Reinger"
            ]
        ],
        "cypher_query": "MATCH (T1:`assets_maintenance.Maintenance_Engineers`)-[]-(T2:`assets_maintenance.Engineer_Visits`)\nWITH count(T1.engineer_id) AS count, T1.last_name AS last_name, T1.engineer_id AS engineer_id, T1.first_name AS first_name\nRETURN engineer_id,first_name,last_name\nORDER BY count ASC\nLIMIT 1",
        "cypher_ans": [
            [
                8,
                "Nellie",
                "Hirthe"
            ]
        ]
    },
    {
        "db_id": "assets_maintenance",
        "question": "Which skill is used in fixing the most number of faults? List the skill id and description.",
        "sql_query": "SELECT T1.skill_id ,  T1.skill_description FROM Skills AS T1 JOIN Skills_Required_To_Fix AS T2 ON T1.skill_id  =  T2.skill_id GROUP BY T1.skill_id ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.skill_id"
                },
                {
                    "value": "T1.skill_description"
                }
            ],
            "from": [
                {
                    "value": "Skills",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "Skills_Required_To_Fix",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.skill_id",
                            "T2.skill_id"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.skill_id"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                3,
                "TV, Video"
            ]
        ],
        "cypher_query": "MATCH (T1:`assets_maintenance.Skills`)-[T2:`assets_maintenance.Skills_Required_To_Fix`]-()\nWITH T1.skill_id AS skill_id, count(T1.skill_id) AS count, T1.skill_description AS skill_description\nRETURN skill_id,skill_description\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": [
            [
                2,
                "Mechanical"
            ]
        ]
    }
][
    {
        "db_id": "assets_maintenance",
        "question": "How many assets can each parts be used in? List the part name and the number.",
        "sql_query": "SELECT T1.part_name ,  count(*) FROM Parts AS T1 JOIN Asset_Parts AS T2 ON T1.part_id  =  T2.part_id GROUP BY T1.part_name",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.part_name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "Parts",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "Asset_Parts",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.part_id",
                            "T2.part_id"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.part_name"
            }
        },
        "sql_ans": [
            [
                "middle",
                5
            ],
            [
                "package",
                6
            ],
            [
                "top",
                4
            ]
        ],
        "cypher_query": "MATCH (T1:`assets_maintenance.Parts`)-[T2:`assets_maintenance.Asset_Parts`]-()\nWITH count(T1.part_name) AS count, T1.part_name AS part_name\nRETURN part_name,count",
        "cypher_ans": [
            [
                "top",
                4
            ],
            [
                "middle",
                5
            ],
            [
                "package",
                5
            ]
        ]
    },
    {
        "db_id": "assets_maintenance",
        "question": "Among those engineers who have visited, which engineer makes the least number of visits? List the engineer id, first name and last name.",
        "sql_query": "SELECT T1.engineer_id ,  T1.first_name ,  T1.last_name FROM Maintenance_Engineers AS T1 JOIN Engineer_Visits AS T2 ON T1.engineer_id  =  T2.engineer_id GROUP BY T1.engineer_id ORDER BY count(*) ASC LIMIT 1",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.engineer_id"
                },
                {
                    "value": "T1.first_name"
                },
                {
                    "value": "T1.last_name"
                }
            ],
            "from": [
                {
                    "value": "Maintenance_Engineers",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "Engineer_Visits",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.engineer_id",
                            "T2.engineer_id"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.engineer_id"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "asc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                1,
                "Etha",
                "Reinger"
            ]
        ],
        "cypher_query": "MATCH (T1:`assets_maintenance.Maintenance_Engineers`)-[]-(T2:`assets_maintenance.Engineer_Visits`)\nWITH T1.last_name AS last_name, T1.engineer_id AS engineer_id, count(T1.engineer_id) AS count, T1.first_name AS first_name\nRETURN engineer_id,first_name,last_name\nORDER BY count ASC\nLIMIT 1",
        "cypher_ans": [
            [
                8,
                "Nellie",
                "Hirthe"
            ]
        ]
    },
    {
        "db_id": "assets_maintenance",
        "question": "Which skill is used in fixing the most number of faults? List the skill id and description.",
        "sql_query": "SELECT T1.skill_id ,  T1.skill_description FROM Skills AS T1 JOIN Skills_Required_To_Fix AS T2 ON T1.skill_id  =  T2.skill_id GROUP BY T1.skill_id ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.skill_id"
                },
                {
                    "value": "T1.skill_description"
                }
            ],
            "from": [
                {
                    "value": "Skills",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "Skills_Required_To_Fix",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.skill_id",
                            "T2.skill_id"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.skill_id"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                3,
                "TV, Video"
            ]
        ],
        "cypher_query": "MATCH (T1:`assets_maintenance.Skills`)-[T2:`assets_maintenance.Skills_Required_To_Fix`]-()\nWITH T1.skill_description AS skill_description, T1.skill_id AS skill_id, count(T1.skill_id) AS count\nRETURN skill_id,skill_description\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": [
            [
                2,
                "Mechanical"
            ]
        ]
    }
][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][
    {
        "db_id": "assets_maintenance",
        "question": "Which engineer has visited the most times? Show the engineer id, first name and last name.",
        "sql_query": "SELECT T1.engineer_id ,  T1.first_name ,  T1.last_name FROM Maintenance_Engineers AS T1 JOIN Engineer_Visits AS T2 GROUP BY T1.engineer_id ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.engineer_id"
                },
                {
                    "value": "T1.first_name"
                },
                {
                    "value": "T1.last_name"
                }
            ],
            "from": [
                {
                    "value": "Maintenance_Engineers",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "Engineer_Visits",
                        "is_table": true
                    }
                }
            ],
            "groupby": {
                "value": "T1.engineer_id"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                1,
                "Etha",
                "Reinger"
            ]
        ],
        "cypher_query": "MATCH (T1:`assets_maintenance.Maintenance_Engineers`)-[]-(T2:`assets_maintenance.Engineer_Visits`)\nWITH T1.first_name AS first_name, T1.last_name AS last_name, T1.engineer_id AS engineer_id, count(T1.engineer_id) AS count\nRETURN engineer_id,first_name,last_name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": [
            [
                15,
                "Archibald",
                "Streich"
            ]
        ]
    }
][
    {
        "db_id": "assets_maintenance",
        "question": "Which engineer has visited the most times? Show the engineer id, first name and last name.",
        "sql_query": "SELECT T1.engineer_id ,  T1.first_name ,  T1.last_name FROM Maintenance_Engineers AS T1 JOIN Engineer_Visits AS T2 GROUP BY T1.engineer_id ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.engineer_id"
                },
                {
                    "value": "T1.first_name"
                },
                {
                    "value": "T1.last_name"
                }
            ],
            "from": [
                {
                    "value": "Maintenance_Engineers",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "Engineer_Visits",
                        "is_table": true
                    }
                }
            ],
            "groupby": {
                "value": "T1.engineer_id"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                1,
                "Etha",
                "Reinger"
            ]
        ],
        "cypher_query": "MATCH (T1:`assets_maintenance.Maintenance_Engineers`)-[]-(T2:`assets_maintenance.Engineer_Visits`)\nWITH T1.last_name AS last_name, count(T1.engineer_id) AS count, T1.first_name AS first_name, T1.engineer_id AS engineer_id\nRETURN engineer_id,first_name,last_name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": [
            [
                15,
                "Archibald",
                "Streich"
            ]
        ]
    }
][
    {
        "db_id": "assets_maintenance",
        "question": "Which engineer has visited the most times? Show the engineer id, first name and last name.",
        "sql_query": "SELECT T1.engineer_id ,  T1.first_name ,  T1.last_name FROM Maintenance_Engineers AS T1 JOIN Engineer_Visits AS T2 GROUP BY T1.engineer_id ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.engineer_id"
                },
                {
                    "value": "T1.first_name"
                },
                {
                    "value": "T1.last_name"
                }
            ],
            "from": [
                {
                    "value": "Maintenance_Engineers",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "Engineer_Visits",
                        "is_table": true
                    }
                }
            ],
            "groupby": {
                "value": "T1.engineer_id"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                1,
                "Etha",
                "Reinger"
            ]
        ],
        "cypher_query": "MATCH (T1:`assets_maintenance.Maintenance_Engineers`)-[]-(T2:`assets_maintenance.Engineer_Visits`)\nWITH count(T1.engineer_id) AS count, T1.first_name AS first_name, T1.engineer_id AS engineer_id, T1.last_name AS last_name\nRETURN engineer_id,first_name,last_name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": [
            [
                15,
                "Archibald",
                "Streich"
            ]
        ]
    }
][
    {
        "db_id": "assets_maintenance",
        "question": "Which engineer has visited the most times? Show the engineer id, first name and last name.",
        "sql_query": "SELECT T1.engineer_id ,  T1.first_name ,  T1.last_name FROM Maintenance_Engineers AS T1 JOIN Engineer_Visits AS T2 GROUP BY T1.engineer_id ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.engineer_id"
                },
                {
                    "value": "T1.first_name"
                },
                {
                    "value": "T1.last_name"
                }
            ],
            "from": [
                {
                    "value": "Maintenance_Engineers",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "Engineer_Visits",
                        "is_table": true
                    }
                }
            ],
            "groupby": {
                "value": "T1.engineer_id"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                1,
                "Etha",
                "Reinger"
            ]
        ],
        "cypher_query": "MATCH (T1:`assets_maintenance.Maintenance_Engineers`)-[]-(T2:`assets_maintenance.Engineer_Visits`)\nWITH count(T1.engineer_id) AS count, T1.first_name AS first_name, T1.engineer_id AS engineer_id, T1.last_name AS last_name\nRETURN engineer_id,first_name,last_name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": [
            [
                15,
                "Archibald",
                "Streich"
            ]
        ]
    },
    {
        "db_id": "assets_maintenance",
        "question": "How many assets can each parts be used in? List the part name and the number.",
        "sql_query": "SELECT T1.part_name ,  count(*) FROM Parts AS T1 JOIN Asset_Parts AS T2 ON T1.part_id  =  T2.part_id GROUP BY T1.part_name",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.part_name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "Parts",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "Asset_Parts",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.part_id",
                            "T2.part_id"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.part_name"
            }
        },
        "sql_ans": [
            [
                "middle",
                5
            ],
            [
                "package",
                6
            ],
            [
                "top",
                4
            ]
        ],
        "cypher_query": "MATCH (T1:`assets_maintenance.Parts`)-[T2:`assets_maintenance.Asset_Parts`]-()\nWITH T1.part_name AS part_name, count(T1.part_name) AS count\nRETURN part_name,count",
        "cypher_ans": [
            [
                "top",
                4
            ],
            [
                "middle",
                5
            ],
            [
                "package",
                5
            ]
        ]
    },
    {
        "db_id": "assets_maintenance",
        "question": "Which engineers have never visited to maintain the assets? List the engineer first name and last name.",
        "sql_query": "SELECT first_name ,  last_name FROM Maintenance_Engineers WHERE engineer_id NOT IN (SELECT engineer_id FROM Engineer_Visits)",
        "parsed_sql": {
            "select": [
                {
                    "value": "first_name"
                },
                {
                    "value": "last_name"
                }
            ],
            "from": "Maintenance_Engineers",
            "where": {
                "nin": [
                    "engineer_id",
                    {
                        "select": {
                            "value": "engineer_id"
                        },
                        "from": "Engineer_Visits"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Clemens",
                "Orn"
            ],
            [
                "Samanta",
                "Hauck"
            ],
            [
                "Manley",
                "Grady"
            ],
            [
                "Josie",
                "Harvey"
            ],
            [
                "Brian",
                "Stamm"
            ],
            [
                "Weston",
                "Hahn"
            ],
            [
                "Jules",
                "Goldner"
            ]
        ],
        "cypher_query": "MATCH (maintenance_engineers:`assets_maintenance.Maintenance_Engineers`)\nWHERE NOT (maintenance_engineers:`assets_maintenance.Maintenance_Engineers`)-[]-(:`assets_maintenance.Engineer_Visits`)\nRETURN maintenance_engineers.first_name,maintenance_engineers.last_name",
        "cypher_ans": [
            [
                "Clemens",
                "Orn"
            ],
            [
                "Samanta",
                "Hauck"
            ],
            [
                "Manley",
                "Grady"
            ],
            [
                "Josie",
                "Harvey"
            ],
            [
                "Brian",
                "Stamm"
            ],
            [
                "Weston",
                "Hahn"
            ],
            [
                "Jules",
                "Goldner"
            ],
            [
                "Etha",
                "Reinger"
            ],
            [
                "Clemens",
                "Orn"
            ],
            [
                "Samanta",
                "Hauck"
            ],
            [
                "Lorine",
                "Morar"
            ],
            [
                "Manley",
                "Grady"
            ],
            [
                "Courtney",
                "Adams"
            ],
            [
                "Josie",
                "Harvey"
            ],
            [
                "Nellie",
                "Hirthe"
            ],
            [
                "Brian",
                "Stamm"
            ],
            [
                "Naomi",
                "Price"
            ],
            [
                "Cullen",
                "Kunde"
            ],
            [
                "Alexys",
                "Simonis"
            ],
            [
                "Weston",
                "Hahn"
            ],
            [
                "Jules",
                "Goldner"
            ],
            [
                "Archibald",
                "Streich"
            ]
        ]
    },
    {
        "db_id": "assets_maintenance",
        "question": "Among those engineers who have visited, which engineer makes the least number of visits? List the engineer id, first name and last name.",
        "sql_query": "SELECT T1.engineer_id ,  T1.first_name ,  T1.last_name FROM Maintenance_Engineers AS T1 JOIN Engineer_Visits AS T2 ON T1.engineer_id  =  T2.engineer_id GROUP BY T1.engineer_id ORDER BY count(*) ASC LIMIT 1",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.engineer_id"
                },
                {
                    "value": "T1.first_name"
                },
                {
                    "value": "T1.last_name"
                }
            ],
            "from": [
                {
                    "value": "Maintenance_Engineers",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "Engineer_Visits",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.engineer_id",
                            "T2.engineer_id"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.engineer_id"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "asc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                1,
                "Etha",
                "Reinger"
            ]
        ],
        "cypher_query": "MATCH (T1:`assets_maintenance.Maintenance_Engineers`)-[]-(T2:`assets_maintenance.Engineer_Visits`)\nWITH count(T1.engineer_id) AS count, T1.first_name AS first_name, T1.engineer_id AS engineer_id, T1.last_name AS last_name\nRETURN engineer_id,first_name,last_name\nORDER BY count ASC\nLIMIT 1",
        "cypher_ans": [
            [
                8,
                "Nellie",
                "Hirthe"
            ]
        ]
    },
    {
        "db_id": "assets_maintenance",
        "question": "Which skill is used in fixing the most number of faults? List the skill id and description.",
        "sql_query": "SELECT T1.skill_id ,  T1.skill_description FROM Skills AS T1 JOIN Skills_Required_To_Fix AS T2 ON T1.skill_id  =  T2.skill_id GROUP BY T1.skill_id ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.skill_id"
                },
                {
                    "value": "T1.skill_description"
                }
            ],
            "from": [
                {
                    "value": "Skills",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "Skills_Required_To_Fix",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.skill_id",
                            "T2.skill_id"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.skill_id"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                3,
                "TV, Video"
            ]
        ],
        "cypher_query": "MATCH (T1:`assets_maintenance.Skills`)-[T2:`assets_maintenance.Skills_Required_To_Fix`]-()\nWITH count(T1.skill_id) AS count, T1.skill_id AS skill_id, T1.skill_description AS skill_description\nRETURN skill_id,skill_description\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": [
            [
                2,
                "Mechanical"
            ]
        ]
    },
    {
        "db_id": "assets_maintenance",
        "question": "Which assets did not incur any fault log? List the asset model.",
        "sql_query": "SELECT asset_model FROM Assets WHERE asset_id NOT IN (SELECT asset_id FROM Fault_Log)",
        "parsed_sql": {
            "select": {
                "value": "asset_model"
            },
            "from": "Assets",
            "where": {
                "nin": [
                    "asset_id",
                    {
                        "select": {
                            "value": "asset_id"
                        },
                        "from": "Fault_Log"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "58 ub"
            ],
            [
                "69 uv"
            ],
            [
                "20 tl"
            ],
            [
                "11 wi"
            ],
            [
                "08 yy"
            ],
            [
                "66 xm"
            ]
        ],
        "cypher_query": "MATCH (assets:`assets_maintenance.Assets`)\nWHERE NOT (assets:`assets_maintenance.Assets`)-[]-(:`assets_maintenance.Fault_Log`)\nRETURN assets.asset_model",
        "cypher_ans": [
            [
                "58 ub"
            ],
            [
                "35 xt"
            ],
            [
                "63 ok"
            ],
            [
                "69 uv"
            ],
            [
                "90 oq"
            ],
            [
                "91 ub"
            ],
            [
                "27 du"
            ],
            [
                "94 kg"
            ],
            [
                "07 yt"
            ],
            [
                "20 tl"
            ],
            [
                "11 wi"
            ],
            [
                "95 vn"
            ],
            [
                "08 yy"
            ],
            [
                "66 xm"
            ],
            [
                "24 ak"
            ],
            [
                "58 ub"
            ],
            [
                "35 xt"
            ],
            [
                "63 ok"
            ],
            [
                "69 uv"
            ],
            [
                "90 oq"
            ],
            [
                "91 ub"
            ],
            [
                "27 du"
            ],
            [
                "94 kg"
            ],
            [
                "07 yt"
            ],
            [
                "20 tl"
            ],
            [
                "11 wi"
            ],
            [
                "95 vn"
            ],
            [
                "08 yy"
            ],
            [
                "66 xm"
            ],
            [
                "24 ak"
            ]
        ]
    }
][][
    {
        "db_id": "assets_maintenance",
        "question": "Which engineer has visited the most times? Show the engineer id, first name and last name.",
        "sql_query": "SELECT T1.engineer_id ,  T1.first_name ,  T1.last_name FROM Maintenance_Engineers AS T1 JOIN Engineer_Visits AS T2 GROUP BY T1.engineer_id ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.engineer_id"
                },
                {
                    "value": "T1.first_name"
                },
                {
                    "value": "T1.last_name"
                }
            ],
            "from": [
                {
                    "value": "Maintenance_Engineers",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "Engineer_Visits",
                        "is_table": true
                    }
                }
            ],
            "groupby": {
                "value": "T1.engineer_id"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                1,
                "Etha",
                "Reinger"
            ]
        ],
        "cypher_query": "MATCH (T1:`assets_maintenance.Maintenance_Engineers`)-[]-(T2:`assets_maintenance.Engineer_Visits`)\nWITH T1.first_name AS first_name, T1.engineer_id AS engineer_id, count(T1.engineer_id) AS count, T1.last_name AS last_name\nRETURN engineer_id,first_name,last_name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": [
            [
                15,
                "Archibald",
                "Streich"
            ]
        ]
    },
    {
        "db_id": "assets_maintenance",
        "question": "How many assets can each parts be used in? List the part name and the number.",
        "sql_query": "SELECT T1.part_name ,  count(*) FROM Parts AS T1 JOIN Asset_Parts AS T2 ON T1.part_id  =  T2.part_id GROUP BY T1.part_name",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.part_name"
                },
                {
                    "value": {
                        "count": "*"
                    }
                }
            ],
            "from": [
                {
                    "value": "Parts",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "Asset_Parts",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.part_id",
                            "T2.part_id"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.part_name"
            }
        },
        "sql_ans": [
            [
                "middle",
                5
            ],
            [
                "package",
                6
            ],
            [
                "top",
                4
            ]
        ],
        "cypher_query": "MATCH (T1:`assets_maintenance.Parts`)-[T2:`assets_maintenance.Asset_Parts`]-()\nWITH count(T1.part_name) AS count, T1.part_name AS part_name\nRETURN part_name,count",
        "cypher_ans": [
            [
                "top",
                4
            ],
            [
                "middle",
                5
            ],
            [
                "package",
                5
            ]
        ]
    },
    {
        "db_id": "assets_maintenance",
        "question": "Which engineers have never visited to maintain the assets? List the engineer first name and last name.",
        "sql_query": "SELECT first_name ,  last_name FROM Maintenance_Engineers WHERE engineer_id NOT IN (SELECT engineer_id FROM Engineer_Visits)",
        "parsed_sql": {
            "select": [
                {
                    "value": "first_name"
                },
                {
                    "value": "last_name"
                }
            ],
            "from": "Maintenance_Engineers",
            "where": {
                "nin": [
                    "engineer_id",
                    {
                        "select": {
                            "value": "engineer_id"
                        },
                        "from": "Engineer_Visits"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Clemens",
                "Orn"
            ],
            [
                "Samanta",
                "Hauck"
            ],
            [
                "Manley",
                "Grady"
            ],
            [
                "Josie",
                "Harvey"
            ],
            [
                "Brian",
                "Stamm"
            ],
            [
                "Weston",
                "Hahn"
            ],
            [
                "Jules",
                "Goldner"
            ]
        ],
        "cypher_query": "MATCH (maintenance_engineers:`assets_maintenance.Maintenance_Engineers`)\nWHERE NOT (maintenance_engineers:`assets_maintenance.Maintenance_Engineers`)-[]-(:`assets_maintenance.Engineer_Visits`)\nRETURN maintenance_engineers.first_name,maintenance_engineers.last_name",
        "cypher_ans": [
            [
                "Clemens",
                "Orn"
            ],
            [
                "Samanta",
                "Hauck"
            ],
            [
                "Manley",
                "Grady"
            ],
            [
                "Josie",
                "Harvey"
            ],
            [
                "Brian",
                "Stamm"
            ],
            [
                "Weston",
                "Hahn"
            ],
            [
                "Jules",
                "Goldner"
            ],
            [
                "Etha",
                "Reinger"
            ],
            [
                "Lorine",
                "Morar"
            ],
            [
                "Courtney",
                "Adams"
            ],
            [
                "Nellie",
                "Hirthe"
            ],
            [
                "Naomi",
                "Price"
            ],
            [
                "Cullen",
                "Kunde"
            ],
            [
                "Alexys",
                "Simonis"
            ],
            [
                "Archibald",
                "Streich"
            ]
        ]
    },
    {
        "db_id": "assets_maintenance",
        "question": "Among those engineers who have visited, which engineer makes the least number of visits? List the engineer id, first name and last name.",
        "sql_query": "SELECT T1.engineer_id ,  T1.first_name ,  T1.last_name FROM Maintenance_Engineers AS T1 JOIN Engineer_Visits AS T2 ON T1.engineer_id  =  T2.engineer_id GROUP BY T1.engineer_id ORDER BY count(*) ASC LIMIT 1",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.engineer_id"
                },
                {
                    "value": "T1.first_name"
                },
                {
                    "value": "T1.last_name"
                }
            ],
            "from": [
                {
                    "value": "Maintenance_Engineers",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "Engineer_Visits",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.engineer_id",
                            "T2.engineer_id"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.engineer_id"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "asc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                1,
                "Etha",
                "Reinger"
            ]
        ],
        "cypher_query": "MATCH (T1:`assets_maintenance.Maintenance_Engineers`)-[]-(T2:`assets_maintenance.Engineer_Visits`)\nWITH T1.first_name AS first_name, T1.engineer_id AS engineer_id, count(T1.engineer_id) AS count, T1.last_name AS last_name\nRETURN engineer_id,first_name,last_name\nORDER BY count ASC\nLIMIT 1",
        "cypher_ans": [
            [
                8,
                "Nellie",
                "Hirthe"
            ]
        ]
    },
    {
        "db_id": "assets_maintenance",
        "question": "Which skill is used in fixing the most number of faults? List the skill id and description.",
        "sql_query": "SELECT T1.skill_id ,  T1.skill_description FROM Skills AS T1 JOIN Skills_Required_To_Fix AS T2 ON T1.skill_id  =  T2.skill_id GROUP BY T1.skill_id ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": [
                {
                    "value": "T1.skill_id"
                },
                {
                    "value": "T1.skill_description"
                }
            ],
            "from": [
                {
                    "value": "Skills",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "Skills_Required_To_Fix",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.skill_id",
                            "T2.skill_id"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.skill_id"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                3,
                "TV, Video"
            ]
        ],
        "cypher_query": "MATCH (T1:`assets_maintenance.Skills`)-[T2:`assets_maintenance.Skills_Required_To_Fix`]-()\nWITH T1.skill_id AS skill_id, count(T1.skill_id) AS count, T1.skill_description AS skill_description\nRETURN skill_id,skill_description\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": [
            [
                2,
                "Mechanical"
            ]
        ]
    },
    {
        "db_id": "assets_maintenance",
        "question": "Which assets did not incur any fault log? List the asset model.",
        "sql_query": "SELECT asset_model FROM Assets WHERE asset_id NOT IN (SELECT asset_id FROM Fault_Log)",
        "parsed_sql": {
            "select": {
                "value": "asset_model"
            },
            "from": "Assets",
            "where": {
                "nin": [
                    "asset_id",
                    {
                        "select": {
                            "value": "asset_id"
                        },
                        "from": "Fault_Log"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "58 ub"
            ],
            [
                "69 uv"
            ],
            [
                "20 tl"
            ],
            [
                "11 wi"
            ],
            [
                "08 yy"
            ],
            [
                "66 xm"
            ]
        ],
        "cypher_query": "MATCH (assets:`assets_maintenance.Assets`)\nWHERE NOT (assets:`assets_maintenance.Assets`)-[]-(:`assets_maintenance.Fault_Log`)\nRETURN assets.asset_model",
        "cypher_ans": [
            [
                "58 ub"
            ],
            [
                "35 xt"
            ],
            [
                "63 ok"
            ],
            [
                "69 uv"
            ],
            [
                "90 oq"
            ],
            [
                "91 ub"
            ],
            [
                "27 du"
            ],
            [
                "94 kg"
            ],
            [
                "07 yt"
            ],
            [
                "20 tl"
            ],
            [
                "11 wi"
            ],
            [
                "95 vn"
            ],
            [
                "08 yy"
            ],
            [
                "66 xm"
            ],
            [
                "24 ak"
            ]
        ]
    }
]
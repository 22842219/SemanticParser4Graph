[][][][
    {
        "db_id": "hospital_1",
        "question": "what is the name and position of the head whose department has least number of employees?",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH T2.Position AS Position, count(T2.departmentID) AS count, T2.Name AS Name\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Bob Kelso",
                "Head Chief of Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name and position of the head of the department with the least employees.",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH T2.Position AS Position, count(T2.departmentID) AS count, T2.Name AS Name\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Bob Kelso",
                "Head Chief of Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the patient who made the most recent appointment?",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the patient who made the appointment with the most recent start date.",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the nurse has the most appointments?",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH T1.Name AS Name, count(T1.EmployeeID) AS count\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the nurse who has the largest number of appointments.",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH T1.Name AS Name, count(T1.EmployeeID) AS count\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms located on each block floor.",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockFloor) AS count, T1.BlockFloor AS BlockFloor\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms does each block floor have?",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockFloor) AS count, T1.BlockFloor AS BlockFloor\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms for different block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockCode) AS count, T1.BlockCode AS BlockCode\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms are located for each block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockCode) AS count, T1.BlockCode AS BlockCode\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of medications prescribed for each brand.",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH T1.Name AS Name, count(T1.Brand) AS count\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many medications are prescribed for each brand?",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH T1.Name AS Name, count(T1.Brand) AS count\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians whose position title contains the word 'senior'.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of the physicians who have 'senior' in their titles.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the physician who was trained in the most expensive procedure?",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which physician was trained in the procedure that costs the most.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of patients who are not using the medication of Procrastin-X.",
        "sql_query": "SELECT count(*) FROM patient WHERE SSN NOT IN ( SELECT T1.patient FROM Prescribes AS T1 JOIN Medication AS T2 ON T1.Medication  =  T2.Code WHERE T2.name  =  'Procrastin-X' )",
        "parsed_sql": {
            "select": {
                "value": {
                    "count": "*"
                }
            },
            "from": "patient",
            "where": {
                "nin": [
                    "SSN",
                    {
                        "select": {
                            "value": "T1.patient"
                        },
                        "from": [
                            {
                                "value": "Prescribes",
                                "name": "T1",
                                "is_table": true
                            },
                            {
                                "join": {
                                    "name": "T2",
                                    "value": "Medication",
                                    "is_table": true
                                },
                                "on": {
                                    "eq": [
                                        "T1.Medication",
                                        "T2.Code"
                                    ]
                                }
                            }
                        ],
                        "where": {
                            "eq": [
                                "T2.name",
                                {
                                    "literal": "Procrastin-X"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "sql_ans": [
            [
                3
            ]
        ],
        "cypher_query": "MATCH (p:Patient)\nWHERE NOT (p:Patient)-[]-(:Prescribes)-[]-(:Medication)\nRETURN count(*)",
        "cypher_ans": [
            [
                2
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many patients are not using Procrastin-X as medication?",
        "sql_query": "SELECT count(*) FROM patient WHERE SSN NOT IN ( SELECT T1.patient FROM Prescribes AS T1 JOIN Medication AS T2 ON T1.Medication  =  T2.Code WHERE T2.name  =  'Procrastin-X' )",
        "parsed_sql": {
            "select": {
                "value": {
                    "count": "*"
                }
            },
            "from": "patient",
            "where": {
                "nin": [
                    "SSN",
                    {
                        "select": {
                            "value": "T1.patient"
                        },
                        "from": [
                            {
                                "value": "Prescribes",
                                "name": "T1",
                                "is_table": true
                            },
                            {
                                "join": {
                                    "name": "T2",
                                    "value": "Medication",
                                    "is_table": true
                                },
                                "on": {
                                    "eq": [
                                        "T1.Medication",
                                        "T2.Code"
                                    ]
                                }
                            }
                        ],
                        "where": {
                            "eq": [
                                "T2.name",
                                {
                                    "literal": "Procrastin-X"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "sql_ans": [
            [
                3
            ]
        ],
        "cypher_query": "MATCH (p:Patient)\nWHERE NOT (p:Patient)-[]-(:Prescribes)-[]-(:Medication)\nRETURN count(*)",
        "cypher_ans": [
            [
                2
            ]
        ]
    }
][][][][
    {
        "db_id": "hospital_1",
        "question": "what is the name and position of the head whose department has least number of employees?",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH count(T2.departmentID) AS count, T2.Position AS Position, T2.Name AS Name\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Bob Kelso",
                "Head Chief of Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name and position of the head of the department with the least employees.",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH count(T2.departmentID) AS count, T2.Position AS Position, T2.Name AS Name\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Bob Kelso",
                "Head Chief of Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the patient who made the most recent appointment?",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the patient who made the appointment with the most recent start date.",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the nurse has the most appointments?",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH count(T1.EmployeeID) AS count, T1.Name AS Name\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the nurse who has the largest number of appointments.",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH count(T1.EmployeeID) AS count, T1.Name AS Name\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms located on each block floor.",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockFloor) AS count, T1.BlockFloor AS BlockFloor\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms does each block floor have?",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockFloor) AS count, T1.BlockFloor AS BlockFloor\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms for different block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockCode) AS count, T1.BlockCode AS BlockCode\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms are located for each block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockCode) AS count, T1.BlockCode AS BlockCode\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of medications prescribed for each brand.",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH T1.Name AS Name, count(T1.Brand) AS count\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many medications are prescribed for each brand?",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH T1.Name AS Name, count(T1.Brand) AS count\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians whose position title contains the word 'senior'.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of the physicians who have 'senior' in their titles.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the physician who was trained in the most expensive procedure?",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which physician was trained in the procedure that costs the most.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of patients who are not using the medication of Procrastin-X.",
        "sql_query": "SELECT count(*) FROM patient WHERE SSN NOT IN ( SELECT T1.patient FROM Prescribes AS T1 JOIN Medication AS T2 ON T1.Medication  =  T2.Code WHERE T2.name  =  'Procrastin-X' )",
        "parsed_sql": {
            "select": {
                "value": {
                    "count": "*"
                }
            },
            "from": "patient",
            "where": {
                "nin": [
                    "SSN",
                    {
                        "select": {
                            "value": "T1.patient"
                        },
                        "from": [
                            {
                                "value": "Prescribes",
                                "name": "T1",
                                "is_table": true
                            },
                            {
                                "join": {
                                    "name": "T2",
                                    "value": "Medication",
                                    "is_table": true
                                },
                                "on": {
                                    "eq": [
                                        "T1.Medication",
                                        "T2.Code"
                                    ]
                                }
                            }
                        ],
                        "where": {
                            "eq": [
                                "T2.name",
                                {
                                    "literal": "Procrastin-X"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "sql_ans": [
            [
                3
            ]
        ],
        "cypher_query": "MATCH (p:Patient)\nWHERE NOT (p:Patient)-[]-(:Prescribes)-[]-(:Medication)\nRETURN count(*)",
        "cypher_ans": [
            [
                2
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many patients are not using Procrastin-X as medication?",
        "sql_query": "SELECT count(*) FROM patient WHERE SSN NOT IN ( SELECT T1.patient FROM Prescribes AS T1 JOIN Medication AS T2 ON T1.Medication  =  T2.Code WHERE T2.name  =  'Procrastin-X' )",
        "parsed_sql": {
            "select": {
                "value": {
                    "count": "*"
                }
            },
            "from": "patient",
            "where": {
                "nin": [
                    "SSN",
                    {
                        "select": {
                            "value": "T1.patient"
                        },
                        "from": [
                            {
                                "value": "Prescribes",
                                "name": "T1",
                                "is_table": true
                            },
                            {
                                "join": {
                                    "name": "T2",
                                    "value": "Medication",
                                    "is_table": true
                                },
                                "on": {
                                    "eq": [
                                        "T1.Medication",
                                        "T2.Code"
                                    ]
                                }
                            }
                        ],
                        "where": {
                            "eq": [
                                "T2.name",
                                {
                                    "literal": "Procrastin-X"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "sql_ans": [
            [
                3
            ]
        ],
        "cypher_query": "MATCH (p:Patient)\nWHERE NOT (p:Patient)-[]-(:Prescribes)-[]-(:Medication)\nRETURN count(*)",
        "cypher_ans": [
            [
                2
            ]
        ]
    }
][][][
    {
        "db_id": "department_management",
        "question": "How many heads of the departments are older than 56 ?",
        "sql_query": "SELECT count(*) FROM head WHERE age  >  56",
        "parsed_sql": {
            "select": {
                "value": {
                    "count": "*"
                }
            },
            "from": "head",
            "where": {
                "gt": [
                    "age",
                    56
                ]
            }
        },
        "sql_ans": [
            [
                5
            ]
        ],
        "cypher_query": "MATCH (h:head)\nWHERE h.age > 56\nRETURN count(*)",
        "cypher_ans": [
            [
                75
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "What are the names of the states where at least 3 heads were born?",
        "sql_query": "SELECT born_state FROM head GROUP BY born_state HAVING count(*)  >=  3",
        "parsed_sql": {
            "select": {
                "value": "born_state"
            },
            "from": "head",
            "groupby": {
                "value": "born_state"
            },
            "having": {
                "gte": [
                    {
                        "count": "*"
                    },
                    3
                ]
            }
        },
        "sql_ans": [
            [
                "California"
            ]
        ],
        "cypher_query": "MATCH (h:head)\nWITH count(*) AS count, h.born_state AS born_state\nWHERE count  >= 3\nRETURN born_state",
        "cypher_ans": [
            [
                "Alabama"
            ],
            [
                "California"
            ],
            [
                "Delaware"
            ],
            [
                "Florida"
            ],
            [
                "Connecticut"
            ]
        ]
    },
    {
        "db_id": "department_management",
        "question": "How many departments are led by heads who are not mentioned?",
        "sql_query": "SELECT count(*) FROM department WHERE department_id NOT IN (SELECT department_id FROM management);",
        "parsed_sql": {
            "select": {
                "value": {
                    "count": "*"
                }
            },
            "from": "department",
            "where": {
                "nin": [
                    "department_id",
                    {
                        "select": {
                            "value": "department_id"
                        },
                        "from": "management"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                11
            ]
        ],
        "cypher_query": "MATCH (d:department)\nWHERE NOT (d:department)-[:management]-()\nRETURN count(*)",
        "cypher_ans": [
            [
                221
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "what is the name and position of the head whose department has least number of employees?",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH T2.Name AS Name, count(T2.departmentID) AS count, T2.Position AS Position\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Bob Kelso",
                "Head Chief of Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name and position of the head of the department with the least employees.",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH T2.Name AS Name, count(T2.departmentID) AS count, T2.Position AS Position\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Bob Kelso",
                "Head Chief of Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the patient who made the most recent appointment?",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the patient who made the appointment with the most recent start date.",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the nurse has the most appointments?",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH T1.Name AS Name, count(T1.EmployeeID) AS count\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the nurse who has the largest number of appointments.",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH T1.Name AS Name, count(T1.EmployeeID) AS count\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms located on each block floor.",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockFloor) AS count, T1.BlockFloor AS BlockFloor\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms does each block floor have?",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockFloor) AS count, T1.BlockFloor AS BlockFloor\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms for different block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockCode) AS count, T1.BlockCode AS BlockCode\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms are located for each block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockCode) AS count, T1.BlockCode AS BlockCode\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of medications prescribed for each brand.",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH T1.Name AS Name, count(T1.Brand) AS count\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many medications are prescribed for each brand?",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH T1.Name AS Name, count(T1.Brand) AS count\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians whose position title contains the word 'senior'.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of the physicians who have 'senior' in their titles.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the physician who was trained in the most expensive procedure?",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which physician was trained in the procedure that costs the most.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of patients who are not using the medication of Procrastin-X.",
        "sql_query": "SELECT count(*) FROM patient WHERE SSN NOT IN ( SELECT T1.patient FROM Prescribes AS T1 JOIN Medication AS T2 ON T1.Medication  =  T2.Code WHERE T2.name  =  'Procrastin-X' )",
        "parsed_sql": {
            "select": {
                "value": {
                    "count": "*"
                }
            },
            "from": "patient",
            "where": {
                "nin": [
                    "SSN",
                    {
                        "select": {
                            "value": "T1.patient"
                        },
                        "from": [
                            {
                                "value": "Prescribes",
                                "name": "T1",
                                "is_table": true
                            },
                            {
                                "join": {
                                    "name": "T2",
                                    "value": "Medication",
                                    "is_table": true
                                },
                                "on": {
                                    "eq": [
                                        "T1.Medication",
                                        "T2.Code"
                                    ]
                                }
                            }
                        ],
                        "where": {
                            "eq": [
                                "T2.name",
                                {
                                    "literal": "Procrastin-X"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "sql_ans": [
            [
                3
            ]
        ],
        "cypher_query": "MATCH (p:Patient)\nWHERE NOT (p:Patient)-[]-(:Prescribes)-[]-(:Medication)\nRETURN count(*)",
        "cypher_ans": [
            [
                2
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many patients are not using Procrastin-X as medication?",
        "sql_query": "SELECT count(*) FROM patient WHERE SSN NOT IN ( SELECT T1.patient FROM Prescribes AS T1 JOIN Medication AS T2 ON T1.Medication  =  T2.Code WHERE T2.name  =  'Procrastin-X' )",
        "parsed_sql": {
            "select": {
                "value": {
                    "count": "*"
                }
            },
            "from": "patient",
            "where": {
                "nin": [
                    "SSN",
                    {
                        "select": {
                            "value": "T1.patient"
                        },
                        "from": [
                            {
                                "value": "Prescribes",
                                "name": "T1",
                                "is_table": true
                            },
                            {
                                "join": {
                                    "name": "T2",
                                    "value": "Medication",
                                    "is_table": true
                                },
                                "on": {
                                    "eq": [
                                        "T1.Medication",
                                        "T2.Code"
                                    ]
                                }
                            }
                        ],
                        "where": {
                            "eq": [
                                "T2.name",
                                {
                                    "literal": "Procrastin-X"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "sql_ans": [
            [
                3
            ]
        ],
        "cypher_query": "MATCH (p:Patient)\nWHERE NOT (p:Patient)-[]-(:Prescribes)-[]-(:Medication)\nRETURN count(*)",
        "cypher_ans": [
            [
                2
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "what is the name and position of the head whose department has least number of employees?",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH T2.Name AS Name, count(T2.departmentID) AS count, T2.Position AS Position\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Bob Kelso",
                "Head Chief of Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name and position of the head of the department with the least employees.",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH T2.Name AS Name, count(T2.departmentID) AS count, T2.Position AS Position\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Bob Kelso",
                "Head Chief of Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the patient who made the most recent appointment?",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the patient who made the appointment with the most recent start date.",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the nurse has the most appointments?",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH T1.Name AS Name, count(T1.EmployeeID) AS count\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the nurse who has the largest number of appointments.",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH T1.Name AS Name, count(T1.EmployeeID) AS count\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms located on each block floor.",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockFloor AS BlockFloor, count(T1.BlockFloor) AS count\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms does each block floor have?",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockFloor AS BlockFloor, count(T1.BlockFloor) AS count\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms for different block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockCode) AS count, T1.BlockCode AS BlockCode\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms are located for each block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockCode) AS count, T1.BlockCode AS BlockCode\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of medications prescribed for each brand.",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH T1.Name AS Name, count(T1.Brand) AS count\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many medications are prescribed for each brand?",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH T1.Name AS Name, count(T1.Brand) AS count\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians whose position title contains the word 'senior'.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of the physicians who have 'senior' in their titles.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the physician who was trained in the most expensive procedure?",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which physician was trained in the procedure that costs the most.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of patients who are not using the medication of Procrastin-X.",
        "sql_query": "SELECT count(*) FROM patient WHERE SSN NOT IN ( SELECT T1.patient FROM Prescribes AS T1 JOIN Medication AS T2 ON T1.Medication  =  T2.Code WHERE T2.name  =  'Procrastin-X' )",
        "parsed_sql": {
            "select": {
                "value": {
                    "count": "*"
                }
            },
            "from": "patient",
            "where": {
                "nin": [
                    "SSN",
                    {
                        "select": {
                            "value": "T1.patient"
                        },
                        "from": [
                            {
                                "value": "Prescribes",
                                "name": "T1",
                                "is_table": true
                            },
                            {
                                "join": {
                                    "name": "T2",
                                    "value": "Medication",
                                    "is_table": true
                                },
                                "on": {
                                    "eq": [
                                        "T1.Medication",
                                        "T2.Code"
                                    ]
                                }
                            }
                        ],
                        "where": {
                            "eq": [
                                "T2.name",
                                {
                                    "literal": "Procrastin-X"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "sql_ans": [
            [
                3
            ]
        ],
        "cypher_query": "MATCH (p:Patient)\nWHERE NOT (p:Patient)-[]-(:Prescribes)-[]-(:Medication)\nRETURN count(*)",
        "cypher_ans": [
            [
                2
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many patients are not using Procrastin-X as medication?",
        "sql_query": "SELECT count(*) FROM patient WHERE SSN NOT IN ( SELECT T1.patient FROM Prescribes AS T1 JOIN Medication AS T2 ON T1.Medication  =  T2.Code WHERE T2.name  =  'Procrastin-X' )",
        "parsed_sql": {
            "select": {
                "value": {
                    "count": "*"
                }
            },
            "from": "patient",
            "where": {
                "nin": [
                    "SSN",
                    {
                        "select": {
                            "value": "T1.patient"
                        },
                        "from": [
                            {
                                "value": "Prescribes",
                                "name": "T1",
                                "is_table": true
                            },
                            {
                                "join": {
                                    "name": "T2",
                                    "value": "Medication",
                                    "is_table": true
                                },
                                "on": {
                                    "eq": [
                                        "T1.Medication",
                                        "T2.Code"
                                    ]
                                }
                            }
                        ],
                        "where": {
                            "eq": [
                                "T2.name",
                                {
                                    "literal": "Procrastin-X"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "sql_ans": [
            [
                3
            ]
        ],
        "cypher_query": "MATCH (p:Patient)\nWHERE NOT (p:Patient)-[]-(:Prescribes)-[]-(:Medication)\nRETURN count(*)",
        "cypher_ans": [
            [
                2
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "what is the name and position of the head whose department has least number of employees?",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH count(T2.departmentID) AS count, T2.Position AS Position, T2.Name AS Name\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Bob Kelso",
                "Head Chief of Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name and position of the head of the department with the least employees.",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH count(T2.departmentID) AS count, T2.Position AS Position, T2.Name AS Name\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Bob Kelso",
                "Head Chief of Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the patient who made the most recent appointment?",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the patient who made the appointment with the most recent start date.",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the nurse has the most appointments?",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH count(T1.EmployeeID) AS count, T1.Name AS Name\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the nurse who has the largest number of appointments.",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH count(T1.EmployeeID) AS count, T1.Name AS Name\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms located on each block floor.",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockFloor AS BlockFloor, count(T1.BlockFloor) AS count\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms does each block floor have?",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockFloor AS BlockFloor, count(T1.BlockFloor) AS count\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms for different block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockCode) AS count, T1.BlockCode AS BlockCode\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms are located for each block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockCode) AS count, T1.BlockCode AS BlockCode\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of medications prescribed for each brand.",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH count(T1.Brand) AS count, T1.Name AS Name\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many medications are prescribed for each brand?",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH count(T1.Brand) AS count, T1.Name AS Name\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians whose position title contains the word 'senior'.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of the physicians who have 'senior' in their titles.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the physician who was trained in the most expensive procedure?",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which physician was trained in the procedure that costs the most.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of patients who are not using the medication of Procrastin-X.",
        "sql_query": "SELECT count(*) FROM patient WHERE SSN NOT IN ( SELECT T1.patient FROM Prescribes AS T1 JOIN Medication AS T2 ON T1.Medication  =  T2.Code WHERE T2.name  =  'Procrastin-X' )",
        "parsed_sql": {
            "select": {
                "value": {
                    "count": "*"
                }
            },
            "from": "patient",
            "where": {
                "nin": [
                    "SSN",
                    {
                        "select": {
                            "value": "T1.patient"
                        },
                        "from": [
                            {
                                "value": "Prescribes",
                                "name": "T1",
                                "is_table": true
                            },
                            {
                                "join": {
                                    "name": "T2",
                                    "value": "Medication",
                                    "is_table": true
                                },
                                "on": {
                                    "eq": [
                                        "T1.Medication",
                                        "T2.Code"
                                    ]
                                }
                            }
                        ],
                        "where": {
                            "eq": [
                                "T2.name",
                                {
                                    "literal": "Procrastin-X"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "sql_ans": [
            [
                3
            ]
        ],
        "cypher_query": "MATCH (p:Patient)\nWHERE NOT (p:Patient)-[]-(:Prescribes)-[]-(:Medication)\nRETURN count(*)",
        "cypher_ans": [
            [
                2
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many patients are not using Procrastin-X as medication?",
        "sql_query": "SELECT count(*) FROM patient WHERE SSN NOT IN ( SELECT T1.patient FROM Prescribes AS T1 JOIN Medication AS T2 ON T1.Medication  =  T2.Code WHERE T2.name  =  'Procrastin-X' )",
        "parsed_sql": {
            "select": {
                "value": {
                    "count": "*"
                }
            },
            "from": "patient",
            "where": {
                "nin": [
                    "SSN",
                    {
                        "select": {
                            "value": "T1.patient"
                        },
                        "from": [
                            {
                                "value": "Prescribes",
                                "name": "T1",
                                "is_table": true
                            },
                            {
                                "join": {
                                    "name": "T2",
                                    "value": "Medication",
                                    "is_table": true
                                },
                                "on": {
                                    "eq": [
                                        "T1.Medication",
                                        "T2.Code"
                                    ]
                                }
                            }
                        ],
                        "where": {
                            "eq": [
                                "T2.name",
                                {
                                    "literal": "Procrastin-X"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "sql_ans": [
            [
                3
            ]
        ],
        "cypher_query": "MATCH (p:Patient)\nWHERE NOT (p:Patient)-[]-(:Prescribes)-[]-(:Medication)\nRETURN count(*)",
        "cypher_ans": [
            [
                2
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "what is the name and position of the head whose department has least number of employees?",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH count(T2.departmentID) AS count, T2.Name AS Name, T2.Position AS Position\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Bob Kelso",
                "Head Chief of Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name and position of the head of the department with the least employees.",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH count(T2.departmentID) AS count, T2.Name AS Name, T2.Position AS Position\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Bob Kelso",
                "Head Chief of Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the patient who made the most recent appointment?",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the patient who made the appointment with the most recent start date.",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the nurse has the most appointments?",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH count(T1.EmployeeID) AS count, T1.Name AS Name\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the nurse who has the largest number of appointments.",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH count(T1.EmployeeID) AS count, T1.Name AS Name\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms located on each block floor.",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockFloor AS BlockFloor, count(T1.BlockFloor) AS count\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms does each block floor have?",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockFloor AS BlockFloor, count(T1.BlockFloor) AS count\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms for different block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockCode) AS count, T1.BlockCode AS BlockCode\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms are located for each block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockCode) AS count, T1.BlockCode AS BlockCode\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of medications prescribed for each brand.",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH T1.Name AS Name, count(T1.Brand) AS count\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many medications are prescribed for each brand?",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH T1.Name AS Name, count(T1.Brand) AS count\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians whose position title contains the word 'senior'.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of the physicians who have 'senior' in their titles.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the physician who was trained in the most expensive procedure?",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which physician was trained in the procedure that costs the most.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of patients who are not using the medication of Procrastin-X.",
        "sql_query": "SELECT count(*) FROM patient WHERE SSN NOT IN ( SELECT T1.patient FROM Prescribes AS T1 JOIN Medication AS T2 ON T1.Medication  =  T2.Code WHERE T2.name  =  'Procrastin-X' )",
        "parsed_sql": {
            "select": {
                "value": {
                    "count": "*"
                }
            },
            "from": "patient",
            "where": {
                "nin": [
                    "SSN",
                    {
                        "select": {
                            "value": "T1.patient"
                        },
                        "from": [
                            {
                                "value": "Prescribes",
                                "name": "T1",
                                "is_table": true
                            },
                            {
                                "join": {
                                    "name": "T2",
                                    "value": "Medication",
                                    "is_table": true
                                },
                                "on": {
                                    "eq": [
                                        "T1.Medication",
                                        "T2.Code"
                                    ]
                                }
                            }
                        ],
                        "where": {
                            "eq": [
                                "T2.name",
                                {
                                    "literal": "Procrastin-X"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "sql_ans": [
            [
                3
            ]
        ],
        "cypher_query": "MATCH (p:Patient)\nWHERE NOT (p:Patient)-[]-(:Prescribes)-[]-(:Medication)\nRETURN count(*)",
        "cypher_ans": [
            [
                2
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many patients are not using Procrastin-X as medication?",
        "sql_query": "SELECT count(*) FROM patient WHERE SSN NOT IN ( SELECT T1.patient FROM Prescribes AS T1 JOIN Medication AS T2 ON T1.Medication  =  T2.Code WHERE T2.name  =  'Procrastin-X' )",
        "parsed_sql": {
            "select": {
                "value": {
                    "count": "*"
                }
            },
            "from": "patient",
            "where": {
                "nin": [
                    "SSN",
                    {
                        "select": {
                            "value": "T1.patient"
                        },
                        "from": [
                            {
                                "value": "Prescribes",
                                "name": "T1",
                                "is_table": true
                            },
                            {
                                "join": {
                                    "name": "T2",
                                    "value": "Medication",
                                    "is_table": true
                                },
                                "on": {
                                    "eq": [
                                        "T1.Medication",
                                        "T2.Code"
                                    ]
                                }
                            }
                        ],
                        "where": {
                            "eq": [
                                "T2.name",
                                {
                                    "literal": "Procrastin-X"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "sql_ans": [
            [
                3
            ]
        ],
        "cypher_query": "MATCH (p:Patient)\nWHERE NOT (p:Patient)-[]-(:Prescribes)-[]-(:Medication)\nRETURN count(*)",
        "cypher_ans": [
            [
                2
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "what is the name and position of the head whose department has least number of employees?",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH T2.Name AS Name, T2.Position AS Position, count(T2.departmentID) AS count\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Bob Kelso",
                "Head Chief of Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name and position of the head of the department with the least employees.",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH T2.Name AS Name, T2.Position AS Position, count(T2.departmentID) AS count\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Bob Kelso",
                "Head Chief of Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the patient who made the most recent appointment?",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the patient who made the appointment with the most recent start date.",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the nurse has the most appointments?",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH count(T1.EmployeeID) AS count, T1.Name AS Name\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the nurse who has the largest number of appointments.",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH count(T1.EmployeeID) AS count, T1.Name AS Name\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms located on each block floor.",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockFloor AS BlockFloor, count(T1.BlockFloor) AS count\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms does each block floor have?",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockFloor AS BlockFloor, count(T1.BlockFloor) AS count\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms for different block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockCode) AS count, T1.BlockCode AS BlockCode\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms are located for each block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockCode) AS count, T1.BlockCode AS BlockCode\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of medications prescribed for each brand.",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH T1.Name AS Name, count(T1.Brand) AS count\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many medications are prescribed for each brand?",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH T1.Name AS Name, count(T1.Brand) AS count\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians whose position title contains the word 'senior'.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of the physicians who have 'senior' in their titles.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the physician who was trained in the most expensive procedure?",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which physician was trained in the procedure that costs the most.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of patients who are not using the medication of Procrastin-X.",
        "sql_query": "SELECT count(*) FROM patient WHERE SSN NOT IN ( SELECT T1.patient FROM Prescribes AS T1 JOIN Medication AS T2 ON T1.Medication  =  T2.Code WHERE T2.name  =  'Procrastin-X' )",
        "parsed_sql": {
            "select": {
                "value": {
                    "count": "*"
                }
            },
            "from": "patient",
            "where": {
                "nin": [
                    "SSN",
                    {
                        "select": {
                            "value": "T1.patient"
                        },
                        "from": [
                            {
                                "value": "Prescribes",
                                "name": "T1",
                                "is_table": true
                            },
                            {
                                "join": {
                                    "name": "T2",
                                    "value": "Medication",
                                    "is_table": true
                                },
                                "on": {
                                    "eq": [
                                        "T1.Medication",
                                        "T2.Code"
                                    ]
                                }
                            }
                        ],
                        "where": {
                            "eq": [
                                "T2.name",
                                {
                                    "literal": "Procrastin-X"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "sql_ans": [
            [
                3
            ]
        ],
        "cypher_query": "MATCH (p:Patient)\nWHERE NOT (p:Patient)-[]-(:Prescribes)-[]-(:Medication)\nRETURN count(*)",
        "cypher_ans": [
            [
                2
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many patients are not using Procrastin-X as medication?",
        "sql_query": "SELECT count(*) FROM patient WHERE SSN NOT IN ( SELECT T1.patient FROM Prescribes AS T1 JOIN Medication AS T2 ON T1.Medication  =  T2.Code WHERE T2.name  =  'Procrastin-X' )",
        "parsed_sql": {
            "select": {
                "value": {
                    "count": "*"
                }
            },
            "from": "patient",
            "where": {
                "nin": [
                    "SSN",
                    {
                        "select": {
                            "value": "T1.patient"
                        },
                        "from": [
                            {
                                "value": "Prescribes",
                                "name": "T1",
                                "is_table": true
                            },
                            {
                                "join": {
                                    "name": "T2",
                                    "value": "Medication",
                                    "is_table": true
                                },
                                "on": {
                                    "eq": [
                                        "T1.Medication",
                                        "T2.Code"
                                    ]
                                }
                            }
                        ],
                        "where": {
                            "eq": [
                                "T2.name",
                                {
                                    "literal": "Procrastin-X"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "sql_ans": [
            [
                3
            ]
        ],
        "cypher_query": "MATCH (p:Patient)\nWHERE NOT (p:Patient)-[]-(:Prescribes)-[]-(:Medication)\nRETURN count(*)",
        "cypher_ans": [
            [
                2
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "what is the name and position of the head whose department has least number of employees?",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH count(T2.departmentID) AS count, T2.Name AS Name, T2.Position AS Position\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Bob Kelso",
                "Head Chief of Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name and position of the head of the department with the least employees.",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH count(T2.departmentID) AS count, T2.Name AS Name, T2.Position AS Position\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Bob Kelso",
                "Head Chief of Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the patient who made the most recent appointment?",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the patient who made the appointment with the most recent start date.",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the nurse has the most appointments?",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH count(T1.EmployeeID) AS count, T1.Name AS Name\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the nurse who has the largest number of appointments.",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH count(T1.EmployeeID) AS count, T1.Name AS Name\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms located on each block floor.",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockFloor AS BlockFloor, count(T1.BlockFloor) AS count\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms does each block floor have?",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockFloor AS BlockFloor, count(T1.BlockFloor) AS count\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms for different block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockCode) AS count, T1.BlockCode AS BlockCode\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms are located for each block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockCode) AS count, T1.BlockCode AS BlockCode\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of medications prescribed for each brand.",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH T1.Name AS Name, count(T1.Brand) AS count\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many medications are prescribed for each brand?",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH T1.Name AS Name, count(T1.Brand) AS count\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians whose position title contains the word 'senior'.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of the physicians who have 'senior' in their titles.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the physician who was trained in the most expensive procedure?",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which physician was trained in the procedure that costs the most.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of patients who are not using the medication of Procrastin-X.",
        "sql_query": "SELECT count(*) FROM patient WHERE SSN NOT IN ( SELECT T1.patient FROM Prescribes AS T1 JOIN Medication AS T2 ON T1.Medication  =  T2.Code WHERE T2.name  =  'Procrastin-X' )",
        "parsed_sql": {
            "select": {
                "value": {
                    "count": "*"
                }
            },
            "from": "patient",
            "where": {
                "nin": [
                    "SSN",
                    {
                        "select": {
                            "value": "T1.patient"
                        },
                        "from": [
                            {
                                "value": "Prescribes",
                                "name": "T1",
                                "is_table": true
                            },
                            {
                                "join": {
                                    "name": "T2",
                                    "value": "Medication",
                                    "is_table": true
                                },
                                "on": {
                                    "eq": [
                                        "T1.Medication",
                                        "T2.Code"
                                    ]
                                }
                            }
                        ],
                        "where": {
                            "eq": [
                                "T2.name",
                                {
                                    "literal": "Procrastin-X"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "sql_ans": [
            [
                3
            ]
        ],
        "cypher_query": "MATCH (p:Patient)\nWHERE NOT (p:Patient)-[]-(:Prescribes)-[]-(:Medication)\nRETURN count(*)",
        "cypher_ans": [
            [
                2
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many patients are not using Procrastin-X as medication?",
        "sql_query": "SELECT count(*) FROM patient WHERE SSN NOT IN ( SELECT T1.patient FROM Prescribes AS T1 JOIN Medication AS T2 ON T1.Medication  =  T2.Code WHERE T2.name  =  'Procrastin-X' )",
        "parsed_sql": {
            "select": {
                "value": {
                    "count": "*"
                }
            },
            "from": "patient",
            "where": {
                "nin": [
                    "SSN",
                    {
                        "select": {
                            "value": "T1.patient"
                        },
                        "from": [
                            {
                                "value": "Prescribes",
                                "name": "T1",
                                "is_table": true
                            },
                            {
                                "join": {
                                    "name": "T2",
                                    "value": "Medication",
                                    "is_table": true
                                },
                                "on": {
                                    "eq": [
                                        "T1.Medication",
                                        "T2.Code"
                                    ]
                                }
                            }
                        ],
                        "where": {
                            "eq": [
                                "T2.name",
                                {
                                    "literal": "Procrastin-X"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "sql_ans": [
            [
                3
            ]
        ],
        "cypher_query": "MATCH (p:Patient)\nWHERE NOT (p:Patient)-[]-(:Prescribes)-[]-(:Medication)\nRETURN count(*)",
        "cypher_ans": [
            [
                2
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "what is the name and position of the head whose department has least number of employees?",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH T2.Name AS Name, T2.Position AS Position, count(T2.departmentID) AS count\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Bob Kelso",
                "Head Chief of Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name and position of the head of the department with the least employees.",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH T2.Name AS Name, T2.Position AS Position, count(T2.departmentID) AS count\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Bob Kelso",
                "Head Chief of Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the patient who made the most recent appointment?",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the patient who made the appointment with the most recent start date.",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the nurse has the most appointments?",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH T1.Name AS Name, count(T1.EmployeeID) AS count\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the nurse who has the largest number of appointments.",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH T1.Name AS Name, count(T1.EmployeeID) AS count\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms located on each block floor.",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockFloor) AS count, T1.BlockFloor AS BlockFloor\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms does each block floor have?",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockFloor) AS count, T1.BlockFloor AS BlockFloor\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms for different block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockCode AS BlockCode, count(T1.BlockCode) AS count\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms are located for each block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockCode AS BlockCode, count(T1.BlockCode) AS count\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of medications prescribed for each brand.",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH T1.Name AS Name, count(T1.Brand) AS count\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many medications are prescribed for each brand?",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH T1.Name AS Name, count(T1.Brand) AS count\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians whose position title contains the word 'senior'.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of the physicians who have 'senior' in their titles.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the physician who was trained in the most expensive procedure?",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which physician was trained in the procedure that costs the most.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of patients who are not using the medication of Procrastin-X.",
        "sql_query": "SELECT count(*) FROM patient WHERE SSN NOT IN ( SELECT T1.patient FROM Prescribes AS T1 JOIN Medication AS T2 ON T1.Medication  =  T2.Code WHERE T2.name  =  'Procrastin-X' )",
        "parsed_sql": {
            "select": {
                "value": {
                    "count": "*"
                }
            },
            "from": "patient",
            "where": {
                "nin": [
                    "SSN",
                    {
                        "select": {
                            "value": "T1.patient"
                        },
                        "from": [
                            {
                                "value": "Prescribes",
                                "name": "T1",
                                "is_table": true
                            },
                            {
                                "join": {
                                    "name": "T2",
                                    "value": "Medication",
                                    "is_table": true
                                },
                                "on": {
                                    "eq": [
                                        "T1.Medication",
                                        "T2.Code"
                                    ]
                                }
                            }
                        ],
                        "where": {
                            "eq": [
                                "T2.name",
                                {
                                    "literal": "Procrastin-X"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "sql_ans": [
            [
                3
            ]
        ],
        "cypher_query": "MATCH (p:Patient)\nWHERE NOT (p:Patient)-[]-(:Prescribes)-[]-(:Medication)\nRETURN count(*)",
        "cypher_ans": [
            [
                2
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many patients are not using Procrastin-X as medication?",
        "sql_query": "SELECT count(*) FROM patient WHERE SSN NOT IN ( SELECT T1.patient FROM Prescribes AS T1 JOIN Medication AS T2 ON T1.Medication  =  T2.Code WHERE T2.name  =  'Procrastin-X' )",
        "parsed_sql": {
            "select": {
                "value": {
                    "count": "*"
                }
            },
            "from": "patient",
            "where": {
                "nin": [
                    "SSN",
                    {
                        "select": {
                            "value": "T1.patient"
                        },
                        "from": [
                            {
                                "value": "Prescribes",
                                "name": "T1",
                                "is_table": true
                            },
                            {
                                "join": {
                                    "name": "T2",
                                    "value": "Medication",
                                    "is_table": true
                                },
                                "on": {
                                    "eq": [
                                        "T1.Medication",
                                        "T2.Code"
                                    ]
                                }
                            }
                        ],
                        "where": {
                            "eq": [
                                "T2.name",
                                {
                                    "literal": "Procrastin-X"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "sql_ans": [
            [
                3
            ]
        ],
        "cypher_query": "MATCH (p:Patient)\nWHERE NOT (p:Patient)-[]-(:Prescribes)-[]-(:Medication)\nRETURN count(*)",
        "cypher_ans": [
            [
                2
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "what is the name and position of the head whose department has least number of employees?",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH count(T2.departmentID) AS count, T2.Position AS Position, T2.Name AS Name\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Bob Kelso",
                "Head Chief of Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name and position of the head of the department with the least employees.",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH count(T2.departmentID) AS count, T2.Position AS Position, T2.Name AS Name\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Bob Kelso",
                "Head Chief of Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the patient who made the most recent appointment?",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the patient who made the appointment with the most recent start date.",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the nurse has the most appointments?",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH count(T1.EmployeeID) AS count, T1.Name AS Name\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the nurse who has the largest number of appointments.",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH count(T1.EmployeeID) AS count, T1.Name AS Name\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms located on each block floor.",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockFloor AS BlockFloor, count(T1.BlockFloor) AS count\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms does each block floor have?",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockFloor AS BlockFloor, count(T1.BlockFloor) AS count\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms for different block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockCode AS BlockCode, count(T1.BlockCode) AS count\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms are located for each block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockCode AS BlockCode, count(T1.BlockCode) AS count\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of medications prescribed for each brand.",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH T1.Name AS Name, count(T1.Brand) AS count\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many medications are prescribed for each brand?",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH T1.Name AS Name, count(T1.Brand) AS count\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians whose position title contains the word 'senior'.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of the physicians who have 'senior' in their titles.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the physician who was trained in the most expensive procedure?",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which physician was trained in the procedure that costs the most.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of patients who are not using the medication of Procrastin-X.",
        "sql_query": "SELECT count(*) FROM patient WHERE SSN NOT IN ( SELECT T1.patient FROM Prescribes AS T1 JOIN Medication AS T2 ON T1.Medication  =  T2.Code WHERE T2.name  =  'Procrastin-X' )",
        "parsed_sql": {
            "select": {
                "value": {
                    "count": "*"
                }
            },
            "from": "patient",
            "where": {
                "nin": [
                    "SSN",
                    {
                        "select": {
                            "value": "T1.patient"
                        },
                        "from": [
                            {
                                "value": "Prescribes",
                                "name": "T1",
                                "is_table": true
                            },
                            {
                                "join": {
                                    "name": "T2",
                                    "value": "Medication",
                                    "is_table": true
                                },
                                "on": {
                                    "eq": [
                                        "T1.Medication",
                                        "T2.Code"
                                    ]
                                }
                            }
                        ],
                        "where": {
                            "eq": [
                                "T2.name",
                                {
                                    "literal": "Procrastin-X"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "sql_ans": [
            [
                3
            ]
        ],
        "cypher_query": "MATCH (p:Patient)\nWHERE NOT (p:Patient)-[]-(:Prescribes)-[]-(:Medication)\nRETURN count(*)",
        "cypher_ans": [
            [
                2
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many patients are not using Procrastin-X as medication?",
        "sql_query": "SELECT count(*) FROM patient WHERE SSN NOT IN ( SELECT T1.patient FROM Prescribes AS T1 JOIN Medication AS T2 ON T1.Medication  =  T2.Code WHERE T2.name  =  'Procrastin-X' )",
        "parsed_sql": {
            "select": {
                "value": {
                    "count": "*"
                }
            },
            "from": "patient",
            "where": {
                "nin": [
                    "SSN",
                    {
                        "select": {
                            "value": "T1.patient"
                        },
                        "from": [
                            {
                                "value": "Prescribes",
                                "name": "T1",
                                "is_table": true
                            },
                            {
                                "join": {
                                    "name": "T2",
                                    "value": "Medication",
                                    "is_table": true
                                },
                                "on": {
                                    "eq": [
                                        "T1.Medication",
                                        "T2.Code"
                                    ]
                                }
                            }
                        ],
                        "where": {
                            "eq": [
                                "T2.name",
                                {
                                    "literal": "Procrastin-X"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "sql_ans": [
            [
                3
            ]
        ],
        "cypher_query": "MATCH (p:Patient)\nWHERE NOT (p:Patient)-[]-(:Prescribes)-[]-(:Medication)\nRETURN count(*)",
        "cypher_ans": [
            [
                2
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "what is the name and position of the head whose department has least number of employees?",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH T2.Position AS Position, count(T2.departmentID) AS count, T2.Name AS Name\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Bob Kelso",
                "Head Chief of Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name and position of the head of the department with the least employees.",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH T2.Position AS Position, count(T2.departmentID) AS count, T2.Name AS Name\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Bob Kelso",
                "Head Chief of Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the patient who made the most recent appointment?",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the patient who made the appointment with the most recent start date.",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the nurse has the most appointments?",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH T1.Name AS Name, count(T1.EmployeeID) AS count\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the nurse who has the largest number of appointments.",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH T1.Name AS Name, count(T1.EmployeeID) AS count\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms located on each block floor.",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockFloor) AS count, T1.BlockFloor AS BlockFloor\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms does each block floor have?",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockFloor) AS count, T1.BlockFloor AS BlockFloor\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms for different block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockCode) AS count, T1.BlockCode AS BlockCode\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms are located for each block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockCode) AS count, T1.BlockCode AS BlockCode\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of medications prescribed for each brand.",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH T1.Name AS Name, count(T1.Brand) AS count\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many medications are prescribed for each brand?",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH T1.Name AS Name, count(T1.Brand) AS count\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians whose position title contains the word 'senior'.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of the physicians who have 'senior' in their titles.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the physician who was trained in the most expensive procedure?",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which physician was trained in the procedure that costs the most.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of patients who are not using the medication of Procrastin-X.",
        "sql_query": "SELECT count(*) FROM patient WHERE SSN NOT IN ( SELECT T1.patient FROM Prescribes AS T1 JOIN Medication AS T2 ON T1.Medication  =  T2.Code WHERE T2.name  =  'Procrastin-X' )",
        "parsed_sql": {
            "select": {
                "value": {
                    "count": "*"
                }
            },
            "from": "patient",
            "where": {
                "nin": [
                    "SSN",
                    {
                        "select": {
                            "value": "T1.patient"
                        },
                        "from": [
                            {
                                "value": "Prescribes",
                                "name": "T1",
                                "is_table": true
                            },
                            {
                                "join": {
                                    "name": "T2",
                                    "value": "Medication",
                                    "is_table": true
                                },
                                "on": {
                                    "eq": [
                                        "T1.Medication",
                                        "T2.Code"
                                    ]
                                }
                            }
                        ],
                        "where": {
                            "eq": [
                                "T2.name",
                                {
                                    "literal": "Procrastin-X"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "sql_ans": [
            [
                3
            ]
        ],
        "cypher_query": "MATCH (p:Patient)\nWHERE NOT (p:Patient)-[]-(:Prescribes)-[]-(:Medication)\nRETURN count(*)",
        "cypher_ans": [
            [
                2
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many patients are not using Procrastin-X as medication?",
        "sql_query": "SELECT count(*) FROM patient WHERE SSN NOT IN ( SELECT T1.patient FROM Prescribes AS T1 JOIN Medication AS T2 ON T1.Medication  =  T2.Code WHERE T2.name  =  'Procrastin-X' )",
        "parsed_sql": {
            "select": {
                "value": {
                    "count": "*"
                }
            },
            "from": "patient",
            "where": {
                "nin": [
                    "SSN",
                    {
                        "select": {
                            "value": "T1.patient"
                        },
                        "from": [
                            {
                                "value": "Prescribes",
                                "name": "T1",
                                "is_table": true
                            },
                            {
                                "join": {
                                    "name": "T2",
                                    "value": "Medication",
                                    "is_table": true
                                },
                                "on": {
                                    "eq": [
                                        "T1.Medication",
                                        "T2.Code"
                                    ]
                                }
                            }
                        ],
                        "where": {
                            "eq": [
                                "T2.name",
                                {
                                    "literal": "Procrastin-X"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "sql_ans": [
            [
                3
            ]
        ],
        "cypher_query": "MATCH (p:Patient)\nWHERE NOT (p:Patient)-[]-(:Prescribes)-[]-(:Medication)\nRETURN count(*)",
        "cypher_ans": [
            [
                2
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "what is the name and position of the head whose department has least number of employees?",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH T2.Name AS Name, T2.Position AS Position, count(T2.departmentID) AS count\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Bob Kelso",
                "Head Chief of Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name and position of the head of the department with the least employees.",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH T2.Name AS Name, T2.Position AS Position, count(T2.departmentID) AS count\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Bob Kelso",
                "Head Chief of Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the patient who made the most recent appointment?",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the patient who made the appointment with the most recent start date.",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the nurse has the most appointments?",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH count(T1.EmployeeID) AS count, T1.Name AS Name\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the nurse who has the largest number of appointments.",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH count(T1.EmployeeID) AS count, T1.Name AS Name\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms located on each block floor.",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockFloor) AS count, T1.BlockFloor AS BlockFloor\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms does each block floor have?",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockFloor) AS count, T1.BlockFloor AS BlockFloor\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms for different block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockCode AS BlockCode, count(T1.BlockCode) AS count\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms are located for each block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockCode AS BlockCode, count(T1.BlockCode) AS count\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of medications prescribed for each brand.",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH count(T1.Brand) AS count, T1.Name AS Name\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many medications are prescribed for each brand?",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH count(T1.Brand) AS count, T1.Name AS Name\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians whose position title contains the word 'senior'.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of the physicians who have 'senior' in their titles.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the physician who was trained in the most expensive procedure?",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which physician was trained in the procedure that costs the most.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "what is the name and position of the head whose department has least number of employees?",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH T2.Name AS Name, T2.Position AS Position, count(T2.departmentID) AS count\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Bob Kelso",
                "Head Chief of Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name and position of the head of the department with the least employees.",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH T2.Name AS Name, T2.Position AS Position, count(T2.departmentID) AS count\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Bob Kelso",
                "Head Chief of Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the patient who made the most recent appointment?",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the patient who made the appointment with the most recent start date.",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the nurse has the most appointments?",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH T1.Name AS Name, count(T1.EmployeeID) AS count\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the nurse who has the largest number of appointments.",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH T1.Name AS Name, count(T1.EmployeeID) AS count\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms located on each block floor.",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockFloor) AS count, T1.BlockFloor AS BlockFloor\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms does each block floor have?",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockFloor) AS count, T1.BlockFloor AS BlockFloor\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms for different block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockCode AS BlockCode, count(T1.BlockCode) AS count\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms are located for each block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockCode AS BlockCode, count(T1.BlockCode) AS count\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of medications prescribed for each brand.",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH count(T1.Brand) AS count, T1.Name AS Name\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many medications are prescribed for each brand?",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH count(T1.Brand) AS count, T1.Name AS Name\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians whose position title contains the word 'senior'.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of the physicians who have 'senior' in their titles.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the physician who was trained in the most expensive procedure?",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which physician was trained in the procedure that costs the most.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "what is the name and position of the head whose department has least number of employees?",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH T2.Position AS Position, count(T2.departmentID) AS count, T2.Name AS Name\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Bob Kelso",
                "Head Chief of Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name and position of the head of the department with the least employees.",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH T2.Position AS Position, count(T2.departmentID) AS count, T2.Name AS Name\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Bob Kelso",
                "Head Chief of Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the patient who made the most recent appointment?",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the patient who made the appointment with the most recent start date.",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the nurse has the most appointments?",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH T1.Name AS Name, count(T1.EmployeeID) AS count\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the nurse who has the largest number of appointments.",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH T1.Name AS Name, count(T1.EmployeeID) AS count\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms located on each block floor.",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockFloor) AS count, T1.BlockFloor AS BlockFloor\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms does each block floor have?",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockFloor) AS count, T1.BlockFloor AS BlockFloor\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms for different block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockCode AS BlockCode, count(T1.BlockCode) AS count\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms are located for each block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockCode AS BlockCode, count(T1.BlockCode) AS count\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of medications prescribed for each brand.",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH T1.Name AS Name, count(T1.Brand) AS count\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many medications are prescribed for each brand?",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH T1.Name AS Name, count(T1.Brand) AS count\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians whose position title contains the word 'senior'.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of the physicians who have 'senior' in their titles.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the physician who was trained in the most expensive procedure?",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which physician was trained in the procedure that costs the most.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "what is the name and position of the head whose department has least number of employees?",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH count(T2.departmentID) AS count, T2.Name AS Name, T2.Position AS Position\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Bob Kelso",
                "Head Chief of Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name and position of the head of the department with the least employees.",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH count(T2.departmentID) AS count, T2.Name AS Name, T2.Position AS Position\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Bob Kelso",
                "Head Chief of Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the patient who made the most recent appointment?",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the patient who made the appointment with the most recent start date.",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the nurse has the most appointments?",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH count(T1.EmployeeID) AS count, T1.Name AS Name\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the nurse who has the largest number of appointments.",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH count(T1.EmployeeID) AS count, T1.Name AS Name\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms located on each block floor.",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockFloor) AS count, T1.BlockFloor AS BlockFloor\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms does each block floor have?",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockFloor) AS count, T1.BlockFloor AS BlockFloor\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms for different block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockCode AS BlockCode, count(T1.BlockCode) AS count\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms are located for each block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockCode AS BlockCode, count(T1.BlockCode) AS count\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of medications prescribed for each brand.",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH T1.Name AS Name, count(T1.Brand) AS count\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many medications are prescribed for each brand?",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH T1.Name AS Name, count(T1.Brand) AS count\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians whose position title contains the word 'senior'.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of the physicians who have 'senior' in their titles.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the physician who was trained in the most expensive procedure?",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which physician was trained in the procedure that costs the most.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "what is the name and position of the head whose department has least number of employees?",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH count(T2.departmentID) AS count, T2.Position AS Position, T2.Name AS Name\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Bob Kelso",
                "Head Chief of Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name and position of the head of the department with the least employees.",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH count(T2.departmentID) AS count, T2.Position AS Position, T2.Name AS Name\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Bob Kelso",
                "Head Chief of Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the patient who made the most recent appointment?",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the patient who made the appointment with the most recent start date.",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the nurse has the most appointments?",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH count(T1.EmployeeID) AS count, T1.Name AS Name\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the nurse who has the largest number of appointments.",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH count(T1.EmployeeID) AS count, T1.Name AS Name\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms located on each block floor.",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockFloor AS BlockFloor, count(T1.BlockFloor) AS count\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms does each block floor have?",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockFloor AS BlockFloor, count(T1.BlockFloor) AS count\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms for different block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockCode) AS count, T1.BlockCode AS BlockCode\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms are located for each block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockCode) AS count, T1.BlockCode AS BlockCode\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of medications prescribed for each brand.",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH count(T1.Brand) AS count, T1.Name AS Name\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many medications are prescribed for each brand?",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH count(T1.Brand) AS count, T1.Name AS Name\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians whose position title contains the word 'senior'.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of the physicians who have 'senior' in their titles.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the physician who was trained in the most expensive procedure?",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which physician was trained in the procedure that costs the most.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "what is the name and position of the head whose department has least number of employees?",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH count(T2.departmentID) AS count, T2.Position AS Position, T2.Name AS Name\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Bob Kelso",
                "Head Chief of Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name and position of the head of the department with the least employees.",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH count(T2.departmentID) AS count, T2.Position AS Position, T2.Name AS Name\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Bob Kelso",
                "Head Chief of Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the patient who made the most recent appointment?",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the patient who made the appointment with the most recent start date.",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the nurse has the most appointments?",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH count(T1.EmployeeID) AS count, T1.Name AS Name\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the nurse who has the largest number of appointments.",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH count(T1.EmployeeID) AS count, T1.Name AS Name\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms located on each block floor.",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockFloor) AS count, T1.BlockFloor AS BlockFloor\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms does each block floor have?",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockFloor) AS count, T1.BlockFloor AS BlockFloor\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms for different block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockCode AS BlockCode, count(T1.BlockCode) AS count\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms are located for each block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockCode AS BlockCode, count(T1.BlockCode) AS count\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of medications prescribed for each brand.",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH count(T1.Brand) AS count, T1.Name AS Name\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many medications are prescribed for each brand?",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH count(T1.Brand) AS count, T1.Name AS Name\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians whose position title contains the word 'senior'.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of the physicians who have 'senior' in their titles.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the physician who was trained in the most expensive procedure?",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which physician was trained in the procedure that costs the most.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "what is the name and position of the head whose department has least number of employees?",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH T2.Position AS Position, count(T2.departmentID) AS count, T2.Name AS Name\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Bob Kelso",
                "Head Chief of Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name and position of the head of the department with the least employees.",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH T2.Position AS Position, count(T2.departmentID) AS count, T2.Name AS Name\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Bob Kelso",
                "Head Chief of Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the patient who made the most recent appointment?",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the patient who made the appointment with the most recent start date.",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the nurse has the most appointments?",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH T1.Name AS Name, count(T1.EmployeeID) AS count\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the nurse who has the largest number of appointments.",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH T1.Name AS Name, count(T1.EmployeeID) AS count\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms located on each block floor.",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockFloor AS BlockFloor, count(T1.BlockFloor) AS count\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms does each block floor have?",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockFloor AS BlockFloor, count(T1.BlockFloor) AS count\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms for different block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockCode) AS count, T1.BlockCode AS BlockCode\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms are located for each block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockCode) AS count, T1.BlockCode AS BlockCode\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of medications prescribed for each brand.",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH T1.Name AS Name, count(T1.Brand) AS count\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many medications are prescribed for each brand?",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH T1.Name AS Name, count(T1.Brand) AS count\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians whose position title contains the word 'senior'.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of the physicians who have 'senior' in their titles.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the physician who was trained in the most expensive procedure?",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which physician was trained in the procedure that costs the most.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of patients who are not using the medication of Procrastin-X.",
        "sql_query": "SELECT count(*) FROM patient WHERE SSN NOT IN ( SELECT T1.patient FROM Prescribes AS T1 JOIN Medication AS T2 ON T1.Medication  =  T2.Code WHERE T2.name  =  'Procrastin-X' )",
        "parsed_sql": {
            "select": {
                "value": {
                    "count": "*"
                }
            },
            "from": "patient",
            "where": {
                "nin": [
                    "SSN",
                    {
                        "select": {
                            "value": "T1.patient"
                        },
                        "from": [
                            {
                                "value": "Prescribes",
                                "name": "T1",
                                "is_table": true
                            },
                            {
                                "join": {
                                    "name": "T2",
                                    "value": "Medication",
                                    "is_table": true
                                },
                                "on": {
                                    "eq": [
                                        "T1.Medication",
                                        "T2.Code"
                                    ]
                                }
                            }
                        ],
                        "where": {
                            "eq": [
                                "T2.name",
                                {
                                    "literal": "Procrastin-X"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "sql_ans": [
            [
                3
            ]
        ],
        "cypher_query": "MATCH (p:Patient)\nWHERE NOT (p:Patient)-[]-(:Prescribes)-[]-(:Medication)\nRETURN count(*)",
        "cypher_ans": [
            [
                2
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many patients are not using Procrastin-X as medication?",
        "sql_query": "SELECT count(*) FROM patient WHERE SSN NOT IN ( SELECT T1.patient FROM Prescribes AS T1 JOIN Medication AS T2 ON T1.Medication  =  T2.Code WHERE T2.name  =  'Procrastin-X' )",
        "parsed_sql": {
            "select": {
                "value": {
                    "count": "*"
                }
            },
            "from": "patient",
            "where": {
                "nin": [
                    "SSN",
                    {
                        "select": {
                            "value": "T1.patient"
                        },
                        "from": [
                            {
                                "value": "Prescribes",
                                "name": "T1",
                                "is_table": true
                            },
                            {
                                "join": {
                                    "name": "T2",
                                    "value": "Medication",
                                    "is_table": true
                                },
                                "on": {
                                    "eq": [
                                        "T1.Medication",
                                        "T2.Code"
                                    ]
                                }
                            }
                        ],
                        "where": {
                            "eq": [
                                "T2.name",
                                {
                                    "literal": "Procrastin-X"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "sql_ans": [
            [
                3
            ]
        ],
        "cypher_query": "MATCH (p:Patient)\nWHERE NOT (p:Patient)-[]-(:Prescribes)-[]-(:Medication)\nRETURN count(*)",
        "cypher_ans": [
            [
                2
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "what is the name and position of the head whose department has least number of employees?",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH T2.Position AS Position, T2.Name AS Name, count(T2.departmentID) AS count\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Bob Kelso",
                "Head Chief of Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name and position of the head of the department with the least employees.",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH T2.Position AS Position, T2.Name AS Name, count(T2.departmentID) AS count\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Bob Kelso",
                "Head Chief of Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the patient who made the most recent appointment?",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the patient who made the appointment with the most recent start date.",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the nurse has the most appointments?",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH count(T1.EmployeeID) AS count, T1.Name AS Name\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the nurse who has the largest number of appointments.",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH count(T1.EmployeeID) AS count, T1.Name AS Name\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms located on each block floor.",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockFloor AS BlockFloor, count(T1.BlockFloor) AS count\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms does each block floor have?",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockFloor AS BlockFloor, count(T1.BlockFloor) AS count\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms for different block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockCode AS BlockCode, count(T1.BlockCode) AS count\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms are located for each block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockCode AS BlockCode, count(T1.BlockCode) AS count\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of medications prescribed for each brand.",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH T1.Name AS Name, count(T1.Brand) AS count\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many medications are prescribed for each brand?",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH T1.Name AS Name, count(T1.Brand) AS count\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians whose position title contains the word 'senior'.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of the physicians who have 'senior' in their titles.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the physician who was trained in the most expensive procedure?",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which physician was trained in the procedure that costs the most.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of patients who are not using the medication of Procrastin-X.",
        "sql_query": "SELECT count(*) FROM patient WHERE SSN NOT IN ( SELECT T1.patient FROM Prescribes AS T1 JOIN Medication AS T2 ON T1.Medication  =  T2.Code WHERE T2.name  =  'Procrastin-X' )",
        "parsed_sql": {
            "select": {
                "value": {
                    "count": "*"
                }
            },
            "from": "patient",
            "where": {
                "nin": [
                    "SSN",
                    {
                        "select": {
                            "value": "T1.patient"
                        },
                        "from": [
                            {
                                "value": "Prescribes",
                                "name": "T1",
                                "is_table": true
                            },
                            {
                                "join": {
                                    "name": "T2",
                                    "value": "Medication",
                                    "is_table": true
                                },
                                "on": {
                                    "eq": [
                                        "T1.Medication",
                                        "T2.Code"
                                    ]
                                }
                            }
                        ],
                        "where": {
                            "eq": [
                                "T2.name",
                                {
                                    "literal": "Procrastin-X"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "sql_ans": [
            [
                3
            ]
        ],
        "cypher_query": "MATCH (p:Patient)\nWHERE NOT (p:Patient)-[]-(:Prescribes)-[]-(:Medication)\nRETURN count(*)",
        "cypher_ans": [
            [
                2
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many patients are not using Procrastin-X as medication?",
        "sql_query": "SELECT count(*) FROM patient WHERE SSN NOT IN ( SELECT T1.patient FROM Prescribes AS T1 JOIN Medication AS T2 ON T1.Medication  =  T2.Code WHERE T2.name  =  'Procrastin-X' )",
        "parsed_sql": {
            "select": {
                "value": {
                    "count": "*"
                }
            },
            "from": "patient",
            "where": {
                "nin": [
                    "SSN",
                    {
                        "select": {
                            "value": "T1.patient"
                        },
                        "from": [
                            {
                                "value": "Prescribes",
                                "name": "T1",
                                "is_table": true
                            },
                            {
                                "join": {
                                    "name": "T2",
                                    "value": "Medication",
                                    "is_table": true
                                },
                                "on": {
                                    "eq": [
                                        "T1.Medication",
                                        "T2.Code"
                                    ]
                                }
                            }
                        ],
                        "where": {
                            "eq": [
                                "T2.name",
                                {
                                    "literal": "Procrastin-X"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "sql_ans": [
            [
                3
            ]
        ],
        "cypher_query": "MATCH (p:Patient)\nWHERE NOT (p:Patient)-[]-(:Prescribes)-[]-(:Medication)\nRETURN count(*)",
        "cypher_ans": [
            [
                2
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "what is the name and position of the head whose department has least number of employees?",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH count(T2.departmentID) AS count, T2.Name AS Name, T2.Position AS Position\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Bob Kelso",
                "Head Chief of Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name and position of the head of the department with the least employees.",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH count(T2.departmentID) AS count, T2.Name AS Name, T2.Position AS Position\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Bob Kelso",
                "Head Chief of Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the patient who made the most recent appointment?",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the patient who made the appointment with the most recent start date.",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the nurse has the most appointments?",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH T1.Name AS Name, count(T1.EmployeeID) AS count\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the nurse who has the largest number of appointments.",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH T1.Name AS Name, count(T1.EmployeeID) AS count\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms located on each block floor.",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockFloor AS BlockFloor, count(T1.BlockFloor) AS count\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms does each block floor have?",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockFloor AS BlockFloor, count(T1.BlockFloor) AS count\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms for different block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockCode AS BlockCode, count(T1.BlockCode) AS count\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms are located for each block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockCode AS BlockCode, count(T1.BlockCode) AS count\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of medications prescribed for each brand.",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH count(T1.Brand) AS count, T1.Name AS Name\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many medications are prescribed for each brand?",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH count(T1.Brand) AS count, T1.Name AS Name\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians whose position title contains the word 'senior'.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of the physicians who have 'senior' in their titles.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the physician who was trained in the most expensive procedure?",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which physician was trained in the procedure that costs the most.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of patients who are not using the medication of Procrastin-X.",
        "sql_query": "SELECT count(*) FROM patient WHERE SSN NOT IN ( SELECT T1.patient FROM Prescribes AS T1 JOIN Medication AS T2 ON T1.Medication  =  T2.Code WHERE T2.name  =  'Procrastin-X' )",
        "parsed_sql": {
            "select": {
                "value": {
                    "count": "*"
                }
            },
            "from": "patient",
            "where": {
                "nin": [
                    "SSN",
                    {
                        "select": {
                            "value": "T1.patient"
                        },
                        "from": [
                            {
                                "value": "Prescribes",
                                "name": "T1",
                                "is_table": true
                            },
                            {
                                "join": {
                                    "name": "T2",
                                    "value": "Medication",
                                    "is_table": true
                                },
                                "on": {
                                    "eq": [
                                        "T1.Medication",
                                        "T2.Code"
                                    ]
                                }
                            }
                        ],
                        "where": {
                            "eq": [
                                "T2.name",
                                {
                                    "literal": "Procrastin-X"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "sql_ans": [
            [
                3
            ]
        ],
        "cypher_query": "MATCH (p:Patient)\nWHERE NOT (p:Patient)-[]-(:Prescribes)-[]-(:Medication)\nRETURN count(*)",
        "cypher_ans": [
            [
                2
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many patients are not using Procrastin-X as medication?",
        "sql_query": "SELECT count(*) FROM patient WHERE SSN NOT IN ( SELECT T1.patient FROM Prescribes AS T1 JOIN Medication AS T2 ON T1.Medication  =  T2.Code WHERE T2.name  =  'Procrastin-X' )",
        "parsed_sql": {
            "select": {
                "value": {
                    "count": "*"
                }
            },
            "from": "patient",
            "where": {
                "nin": [
                    "SSN",
                    {
                        "select": {
                            "value": "T1.patient"
                        },
                        "from": [
                            {
                                "value": "Prescribes",
                                "name": "T1",
                                "is_table": true
                            },
                            {
                                "join": {
                                    "name": "T2",
                                    "value": "Medication",
                                    "is_table": true
                                },
                                "on": {
                                    "eq": [
                                        "T1.Medication",
                                        "T2.Code"
                                    ]
                                }
                            }
                        ],
                        "where": {
                            "eq": [
                                "T2.name",
                                {
                                    "literal": "Procrastin-X"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "sql_ans": [
            [
                3
            ]
        ],
        "cypher_query": "MATCH (p:Patient)\nWHERE NOT (p:Patient)-[]-(:Prescribes)-[]-(:Medication)\nRETURN count(*)",
        "cypher_ans": [
            [
                2
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "what is the name and position of the head whose department has least number of employees?",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH count(T2.departmentID) AS count, T2.Position AS Position, T2.Name AS Name\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Bob Kelso",
                "Head Chief of Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name and position of the head of the department with the least employees.",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH count(T2.departmentID) AS count, T2.Position AS Position, T2.Name AS Name\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Bob Kelso",
                "Head Chief of Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the patient who made the most recent appointment?",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the patient who made the appointment with the most recent start date.",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the nurse has the most appointments?",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH T1.Name AS Name, count(T1.EmployeeID) AS count\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the nurse who has the largest number of appointments.",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH T1.Name AS Name, count(T1.EmployeeID) AS count\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms located on each block floor.",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockFloor) AS count, T1.BlockFloor AS BlockFloor\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms does each block floor have?",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockFloor) AS count, T1.BlockFloor AS BlockFloor\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms for different block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockCode AS BlockCode, count(T1.BlockCode) AS count\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms are located for each block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockCode AS BlockCode, count(T1.BlockCode) AS count\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of medications prescribed for each brand.",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH count(T1.Brand) AS count, T1.Name AS Name\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many medications are prescribed for each brand?",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH count(T1.Brand) AS count, T1.Name AS Name\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians whose position title contains the word 'senior'.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of the physicians who have 'senior' in their titles.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the physician who was trained in the most expensive procedure?",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which physician was trained in the procedure that costs the most.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "what is the name and position of the head whose department has least number of employees?",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH T2.Position AS Position, T2.Name AS Name, count(T2.departmentID) AS count\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Bob Kelso",
                "Head Chief of Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name and position of the head of the department with the least employees.",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH T2.Position AS Position, T2.Name AS Name, count(T2.departmentID) AS count\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Bob Kelso",
                "Head Chief of Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the patient who made the most recent appointment?",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the patient who made the appointment with the most recent start date.",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the nurse has the most appointments?",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH T1.Name AS Name, count(T1.EmployeeID) AS count\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the nurse who has the largest number of appointments.",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH T1.Name AS Name, count(T1.EmployeeID) AS count\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms located on each block floor.",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockFloor AS BlockFloor, count(T1.BlockFloor) AS count\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms does each block floor have?",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockFloor AS BlockFloor, count(T1.BlockFloor) AS count\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms for different block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockCode) AS count, T1.BlockCode AS BlockCode\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms are located for each block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockCode) AS count, T1.BlockCode AS BlockCode\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of medications prescribed for each brand.",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH T1.Name AS Name, count(T1.Brand) AS count\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many medications are prescribed for each brand?",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH T1.Name AS Name, count(T1.Brand) AS count\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians whose position title contains the word 'senior'.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of the physicians who have 'senior' in their titles.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the physician who was trained in the most expensive procedure?",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which physician was trained in the procedure that costs the most.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "what is the name and position of the head whose department has least number of employees?",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH count(T2.departmentID) AS count, T2.Name AS Name, T2.Position AS Position\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Bob Kelso",
                "Head Chief of Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name and position of the head of the department with the least employees.",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH count(T2.departmentID) AS count, T2.Name AS Name, T2.Position AS Position\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Bob Kelso",
                "Head Chief of Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the patient who made the most recent appointment?",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the patient who made the appointment with the most recent start date.",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the nurse has the most appointments?",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH count(T1.EmployeeID) AS count, T1.Name AS Name\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the nurse who has the largest number of appointments.",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH count(T1.EmployeeID) AS count, T1.Name AS Name\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms located on each block floor.",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockFloor AS BlockFloor, count(T1.BlockFloor) AS count\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms does each block floor have?",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockFloor AS BlockFloor, count(T1.BlockFloor) AS count\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms for different block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockCode AS BlockCode, count(T1.BlockCode) AS count\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms are located for each block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockCode AS BlockCode, count(T1.BlockCode) AS count\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of medications prescribed for each brand.",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH count(T1.Brand) AS count, T1.Name AS Name\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many medications are prescribed for each brand?",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH count(T1.Brand) AS count, T1.Name AS Name\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians whose position title contains the word 'senior'.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of the physicians who have 'senior' in their titles.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the physician who was trained in the most expensive procedure?",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which physician was trained in the procedure that costs the most.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "what is the name and position of the head whose department has least number of employees?",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH T2.Name AS Name, T2.Position AS Position, count(T2.departmentID) AS count\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Bob Kelso",
                "Head Chief of Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name and position of the head of the department with the least employees.",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH T2.Name AS Name, T2.Position AS Position, count(T2.departmentID) AS count\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Bob Kelso",
                "Head Chief of Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the patient who made the most recent appointment?",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the patient who made the appointment with the most recent start date.",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the nurse has the most appointments?",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH count(T1.EmployeeID) AS count, T1.Name AS Name\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the nurse who has the largest number of appointments.",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH count(T1.EmployeeID) AS count, T1.Name AS Name\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms located on each block floor.",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockFloor) AS count, T1.BlockFloor AS BlockFloor\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms does each block floor have?",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockFloor) AS count, T1.BlockFloor AS BlockFloor\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms for different block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockCode AS BlockCode, count(T1.BlockCode) AS count\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms are located for each block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockCode AS BlockCode, count(T1.BlockCode) AS count\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of medications prescribed for each brand.",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH count(T1.Brand) AS count, T1.Name AS Name\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many medications are prescribed for each brand?",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH count(T1.Brand) AS count, T1.Name AS Name\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians whose position title contains the word 'senior'.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of the physicians who have 'senior' in their titles.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the physician who was trained in the most expensive procedure?",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which physician was trained in the procedure that costs the most.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "what is the name and position of the head whose department has least number of employees?",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH T2.Name AS Name, count(T2.departmentID) AS count, T2.Position AS Position\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Bob Kelso",
                "Head Chief of Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name and position of the head of the department with the least employees.",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH T2.Name AS Name, count(T2.departmentID) AS count, T2.Position AS Position\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Bob Kelso",
                "Head Chief of Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the patient who made the most recent appointment?",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the patient who made the appointment with the most recent start date.",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the nurse has the most appointments?",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH count(T1.EmployeeID) AS count, T1.Name AS Name\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the nurse who has the largest number of appointments.",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH count(T1.EmployeeID) AS count, T1.Name AS Name\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms located on each block floor.",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockFloor AS BlockFloor, count(T1.BlockFloor) AS count\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms does each block floor have?",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockFloor AS BlockFloor, count(T1.BlockFloor) AS count\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms for different block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockCode) AS count, T1.BlockCode AS BlockCode\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms are located for each block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockCode) AS count, T1.BlockCode AS BlockCode\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of medications prescribed for each brand.",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH count(T1.Brand) AS count, T1.Name AS Name\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many medications are prescribed for each brand?",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH count(T1.Brand) AS count, T1.Name AS Name\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians whose position title contains the word 'senior'.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of the physicians who have 'senior' in their titles.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the physician who was trained in the most expensive procedure?",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which physician was trained in the procedure that costs the most.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "what is the name and position of the head whose department has least number of employees?",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH count(T2.departmentID) AS count, T2.Name AS Name, T2.Position AS Position\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Bob Kelso",
                "Head Chief of Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name and position of the head of the department with the least employees.",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH count(T2.departmentID) AS count, T2.Name AS Name, T2.Position AS Position\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Bob Kelso",
                "Head Chief of Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the patient who made the most recent appointment?",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the patient who made the appointment with the most recent start date.",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the nurse has the most appointments?",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH T1.Name AS Name, count(T1.EmployeeID) AS count\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the nurse who has the largest number of appointments.",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH T1.Name AS Name, count(T1.EmployeeID) AS count\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms located on each block floor.",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockFloor) AS count, T1.BlockFloor AS BlockFloor\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms does each block floor have?",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockFloor) AS count, T1.BlockFloor AS BlockFloor\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms for different block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockCode) AS count, T1.BlockCode AS BlockCode\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms are located for each block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockCode) AS count, T1.BlockCode AS BlockCode\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of medications prescribed for each brand.",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH count(T1.Brand) AS count, T1.Name AS Name\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many medications are prescribed for each brand?",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH count(T1.Brand) AS count, T1.Name AS Name\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians whose position title contains the word 'senior'.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of the physicians who have 'senior' in their titles.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the physician who was trained in the most expensive procedure?",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which physician was trained in the procedure that costs the most.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "what is the name and position of the head whose department has least number of employees?",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH T2.Position AS Position, count(T2.departmentID) AS count, T2.Name AS Name\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Bob Kelso",
                "Head Chief of Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name and position of the head of the department with the least employees.",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH T2.Position AS Position, count(T2.departmentID) AS count, T2.Name AS Name\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Bob Kelso",
                "Head Chief of Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the patient who made the most recent appointment?",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the patient who made the appointment with the most recent start date.",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the nurse has the most appointments?",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH T1.Name AS Name, count(T1.EmployeeID) AS count\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the nurse who has the largest number of appointments.",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH T1.Name AS Name, count(T1.EmployeeID) AS count\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms located on each block floor.",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockFloor AS BlockFloor, count(T1.BlockFloor) AS count\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms does each block floor have?",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockFloor AS BlockFloor, count(T1.BlockFloor) AS count\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms for different block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockCode) AS count, T1.BlockCode AS BlockCode\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms are located for each block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockCode) AS count, T1.BlockCode AS BlockCode\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of medications prescribed for each brand.",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH count(T1.Brand) AS count, T1.Name AS Name\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many medications are prescribed for each brand?",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH count(T1.Brand) AS count, T1.Name AS Name\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians whose position title contains the word 'senior'.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of the physicians who have 'senior' in their titles.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the physician who was trained in the most expensive procedure?",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which physician was trained in the procedure that costs the most.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "what is the name and position of the head whose department has least number of employees?",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH T2.Position AS Position, count(T2.departmentID) AS count, T2.Name AS Name\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Bob Kelso",
                "Head Chief of Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name and position of the head of the department with the least employees.",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH T2.Position AS Position, count(T2.departmentID) AS count, T2.Name AS Name\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Bob Kelso",
                "Head Chief of Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the patient who made the most recent appointment?",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the patient who made the appointment with the most recent start date.",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the nurse has the most appointments?",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH T1.Name AS Name, count(T1.EmployeeID) AS count\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the nurse who has the largest number of appointments.",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH T1.Name AS Name, count(T1.EmployeeID) AS count\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms located on each block floor.",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockFloor) AS count, T1.BlockFloor AS BlockFloor\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms does each block floor have?",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockFloor) AS count, T1.BlockFloor AS BlockFloor\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms for different block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockCode) AS count, T1.BlockCode AS BlockCode\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms are located for each block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockCode) AS count, T1.BlockCode AS BlockCode\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of medications prescribed for each brand.",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH count(T1.Brand) AS count, T1.Name AS Name\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many medications are prescribed for each brand?",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH count(T1.Brand) AS count, T1.Name AS Name\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians whose position title contains the word 'senior'.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of the physicians who have 'senior' in their titles.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the physician who was trained in the most expensive procedure?",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which physician was trained in the procedure that costs the most.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "what is the name and position of the head whose department has least number of employees?",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH T2.Name AS Name, count(T2.departmentID) AS count, T2.Position AS Position\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Bob Kelso",
                "Head Chief of Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name and position of the head of the department with the least employees.",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH T2.Name AS Name, count(T2.departmentID) AS count, T2.Position AS Position\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Bob Kelso",
                "Head Chief of Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the patient who made the most recent appointment?",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the patient who made the appointment with the most recent start date.",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the nurse has the most appointments?",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH T1.Name AS Name, count(T1.EmployeeID) AS count\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the nurse who has the largest number of appointments.",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH T1.Name AS Name, count(T1.EmployeeID) AS count\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms located on each block floor.",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockFloor AS BlockFloor, count(T1.BlockFloor) AS count\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms does each block floor have?",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockFloor AS BlockFloor, count(T1.BlockFloor) AS count\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms for different block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockCode) AS count, T1.BlockCode AS BlockCode\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms are located for each block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockCode) AS count, T1.BlockCode AS BlockCode\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of medications prescribed for each brand.",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH T1.Name AS Name, count(T1.Brand) AS count\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many medications are prescribed for each brand?",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH T1.Name AS Name, count(T1.Brand) AS count\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians whose position title contains the word 'senior'.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of the physicians who have 'senior' in their titles.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the physician who was trained in the most expensive procedure?",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which physician was trained in the procedure that costs the most.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "what is the name and position of the head whose department has least number of employees?",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH count(T2.departmentID) AS count, T2.Position AS Position, T2.Name AS Name\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Bob Kelso",
                "Head Chief of Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name and position of the head of the department with the least employees.",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH count(T2.departmentID) AS count, T2.Position AS Position, T2.Name AS Name\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Bob Kelso",
                "Head Chief of Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the patient who made the most recent appointment?",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the patient who made the appointment with the most recent start date.",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the nurse has the most appointments?",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH T1.Name AS Name, count(T1.EmployeeID) AS count\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the nurse who has the largest number of appointments.",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH T1.Name AS Name, count(T1.EmployeeID) AS count\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms located on each block floor.",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockFloor AS BlockFloor, count(T1.BlockFloor) AS count\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms does each block floor have?",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockFloor AS BlockFloor, count(T1.BlockFloor) AS count\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms for different block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockCode) AS count, T1.BlockCode AS BlockCode\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms are located for each block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockCode) AS count, T1.BlockCode AS BlockCode\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of medications prescribed for each brand.",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH T1.Name AS Name, count(T1.Brand) AS count\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many medications are prescribed for each brand?",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH T1.Name AS Name, count(T1.Brand) AS count\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians whose position title contains the word 'senior'.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of the physicians who have 'senior' in their titles.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the physician who was trained in the most expensive procedure?",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which physician was trained in the procedure that costs the most.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "what is the name and position of the head whose department has least number of employees?",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH T2.Position AS Position, count(T2.departmentID) AS count, T2.Name AS Name\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Bob Kelso",
                "Head Chief of Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name and position of the head of the department with the least employees.",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH T2.Position AS Position, count(T2.departmentID) AS count, T2.Name AS Name\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Bob Kelso",
                "Head Chief of Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the patient who made the most recent appointment?",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the patient who made the appointment with the most recent start date.",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the nurse has the most appointments?",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH count(T1.EmployeeID) AS count, T1.Name AS Name\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the nurse who has the largest number of appointments.",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH count(T1.EmployeeID) AS count, T1.Name AS Name\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms located on each block floor.",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockFloor) AS count, T1.BlockFloor AS BlockFloor\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms does each block floor have?",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockFloor) AS count, T1.BlockFloor AS BlockFloor\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms for different block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockCode AS BlockCode, count(T1.BlockCode) AS count\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms are located for each block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockCode AS BlockCode, count(T1.BlockCode) AS count\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of medications prescribed for each brand.",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH count(T1.Brand) AS count, T1.Name AS Name\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many medications are prescribed for each brand?",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH count(T1.Brand) AS count, T1.Name AS Name\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians whose position title contains the word 'senior'.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of the physicians who have 'senior' in their titles.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the physician who was trained in the most expensive procedure?",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which physician was trained in the procedure that costs the most.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "what is the name and position of the head whose department has least number of employees?",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH T2.Name AS Name, T2.Position AS Position, count(T2.departmentID) AS count\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Bob Kelso",
                "Head Chief of Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name and position of the head of the department with the least employees.",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH T2.Name AS Name, T2.Position AS Position, count(T2.departmentID) AS count\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Bob Kelso",
                "Head Chief of Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the patient who made the most recent appointment?",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the patient who made the appointment with the most recent start date.",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the nurse has the most appointments?",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH T1.Name AS Name, count(T1.EmployeeID) AS count\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the nurse who has the largest number of appointments.",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH T1.Name AS Name, count(T1.EmployeeID) AS count\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms located on each block floor.",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockFloor) AS count, T1.BlockFloor AS BlockFloor\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms does each block floor have?",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockFloor) AS count, T1.BlockFloor AS BlockFloor\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms for different block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockCode) AS count, T1.BlockCode AS BlockCode\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms are located for each block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockCode) AS count, T1.BlockCode AS BlockCode\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of medications prescribed for each brand.",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH count(T1.Brand) AS count, T1.Name AS Name\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many medications are prescribed for each brand?",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH count(T1.Brand) AS count, T1.Name AS Name\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians whose position title contains the word 'senior'.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of the physicians who have 'senior' in their titles.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the physician who was trained in the most expensive procedure?",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which physician was trained in the procedure that costs the most.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "what is the name and position of the head whose department has least number of employees?",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH count(T2.departmentID) AS count, T2.Position AS Position, T2.Name AS Name\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Bob Kelso",
                "Head Chief of Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name and position of the head of the department with the least employees.",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH count(T2.departmentID) AS count, T2.Position AS Position, T2.Name AS Name\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Bob Kelso",
                "Head Chief of Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the patient who made the most recent appointment?",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the patient who made the appointment with the most recent start date.",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the nurse has the most appointments?",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH T1.Name AS Name, count(T1.EmployeeID) AS count\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the nurse who has the largest number of appointments.",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH T1.Name AS Name, count(T1.EmployeeID) AS count\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms located on each block floor.",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockFloor) AS count, T1.BlockFloor AS BlockFloor\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms does each block floor have?",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockFloor) AS count, T1.BlockFloor AS BlockFloor\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms for different block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockCode AS BlockCode, count(T1.BlockCode) AS count\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms are located for each block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockCode AS BlockCode, count(T1.BlockCode) AS count\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of medications prescribed for each brand.",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH count(T1.Brand) AS count, T1.Name AS Name\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many medications are prescribed for each brand?",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH count(T1.Brand) AS count, T1.Name AS Name\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians whose position title contains the word 'senior'.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of the physicians who have 'senior' in their titles.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the physician who was trained in the most expensive procedure?",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which physician was trained in the procedure that costs the most.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "what is the name and position of the head whose department has least number of employees?",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH count(T2.departmentID) AS count, T2.Name AS Name, T2.Position AS Position\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Bob Kelso",
                "Head Chief of Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name and position of the head of the department with the least employees.",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH count(T2.departmentID) AS count, T2.Name AS Name, T2.Position AS Position\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Bob Kelso",
                "Head Chief of Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the patient who made the most recent appointment?",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the patient who made the appointment with the most recent start date.",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the nurse has the most appointments?",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH T1.Name AS Name, count(T1.EmployeeID) AS count\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the nurse who has the largest number of appointments.",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH T1.Name AS Name, count(T1.EmployeeID) AS count\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms located on each block floor.",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockFloor) AS count, T1.BlockFloor AS BlockFloor\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms does each block floor have?",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockFloor) AS count, T1.BlockFloor AS BlockFloor\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms for different block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockCode) AS count, T1.BlockCode AS BlockCode\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms are located for each block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockCode) AS count, T1.BlockCode AS BlockCode\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of medications prescribed for each brand.",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH T1.Name AS Name, count(T1.Brand) AS count\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many medications are prescribed for each brand?",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH T1.Name AS Name, count(T1.Brand) AS count\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians whose position title contains the word 'senior'.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of the physicians who have 'senior' in their titles.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the physician who was trained in the most expensive procedure?",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which physician was trained in the procedure that costs the most.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "what is the name and position of the head whose department has least number of employees?",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH count(T2.departmentID) AS count, T2.Name AS Name, T2.Position AS Position\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Bob Kelso",
                "Head Chief of Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name and position of the head of the department with the least employees.",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH count(T2.departmentID) AS count, T2.Name AS Name, T2.Position AS Position\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Bob Kelso",
                "Head Chief of Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the patient who made the most recent appointment?",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the patient who made the appointment with the most recent start date.",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the nurse has the most appointments?",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH T1.Name AS Name, count(T1.EmployeeID) AS count\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the nurse who has the largest number of appointments.",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH T1.Name AS Name, count(T1.EmployeeID) AS count\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms located on each block floor.",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockFloor AS BlockFloor, count(T1.BlockFloor) AS count\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms does each block floor have?",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockFloor AS BlockFloor, count(T1.BlockFloor) AS count\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms for different block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockCode AS BlockCode, count(T1.BlockCode) AS count\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms are located for each block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockCode AS BlockCode, count(T1.BlockCode) AS count\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of medications prescribed for each brand.",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH T1.Name AS Name, count(T1.Brand) AS count\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many medications are prescribed for each brand?",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH T1.Name AS Name, count(T1.Brand) AS count\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians whose position title contains the word 'senior'.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of the physicians who have 'senior' in their titles.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the physician who was trained in the most expensive procedure?",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which physician was trained in the procedure that costs the most.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "what is the name and position of the head whose department has least number of employees?",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH count(T2.departmentID) AS count, T2.Position AS Position, T2.Name AS Name\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Bob Kelso",
                "Head Chief of Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name and position of the head of the department with the least employees.",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH count(T2.departmentID) AS count, T2.Position AS Position, T2.Name AS Name\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Bob Kelso",
                "Head Chief of Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the patient who made the most recent appointment?",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the patient who made the appointment with the most recent start date.",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the nurse has the most appointments?",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH T1.Name AS Name, count(T1.EmployeeID) AS count\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the nurse who has the largest number of appointments.",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH T1.Name AS Name, count(T1.EmployeeID) AS count\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms located on each block floor.",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockFloor AS BlockFloor, count(T1.BlockFloor) AS count\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms does each block floor have?",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockFloor AS BlockFloor, count(T1.BlockFloor) AS count\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms for different block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockCode AS BlockCode, count(T1.BlockCode) AS count\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms are located for each block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockCode AS BlockCode, count(T1.BlockCode) AS count\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of medications prescribed for each brand.",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH T1.Name AS Name, count(T1.Brand) AS count\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many medications are prescribed for each brand?",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH T1.Name AS Name, count(T1.Brand) AS count\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians whose position title contains the word 'senior'.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of the physicians who have 'senior' in their titles.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the physician who was trained in the most expensive procedure?",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which physician was trained in the procedure that costs the most.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "what is the name and position of the head whose department has least number of employees?",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH count(T2.departmentID) AS count, T2.Position AS Position, T2.Name AS Name\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Bob Kelso",
                "Head Chief of Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name and position of the head of the department with the least employees.",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH count(T2.departmentID) AS count, T2.Position AS Position, T2.Name AS Name\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Bob Kelso",
                "Head Chief of Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the patient who made the most recent appointment?",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the patient who made the appointment with the most recent start date.",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the nurse has the most appointments?",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH T1.Name AS Name, count(T1.EmployeeID) AS count\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the nurse who has the largest number of appointments.",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH T1.Name AS Name, count(T1.EmployeeID) AS count\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms located on each block floor.",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockFloor AS BlockFloor, count(T1.BlockFloor) AS count\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms does each block floor have?",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockFloor AS BlockFloor, count(T1.BlockFloor) AS count\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms for different block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockCode) AS count, T1.BlockCode AS BlockCode\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms are located for each block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockCode) AS count, T1.BlockCode AS BlockCode\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of medications prescribed for each brand.",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH T1.Name AS Name, count(T1.Brand) AS count\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many medications are prescribed for each brand?",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH T1.Name AS Name, count(T1.Brand) AS count\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians whose position title contains the word 'senior'.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of the physicians who have 'senior' in their titles.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the physician who was trained in the most expensive procedure?",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which physician was trained in the procedure that costs the most.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "what is the name and position of the head whose department has least number of employees?",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH T2.Name AS Name, count(T2.departmentID) AS count, T2.Position AS Position\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Bob Kelso",
                "Head Chief of Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name and position of the head of the department with the least employees.",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH T2.Name AS Name, count(T2.departmentID) AS count, T2.Position AS Position\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Bob Kelso",
                "Head Chief of Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the patient who made the most recent appointment?",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the patient who made the appointment with the most recent start date.",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the nurse has the most appointments?",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH count(T1.EmployeeID) AS count, T1.Name AS Name\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the nurse who has the largest number of appointments.",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH count(T1.EmployeeID) AS count, T1.Name AS Name\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms located on each block floor.",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockFloor AS BlockFloor, count(T1.BlockFloor) AS count\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms does each block floor have?",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockFloor AS BlockFloor, count(T1.BlockFloor) AS count\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms for different block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockCode) AS count, T1.BlockCode AS BlockCode\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms are located for each block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockCode) AS count, T1.BlockCode AS BlockCode\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of medications prescribed for each brand.",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH T1.Name AS Name, count(T1.Brand) AS count\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many medications are prescribed for each brand?",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH T1.Name AS Name, count(T1.Brand) AS count\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians whose position title contains the word 'senior'.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of the physicians who have 'senior' in their titles.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the physician who was trained in the most expensive procedure?",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which physician was trained in the procedure that costs the most.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "what is the name and position of the head whose department has least number of employees?",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH T2.Name AS Name, T2.Position AS Position, count(T2.departmentID) AS count\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Bob Kelso",
                "Head Chief of Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name and position of the head of the department with the least employees.",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH T2.Name AS Name, T2.Position AS Position, count(T2.departmentID) AS count\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Bob Kelso",
                "Head Chief of Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the patient who made the most recent appointment?",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the patient who made the appointment with the most recent start date.",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the nurse has the most appointments?",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH T1.Name AS Name, count(T1.EmployeeID) AS count\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the nurse who has the largest number of appointments.",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH T1.Name AS Name, count(T1.EmployeeID) AS count\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms located on each block floor.",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockFloor AS BlockFloor, count(T1.BlockFloor) AS count\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms does each block floor have?",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockFloor AS BlockFloor, count(T1.BlockFloor) AS count\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms for different block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockCode AS BlockCode, count(T1.BlockCode) AS count\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms are located for each block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockCode AS BlockCode, count(T1.BlockCode) AS count\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of medications prescribed for each brand.",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH T1.Name AS Name, count(T1.Brand) AS count\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many medications are prescribed for each brand?",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH T1.Name AS Name, count(T1.Brand) AS count\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians whose position title contains the word 'senior'.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of the physicians who have 'senior' in their titles.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the physician who was trained in the most expensive procedure?",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which physician was trained in the procedure that costs the most.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "what is the name and position of the head whose department has least number of employees?",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH count(T2.departmentID) AS count, T2.Position AS Position, T2.Name AS Name\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Bob Kelso",
                "Head Chief of Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name and position of the head of the department with the least employees.",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH count(T2.departmentID) AS count, T2.Position AS Position, T2.Name AS Name\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Bob Kelso",
                "Head Chief of Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the patient who made the most recent appointment?",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the patient who made the appointment with the most recent start date.",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the nurse has the most appointments?",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH count(T1.EmployeeID) AS count, T1.Name AS Name\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the nurse who has the largest number of appointments.",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH count(T1.EmployeeID) AS count, T1.Name AS Name\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms located on each block floor.",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockFloor AS BlockFloor, count(T1.BlockFloor) AS count\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms does each block floor have?",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockFloor AS BlockFloor, count(T1.BlockFloor) AS count\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms for different block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockCode AS BlockCode, count(T1.BlockCode) AS count\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms are located for each block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockCode AS BlockCode, count(T1.BlockCode) AS count\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of medications prescribed for each brand.",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH T1.Name AS Name, count(T1.Brand) AS count\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many medications are prescribed for each brand?",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH T1.Name AS Name, count(T1.Brand) AS count\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians whose position title contains the word 'senior'.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of the physicians who have 'senior' in their titles.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the physician who was trained in the most expensive procedure?",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which physician was trained in the procedure that costs the most.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "what is the name and position of the head whose department has least number of employees?",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH T2.Position AS Position, T2.Name AS Name, count(T2.departmentID) AS count\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Bob Kelso",
                "Head Chief of Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name and position of the head of the department with the least employees.",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH T2.Position AS Position, T2.Name AS Name, count(T2.departmentID) AS count\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Bob Kelso",
                "Head Chief of Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the patient who made the most recent appointment?",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the patient who made the appointment with the most recent start date.",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the nurse has the most appointments?",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH count(T1.EmployeeID) AS count, T1.Name AS Name\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the nurse who has the largest number of appointments.",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH count(T1.EmployeeID) AS count, T1.Name AS Name\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms located on each block floor.",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockFloor AS BlockFloor, count(T1.BlockFloor) AS count\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms does each block floor have?",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockFloor AS BlockFloor, count(T1.BlockFloor) AS count\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms for different block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockCode AS BlockCode, count(T1.BlockCode) AS count\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms are located for each block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockCode AS BlockCode, count(T1.BlockCode) AS count\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of medications prescribed for each brand.",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH count(T1.Brand) AS count, T1.Name AS Name\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many medications are prescribed for each brand?",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH count(T1.Brand) AS count, T1.Name AS Name\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians whose position title contains the word 'senior'.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of the physicians who have 'senior' in their titles.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the physician who was trained in the most expensive procedure?",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which physician was trained in the procedure that costs the most.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "what is the name and position of the head whose department has least number of employees?",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH T2.Position AS Position, count(T2.departmentID) AS count, T2.Name AS Name\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Bob Kelso",
                "Head Chief of Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name and position of the head of the department with the least employees.",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH T2.Position AS Position, count(T2.departmentID) AS count, T2.Name AS Name\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Bob Kelso",
                "Head Chief of Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the patient who made the most recent appointment?",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the patient who made the appointment with the most recent start date.",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the nurse has the most appointments?",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH count(T1.EmployeeID) AS count, T1.Name AS Name\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the nurse who has the largest number of appointments.",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH count(T1.EmployeeID) AS count, T1.Name AS Name\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms located on each block floor.",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockFloor AS BlockFloor, count(T1.BlockFloor) AS count\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms does each block floor have?",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockFloor AS BlockFloor, count(T1.BlockFloor) AS count\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms for different block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockCode AS BlockCode, count(T1.BlockCode) AS count\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms are located for each block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockCode AS BlockCode, count(T1.BlockCode) AS count\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of medications prescribed for each brand.",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH count(T1.Brand) AS count, T1.Name AS Name\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many medications are prescribed for each brand?",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH count(T1.Brand) AS count, T1.Name AS Name\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians whose position title contains the word 'senior'.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of the physicians who have 'senior' in their titles.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the physician who was trained in the most expensive procedure?",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which physician was trained in the procedure that costs the most.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "what is the name and position of the head whose department has least number of employees?",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH count(T2.departmentID) AS count, T2.Position AS Position, T2.Name AS Name\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Bob Kelso",
                "Head Chief of Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name and position of the head of the department with the least employees.",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH count(T2.departmentID) AS count, T2.Position AS Position, T2.Name AS Name\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Bob Kelso",
                "Head Chief of Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the patient who made the most recent appointment?",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the patient who made the appointment with the most recent start date.",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the nurse has the most appointments?",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH T1.Name AS Name, count(T1.EmployeeID) AS count\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the nurse who has the largest number of appointments.",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH T1.Name AS Name, count(T1.EmployeeID) AS count\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms located on each block floor.",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockFloor AS BlockFloor, count(T1.BlockFloor) AS count\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms does each block floor have?",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockFloor AS BlockFloor, count(T1.BlockFloor) AS count\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms for different block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockCode AS BlockCode, count(T1.BlockCode) AS count\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms are located for each block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockCode AS BlockCode, count(T1.BlockCode) AS count\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of medications prescribed for each brand.",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH count(T1.Brand) AS count, T1.Name AS Name\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many medications are prescribed for each brand?",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH count(T1.Brand) AS count, T1.Name AS Name\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians whose position title contains the word 'senior'.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of the physicians who have 'senior' in their titles.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the physician who was trained in the most expensive procedure?",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which physician was trained in the procedure that costs the most.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "what is the name and position of the head whose department has least number of employees?",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH count(T2.departmentID) AS count, T2.Position AS Position, T2.Name AS Name\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Bob Kelso",
                "Head Chief of Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name and position of the head of the department with the least employees.",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH count(T2.departmentID) AS count, T2.Position AS Position, T2.Name AS Name\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Bob Kelso",
                "Head Chief of Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the patient who made the most recent appointment?",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the patient who made the appointment with the most recent start date.",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the nurse has the most appointments?",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH count(T1.EmployeeID) AS count, T1.Name AS Name\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the nurse who has the largest number of appointments.",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH count(T1.EmployeeID) AS count, T1.Name AS Name\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms located on each block floor.",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockFloor) AS count, T1.BlockFloor AS BlockFloor\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms does each block floor have?",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockFloor) AS count, T1.BlockFloor AS BlockFloor\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms for different block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockCode) AS count, T1.BlockCode AS BlockCode\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms are located for each block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockCode) AS count, T1.BlockCode AS BlockCode\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of medications prescribed for each brand.",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH count(T1.Brand) AS count, T1.Name AS Name\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many medications are prescribed for each brand?",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH count(T1.Brand) AS count, T1.Name AS Name\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians whose position title contains the word 'senior'.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of the physicians who have 'senior' in their titles.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the physician who was trained in the most expensive procedure?",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which physician was trained in the procedure that costs the most.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "what is the name and position of the head whose department has least number of employees?",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH T2.Name AS Name, T2.Position AS Position, count(T2.departmentID) AS count\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Bob Kelso",
                "Head Chief of Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name and position of the head of the department with the least employees.",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH T2.Name AS Name, T2.Position AS Position, count(T2.departmentID) AS count\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Bob Kelso",
                "Head Chief of Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the patient who made the most recent appointment?",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the patient who made the appointment with the most recent start date.",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the nurse has the most appointments?",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH count(T1.EmployeeID) AS count, T1.Name AS Name\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the nurse who has the largest number of appointments.",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH count(T1.EmployeeID) AS count, T1.Name AS Name\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms located on each block floor.",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockFloor) AS count, T1.BlockFloor AS BlockFloor\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms does each block floor have?",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockFloor) AS count, T1.BlockFloor AS BlockFloor\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms for different block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockCode) AS count, T1.BlockCode AS BlockCode\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms are located for each block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockCode) AS count, T1.BlockCode AS BlockCode\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of medications prescribed for each brand.",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH T1.Name AS Name, count(T1.Brand) AS count\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many medications are prescribed for each brand?",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH T1.Name AS Name, count(T1.Brand) AS count\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians whose position title contains the word 'senior'.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of the physicians who have 'senior' in their titles.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the physician who was trained in the most expensive procedure?",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which physician was trained in the procedure that costs the most.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "what is the name and position of the head whose department has least number of employees?",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH T2.Name AS Name, count(T2.departmentID) AS count, T2.Position AS Position\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Bob Kelso",
                "Head Chief of Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name and position of the head of the department with the least employees.",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH T2.Name AS Name, count(T2.departmentID) AS count, T2.Position AS Position\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Bob Kelso",
                "Head Chief of Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the patient who made the most recent appointment?",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the patient who made the appointment with the most recent start date.",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the nurse has the most appointments?",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH count(T1.EmployeeID) AS count, T1.Name AS Name\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the nurse who has the largest number of appointments.",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH count(T1.EmployeeID) AS count, T1.Name AS Name\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms located on each block floor.",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockFloor AS BlockFloor, count(T1.BlockFloor) AS count\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms does each block floor have?",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockFloor AS BlockFloor, count(T1.BlockFloor) AS count\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms for different block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockCode AS BlockCode, count(T1.BlockCode) AS count\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms are located for each block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockCode AS BlockCode, count(T1.BlockCode) AS count\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of medications prescribed for each brand.",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH T1.Name AS Name, count(T1.Brand) AS count\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many medications are prescribed for each brand?",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH T1.Name AS Name, count(T1.Brand) AS count\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians whose position title contains the word 'senior'.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of the physicians who have 'senior' in their titles.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the physician who was trained in the most expensive procedure?",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which physician was trained in the procedure that costs the most.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "what is the name and position of the head whose department has least number of employees?",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH T2.Position AS Position, count(T2.departmentID) AS count, T2.Name AS Name\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Bob Kelso",
                "Head Chief of Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name and position of the head of the department with the least employees.",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH T2.Position AS Position, count(T2.departmentID) AS count, T2.Name AS Name\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Bob Kelso",
                "Head Chief of Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the patient who made the most recent appointment?",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the patient who made the appointment with the most recent start date.",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the nurse has the most appointments?",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH count(T1.EmployeeID) AS count, T1.Name AS Name\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the nurse who has the largest number of appointments.",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH count(T1.EmployeeID) AS count, T1.Name AS Name\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms located on each block floor.",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockFloor) AS count, T1.BlockFloor AS BlockFloor\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms does each block floor have?",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockFloor) AS count, T1.BlockFloor AS BlockFloor\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms for different block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockCode AS BlockCode, count(T1.BlockCode) AS count\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms are located for each block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockCode AS BlockCode, count(T1.BlockCode) AS count\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of medications prescribed for each brand.",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH T1.Name AS Name, count(T1.Brand) AS count\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many medications are prescribed for each brand?",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH T1.Name AS Name, count(T1.Brand) AS count\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians whose position title contains the word 'senior'.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of the physicians who have 'senior' in their titles.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the physician who was trained in the most expensive procedure?",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which physician was trained in the procedure that costs the most.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "what is the name and position of the head whose department has least number of employees?",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH T2.Name AS Name, count(T2.departmentID) AS count, T2.Position AS Position\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Bob Kelso",
                "Head Chief of Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name and position of the head of the department with the least employees.",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH T2.Name AS Name, count(T2.departmentID) AS count, T2.Position AS Position\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Bob Kelso",
                "Head Chief of Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the patient who made the most recent appointment?",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the patient who made the appointment with the most recent start date.",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the nurse has the most appointments?",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH T1.Name AS Name, count(T1.EmployeeID) AS count\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the nurse who has the largest number of appointments.",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH T1.Name AS Name, count(T1.EmployeeID) AS count\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms located on each block floor.",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockFloor) AS count, T1.BlockFloor AS BlockFloor\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms does each block floor have?",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockFloor) AS count, T1.BlockFloor AS BlockFloor\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms for different block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockCode AS BlockCode, count(T1.BlockCode) AS count\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms are located for each block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockCode AS BlockCode, count(T1.BlockCode) AS count\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of medications prescribed for each brand.",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH count(T1.Brand) AS count, T1.Name AS Name\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many medications are prescribed for each brand?",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH count(T1.Brand) AS count, T1.Name AS Name\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians whose position title contains the word 'senior'.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of the physicians who have 'senior' in their titles.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the physician who was trained in the most expensive procedure?",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which physician was trained in the procedure that costs the most.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "what is the name and position of the head whose department has least number of employees?",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH T2.Position AS Position, T2.Name AS Name, count(T2.departmentID) AS count\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Bob Kelso",
                "Head Chief of Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name and position of the head of the department with the least employees.",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH T2.Position AS Position, T2.Name AS Name, count(T2.departmentID) AS count\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Bob Kelso",
                "Head Chief of Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the patient who made the most recent appointment?",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the patient who made the appointment with the most recent start date.",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the nurse has the most appointments?",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH count(T1.EmployeeID) AS count, T1.Name AS Name\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the nurse who has the largest number of appointments.",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH count(T1.EmployeeID) AS count, T1.Name AS Name\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms located on each block floor.",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockFloor AS BlockFloor, count(T1.BlockFloor) AS count\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms does each block floor have?",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockFloor AS BlockFloor, count(T1.BlockFloor) AS count\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms for different block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockCode AS BlockCode, count(T1.BlockCode) AS count\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms are located for each block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockCode AS BlockCode, count(T1.BlockCode) AS count\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of medications prescribed for each brand.",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH count(T1.Brand) AS count, T1.Name AS Name\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many medications are prescribed for each brand?",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH count(T1.Brand) AS count, T1.Name AS Name\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians whose position title contains the word 'senior'.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of the physicians who have 'senior' in their titles.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the physician who was trained in the most expensive procedure?",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which physician was trained in the procedure that costs the most.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "what is the name and position of the head whose department has least number of employees?",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH count(T2.departmentID) AS count, T2.Name AS Name, T2.Position AS Position\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Bob Kelso",
                "Head Chief of Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name and position of the head of the department with the least employees.",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH count(T2.departmentID) AS count, T2.Name AS Name, T2.Position AS Position\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Bob Kelso",
                "Head Chief of Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the patient who made the most recent appointment?",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the patient who made the appointment with the most recent start date.",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the nurse has the most appointments?",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH count(T1.EmployeeID) AS count, T1.Name AS Name\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the nurse who has the largest number of appointments.",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH count(T1.EmployeeID) AS count, T1.Name AS Name\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms located on each block floor.",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockFloor AS BlockFloor, count(T1.BlockFloor) AS count\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms does each block floor have?",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockFloor AS BlockFloor, count(T1.BlockFloor) AS count\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms for different block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockCode AS BlockCode, count(T1.BlockCode) AS count\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms are located for each block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockCode AS BlockCode, count(T1.BlockCode) AS count\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of medications prescribed for each brand.",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH count(T1.Brand) AS count, T1.Name AS Name\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many medications are prescribed for each brand?",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH count(T1.Brand) AS count, T1.Name AS Name\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the physician who was trained in the most expensive procedure?",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which physician was trained in the procedure that costs the most.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "what is the name and position of the head whose department has least number of employees?",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH T2.Name AS Name, count(T2.departmentID) AS count, T2.Position AS Position\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Bob Kelso",
                "Head Chief of Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name and position of the head of the department with the least employees.",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH T2.Name AS Name, count(T2.departmentID) AS count, T2.Position AS Position\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Bob Kelso",
                "Head Chief of Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the patient who made the most recent appointment?",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the patient who made the appointment with the most recent start date.",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the nurse has the most appointments?",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH T1.Name AS Name, count(T1.EmployeeID) AS count\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the nurse who has the largest number of appointments.",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH T1.Name AS Name, count(T1.EmployeeID) AS count\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms located on each block floor.",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockFloor) AS count, T1.BlockFloor AS BlockFloor\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms does each block floor have?",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockFloor) AS count, T1.BlockFloor AS BlockFloor\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms for different block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockCode AS BlockCode, count(T1.BlockCode) AS count\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms are located for each block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockCode AS BlockCode, count(T1.BlockCode) AS count\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of medications prescribed for each brand.",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH T1.Name AS Name, count(T1.Brand) AS count\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many medications are prescribed for each brand?",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH T1.Name AS Name, count(T1.Brand) AS count\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the physician who was trained in the most expensive procedure?",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which physician was trained in the procedure that costs the most.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "what is the name and position of the head whose department has least number of employees?",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH count(T2.departmentID) AS count, T2.Name AS Name, T2.Position AS Position\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Bob Kelso",
                "Head Chief of Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name and position of the head of the department with the least employees.",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH count(T2.departmentID) AS count, T2.Name AS Name, T2.Position AS Position\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Bob Kelso",
                "Head Chief of Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the patient who made the most recent appointment?",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the patient who made the appointment with the most recent start date.",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the nurse has the most appointments?",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH count(T1.EmployeeID) AS count, T1.Name AS Name\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the nurse who has the largest number of appointments.",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH count(T1.EmployeeID) AS count, T1.Name AS Name\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms located on each block floor.",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockFloor) AS count, T1.BlockFloor AS BlockFloor\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms does each block floor have?",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockFloor) AS count, T1.BlockFloor AS BlockFloor\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms for different block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockCode) AS count, T1.BlockCode AS BlockCode\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms are located for each block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockCode) AS count, T1.BlockCode AS BlockCode\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of medications prescribed for each brand.",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH count(T1.Brand) AS count, T1.Name AS Name\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many medications are prescribed for each brand?",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH count(T1.Brand) AS count, T1.Name AS Name\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the physician who was trained in the most expensive procedure?",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which physician was trained in the procedure that costs the most.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "what is the name and position of the head whose department has least number of employees?",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH count(T2.departmentID) AS count, T2.Name AS Name, T2.Position AS Position\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Bob Kelso",
                "Head Chief of Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name and position of the head of the department with the least employees.",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH count(T2.departmentID) AS count, T2.Name AS Name, T2.Position AS Position\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Bob Kelso",
                "Head Chief of Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the patient who made the most recent appointment?",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the patient who made the appointment with the most recent start date.",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the nurse has the most appointments?",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH T1.Name AS Name, count(T1.EmployeeID) AS count\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the nurse who has the largest number of appointments.",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH T1.Name AS Name, count(T1.EmployeeID) AS count\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms located on each block floor.",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockFloor) AS count, T1.BlockFloor AS BlockFloor\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms does each block floor have?",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockFloor) AS count, T1.BlockFloor AS BlockFloor\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms for different block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockCode) AS count, T1.BlockCode AS BlockCode\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms are located for each block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockCode) AS count, T1.BlockCode AS BlockCode\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of medications prescribed for each brand.",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH count(T1.Brand) AS count, T1.Name AS Name\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many medications are prescribed for each brand?",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH count(T1.Brand) AS count, T1.Name AS Name\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians whose position title contains the word 'senior'.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of the physicians who have 'senior' in their titles.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the physician who was trained in the most expensive procedure?",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which physician was trained in the procedure that costs the most.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of patients who are not using the medication of Procrastin-X.",
        "sql_query": "SELECT count(*) FROM patient WHERE SSN NOT IN ( SELECT T1.patient FROM Prescribes AS T1 JOIN Medication AS T2 ON T1.Medication  =  T2.Code WHERE T2.name  =  'Procrastin-X' )",
        "parsed_sql": {
            "select": {
                "value": {
                    "count": "*"
                }
            },
            "from": "patient",
            "where": {
                "nin": [
                    "SSN",
                    {
                        "select": {
                            "value": "T1.patient"
                        },
                        "from": [
                            {
                                "value": "Prescribes",
                                "name": "T1",
                                "is_table": true
                            },
                            {
                                "join": {
                                    "name": "T2",
                                    "value": "Medication",
                                    "is_table": true
                                },
                                "on": {
                                    "eq": [
                                        "T1.Medication",
                                        "T2.Code"
                                    ]
                                }
                            }
                        ],
                        "where": {
                            "eq": [
                                "T2.name",
                                {
                                    "literal": "Procrastin-X"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "sql_ans": [
            [
                3
            ]
        ],
        "cypher_query": "MATCH (p:Patient)\nWHERE NOT (p:Patient)-[]-(:Prescribes)-[]-(:Medication)\nRETURN count(*)",
        "cypher_ans": [
            [
                2
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many patients are not using Procrastin-X as medication?",
        "sql_query": "SELECT count(*) FROM patient WHERE SSN NOT IN ( SELECT T1.patient FROM Prescribes AS T1 JOIN Medication AS T2 ON T1.Medication  =  T2.Code WHERE T2.name  =  'Procrastin-X' )",
        "parsed_sql": {
            "select": {
                "value": {
                    "count": "*"
                }
            },
            "from": "patient",
            "where": {
                "nin": [
                    "SSN",
                    {
                        "select": {
                            "value": "T1.patient"
                        },
                        "from": [
                            {
                                "value": "Prescribes",
                                "name": "T1",
                                "is_table": true
                            },
                            {
                                "join": {
                                    "name": "T2",
                                    "value": "Medication",
                                    "is_table": true
                                },
                                "on": {
                                    "eq": [
                                        "T1.Medication",
                                        "T2.Code"
                                    ]
                                }
                            }
                        ],
                        "where": {
                            "eq": [
                                "T2.name",
                                {
                                    "literal": "Procrastin-X"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "sql_ans": [
            [
                3
            ]
        ],
        "cypher_query": "MATCH (p:Patient)\nWHERE NOT (p:Patient)-[]-(:Prescribes)-[]-(:Medication)\nRETURN count(*)",
        "cypher_ans": [
            [
                2
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "what is the name and position of the head whose department has least number of employees?",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH T2.Name AS Name, T2.Position AS Position, count(T2.departmentID) AS count\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Bob Kelso",
                "Head Chief of Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name and position of the head of the department with the least employees.",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH T2.Name AS Name, T2.Position AS Position, count(T2.departmentID) AS count\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Bob Kelso",
                "Head Chief of Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the patient who made the most recent appointment?",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the patient who made the appointment with the most recent start date.",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the nurse has the most appointments?",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH count(T1.EmployeeID) AS count, T1.Name AS Name\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the nurse who has the largest number of appointments.",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH count(T1.EmployeeID) AS count, T1.Name AS Name\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms located on each block floor.",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockFloor AS BlockFloor, count(T1.BlockFloor) AS count\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms does each block floor have?",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockFloor AS BlockFloor, count(T1.BlockFloor) AS count\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms for different block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockCode AS BlockCode, count(T1.BlockCode) AS count\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms are located for each block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockCode AS BlockCode, count(T1.BlockCode) AS count\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of medications prescribed for each brand.",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH count(T1.Brand) AS count, T1.Name AS Name\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many medications are prescribed for each brand?",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH count(T1.Brand) AS count, T1.Name AS Name\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the physician who was trained in the most expensive procedure?",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which physician was trained in the procedure that costs the most.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of patients who are not using the medication of Procrastin-X.",
        "sql_query": "SELECT count(*) FROM patient WHERE SSN NOT IN ( SELECT T1.patient FROM Prescribes AS T1 JOIN Medication AS T2 ON T1.Medication  =  T2.Code WHERE T2.name  =  'Procrastin-X' )",
        "parsed_sql": {
            "select": {
                "value": {
                    "count": "*"
                }
            },
            "from": "patient",
            "where": {
                "nin": [
                    "SSN",
                    {
                        "select": {
                            "value": "T1.patient"
                        },
                        "from": [
                            {
                                "value": "Prescribes",
                                "name": "T1",
                                "is_table": true
                            },
                            {
                                "join": {
                                    "name": "T2",
                                    "value": "Medication",
                                    "is_table": true
                                },
                                "on": {
                                    "eq": [
                                        "T1.Medication",
                                        "T2.Code"
                                    ]
                                }
                            }
                        ],
                        "where": {
                            "eq": [
                                "T2.name",
                                {
                                    "literal": "Procrastin-X"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "sql_ans": [
            [
                3
            ]
        ],
        "cypher_query": "MATCH (p:Patient)\nWHERE NOT (p:Patient)-[]-(:Prescribes)-[]-(:Medication)\nRETURN count(*)",
        "cypher_ans": [
            [
                2
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many patients are not using Procrastin-X as medication?",
        "sql_query": "SELECT count(*) FROM patient WHERE SSN NOT IN ( SELECT T1.patient FROM Prescribes AS T1 JOIN Medication AS T2 ON T1.Medication  =  T2.Code WHERE T2.name  =  'Procrastin-X' )",
        "parsed_sql": {
            "select": {
                "value": {
                    "count": "*"
                }
            },
            "from": "patient",
            "where": {
                "nin": [
                    "SSN",
                    {
                        "select": {
                            "value": "T1.patient"
                        },
                        "from": [
                            {
                                "value": "Prescribes",
                                "name": "T1",
                                "is_table": true
                            },
                            {
                                "join": {
                                    "name": "T2",
                                    "value": "Medication",
                                    "is_table": true
                                },
                                "on": {
                                    "eq": [
                                        "T1.Medication",
                                        "T2.Code"
                                    ]
                                }
                            }
                        ],
                        "where": {
                            "eq": [
                                "T2.name",
                                {
                                    "literal": "Procrastin-X"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "sql_ans": [
            [
                3
            ]
        ],
        "cypher_query": "MATCH (p:Patient)\nWHERE NOT (p:Patient)-[]-(:Prescribes)-[]-(:Medication)\nRETURN count(*)",
        "cypher_ans": [
            [
                2
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "what is the name and position of the head whose department has least number of employees?",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH T2.Name AS Name, T2.Position AS Position, count(T2.departmentID) AS count\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Bob Kelso",
                "Head Chief of Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name and position of the head of the department with the least employees.",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH T2.Name AS Name, T2.Position AS Position, count(T2.departmentID) AS count\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Bob Kelso",
                "Head Chief of Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the patient who made the most recent appointment?",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the patient who made the appointment with the most recent start date.",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the nurse has the most appointments?",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH T1.Name AS Name, count(T1.EmployeeID) AS count\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the nurse who has the largest number of appointments.",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH T1.Name AS Name, count(T1.EmployeeID) AS count\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms located on each block floor.",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockFloor AS BlockFloor, count(T1.BlockFloor) AS count\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms does each block floor have?",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockFloor AS BlockFloor, count(T1.BlockFloor) AS count\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms for different block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockCode AS BlockCode, count(T1.BlockCode) AS count\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms are located for each block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockCode AS BlockCode, count(T1.BlockCode) AS count\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of medications prescribed for each brand.",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH count(T1.Brand) AS count, T1.Name AS Name\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many medications are prescribed for each brand?",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH count(T1.Brand) AS count, T1.Name AS Name\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the physician who was trained in the most expensive procedure?",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which physician was trained in the procedure that costs the most.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "what is the name and position of the head whose department has least number of employees?",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH T2.Name AS Name, count(T2.departmentID) AS count, T2.Position AS Position\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Bob Kelso",
                "Head Chief of Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name and position of the head of the department with the least employees.",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH T2.Name AS Name, count(T2.departmentID) AS count, T2.Position AS Position\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Bob Kelso",
                "Head Chief of Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the patient who made the most recent appointment?",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the patient who made the appointment with the most recent start date.",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the nurse has the most appointments?",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH count(T1.EmployeeID) AS count, T1.Name AS Name\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the nurse who has the largest number of appointments.",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH count(T1.EmployeeID) AS count, T1.Name AS Name\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms located on each block floor.",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockFloor) AS count, T1.BlockFloor AS BlockFloor\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms does each block floor have?",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockFloor) AS count, T1.BlockFloor AS BlockFloor\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms for different block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockCode) AS count, T1.BlockCode AS BlockCode\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms are located for each block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockCode) AS count, T1.BlockCode AS BlockCode\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of medications prescribed for each brand.",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH count(T1.Brand) AS count, T1.Name AS Name\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many medications are prescribed for each brand?",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH count(T1.Brand) AS count, T1.Name AS Name\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the physician who was trained in the most expensive procedure?",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which physician was trained in the procedure that costs the most.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "what is the name and position of the head whose department has least number of employees?",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH T2.Name AS Name, count(T2.departmentID) AS count, T2.Position AS Position\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Bob Kelso",
                "Head Chief of Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name and position of the head of the department with the least employees.",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH T2.Name AS Name, count(T2.departmentID) AS count, T2.Position AS Position\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Bob Kelso",
                "Head Chief of Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the patient who made the most recent appointment?",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the patient who made the appointment with the most recent start date.",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the nurse has the most appointments?",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH T1.Name AS Name, count(T1.EmployeeID) AS count\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the nurse who has the largest number of appointments.",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH T1.Name AS Name, count(T1.EmployeeID) AS count\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms located on each block floor.",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockFloor) AS count, T1.BlockFloor AS BlockFloor\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms does each block floor have?",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockFloor) AS count, T1.BlockFloor AS BlockFloor\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms for different block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockCode AS BlockCode, count(T1.BlockCode) AS count\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms are located for each block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockCode AS BlockCode, count(T1.BlockCode) AS count\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of medications prescribed for each brand.",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH T1.Name AS Name, count(T1.Brand) AS count\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many medications are prescribed for each brand?",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH T1.Name AS Name, count(T1.Brand) AS count\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the physician who was trained in the most expensive procedure?",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which physician was trained in the procedure that costs the most.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "what is the name and position of the head whose department has least number of employees?",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH T2.Name AS Name, count(T2.departmentID) AS count, T2.Position AS Position\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Bob Kelso",
                "Head Chief of Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name and position of the head of the department with the least employees.",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH T2.Name AS Name, count(T2.departmentID) AS count, T2.Position AS Position\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Bob Kelso",
                "Head Chief of Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the patient who made the most recent appointment?",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the patient who made the appointment with the most recent start date.",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the nurse has the most appointments?",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH count(T1.EmployeeID) AS count, T1.Name AS Name\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the nurse who has the largest number of appointments.",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH count(T1.EmployeeID) AS count, T1.Name AS Name\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms located on each block floor.",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockFloor) AS count, T1.BlockFloor AS BlockFloor\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms does each block floor have?",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockFloor) AS count, T1.BlockFloor AS BlockFloor\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms for different block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockCode) AS count, T1.BlockCode AS BlockCode\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms are located for each block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockCode) AS count, T1.BlockCode AS BlockCode\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of medications prescribed for each brand.",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH count(T1.Brand) AS count, T1.Name AS Name\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many medications are prescribed for each brand?",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH count(T1.Brand) AS count, T1.Name AS Name\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the physician who was trained in the most expensive procedure?",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which physician was trained in the procedure that costs the most.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "what is the name and position of the head whose department has least number of employees?",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH count(T2.departmentID) AS count, T2.Position AS Position, T2.Name AS Name\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Bob Kelso",
                "Head Chief of Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name and position of the head of the department with the least employees.",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH count(T2.departmentID) AS count, T2.Position AS Position, T2.Name AS Name\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Bob Kelso",
                "Head Chief of Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the patient who made the most recent appointment?",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the patient who made the appointment with the most recent start date.",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the nurse has the most appointments?",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH count(T1.EmployeeID) AS count, T1.Name AS Name\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the nurse who has the largest number of appointments.",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH count(T1.EmployeeID) AS count, T1.Name AS Name\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms located on each block floor.",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockFloor AS BlockFloor, count(T1.BlockFloor) AS count\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms does each block floor have?",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockFloor AS BlockFloor, count(T1.BlockFloor) AS count\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms for different block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockCode AS BlockCode, count(T1.BlockCode) AS count\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms are located for each block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockCode AS BlockCode, count(T1.BlockCode) AS count\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of medications prescribed for each brand.",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH count(T1.Brand) AS count, T1.Name AS Name\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many medications are prescribed for each brand?",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH count(T1.Brand) AS count, T1.Name AS Name\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the physician who was trained in the most expensive procedure?",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which physician was trained in the procedure that costs the most.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    }
][][
    {
        "db_id": "hospital_1",
        "question": "what is the name and position of the head whose department has least number of employees?",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH T2.Position AS Position, count(T2.departmentID) AS count, T2.Name AS Name\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Bob Kelso",
                "Head Chief of Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name and position of the head of the department with the least employees.",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH T2.Position AS Position, count(T2.departmentID) AS count, T2.Name AS Name\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Bob Kelso",
                "Head Chief of Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the patient who made the most recent appointment?",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the patient who made the appointment with the most recent start date.",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the nurse has the most appointments?",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH count(T1.EmployeeID) AS count, T1.Name AS Name\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the nurse who has the largest number of appointments.",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH count(T1.EmployeeID) AS count, T1.Name AS Name\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms located on each block floor.",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockFloor AS BlockFloor, count(T1.BlockFloor) AS count\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms does each block floor have?",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockFloor AS BlockFloor, count(T1.BlockFloor) AS count\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms for different block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockCode AS BlockCode, count(T1.BlockCode) AS count\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms are located for each block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockCode AS BlockCode, count(T1.BlockCode) AS count\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of medications prescribed for each brand.",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH count(T1.Brand) AS count, T1.Name AS Name\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many medications are prescribed for each brand?",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH count(T1.Brand) AS count, T1.Name AS Name\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians whose position title contains the word 'senior'.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of the physicians who have 'senior' in their titles.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the physician who was trained in the most expensive procedure?",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which physician was trained in the procedure that costs the most.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "what is the name and position of the head whose department has least number of employees?",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH T2.Name AS Name, T2.Position AS Position, count(T2.departmentID) AS count\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Bob Kelso",
                "Head Chief of Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name and position of the head of the department with the least employees.",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH T2.Name AS Name, T2.Position AS Position, count(T2.departmentID) AS count\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Bob Kelso",
                "Head Chief of Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the patient who made the most recent appointment?",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the patient who made the appointment with the most recent start date.",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the nurse has the most appointments?",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH T1.Name AS Name, count(T1.EmployeeID) AS count\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the nurse who has the largest number of appointments.",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH T1.Name AS Name, count(T1.EmployeeID) AS count\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms located on each block floor.",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockFloor AS BlockFloor, count(T1.BlockFloor) AS count\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms does each block floor have?",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockFloor AS BlockFloor, count(T1.BlockFloor) AS count\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms for different block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockCode) AS count, T1.BlockCode AS BlockCode\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms are located for each block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockCode) AS count, T1.BlockCode AS BlockCode\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of medications prescribed for each brand.",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH count(T1.Brand) AS count, T1.Name AS Name\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many medications are prescribed for each brand?",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH count(T1.Brand) AS count, T1.Name AS Name\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians whose position title contains the word 'senior'.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of the physicians who have 'senior' in their titles.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the physician who was trained in the most expensive procedure?",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which physician was trained in the procedure that costs the most.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "what is the name and position of the head whose department has least number of employees?",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH count(T2.departmentID) AS count, T2.Name AS Name, T2.Position AS Position\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Bob Kelso",
                "Head Chief of Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name and position of the head of the department with the least employees.",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH count(T2.departmentID) AS count, T2.Name AS Name, T2.Position AS Position\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Bob Kelso",
                "Head Chief of Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the patient who made the most recent appointment?",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the patient who made the appointment with the most recent start date.",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the nurse has the most appointments?",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH count(T1.EmployeeID) AS count, T1.Name AS Name\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the nurse who has the largest number of appointments.",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH count(T1.EmployeeID) AS count, T1.Name AS Name\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms located on each block floor.",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockFloor) AS count, T1.BlockFloor AS BlockFloor\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms does each block floor have?",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockFloor) AS count, T1.BlockFloor AS BlockFloor\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms for different block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockCode AS BlockCode, count(T1.BlockCode) AS count\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms are located for each block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockCode AS BlockCode, count(T1.BlockCode) AS count\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of medications prescribed for each brand.",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH T1.Name AS Name, count(T1.Brand) AS count\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many medications are prescribed for each brand?",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH T1.Name AS Name, count(T1.Brand) AS count\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians whose position title contains the word 'senior'.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of the physicians who have 'senior' in their titles.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the physician who was trained in the most expensive procedure?",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which physician was trained in the procedure that costs the most.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "what is the name and position of the head whose department has least number of employees?",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH count(T2.departmentID) AS count, T2.Name AS Name, T2.Position AS Position\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Bob Kelso",
                "Head Chief of Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name and position of the head of the department with the least employees.",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH count(T2.departmentID) AS count, T2.Name AS Name, T2.Position AS Position\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Bob Kelso",
                "Head Chief of Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the patient who made the most recent appointment?",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the patient who made the appointment with the most recent start date.",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the nurse has the most appointments?",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH T1.Name AS Name, count(T1.EmployeeID) AS count\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the nurse who has the largest number of appointments.",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH T1.Name AS Name, count(T1.EmployeeID) AS count\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms located on each block floor.",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockFloor) AS count, T1.BlockFloor AS BlockFloor\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms does each block floor have?",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockFloor) AS count, T1.BlockFloor AS BlockFloor\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms for different block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockCode AS BlockCode, count(T1.BlockCode) AS count\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms are located for each block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockCode AS BlockCode, count(T1.BlockCode) AS count\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of medications prescribed for each brand.",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH T1.Name AS Name, count(T1.Brand) AS count\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many medications are prescribed for each brand?",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH T1.Name AS Name, count(T1.Brand) AS count\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians whose position title contains the word 'senior'.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of the physicians who have 'senior' in their titles.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the physician who was trained in the most expensive procedure?",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which physician was trained in the procedure that costs the most.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "what is the name and position of the head whose department has least number of employees?",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH T2.Position AS Position, T2.Name AS Name, count(T2.departmentID) AS count\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Bob Kelso",
                "Head Chief of Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name and position of the head of the department with the least employees.",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH T2.Position AS Position, T2.Name AS Name, count(T2.departmentID) AS count\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Bob Kelso",
                "Head Chief of Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the patient who made the most recent appointment?",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the patient who made the appointment with the most recent start date.",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the nurse has the most appointments?",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH T1.Name AS Name, count(T1.EmployeeID) AS count\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the nurse who has the largest number of appointments.",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH T1.Name AS Name, count(T1.EmployeeID) AS count\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms located on each block floor.",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockFloor AS BlockFloor, count(T1.BlockFloor) AS count\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms does each block floor have?",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockFloor AS BlockFloor, count(T1.BlockFloor) AS count\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms for different block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockCode AS BlockCode, count(T1.BlockCode) AS count\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms are located for each block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockCode AS BlockCode, count(T1.BlockCode) AS count\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of medications prescribed for each brand.",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH T1.Name AS Name, count(T1.Brand) AS count\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many medications are prescribed for each brand?",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH T1.Name AS Name, count(T1.Brand) AS count\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians whose position title contains the word 'senior'.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of the physicians who have 'senior' in their titles.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the physician who was trained in the most expensive procedure?",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which physician was trained in the procedure that costs the most.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "what is the name and position of the head whose department has least number of employees?",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH T2.Position AS Position, count(T2.departmentID) AS count, T2.Name AS Name\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Bob Kelso",
                "Head Chief of Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name and position of the head of the department with the least employees.",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH T2.Position AS Position, count(T2.departmentID) AS count, T2.Name AS Name\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Bob Kelso",
                "Head Chief of Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the patient who made the most recent appointment?",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the patient who made the appointment with the most recent start date.",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the nurse has the most appointments?",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH count(T1.EmployeeID) AS count, T1.Name AS Name\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the nurse who has the largest number of appointments.",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH count(T1.EmployeeID) AS count, T1.Name AS Name\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms located on each block floor.",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockFloor) AS count, T1.BlockFloor AS BlockFloor\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms does each block floor have?",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockFloor) AS count, T1.BlockFloor AS BlockFloor\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms for different block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockCode) AS count, T1.BlockCode AS BlockCode\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms are located for each block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockCode) AS count, T1.BlockCode AS BlockCode\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of medications prescribed for each brand.",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH count(T1.Brand) AS count, T1.Name AS Name\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many medications are prescribed for each brand?",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH count(T1.Brand) AS count, T1.Name AS Name\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians whose position title contains the word 'senior'.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of the physicians who have 'senior' in their titles.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the physician who was trained in the most expensive procedure?",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which physician was trained in the procedure that costs the most.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "what is the name and position of the head whose department has least number of employees?",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH count(T2.departmentID) AS count, T2.Name AS Name, T2.Position AS Position\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Bob Kelso",
                "Head Chief of Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name and position of the head of the department with the least employees.",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH count(T2.departmentID) AS count, T2.Name AS Name, T2.Position AS Position\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Bob Kelso",
                "Head Chief of Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the patient who made the most recent appointment?",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the patient who made the appointment with the most recent start date.",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the nurse has the most appointments?",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH T1.Name AS Name, count(T1.EmployeeID) AS count\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the nurse who has the largest number of appointments.",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH T1.Name AS Name, count(T1.EmployeeID) AS count\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms located on each block floor.",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockFloor AS BlockFloor, count(T1.BlockFloor) AS count\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms does each block floor have?",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockFloor AS BlockFloor, count(T1.BlockFloor) AS count\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms for different block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockCode) AS count, T1.BlockCode AS BlockCode\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms are located for each block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockCode) AS count, T1.BlockCode AS BlockCode\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of medications prescribed for each brand.",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH T1.Name AS Name, count(T1.Brand) AS count\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many medications are prescribed for each brand?",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH T1.Name AS Name, count(T1.Brand) AS count\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians whose position title contains the word 'senior'.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of the physicians who have 'senior' in their titles.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the physician who was trained in the most expensive procedure?",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which physician was trained in the procedure that costs the most.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "what is the name and position of the head whose department has least number of employees?",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH count(T2.departmentID) AS count, T2.Position AS Position, T2.Name AS Name\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Bob Kelso",
                "Head Chief of Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name and position of the head of the department with the least employees.",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH count(T2.departmentID) AS count, T2.Position AS Position, T2.Name AS Name\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Bob Kelso",
                "Head Chief of Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the patient who made the most recent appointment?",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the patient who made the appointment with the most recent start date.",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the nurse has the most appointments?",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH T1.Name AS Name, count(T1.EmployeeID) AS count\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the nurse who has the largest number of appointments.",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH T1.Name AS Name, count(T1.EmployeeID) AS count\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms located on each block floor.",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockFloor AS BlockFloor, count(T1.BlockFloor) AS count\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms does each block floor have?",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockFloor AS BlockFloor, count(T1.BlockFloor) AS count\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms for different block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockCode) AS count, T1.BlockCode AS BlockCode\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms are located for each block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockCode) AS count, T1.BlockCode AS BlockCode\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of medications prescribed for each brand.",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH count(T1.Brand) AS count, T1.Name AS Name\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many medications are prescribed for each brand?",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH count(T1.Brand) AS count, T1.Name AS Name\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians whose position title contains the word 'senior'.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of the physicians who have 'senior' in their titles.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the physician who was trained in the most expensive procedure?",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which physician was trained in the procedure that costs the most.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "what is the name and position of the head whose department has least number of employees?",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH T2.Position AS Position, T2.Name AS Name, count(T2.departmentID) AS count\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Bob Kelso",
                "Head Chief of Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name and position of the head of the department with the least employees.",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH T2.Position AS Position, T2.Name AS Name, count(T2.departmentID) AS count\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Bob Kelso",
                "Head Chief of Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the patient who made the most recent appointment?",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the patient who made the appointment with the most recent start date.",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the nurse has the most appointments?",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH T1.Name AS Name, count(T1.EmployeeID) AS count\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the nurse who has the largest number of appointments.",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH T1.Name AS Name, count(T1.EmployeeID) AS count\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms located on each block floor.",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockFloor) AS count, T1.BlockFloor AS BlockFloor\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms does each block floor have?",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockFloor) AS count, T1.BlockFloor AS BlockFloor\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms for different block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockCode) AS count, T1.BlockCode AS BlockCode\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms are located for each block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockCode) AS count, T1.BlockCode AS BlockCode\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of medications prescribed for each brand.",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH count(T1.Brand) AS count, T1.Name AS Name\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many medications are prescribed for each brand?",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH count(T1.Brand) AS count, T1.Name AS Name\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians whose position title contains the word 'senior'.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of the physicians who have 'senior' in their titles.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the physician who was trained in the most expensive procedure?",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which physician was trained in the procedure that costs the most.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "what is the name and position of the head whose department has least number of employees?",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH T2.Position AS Position, T2.Name AS Name, count(T2.departmentID) AS count\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Bob Kelso",
                "Head Chief of Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name and position of the head of the department with the least employees.",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH T2.Position AS Position, T2.Name AS Name, count(T2.departmentID) AS count\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Bob Kelso",
                "Head Chief of Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the patient who made the most recent appointment?",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the patient who made the appointment with the most recent start date.",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the nurse has the most appointments?",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH T1.Name AS Name, count(T1.EmployeeID) AS count\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the nurse who has the largest number of appointments.",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH T1.Name AS Name, count(T1.EmployeeID) AS count\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms located on each block floor.",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockFloor AS BlockFloor, count(T1.BlockFloor) AS count\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms does each block floor have?",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockFloor AS BlockFloor, count(T1.BlockFloor) AS count\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms for different block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockCode AS BlockCode, count(T1.BlockCode) AS count\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms are located for each block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockCode AS BlockCode, count(T1.BlockCode) AS count\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of medications prescribed for each brand.",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH T1.Name AS Name, count(T1.Brand) AS count\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many medications are prescribed for each brand?",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH T1.Name AS Name, count(T1.Brand) AS count\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians whose position title contains the word 'senior'.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of the physicians who have 'senior' in their titles.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the physician who was trained in the most expensive procedure?",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which physician was trained in the procedure that costs the most.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "what is the name and position of the head whose department has least number of employees?",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH T2.Name AS Name, T2.Position AS Position, count(T2.departmentID) AS count\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Bob Kelso",
                "Head Chief of Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name and position of the head of the department with the least employees.",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH T2.Name AS Name, T2.Position AS Position, count(T2.departmentID) AS count\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Bob Kelso",
                "Head Chief of Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the patient who made the most recent appointment?",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the patient who made the appointment with the most recent start date.",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the nurse has the most appointments?",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH T1.Name AS Name, count(T1.EmployeeID) AS count\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the nurse who has the largest number of appointments.",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH T1.Name AS Name, count(T1.EmployeeID) AS count\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms located on each block floor.",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockFloor) AS count, T1.BlockFloor AS BlockFloor\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms does each block floor have?",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockFloor) AS count, T1.BlockFloor AS BlockFloor\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms for different block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockCode) AS count, T1.BlockCode AS BlockCode\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms are located for each block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockCode) AS count, T1.BlockCode AS BlockCode\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of medications prescribed for each brand.",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH T1.Name AS Name, count(T1.Brand) AS count\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many medications are prescribed for each brand?",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH T1.Name AS Name, count(T1.Brand) AS count\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians whose position title contains the word 'senior'.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of the physicians who have 'senior' in their titles.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the physician who was trained in the most expensive procedure?",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which physician was trained in the procedure that costs the most.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "what is the name and position of the head whose department has least number of employees?",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH T2.Name AS Name, count(T2.departmentID) AS count, T2.Position AS Position\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Bob Kelso",
                "Head Chief of Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name and position of the head of the department with the least employees.",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH T2.Name AS Name, count(T2.departmentID) AS count, T2.Position AS Position\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Bob Kelso",
                "Head Chief of Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the patient who made the most recent appointment?",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the patient who made the appointment with the most recent start date.",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the nurse has the most appointments?",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH count(T1.EmployeeID) AS count, T1.Name AS Name\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the nurse who has the largest number of appointments.",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH count(T1.EmployeeID) AS count, T1.Name AS Name\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms located on each block floor.",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockFloor AS BlockFloor, count(T1.BlockFloor) AS count\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms does each block floor have?",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockFloor AS BlockFloor, count(T1.BlockFloor) AS count\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms for different block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockCode AS BlockCode, count(T1.BlockCode) AS count\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms are located for each block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockCode AS BlockCode, count(T1.BlockCode) AS count\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of medications prescribed for each brand.",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH count(T1.Brand) AS count, T1.Name AS Name\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many medications are prescribed for each brand?",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH count(T1.Brand) AS count, T1.Name AS Name\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians whose position title contains the word 'senior'.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of the physicians who have 'senior' in their titles.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the physician who was trained in the most expensive procedure?",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which physician was trained in the procedure that costs the most.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "what is the name and position of the head whose department has least number of employees?",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH count(T2.departmentID) AS count, T2.Name AS Name, T2.Position AS Position\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Bob Kelso",
                "Head Chief of Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name and position of the head of the department with the least employees.",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH count(T2.departmentID) AS count, T2.Name AS Name, T2.Position AS Position\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Bob Kelso",
                "Head Chief of Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the patient who made the most recent appointment?",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the patient who made the appointment with the most recent start date.",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the nurse has the most appointments?",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH count(T1.EmployeeID) AS count, T1.Name AS Name\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the nurse who has the largest number of appointments.",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH count(T1.EmployeeID) AS count, T1.Name AS Name\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms located on each block floor.",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockFloor AS BlockFloor, count(T1.BlockFloor) AS count\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms does each block floor have?",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockFloor AS BlockFloor, count(T1.BlockFloor) AS count\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms for different block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockCode AS BlockCode, count(T1.BlockCode) AS count\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms are located for each block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockCode AS BlockCode, count(T1.BlockCode) AS count\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of medications prescribed for each brand.",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH T1.Name AS Name, count(T1.Brand) AS count\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many medications are prescribed for each brand?",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH T1.Name AS Name, count(T1.Brand) AS count\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians whose position title contains the word 'senior'.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of the physicians who have 'senior' in their titles.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the physician who was trained in the most expensive procedure?",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which physician was trained in the procedure that costs the most.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "what is the name and position of the head whose department has least number of employees?",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH count(T2.departmentID) AS count, T2.Position AS Position, T2.Name AS Name\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Bob Kelso",
                "Head Chief of Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name and position of the head of the department with the least employees.",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH count(T2.departmentID) AS count, T2.Position AS Position, T2.Name AS Name\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Bob Kelso",
                "Head Chief of Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the patient who made the most recent appointment?",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the patient who made the appointment with the most recent start date.",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the nurse has the most appointments?",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH T1.Name AS Name, count(T1.EmployeeID) AS count\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the nurse who has the largest number of appointments.",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH T1.Name AS Name, count(T1.EmployeeID) AS count\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms located on each block floor.",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockFloor) AS count, T1.BlockFloor AS BlockFloor\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms does each block floor have?",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockFloor) AS count, T1.BlockFloor AS BlockFloor\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms for different block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockCode AS BlockCode, count(T1.BlockCode) AS count\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms are located for each block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockCode AS BlockCode, count(T1.BlockCode) AS count\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of medications prescribed for each brand.",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH T1.Name AS Name, count(T1.Brand) AS count\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many medications are prescribed for each brand?",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH T1.Name AS Name, count(T1.Brand) AS count\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians whose position title contains the word 'senior'.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of the physicians who have 'senior' in their titles.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the physician who was trained in the most expensive procedure?",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which physician was trained in the procedure that costs the most.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "what is the name and position of the head whose department has least number of employees?",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH T2.Name AS Name, count(T2.departmentID) AS count, T2.Position AS Position\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Bob Kelso",
                "Head Chief of Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name and position of the head of the department with the least employees.",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH T2.Name AS Name, count(T2.departmentID) AS count, T2.Position AS Position\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Bob Kelso",
                "Head Chief of Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the patient who made the most recent appointment?",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the patient who made the appointment with the most recent start date.",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the nurse has the most appointments?",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH T1.Name AS Name, count(T1.EmployeeID) AS count\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the nurse who has the largest number of appointments.",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH T1.Name AS Name, count(T1.EmployeeID) AS count\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms located on each block floor.",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockFloor AS BlockFloor, count(T1.BlockFloor) AS count\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms does each block floor have?",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockFloor AS BlockFloor, count(T1.BlockFloor) AS count\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms for different block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockCode AS BlockCode, count(T1.BlockCode) AS count\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms are located for each block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockCode AS BlockCode, count(T1.BlockCode) AS count\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of medications prescribed for each brand.",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH T1.Name AS Name, count(T1.Brand) AS count\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many medications are prescribed for each brand?",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH T1.Name AS Name, count(T1.Brand) AS count\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians whose position title contains the word 'senior'.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of the physicians who have 'senior' in their titles.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the physician who was trained in the most expensive procedure?",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which physician was trained in the procedure that costs the most.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "what is the name and position of the head whose department has least number of employees?",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH T2.Position AS Position, count(T2.departmentID) AS count, T2.Name AS Name\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Bob Kelso",
                "Head Chief of Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name and position of the head of the department with the least employees.",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH T2.Position AS Position, count(T2.departmentID) AS count, T2.Name AS Name\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Bob Kelso",
                "Head Chief of Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the patient who made the most recent appointment?",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the patient who made the appointment with the most recent start date.",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the nurse has the most appointments?",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH T1.Name AS Name, count(T1.EmployeeID) AS count\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the nurse who has the largest number of appointments.",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH T1.Name AS Name, count(T1.EmployeeID) AS count\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms located on each block floor.",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockFloor AS BlockFloor, count(T1.BlockFloor) AS count\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms does each block floor have?",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockFloor AS BlockFloor, count(T1.BlockFloor) AS count\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms for different block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockCode AS BlockCode, count(T1.BlockCode) AS count\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms are located for each block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockCode AS BlockCode, count(T1.BlockCode) AS count\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of medications prescribed for each brand.",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH count(T1.Brand) AS count, T1.Name AS Name\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many medications are prescribed for each brand?",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH count(T1.Brand) AS count, T1.Name AS Name\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians whose position title contains the word 'senior'.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of the physicians who have 'senior' in their titles.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the physician who was trained in the most expensive procedure?",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which physician was trained in the procedure that costs the most.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "what is the name and position of the head whose department has least number of employees?",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH T2.Name AS Name, count(T2.departmentID) AS count, T2.Position AS Position\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Bob Kelso",
                "Head Chief of Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name and position of the head of the department with the least employees.",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH T2.Name AS Name, count(T2.departmentID) AS count, T2.Position AS Position\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Bob Kelso",
                "Head Chief of Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the patient who made the most recent appointment?",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the patient who made the appointment with the most recent start date.",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the nurse has the most appointments?",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH T1.Name AS Name, count(T1.EmployeeID) AS count\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the nurse who has the largest number of appointments.",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH T1.Name AS Name, count(T1.EmployeeID) AS count\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms located on each block floor.",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockFloor) AS count, T1.BlockFloor AS BlockFloor\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms does each block floor have?",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockFloor) AS count, T1.BlockFloor AS BlockFloor\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms for different block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockCode AS BlockCode, count(T1.BlockCode) AS count\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms are located for each block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockCode AS BlockCode, count(T1.BlockCode) AS count\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of medications prescribed for each brand.",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH count(T1.Brand) AS count, T1.Name AS Name\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many medications are prescribed for each brand?",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH count(T1.Brand) AS count, T1.Name AS Name\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians whose position title contains the word 'senior'.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of the physicians who have 'senior' in their titles.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the physician who was trained in the most expensive procedure?",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which physician was trained in the procedure that costs the most.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "what is the name and position of the head whose department has least number of employees?",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH T2.Position AS Position, count(T2.departmentID) AS count, T2.Name AS Name\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Bob Kelso",
                "Head Chief of Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name and position of the head of the department with the least employees.",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH T2.Position AS Position, count(T2.departmentID) AS count, T2.Name AS Name\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Bob Kelso",
                "Head Chief of Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the patient who made the most recent appointment?",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the patient who made the appointment with the most recent start date.",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the nurse has the most appointments?",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH T1.Name AS Name, count(T1.EmployeeID) AS count\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the nurse who has the largest number of appointments.",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH T1.Name AS Name, count(T1.EmployeeID) AS count\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms located on each block floor.",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockFloor) AS count, T1.BlockFloor AS BlockFloor\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms does each block floor have?",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockFloor) AS count, T1.BlockFloor AS BlockFloor\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms for different block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockCode AS BlockCode, count(T1.BlockCode) AS count\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms are located for each block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockCode AS BlockCode, count(T1.BlockCode) AS count\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of medications prescribed for each brand.",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH T1.Name AS Name, count(T1.Brand) AS count\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many medications are prescribed for each brand?",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH T1.Name AS Name, count(T1.Brand) AS count\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians whose position title contains the word 'senior'.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of the physicians who have 'senior' in their titles.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the physician who was trained in the most expensive procedure?",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which physician was trained in the procedure that costs the most.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "what is the name and position of the head whose department has least number of employees?",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH count(T2.departmentID) AS count, T2.Name AS Name, T2.Position AS Position\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Bob Kelso",
                "Head Chief of Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name and position of the head of the department with the least employees.",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH count(T2.departmentID) AS count, T2.Name AS Name, T2.Position AS Position\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Bob Kelso",
                "Head Chief of Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the patient who made the most recent appointment?",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the patient who made the appointment with the most recent start date.",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the nurse has the most appointments?",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH T1.Name AS Name, count(T1.EmployeeID) AS count\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the nurse who has the largest number of appointments.",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH T1.Name AS Name, count(T1.EmployeeID) AS count\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms located on each block floor.",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockFloor) AS count, T1.BlockFloor AS BlockFloor\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms does each block floor have?",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockFloor) AS count, T1.BlockFloor AS BlockFloor\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms for different block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockCode) AS count, T1.BlockCode AS BlockCode\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms are located for each block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockCode) AS count, T1.BlockCode AS BlockCode\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of medications prescribed for each brand.",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH T1.Name AS Name, count(T1.Brand) AS count\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many medications are prescribed for each brand?",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH T1.Name AS Name, count(T1.Brand) AS count\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians whose position title contains the word 'senior'.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of the physicians who have 'senior' in their titles.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the physician who was trained in the most expensive procedure?",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which physician was trained in the procedure that costs the most.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "what is the name and position of the head whose department has least number of employees?",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH T2.Name AS Name, T2.Position AS Position, count(T2.departmentID) AS count\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Bob Kelso",
                "Head Chief of Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name and position of the head of the department with the least employees.",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH T2.Name AS Name, T2.Position AS Position, count(T2.departmentID) AS count\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Bob Kelso",
                "Head Chief of Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the patient who made the most recent appointment?",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the patient who made the appointment with the most recent start date.",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the nurse has the most appointments?",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH count(T1.EmployeeID) AS count, T1.Name AS Name\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the nurse who has the largest number of appointments.",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH count(T1.EmployeeID) AS count, T1.Name AS Name\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms located on each block floor.",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockFloor AS BlockFloor, count(T1.BlockFloor) AS count\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms does each block floor have?",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockFloor AS BlockFloor, count(T1.BlockFloor) AS count\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms for different block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockCode AS BlockCode, count(T1.BlockCode) AS count\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms are located for each block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockCode AS BlockCode, count(T1.BlockCode) AS count\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of medications prescribed for each brand.",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH count(T1.Brand) AS count, T1.Name AS Name\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many medications are prescribed for each brand?",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH count(T1.Brand) AS count, T1.Name AS Name\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians whose position title contains the word 'senior'.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of the physicians who have 'senior' in their titles.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the physician who was trained in the most expensive procedure?",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which physician was trained in the procedure that costs the most.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "what is the name and position of the head whose department has least number of employees?",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH T2.Position AS Position, count(T2.departmentID) AS count, T2.Name AS Name\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Bob Kelso",
                "Head Chief of Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name and position of the head of the department with the least employees.",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH T2.Position AS Position, count(T2.departmentID) AS count, T2.Name AS Name\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Bob Kelso",
                "Head Chief of Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the patient who made the most recent appointment?",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the patient who made the appointment with the most recent start date.",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the nurse has the most appointments?",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH count(T1.EmployeeID) AS count, T1.Name AS Name\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the nurse who has the largest number of appointments.",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH count(T1.EmployeeID) AS count, T1.Name AS Name\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms located on each block floor.",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockFloor) AS count, T1.BlockFloor AS BlockFloor\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms does each block floor have?",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockFloor) AS count, T1.BlockFloor AS BlockFloor\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms for different block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockCode AS BlockCode, count(T1.BlockCode) AS count\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms are located for each block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockCode AS BlockCode, count(T1.BlockCode) AS count\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of medications prescribed for each brand.",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH count(T1.Brand) AS count, T1.Name AS Name\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many medications are prescribed for each brand?",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH count(T1.Brand) AS count, T1.Name AS Name\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians whose position title contains the word 'senior'.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of the physicians who have 'senior' in their titles.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the physician who was trained in the most expensive procedure?",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which physician was trained in the procedure that costs the most.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "what is the name and position of the head whose department has least number of employees?",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH T2.Name AS Name, T2.Position AS Position, count(T2.departmentID) AS count\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Bob Kelso",
                "Head Chief of Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name and position of the head of the department with the least employees.",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH T2.Name AS Name, T2.Position AS Position, count(T2.departmentID) AS count\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Bob Kelso",
                "Head Chief of Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the patient who made the most recent appointment?",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the patient who made the appointment with the most recent start date.",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the nurse has the most appointments?",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH count(T1.EmployeeID) AS count, T1.Name AS Name\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the nurse who has the largest number of appointments.",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH count(T1.EmployeeID) AS count, T1.Name AS Name\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms located on each block floor.",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockFloor AS BlockFloor, count(T1.BlockFloor) AS count\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms does each block floor have?",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockFloor AS BlockFloor, count(T1.BlockFloor) AS count\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms for different block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockCode) AS count, T1.BlockCode AS BlockCode\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms are located for each block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockCode) AS count, T1.BlockCode AS BlockCode\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of medications prescribed for each brand.",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH T1.Name AS Name, count(T1.Brand) AS count\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many medications are prescribed for each brand?",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH T1.Name AS Name, count(T1.Brand) AS count\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians whose position title contains the word 'senior'.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of the physicians who have 'senior' in their titles.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the physician who was trained in the most expensive procedure?",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which physician was trained in the procedure that costs the most.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    }
][
    {
        "db_id": "hospital_1",
        "question": "what is the name and position of the head whose department has least number of employees?",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH count(T2.departmentID) AS count, T2.Position AS Position, T2.Name AS Name\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Bob Kelso",
                "Head Chief of Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name and position of the head of the department with the least employees.",
        "sql_query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
        "parsed_sql": {
            "select": [
                {
                    "value": "T2.name"
                },
                {
                    "value": "T2.position"
                }
            ],
            "from": [
                {
                    "value": "department",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "physician",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.head",
                            "T2.EmployeeID"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "departmentID"
            },
            "orderby": {
                "value": {
                    "count": "departmentID"
                }
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Percival Cox",
                "Senior Attending Physician"
            ]
        ],
        "cypher_query": "MATCH (T1:Department)-[]-(T2:Physician)\nWITH count(T2.departmentID) AS count, T2.Position AS Position, T2.Name AS Name\nRETURN Name,Position\nORDER BY count\nLIMIT 1",
        "cypher_ans": [
            [
                "Bob Kelso",
                "Head Chief of Medicine"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the patient who made the most recent appointment?",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the patient who made the appointment with the most recent start date.",
        "sql_query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "patient",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.ssn",
                            "T2.patient"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T2.start",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Dennis Doe"
            ]
        ],
        "cypher_query": "MATCH (T1:Patient)-[]-(T2:Appointment)\nRETURN T1.Name\nORDER BY T2.start DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "John Smith"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "What is the name of the nurse has the most appointments?",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH count(T1.EmployeeID) AS count, T1.Name AS Name\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of the nurse who has the largest number of appointments.",
        "sql_query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "nurse",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "appointment",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.prepnurse"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.employeeid"
            },
            "orderby": {
                "value": {
                    "count": "*"
                },
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "Carla Espinosa"
            ]
        ],
        "cypher_query": "MATCH (T1:Nurse)-[]-(T2:Appointment)\nWITH count(T1.EmployeeID) AS count, T1.Name AS Name\nRETURN Name\nORDER BY count DESC\nLIMIT 1",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms located on each block floor.",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockFloor) AS count, T1.BlockFloor AS BlockFloor\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms does each block floor have?",
        "sql_query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockfloor"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockfloor"
            }
        },
        "sql_ans": [
            [
                9,
                1
            ],
            [
                9,
                2
            ],
            [
                9,
                3
            ],
            [
                9,
                4
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH count(T1.BlockFloor) AS count, T1.BlockFloor AS BlockFloor\nRETURN count,BlockFloor",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of rooms for different block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockCode AS BlockCode, count(T1.BlockCode) AS count\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "How many rooms are located for each block code?",
        "sql_query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.blockcode"
                }
            ],
            "from": [
                {
                    "value": "BLOCK",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "room",
                        "is_table": true
                    },
                    "on": {
                        "and": [
                            {
                                "eq": [
                                    "T1.blockfloor",
                                    "T2.blockfloor"
                                ]
                            },
                            {
                                "eq": [
                                    "T1.blockcode",
                                    "T2.blockcode"
                                ]
                            }
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.blockcode"
            }
        },
        "sql_ans": [
            [
                12,
                1
            ],
            [
                12,
                2
            ],
            [
                12,
                3
            ]
        ],
        "cypher_query": "MATCH (T1:Block)-[]-(T2:Room)\nWITH T1.BlockCode AS BlockCode, count(T1.BlockCode) AS count\nRETURN count,BlockCode",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the number of medications prescribed for each brand.",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH T1.Name AS Name, count(T1.Brand) AS count\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "How many medications are prescribed for each brand?",
        "sql_query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "parsed_sql": {
            "select": [
                {
                    "value": {
                        "count": "*"
                    }
                },
                {
                    "value": "T1.name"
                }
            ],
            "from": [
                {
                    "value": "medication",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "prescribes",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.code",
                            "T2.medication"
                        ]
                    }
                }
            ],
            "groupby": {
                "value": "T1.brand"
            }
        },
        "sql_ans": [
            [
                2,
                "Thesisin"
            ],
            [
                1,
                "Procrastin-X"
            ]
        ],
        "cypher_query": "MATCH (T1:Medication)-[]-(T2:Prescribes)\nWITH T1.Name AS Name, count(T1.Brand) AS count\nRETURN count,Name",
        "cypher_ans": [
            [
                2,
                "Procrastin-X"
            ],
            [
                4,
                "Thesisin"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Find the name of physicians whose position title contains the word 'senior'.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "What are the names of the physicians who have 'senior' in their titles.",
        "sql_query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
        "parsed_sql": {
            "select": {
                "value": "name"
            },
            "from": "physician",
            "where": {
                "like": [
                    "POSITION",
                    {
                        "literal": "%senior%"
                    }
                ]
            }
        },
        "sql_ans": [
            [
                "Percival Cox"
            ]
        ],
        "cypher_query": "MATCH (p:Physician)\nWHERE p.Position =~'.*[s|s]enior.*'\nRETURN p.Name",
        "cypher_ans": []
    },
    {
        "db_id": "hospital_1",
        "question": "Find the physician who was trained in the most expensive procedure?",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    },
    {
        "db_id": "hospital_1",
        "question": "Which physician was trained in the procedure that costs the most.",
        "sql_query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "parsed_sql": {
            "select": {
                "value": "T1.name"
            },
            "from": [
                {
                    "value": "physician",
                    "name": "T1",
                    "is_table": true
                },
                {
                    "join": {
                        "name": "T2",
                        "value": "trained_in",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T1.employeeid",
                            "T2.physician"
                        ]
                    }
                },
                {
                    "join": {
                        "name": "T3",
                        "value": "procedures",
                        "is_table": true
                    },
                    "on": {
                        "eq": [
                            "T3.code",
                            "T2.treatment"
                        ]
                    }
                }
            ],
            "orderby": {
                "value": "T3.cost",
                "sort": "desc"
            },
            "limit": 1
        },
        "sql_ans": [
            [
                "John Wen"
            ]
        ],
        "cypher_query": "MATCH (T1:Physician)-[T2:Trained_In]-(T3:Procedures)\nRETURN T1.Name\nORDER BY T3.cost DESC\nLIMIT 1",
        "cypher_ans": [
            [
                "Christopher Turk"
            ]
        ]
    }
]